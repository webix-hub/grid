{"version":3,"file":"grid.min.js","sources":["../sources/thirdparty/promiz.js","../sources/load/drivers/xml.js","../sources/load/ajax.js","../sources/webix/html.js","../sources/webix/env.js","../sources/load/drivers/excel.js","../sources/core/codeparser.js","../sources/core/autoscroll.js","../sources/ui/core.js","../sources/webix/ready.js","../sources/webix/fullscreen.js","../sources/core/uimanager.js","../sources/core/bindsource.js","../sources/views/baseview.js","../sources/core/autotooltip.js","../sources/webix/animate.js","../sources/css/skins/compact/config.js","../sources/core/touch.js","../sources/core/dragcontrol.js","../sources/views/window.js","../sources/webix/csv.js","../sources/core/datamove.js","../sources/load/dataprocessor.js","../sources/core/datastore.js","../sources/core/dataloader.js","../sources/core/dragitem.js","../sources/core/dragorder.js","../sources/webix/editors.js","../sources/core/editability.js","../sources/core/flexlayout.js","../sources/core/groupstore.js","../sources/core/keysnavigation.js","../sources/core/mouseevents.js","../sources/core/pagingability.js","../sources/core/renderstack.js","../sources/core/selectionmodel.js","../sources/core/sparklines/line.js","../sources/core/sparklines/bar.js","../sources/core/sparklines/splinearea.js","../sources/core/uploaddriver.js","../sources/core/values.js","../sources/core/vrenderstack.js","../sources/webix/export/common.js","../sources/webix/export/topdf.js","../sources/webix/export/toexcel.js","../sources/core/date.js","../sources/core/number.js","../sources/webix/storage.js","../sources/ui/datafilter.js","../sources/ui/animate.js","../sources/i18n/de.js","../sources/i18n/fr.js","../sources/i18n/it.js","../sources/i18n/pt.js","../sources/i18n/ru.js","../sources/i18n/be.js","../sources/views/baselayout.js","../sources/views/template.js","../sources/views/popup.js","../sources/views/property.js","../sources/views/calendar.js","../sources/views/colorboard.js","../sources/views/colorselect.js","../sources/views/button.js","../sources/views/text.js","../sources/views/select.js","../sources/views/radio.js","../sources/views/datepicker.js","../sources/views/richselect.js","../sources/views/icon.js","../sources/views/textarea.js","../sources/views/slider.js","../sources/views/rangeslider.js","../sources/views/timeboard.js","../sources/views/suggest.js","../sources/views/daterangepicker.js","../sources/views/pager.js","../sources/views/menu.js","../sources/views/datatable/filter.js","../sources/views/datatable/selection.js","../sources/views/datatable/blockselect.js","../sources/views/datatable/resize.js","../sources/views/datatable.js","../sources/views/datatable/print.js","../sources/views/datatable/export.js","../sources/views/datatable/dnd.js","../sources/views/datatable/keynav.js","../sources/views/datatable/columns.js","../sources/views/datatable/edit.js","../sources/views/datatable/math.js","../sources/views/datatable/touch.js","../sources/webix/print.js","../sources/webix/message.js","../sources/webix/api.js","../sources/load/send.js"],"sourcesContent":["var global = window;\n\nvar queueId = 1;\nvar queue = {};\nvar isRunningTask = false;\n\nif (!global.setImmediate && global.addEventListener)\n\tglobal.addEventListener(\"message\", function (e) {\n\t\tif (e.source == global){\n\t\t\tif (isRunningTask)\n\t\t\t\tnextTick(queue[e.data]);\n\t\t\telse {\n\t\t\t\tisRunningTask = true;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof queue[e.data] === \"function\")\n\t\t\t\t\t\tqueue[e.data]();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-line\n\t\t\t\t}\n\n\t\t\t\tdelete queue[e.data];\n\t\t\t\tisRunningTask = false;\n\t\t\t}\n\t\t}\n\t});\n\nfunction nextTick(fn) {\n\tif (global.setImmediate) global.setImmediate(fn);\n\t// if inside of web worker\n\telse if (global.importScripts || !global.addEventListener) setTimeout(fn);\n\telse {\n\t\tqueueId++;\n\t\tqueue[queueId] = fn;\n\t\tglobal.postMessage(queueId, \"*\");\n\t}\n}\n\nDeferred.resolve = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (value instanceof Deferred)\n\t\treturn value;\n\n\treturn new Deferred(function (resolve) {\n\t\tresolve(value);\n\t});\n};\n\nDeferred.reject = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\treturn new Deferred(function (resolve, reject) {\n\t\treject(value);\n\t});\n};\n\nDeferred.all = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\n\t\tarr.map(function (v, i) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tarr[i] = r;\n\t\t\t\t\tdone();\n\t\t\t\t\treturn r;\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred.race = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tif (arr.length == 0)\n\t\treturn new Deferred();\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\t\tarr.map(function (v) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tdone(null, r);\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred._d = 1;\n\n\n/**\n * @constructor\n */\nfunction Deferred(resolver) {\n\t\"use strict\";\n\tif (typeof resolver != \"function\" && resolver != undefined)\n\t\tthrow TypeError();\n\t\t\n\tif (typeof this != \"object\" || (this && this.then))\n\t\tthrow TypeError();\n\n\t// states\n\t// 0: pending\n\t// 1: resolving\n\t// 2: rejecting\n\t// 3: resolved\n\t// 4: rejected\n\tvar self = this,\n\t\tstate = 0,\n\t\tval = 0,\n\t\tnext = [],\n\t\tfn, er;\n\n\tself[\"promise\"] = self;\n\n\tself[\"resolve\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 1;\n\n\t\t\tnextTick(fire);\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"reject\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 2;\n\n\t\t\tnextTick(fire);\n\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"_d\"] = 1;\n\n\tself[\"then\"] = function (_fn, _er) {\n\t\tif (!(this._d == 1))\n\t\t\tthrow TypeError();\n\n\t\tvar d = new Deferred();\n\n\t\td.fn = _fn;\n\t\td.er = _er;\n\t\tif (state == 3) {\n\t\t\td.resolve(val);\n\t\t}\n\t\telse if (state == 4) {\n\t\t\td.reject(val);\n\t\t}\n\t\telse {\n\t\t\tnext.push(d);\n\t\t}\n\n\t\treturn d;\n\t};\n\n\tself[\"finally\"] = function(_handler){\n\t\tvar _value;\n\t\tconst handler = function(value){\n\t\t\t_value = value;\n\t\t\treturn _handler();\n\t\t};\n\t\t\n\t\tconst value = function(){\n\t\t\tconst d = new Deferred();\n\t\t\tif(state == 4)\n\t\t\t\treturn d.reject(_value);\n\t\t\telse\n\t\t\t\treturn d.resolve(_value);\n\t\t};\n\n\t\treturn self.then(handler, handler).then(value, value);\n\t};\n\n\tself[\"catch\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\t//compatibility with old version of promiz lib\n\tself[\"fail\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\tvar finish = function (type) {\n\t\tstate = type || 4;\n\t\tfor (var i=0; i<next.length; i++){\n\t\t\tvar p = next[i];\n\t\t\tstate == 3 && p.resolve(val) || p.reject(val);\n\t\t}\n\t};\n\n\ttry {\n\t\tif (typeof resolver == \"function\")\n\t\t\tresolver(self[\"resolve\"], self[\"reject\"]);\n\t} catch (e) {\n\t\tself[\"reject\"](e);\n\t}\n\n\treturn self;\n\n\t// ref : reference to 'then' function\n\t// cb, ec, cn : successCallback, failureCallback, notThennableCallback\n\tfunction thennable (ref, cb, ec, cn) {\n\t\t// Promises can be rejected with other promises, which should pass through\n\t\tif (state == 2) {\n\t\t\treturn cn();\n\t\t}\n\t\tif ((typeof val == \"object\" || typeof val == \"function\") && typeof ref == \"function\") {\n\t\t\ttry {\n\n\t\t\t\t// cnt protects against abuse calls from spec checker\n\t\t\t\tvar cnt = 0;\n\t\t\t\tref.call(val, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tcb();\n\t\t\t\t}, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tec();\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\tec();\n\t\t\t}\n\t\t} else {\n\t\t\tcn();\n\t\t}\n\t}\n\n\tfunction fire() {\n\t\t// check if it's a thenable\n\t\tvar ref;\n\t\ttry {\n\t\t\tref = val && val.then;\n\t\t} catch (e) {\n\t\t\tval = e;\n\t\t\tstate = 2;\n\t\t\treturn fire();\n\t\t}\n\n\t\tthennable(ref, function () {\n\t\t\tstate = 1;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\tstate = 2;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\ttry {\n\t\t\t\tif (state == 1 && typeof fn == \"function\") {\n\t\t\t\t\tval = fn(val);\n\t\t\t\t}\n\n\t\t\t\telse if (state == 2 && typeof er == \"function\") {\n\t\t\t\t\tval = er(val);\n\t\t\t\t\tstate = 1;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\treturn finish();\n\t\t\t}\n\n\t\t\tif (val == self) {\n\t\t\t\tval = TypeError();\n\t\t\t\tfinish();\n\t\t\t} else thennable(ref, function () {\n\t\t\t\tfinish(3);\n\t\t\t}, finish, function () {\n\t\t\t\tfinish(state == 1 && 3);\n\t\t\t});\n\n\t\t});\n\t}\n\n\n}\n\n// promise factory\nDeferred.defer = function () {\n\treturn new Deferred(null);\n};\n\nexport default Deferred;","import { assert } from \"../../webix/debug\";\n\nconst xml={\n\t_isValidXML:function(data){\n\t\tif (!data || !data.documentElement)\n\t\t\treturn null;\n\t\tif (data.getElementsByTagName(\"parsererror\").length)\n\t\t\treturn null;\n\t\treturn data;\n\t},\n\t//convert xml string to xml object if necessary\n\ttoObject:function(text, response){\n\t\tvar data = response ? (response.rawxml ? response.rawxml() : response) :null;\n\t\tif (this._isValidXML(data))\n\t\t\treturn data;\n\t\tif (typeof text == \"string\")\n\t\t\tdata = this.fromString(text.replace(/^[\\s]+/,\"\"));\n\t\telse\n\t\t\tdata = text;\n\n\t\tif (this._isValidXML(data))\n\t\t\treturn data;\n\t\treturn null;\n\t},\n\t//get array of records\n\tgetRecords:function(data){\n\t\treturn this.xpath(data,this.records);\n\t},\n\trecords:\"/*/item\",\n\tchild:\"item\",\n\tconfig:\"/*/config\",\n\t//get hash of properties for single record\n\tgetDetails:function(data){\n\t\treturn this.tagToObject(data,{});\n\t},\n\tgetOptions:function(){ \n\t\treturn false;\n\t},\n\t//get count of data and position at which new data_loading need to be inserted\n\tgetInfo:function(data){\n\t\t\n\t\tvar config = this.xpath(data, this.config);\n\t\tif (config.length)\n\t\t\tconfig = this.assignTypes(this.tagToObject(config[0],{}));\n\t\telse \n\t\t\tconfig = null;\n\n\t\treturn {\n\t\t\tsize:(data.documentElement.getAttribute(\"total_count\")||0),\n\t\t\tfrom:data.documentElement.getAttribute(\"pos\"),\n\t\t\tparent:(data.documentElement.getAttribute(\"parent\")||0),\n\t\t\tconfig:config\n\t\t};\n\t},\n\t//xpath helper\n\txpath:function(xml,path){\n\t\tif (window.XPathResult){\t//FF, KHTML, Opera\n\t\t\tvar node=xml;\n\t\t\tif(xml.nodeName.indexOf(\"document\")==-1)\n\t\t\t\txml=xml.ownerDocument;\n\n\t\t\tvar res = [];\n\t\t\tvar col = xml.evaluate(path, node, null, XPathResult.ANY_TYPE, null);\n\t\t\tvar temp = col.iterateNext();\n\t\t\twhile (temp){ \n\t\t\t\tres.push(temp);\n\t\t\t\ttemp = col.iterateNext();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\telse {\n\t\t\tvar test = true;\n\t\t\ttry {\n\t\t\t\tif (typeof(xml.selectNodes)==\"undefined\")\n\t\t\t\t\ttest = false;\n\t\t\t} catch(e){ /*IE7 and below can't operate with xml object*/ }\n\t\t\t//IE\n\t\t\tif (test)\n\t\t\t\treturn xml.selectNodes(path);\n\t\t\telse {\n\t\t\t\t//there is no interface to do XPath\n\t\t\t\t//use naive approach\n\t\t\t\tvar name = path.split(\"/\").pop();\n\n\t\t\t\treturn xml.getElementsByTagName(name);\n\t\t\t}\n\t\t}\n\t},\n\tassignTypes:function(obj){\n\t\tfor (var k in obj){\n\t\t\tvar test = obj[k];\n\t\t\tif (typeof test == \"object\")\n\t\t\t\tthis.assignTypes(test);\n\t\t\telse if (typeof test == \"string\"){\n\t\t\t\tif (test === \"\") \n\t\t\t\t\tcontinue;\n\t\t\t\tif (test == \"true\")\n\t\t\t\t\tobj[k] = true;\n\t\t\t\telse if (test == \"false\")\n\t\t\t\t\tobj[k] = false;\n\t\t\t\telse if (test == test*1)\n\t\t\t\t\tobj[k] = obj[k]*1;\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t},\n\t//convert xml tag to js object, all subtags and attributes are mapped to the properties of result object\n\ttagToObject:function(tag,z){\n\t\tvar isArray = tag.nodeType == 1 && tag.getAttribute(\"stack\");\n\t\tvar hasSubTags = 0;\n\n\t\tif (!isArray){\n\t\t\tz=z||{};\n\t\t\t\n\n\t\t\t//map attributes\n\t\t\tlet a=tag.attributes;\n\t\t\tif(a && a.length)\n\t\t\t\tfor (let i=0; i<a.length; i++){\n\t\t\t\t\tz[a[i].name]=a[i].value;\n\t\t\t\t\thasSubTags = 1;\n\t\t\t\t}\n\n\t\t\t//map subtags\n\t\t\tlet b=tag.childNodes;\n\t\t\tfor (let i=0; i<b.length; i++)\n\t\t\t\tif (b[i].nodeType==1){\n\t\t\t\t\tconst name = b[i].tagName;\n\t\t\t\t\tif (z[name]){\n\t\t\t\t\t\tif (typeof z[name].push != \"function\")\n\t\t\t\t\t\t\tz[name] = [z[name]];\n\t\t\t\t\t\tz[name].push(this.tagToObject(b[i],{}));\n\t\t\t\t\t} else\n\t\t\t\t\t\tz[name]=this.tagToObject(b[i],{});\t//sub-object for complex subtags\n\t\t\t\t\thasSubTags = 2;\n\t\t\t\t}\n\n\t\t\tif (!hasSubTags)\n\t\t\t\treturn this.nodeValue(tag);\n\t\t\t//each object will have its text content as \"value\" property\n\t\t\t//only if has not sub tags\n\t\t\tif (hasSubTags < 2)\n\t\t\t\tz.value = z.value||this.nodeValue(tag);\n\n\t\t} else {\n\t\t\tz = [];\n\t\t\tlet b=tag.childNodes;\n\t\t\tfor (let i=0; i<b.length; i++)\n\t\t\t\tif (b[i].nodeType==1)\n\t\t\t\t\tz.push(this.tagToObject(b[i],{}));\n\t\t}\n\n\t\treturn z;\n\t},\n\t//get value of xml node \n\tnodeValue:function(node){\n\t\tif (node.firstChild){\n\t\t\treturn node.firstChild.wholeText || node.firstChild.data;\n\t\t}\n\t\treturn \"\";\n\t},\n\t//convert XML string to XML object\n\tfromString:function(xmlString){\n\t\ttry{\n\t\t\tif (window.DOMParser)\t\t// FF, KHTML, Opera\n\t\t\t\treturn (new DOMParser()).parseFromString(xmlString,\"text/xml\");\n\t\t\t/* global ActiveXObject */\n\t\t\tif (window.ActiveXObject){\t// IE, utf-8 only \n\t\t\t\tvar temp=new ActiveXObject(\"Microsoft.xmlDOM\");\n\t\t\t\ttemp.loadXML(xmlString);\n\t\t\t\treturn temp;\n\t\t\t}\n\t\t} catch(e){\n\t\t\tassert(0, e);\n\t\t\treturn null;\n\t\t}\n\t\tassert(0, \"Load from xml string is not supported\");\n\t}\n};\n\nexport default xml;","import { log, assert } from \"../webix/debug\";\nimport { isArray, extend } from \"../webix/helpers\";\nimport { stringify } from \"../webix/stringify\";\nimport { callEvent } from \"../webix/customevents\";\nimport promise from \"../thirdparty/promiz\";\n\nimport xml from \"./drivers/xml\";\nimport json from \"./drivers/json\";\n\nexport function ajax(url,params,call){\n\t//if parameters was provided - made fast call\n\tif (arguments.length!==0){\n\t\treturn (new ajax()).get(url,params,call);\n\t}\n\n\tif (!this || !this.getXHR) return new ajax(); //allow to create new instance without direct new declaration\n\n\treturn this;\n}\n\najax.count = 0;\najax.prototype={\n\tmaster:null,\n\t//creates xmlHTTP object\n\tgetXHR:function(){\n\t\treturn new XMLHttpRequest();\n\t},\n\tstringify:function(obj){\n\t\treturn stringify(obj);\n\t},\n\t/*\n\t\tsend data to the server\n\t\tparams - hash of properties which will be added to the url\n\t\tcall - callback, can be an object with success and error functions\n\t*/\n\t_send:function(url, params, call, mode){\n\t\tvar master;\n\t\t//webix.ajax(url, callback) - can be called only by user\n\t\tif (params && (isArray(params) || (typeof (params.success || params.error || params) == \"function\"))){\n\t\t\tmaster = call;\n\t\t\tcall = params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tvar defer = promise.defer();\n\t\tvar x=this.getXHR();\n\t\tvar headers = this._header || {};\n\n\t\tif (!callEvent(\"onBeforeAjax\", [mode, url, params, x, headers, null, defer])){\n\t\t\treturn defer.reject(x);\n\t\t}\n\n\t\t//add content-type to POST|PUT|DELETE\n\t\tvar json_mode = false;\n\t\tif (mode !== \"GET\"){\n\t\t\tvar found = false;\n\t\t\tfor (let key in headers)\n\t\t\t\tif (key.toString().toLowerCase() == \"content-type\"){\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif (headers[key] == \"application/json\")\n\t\t\t\t\t\tjson_mode = true;\n\t\t\t\t}\n\t\t\tif (!found && !(window.FormData && (params instanceof window.FormData)))\n\t\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\t//add extra params to the url\n\t\tif (typeof params == \"object\" && !(window.FormData && (params instanceof window.FormData))){\n\t\t\tif (json_mode)\n\t\t\t\tparams = this.stringify(params);\n\t\t\telse {\n\t\t\t\tvar t=[];\n\t\t\t\tfor (var a in params){\n\t\t\t\t\tvar value = params[a];\n\t\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\tif(typeof value===\"object\")\n\t\t\t\t\t\tvalue = this.stringify(value);\n\t\t\t\t\tt.push(encodeURIComponent(a)+\"=\"+encodeURIComponent(value)); // utf-8 escaping\n\t\t\t\t}\n\t\t\t\tparams=t.join(\"&\");\n\t\t\t}\n\t\t}\n\n\t\tif (params && mode===\"GET\"){\n\t\t\turl=url+(url.indexOf(\"?\")!=-1 ? \"&\" : \"?\")+params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tx.open(mode, url, !this._sync);\n\n\t\tvar type = this._response;\n\t\tif (type) x.responseType = type;\n\n\t\t//if header was provided - use it\n\t\tfor (let key in headers)\n\t\t\tx.setRequestHeader(key, headers[key]);\n\t\t\n\t\t//async mode, define loading callback\n\t\tvar self=this;\n\t\tthis.master = this.master || master;\n\t\tx.onreadystatechange = function(){\n\t\t\tif (!x.readyState || x.readyState == 4){\n\t\t\t\tajax.count++;\n\n\t\t\t\tvar is_error = x.status >= 400 || x.status === 0;\n\t\t\t\tvar text, data;\n\t\t\t\tif (x.responseType == \"blob\" || x.responseType == \"arraybuffer\"){\n\t\t\t\t\ttext = \"\";\n\t\t\t\t\tdata = x.response;\n\t\t\t\t} else {\n\t\t\t\t\ttext = x.responseText||\"\";\n\t\t\t\t\tdata = self._data(x);\n\t\t\t\t}\n\t\t\t\tif (is_error){\n\t\t\t\t\tcallEvent(\"onAjaxError\", [x]);\n\t\t\t\t\tdefer.reject(x);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t} else {\n\t\t\t\t\tdefer.resolve(data);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t}\t\n\t\t\t}\n\t\t};\n\n\t\tif (this._timeout)\n\t\t\tx.timeout = this._timeout;\n\n\t\t//IE can use sync mode sometimes, fix it\n\t\tif (!this._sync)\n\t\t\tsetTimeout(function(){\n\t\t\t\tx.send(params||null);\n\t\t\t}, 0);\n\t\telse\n\t\t\tx.send(params||null);\n\t\t\n\t\tif (this.master && !this._sync){\n\t\t\tdefer.then(function(data){\n\t\t\t\t//anti-leak\n\t\t\t\tself.master=null;\n\t\t\t\tcall=self=master=null;\t\n\t\t\t\treturn data;\n\t\t\t});\n\t\t}\n\n\t\treturn this._sync?x:defer; //return XHR, which can be used in case of sync. mode\n\t},\n\t_data:function(x){\n\t\treturn {\n\t\t\txml:function(){ \n\t\t\t\ttry{\n\t\t\t\t\treturn xml.tagToObject(xml.toObject(x.responseText, this));\n\t\t\t\t}\n\t\t\t\tcatch(e){\n\t\t\t\t\tlog(x.responseText);\n\t\t\t\t\tlog(e.toString()); assert(0, \"Invalid xml data for parsing\"); \n\t\t\t\t}\n\t\t\t},\n\t\t\trawxml:function(){ \n\t\t\t\tif (!window.XPathResult)\n\t\t\t\t\treturn xml.fromString(x.responseText);\n\t\t\t\treturn x.responseXML;\n\t\t\t},\n\t\t\ttext:function(){ return x.responseText; },\n\t\t\tjson:function(){\n\t\t\t\treturn json.toObject(x.responseText, false);\n\t\t\t}\n\t\t};\n\t},\n\t//GET request\n\tget:function(url,params,call){\n\t\treturn this._send(url,params,call,\"GET\");\n\t},\n\t//POST request\n\tpost:function(url,params,call){\n\t\treturn this._send(url,params,call,\"POST\");\n\t},\n\t//PUT request\n\tput:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PUT\");\n\t},\n\t//DELETE request\n\tdel:function(url,params,call){\n\t\treturn this._send(url,params,call,\"DELETE\");\n\t},\n\t//PATCH request\n\tpatch:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PATCH\");\n\t},\n\n\tsync:function(){\n\t\tthis._sync = true;\n\t\treturn this;\n\t},\n\ttimeout:function(num){\n\t\tthis._timeout = num;\n\t\treturn this;\n\t},\n\tresponse:function(value){\n\t\tthis._response = value;\n\t\treturn this;\n\t},\n\theaders:function(header){\n\t\tthis._header = extend(this._header||{},header);\n\t\treturn this;\n\t},\n\tbind:function(master){\n\t\tthis.master = master;\n\t\treturn this;\n\t}\n};\najax.$callback = function(owner, call, text, data, x, is_error){\n\tif (owner.$destructed) return;\n\n\tif (is_error)\n\t\tcallEvent(\"onAjaxError\", [x]);\n\t\n\tif (call){\n\t\tvar method = call.success || call;\n\t\tif (is_error)\n\t\t\tmethod = call.error;\n\t\tif (method && method.call)\n\t\t\tmethod.call(owner,text,data,x);\n\t}\n};","import {delay, uid, toNode, extend, isUndefined} from \"./helpers.js\";\n\nlet _native_on_selectstart = 0;\nconst _style_element = {};\nconst _style_cache = {};\n\nexport function denySelect(){\n\tif (!_native_on_selectstart)\n\t\t_native_on_selectstart = document.onselectstart;\n\tdocument.onselectstart = stopEvent;\n}\n\nexport function allowSelect(){\n\tif (_native_on_selectstart !== 0){\n\t\tdocument.onselectstart = _native_on_selectstart||null;\n\t}\n\t_native_on_selectstart = 0;\n\n}\n\nexport function index(node){\n\tvar k=0;\n\t//must be =, it is not a comparation!\n\twhile ((node = node.previousSibling)) k++;\n\treturn k;\n}\n\nexport function createCss(rule, sufix){\n\tvar text = \"\";\n\tsufix = sufix || \"\";\n\n\tfor (var key in rule)\n\t\ttext+= key+\":\"+rule[key]+\";\";\n\n\tvar name = _style_cache[text+sufix];\n\tif (!name){\n\t\tname = \"s\"+uid();\n\t\taddStyle(\".\"+name+(sufix||\"\")+\"{\"+text+\"}\");\n\t\t_style_cache[text+sufix] = name;\n\t}\n\treturn name;\n}\n\nexport function addStyle(rule, group){\n\tvar style = group ? _style_element[group] :_style_element[\"default\"];\n\tif(!style){\n\t\tstyle = document.createElement(\"style\");\n\t\tstyle.setAttribute(\"type\", \"text/css\");\n\t\tstyle.setAttribute(\"media\", \"screen,print\");\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(style);\n\n\t\tif (group)\n\t\t\t_style_element[group] = style;\n\t\telse\n\t\t\t_style_element[\"default\"] = style;\n\t}\n\n\tstyle.appendChild(document.createTextNode(rule));\n}\n\nexport function removeStyle(group){\n\tvar box = _style_element[group||\"default\"];\n\tif (box)\n\t\tbox.innerHTML = \"\";\n}\n\nexport function create(name,attrs,html){\n\tattrs = attrs || {};\n\tvar node = document.createElement(name);\n\tfor (var attr_name in attrs)\n\t\tnode.setAttribute(attr_name, attrs[attr_name]);\n\tif (attrs.style)\n\t\tnode.style.cssText = attrs.style;\n\tif (attrs[\"class\"])\n\t\tnode.className = attrs[\"class\"];\n\tif (html)\n\t\tnode.innerHTML = html;\n\treturn node;\n}\n\n//return node value, different logic for different html elements\nexport function getValue(node){\n\tnode = toNode(node);\n\tif (!node) return \"\";\n\treturn isUndefined(node.value) ? node.innerHTML : node.value;\n}\n\n//remove html node, can process an array of nodes at once\nexport function remove(node){\n\tif (node instanceof Array)\n\t\tfor (var i=0; i < node.length; i++)\n\t\t\tremove(node[i]);\n\telse if (node && node.parentNode)\n\t\tnode.parentNode.removeChild(node);\n}\n\n//insert new node before sibling, or at the end if sibling doesn't exist\nexport function insertBefore(node,before,rescue){\n\tif (!node) return;\n\tif (before && before.parentNode)\n\t\tbefore.parentNode.insertBefore(node, before);\n\telse\n\t\trescue.appendChild(node);\n}\n\n//return custom ID from html element \n//will check all parents starting from event's target\nexport function locate(e,id){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\ttrg = e.target;\n\t}\n    \n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(id);\n\t\t\tif (test) return test;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\t\n\treturn null;\n}\n\n//returns position of html element on the page\nexport function offset(elem) {\n\tconst box = elem.getBoundingClientRect();\n\tconst body = document.body;\n\tconst docElem = document.documentElement;\n\tconst scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\tconst scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\tconst clientTop = docElem.clientTop || body.clientTop || 0;\n\tconst clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\tconst top  = box.top +  scrollTop -  clientTop;\n\tconst left = box.left + scrollLeft - clientLeft;\n\treturn { y:Math.round(top), x:Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight };\n}\n\n//returns relative position of event\nexport function posRelative(ev){\n\treturn { x:ev.offsetX, y:ev.offsetY };\n}\n\n//returns position of event\nexport function pos(ev){\n\tif (!ev.type)\t// webix touch event\n\t\treturn {x:ev.x, y:ev.y};\n\n\tif (ev.touches && ev.touches[0])\n\t\tev = ev.touches[0];\n\n\treturn {x:ev.pageX, y:ev.pageY};\n}\n\n//prevent event action\nexport function preventEvent(e){\n\te.preventDefault();\n\treturn stopEvent(e);\n}\n\n//stop event bubbling\nexport function stopEvent(e){\n\te.stopPropagation();\n\treturn false;\n}\n\nexport function triggerEvent(node, type, name, details){\n\tlet event;\n\tif (typeof(window[type]) === \"function\") {\n\t\tdetails = extend(details||{}, { bubbles:true, cancelable:true });\n\t\tevent = new window[type](name, details);\n\t} else {\t\t//IE 11 support\n\t\tevent = document.createEvent(type);\n\t\tevent.initEvent(name, true, true);\n\t}\n\tnode.dispatchEvent(event);\n}\n\n//add css class to the node\nexport function addCss(node,name,check){\n\tif (!check || node.className.indexOf(name) === -1)\n\t\tnode.className += \" \"+name;\n}\n\n//remove css class from the node\nexport function removeCss(node,name){\n\tnode.className = node.className.replace(RegExp(\" \"+name,\"g\"),\"\");\n}\n\nexport function getTextSize(text, css, basewidth){\n\tconst d = create(\"DIV\",{\"class\":\"webix_view webix_measure_size \"+(css||\"\")},\"\");\n\td.style.cssText = \"height:auto;visibility:hidden; position:absolute; top:0px; left:0px; overflow:hidden;\"+(basewidth?(\"width:\"+basewidth+\"px;\"):\"width:auto;white-space:nowrap;\");\n\tdocument.body.appendChild(d);\n\n\tconst all = (typeof text !==  \"object\") ? [text] : text;\n\tlet width = 0, height = 0;\n\n\tfor (let i=0; i<all.length; i++) {\n\t\td.innerHTML = all[i];\n\n\t\tconst rect = d.getBoundingClientRect();\n\t\twidth = Math.max(width, Math.ceil(rect.width));\n\t\theight = Math.max(height, Math.ceil(rect.height));\n\t}\n\n\tremove(d);\n\treturn { width, height };\n}\n\nexport function download(data, filename){\n\tvar objUrl = false;\n\n\tif(typeof data == \"object\"){//blob\n\t\tif(window.navigator.msSaveBlob)\n\t\t\treturn window.navigator.msSaveBlob(data, filename);\n\t\telse {\n\t\t\tdata = window.URL.createObjectURL(data);\n\t\t\tobjUrl = true;\n\t\t}\n\t}\n\t//data url or blob url\n\tvar link = document.createElement(\"a\");\n\tlink.href = data;\n\tlink.download = filename;\n\tdocument.body.appendChild(link);\n\tlink.click(); \n\n\tdelay(function(){\n\t\tif(objUrl) window.URL.revokeObjectURL(data);\n\t\tdocument.body.removeChild(link);\n\t\tlink.remove();\n\t});\n}\n\nexport function _getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = \"\";\n\n\treturn className;\n}\n\nexport function setSelectionRange(node, start, end){\n\tnode.focus();\n\n\tconst types = [\"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n\tif (node.setSelectionRange && types.includes(node.type)){\n\t\tstart = start || 0;\n\t\tend = end || start;\n\n\t\tnode.setSelectionRange(start, end);\n\t}\n}\n\nexport function getSelectionRange(node){\n\treturn {start:node.selectionStart || 0, end:node.selectionEnd || 0};\n}\n\nexport function addMeta(name, value){\n\tdocument.getElementsByTagName(\"head\").item(0).appendChild(create(\"meta\",{\n\t\tname:name,\n\t\tcontent:value\n\t}));\t\n}\n\n","const env = {};\n\nenv.cdn = \"//cdn.webix.com\";\nenv.codebase = \"\";\nenv.zIndexBase = 100;\nenv.scrollSize = 17;\nenv.strict = !!window.webix_strict;\nenv.https = document.location.protocol === \"https:\";\n\nconst agent = navigator.userAgentData;\nconst deprecatedAgent = agent && agent.platform && agent.brands.length ? null : navigator.userAgent;\n\nconst browsers = {\n\tChromium: \"Chrom\", //in userAgent - Chrome, in userAgentData.brands - Chromium\n\tIE: \"Trident\",\n\tEdge: \"Edg\", // in userAgent - Edg, in userAgentData.brands - Microsoft Edge\n\tFF: \"Firefox\",\n\tSafari: \"Safari\"\n};\n\nfor(let browser in browsers){\n\tconst checkBrowser = deprecatedAgent ?\n\t\tdeprecatedAgent.indexOf(browsers[browser]) != -1 :\n\t\tagent.brands.find(v => v.brand.indexOf(browsers[browser]) != -1);\n\n\tif(checkBrowser){\n\t\tenv[\"is\"+browser] = true;\n\t\t//Edge is a chromium-based browser (so we set isChromium:true and isEdge:true)\n\t\tif(browser != \"Chromium\")\n\t\t\tbreak;\n\t}\n}\n\nconst platform = deprecatedAgent || agent.platform;\nenv.isMac = platform.toLowerCase().indexOf(\"mac\") != -1;\nif (/iPad|iPhone|iPod/.test(platform)) env.isIOS = true;\nif (platform.indexOf(\"Android\") != -1) env.isAndroid = true;\n\nif(deprecatedAgent){\n\tif(env.isIOS || env.isAndroid || deprecatedAgent.indexOf(\"Mobile\") != -1 || deprecatedAgent.indexOf(\"Windows Phone\") != -1)\n\t\tenv.mobile = true;\n} else\n\tenv.mobile = agent.mobile;\n\nif (env.mobile || navigator.maxTouchPoints > 1)\n\tenv.touch = true;\n\nenv.fastClick = !env.touch;\n\n//maximum height/width for HTML elements in pixels (rough), bigger values will be ignored by browser\nif (env.isIE || env.isEdge || env.isFF)\n\tenv.maxHTMLElementSize = 10000000;\nif (env.isSafari)\n\tenv.maxHTMLElementSize = 100000000;\n\nenv.transform = \"transform\";\nenv.transition = \"transition\";\nenv.transitionDuration = \"transitionDuration\";\nenv.translate = \"translate3d\";\nenv.transitionEnd =  \"transitionend\";\n\n//touch events that can be prevented\nenv.passiveEventListeners = false;\ntry {\n\tconst opts = Object.defineProperty({}, \"passive\", {\n\t\tget: function() { // eslint-disable-line\n\t\t\tenv.passiveEventListeners = true;\n\t\t}\n\t});\n\twindow.addEventListener(\"testPassive\", null, opts);\n\twindow.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {} // eslint-disable-line\n\nenv.svg = (function(){\n\treturn document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n})();\n\nenv.svganimation = (function(){\n\treturn document.implementation.hasFeature(\"https://www.w3.org/TR/SVG11/feature#SVG-animation\", \"1.1\");\n})();\n\nexport default env;","import {extend, bind, isDate, isUndefined} from \"../../webix/helpers\";\nimport env from \"../../webix/env\";\n\nimport Promise from \"../../thirdparty/promiz\";\nimport i18n from \"../../webix/i18n\";\n\nimport require from \"../require\";\nimport jsarray from \"./jsarray\";\n\n\nconst excel = extend({\n\ttoObject:function(data){\n\t\tif(!data.excel){\n\t\t\tvar opts = data.options || {};\n\t\t\tif (opts.dataurl) \n\t\t\t\textend(opts, this._urlToOptions(opts.dataurl));\n\n\t\t\tdata = data.data || data;\n\t\t\tvar promise = Promise.defer();\n\n\t\t\tif(data.name){ //file\n\t\t\t\topts.ext = data.name.split(\".\").pop();\n\t\t\t\tvar reader = new FileReader();\n\n\t\t\t\treader.onload = bind(function (e) {\n\t\t\t\t\tpromise.resolve(this.parseData(e.target.result, opts));\n\t\t\t\t}, this);\n\t\t\t\treader.readAsArrayBuffer(data);\n\t\t\t}\n\t\t\telse //arraybuffer\n\t\t\t\tpromise.resolve(this.parseData(data, opts));\n\n\t\t\treturn promise;\n\t\t}\n\t\t//plain jsarray or hash\n\t\treturn data;\n\t},\n\tparseData:function(data, options){\n\t\tdata = new Uint8Array(data);\n\t\tconst arr = [];\n\t\tfor(let i = 0; i != data.length; ++i)\n\t\t\tarr[i] = String.fromCharCode(data[i]);\n\n\t\tlet ext = (options.ext || options).toLowerCase();\n\t\tif (ext != \"xls\") ext = \"xlsx\";\n\t\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(bind(function(){\n\t\t\t/* global XLS, XLSX */\n\t\t\tconst wb = (ext == \"xls\" ? XLS : XLSX).read(arr.join(\"\"), {\n\t\t\t\ttype: \"binary\",\n\t\t\t\tcellStyles: true,\n\t\t\t\tcellDates: isUndefined(options.cellDates) ? true : options.cellDates,\n\t\t\t\tsheetStubs: options.sheetStubs\n\t\t\t});\n\n\t\t\tconst book = wb.Workbook;\n\t\t\tconst res = {\n\t\t\t\tsheets: wb.Sheets,\n\t\t\t\tnames: wb.SheetNames,\n\t\t\t\toptions:options,\n\t\t\t\tranges: book ? (book.Names || []) : [],\n\t\t\t\tstates: book && book.Sheets ? book.Sheets.map(s => [\"visible\", \"hidden\", \"veryHidden\"][s.Hidden]) : wb.SheetNames.map(() => \"visible\")\n\t\t\t};\n\t\t\treturn extend(this.getSheet(res, options), res);\n\t\t}, this));\n\t},\n\tgetSheet:function(data, options){\n\t\tvar name = options.name || data.names[0];\n\t\tdata = this.sheetToArray(data.sheets[name], options);\n\t\tif(options.rows && options.rows.length)\n\t\t\tdata.data = data.data.splice(options.rows[0], Math.min(options.rows[1], data.data.length)-options.rows[0]);\n\t\treturn data;\n\t},\n\tsheetToArray:function(sheet, options){\n\t\tconst all = [];\n\t\tconst spans = [];\n\t\tconst styles = [];\n\t\tconst sizes = [];\n\t\tconst types = [];\n\t\tconst hidden = [];\n\t\tconst links = [];\n\t\tlet sheetSettings = {};\n\n\t\tconst cellTypes = { n:\"number\", d:\"date\", s:\"string\", b:\"boolean\"};\n\n\t\tif(sheet && sheet[\"!ref\"]){\n\t\t\tvar range = XLS.utils.decode_range(sheet[\"!ref\"]), \n\t\t\t\trow, col, cellCoord, cell,\n\t\t\t\txCorrection = range.s.c,\n\t\t\t\tyCorrection = range.s.r+(options.rows?options.rows[0]:0);\n\n\t\t\tfor (row = range.s.r; row <= range.e.r; row++) {\n\t\t\t\tvar nrow = [];\n\t\t\t\tfor (col = range.s.c; col <= range.e.c; col++) {\n\t\t\t\t\tcellCoord = XLS.utils.encode_cell({ r: row, c: col });\n\t\t\t\t\tcell = sheet[cellCoord];\n\t\t\t\t\tif(!cell)\n\t\t\t\t\t\tnrow.push(\"\");\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar ncell = \"\";\n\t\t\t\t\t\tif(options.math&&cell.f) // get formula\n\t\t\t\t\t\t\tncell = cell.f.charAt(0)==\"=\" ? cell.f : \"=\"+cell.f;\n\t\t\t\t\t\telse if (cell.t ==\"d\" && isDate(cell.v))\n\t\t\t\t\t\t\tncell  = i18n.dateFormatStr(cell.v);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tncell = cell.v;\n\t\t\t\t\t\tnrow.push(ncell);\n\n\t\t\t\t\t\tif (cell.s)\n\t\t\t\t\t\t\tstyles.push([row-yCorrection, col-xCorrection, cell.s]);\n\t\t\t\t\t\tif (cell.t)\n\t\t\t\t\t\t\ttypes.push([row-yCorrection, col-xCorrection, cellTypes[cell.t]]);\n\t\t\t\t\t\tif (cell.l)\n\t\t\t\t\t\t\tlinks.push([row-yCorrection, col-xCorrection, cell.l.location ? \"#\"+cell.l.location : cell.l.Target]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tall.push(nrow);\n\t\t\t}\n\n\t\t\tif(sheet[\"!merges\"]){\n\t\t\t\tvar merges = sheet[\"!merges\"];\n\t\t\t\tfor(let i = 0; i<merges.length; i++){\n\t\t\t\t\tvar s = merges[i].s;\n\t\t\t\t\tvar e = merges[i].e;\n\t\t\t\t\tif(!options.rows || (s.r-yCorrection>=0 && e.r-yCorrection<=options.rows[1]))\n\t\t\t\t\t\tspans.push([s.r-yCorrection, s.c-xCorrection, e.c-s.c+1, e.r-s.r+1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!cols\"]){\n\t\t\t\tvar widths = sheet[\"!cols\"];\n\t\t\t\tfor(let i = 0; i<widths.length; i++){\n\t\t\t\t\tconst item = widths[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-xCorrection;\n\t\t\t\t\t\tsizes.push([\"column\", index, Math.round(item.wch/(8.43/70))]); //mode, colind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"column\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!rows\"]){\n\t\t\t\tvar heights = sheet[\"!rows\"];\n\t\t\t\tfor(let i = 0; i<heights.length; i++){\n\t\t\t\t\tconst item = heights[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-yCorrection;\n\t\t\t\t\t\tsizes.push([\"row\", index, item.hpx]); //mode (\"row\", \"column\"), rowind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"row\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!settings\"])\n\t\t\t\tsheetSettings = sheet[\"!settings\"];\n\t\t}\n\n\t\treturn { data:all, spans, styles, sizes, types, hidden, links, sheetSettings, excel: true };\n\t},\n\t_urlToOptions:function(details){\n\t\tvar parts = details.split(\"[\");\n\t\tvar options = {};\n\t\toptions.name = parts[0];\n\t\tif(parts[1]){\n\t\t\tvar rows = parts[1].split(/[^0-9]+/g);\n\t\t\trows[0] = rows[0]*1 || 0;\n\t\t\trows[1] = rows[1]*1 || 9999999;\n\t\t\toptions.rows = rows;\n\t\t}\n\t\treturn options;\n\t}\n}, jsarray);\n\nexport default excel;","import {isDate, isArray} from \"../webix/helpers\";\n\nconst CodeParser = {\n\t//converts a complex object into an object with primitives properties\n\tcollapseNames:function(base, prefix, data, filter){\n\t\tdata = data || {};\n\t\tprefix = prefix || \"\";\n\t\tfilter  = filter || function(){ return true; };\n\n\t\tif(!base || typeof base != \"object\")\n\t\t\treturn null;\n\n\t\tfor(var prop in base){\n\t\t\tlet value = base[prop];\n\t\t\tlet name = prefix+prop;\n\t\t\tif(value && typeof value == \"object\" && !isDate(value) && !isArray(value) && filter(name)){\n\t\t\t\tCodeParser.collapseNames(value, name+\".\", data, filter);\n\t\t\t} else {\n\t\t\t\tdata[name] = value;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t},\n\n\t//converts an object with primitive properties into an object with complex properties\n\texpandNames:function(base){\n\t\tvar data = {},\n\t\t\ti, lastIndex, name, obj, prop;\n\n\t\tfor(prop in base){\n\t\t\tname = prop.split(\".\");\n\t\t\tlastIndex = name.length-1;\n\t\t\tobj = data;\n\t\t\tfor( i =0; i < lastIndex; i++ ){\n\t\t\t\tif(!obj[name[i]])\n\t\t\t\t\tobj[name[i]]  = {};\n\t\t\t\tobj = obj[name[i]];\n\t\t\t}\n\t\t\tobj[name[lastIndex]] = base[prop];\n\t\t}\n\n\t\treturn data;\n\t}\n};\n\nexport default CodeParser;","import {offset} from \"../webix/html\";\nimport {delay} from \"../webix/helpers\";\n\n\nconst AutoScroll = {\n\t_auto_scroll:function(pos){\n\t\tlet yScroll, xScroll;\n\t\tlet mode = this._settings.dragscroll;\n\n\t\tif (typeof mode !== \"string\")\n\t\t\tmode = this._settings.layout||\"xy\";\n\t\txScroll = mode.indexOf(\"x\") !== -1;\n\t\tyScroll = mode.indexOf(\"y\") !== -1;\n\n\t\tconst data = this._body || this.$view;\n\t\tconst box = offset(data);\n\n\t\tconst sense = Math.max((this._settings.rowHeight||(this.type&&!isNaN(parseFloat(this.type.height))?this.type.height:0))+5, 40); //dnd auto-scroll sensivity\n\t\tlet reset = false;\n\n\t\tif (yScroll && this._auto_y_scroll(pos, box, sense) ) reset = true;\n\t\tif (xScroll && this._auto_x_scroll(pos, box, sense) ) reset = true;\n\n\t\tif (reset)\n\t\t\tthis._auto_scroll_delay = delay(this._auto_scroll, this, [pos], 100);\n\t},\n\t_auto_scroll_column:function(pos){\n\t\tconst mode = this._settings.dragscroll;\n\t\tif (typeof mode === \"string\" && mode.indexOf(\"x\") === -1)\n\t\t\treturn;\n\n\t\tconst data = this._header || this.$view;\n\t\tconst box = offset(data);\n\n\t\tconst sense = Math.max(this._settings.headerRowHeight||0, 40);\n\t\tif ( this._auto_x_scroll(pos, box, sense) )\n\t\t\tthis._auto_scroll_delay = delay(this._auto_scroll_column, this, [pos], 100);\n\t},\n\t_auto_y_scroll:function(pos, box, sense){\n\t\tlet top = box.y;\n\t\tlet bottom = top + box.height;\n\t\tconst scroll = this.getScrollState();\n\n\t\tconst config = this._settings;\n\t\tif(config.topSplit){\n\t\t\tconst topSplitPos = this._cellPosition(this.getIdByIndex(config.topSplit-1), this.columnId(0));\n\t\t\ttop += topSplitPos.top + topSplitPos.height;\n\t\t}\n\n\t\tif (pos.y < (top + sense)){\n\t\t\treturn this._auto_scrollTo(scroll.x, scroll.y-sense*2, pos, \"y\");\n\t\t} else if (pos.y > bottom - sense){\n\t\t\treturn this._auto_scrollTo(scroll.x, scroll.y+sense*2, pos, \"y\");\n\t\t}\n\t\treturn false;\n\t},\n\t_auto_x_scroll:function(pos, box, sense){\n\t\tlet left = box.x;\n\t\tlet right = left + box.width;\n\t\tconst scroll = this.getScrollState();\n\n\t\tif (pos.x < (left + sense)){\n\t\t\treturn this._auto_scrollTo(scroll.x-sense*2, scroll.y, pos, \"x\");\n\t\t} else if (pos.x > right - sense){\n\t\t\treturn this._auto_scrollTo(scroll.x+sense*2, scroll.y, pos, \"x\");\n\t\t}\n\t\treturn false;\n\t},\n\t_auto_scrollTo:function(x, y, pos, mode){\n\t\tif (this.callEvent(\"onBeforeAutoScroll\", [pos])){\n\t\t\tthis.scrollTo(x, y);\n\t\t\tthis.callEvent(\"onAfterAutoScroll\", []);\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst diff = this._render_scroll_shift ? 0 : (this._render_scroll_diff||0);\n\t\t\treturn Math.abs((mode === \"x\" ? x : y) - scroll[mode] + diff) < 1;\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport default AutoScroll;","import {assert} from \"../webix/debug\";\n\nimport {uid, isArray, toNode, isUndefined, toFunctor} from \"../webix/helpers\";\nimport {attachEvent} from \"../webix/customevents\";\nimport {locate} from \"../webix/html\";\nimport {use} from \"../services\";\n\nimport type from \"../webix/type\";\nimport state from \"../core/state\";\n\n//global click events for UI\nimport \"./click\";\n\nconst views = {};\n\nfunction ui(config, parent, id){\n\tvar res;\n\tstate._ui_creation++;\n\t// save old value of global scope\n\tconst temp_scope = state._global_scope;\n\t// save old value of global collection\n\tconst temp_collection = state._global_collection;\n\t// set global scope to the scope of new UI or to previous value\n\t// as result inner webix.ui calls will have access the scope of master view\n\t// mainly necessary for suggests\n\tstate._global_scope = config.$scope || temp_scope;\n\ttry {\n\t\tres = _ui_creator(config, parent, id);\n\t} finally {\n\t\tstate._ui_creation--;\n\t\t// restore global scope\n\t\tstate._global_scope = temp_scope;\n\t\t// restore global collection\n\t\t// if an error occurred while creating the isolated layout\n\t\tstate._global_collection = temp_collection;\n\t}\n\treturn res;\n}\nui.views = views;\n\n\nfunction _ui_creator(config, parent, id){\n\tvar multiset = isArray(config);\n\tvar node = toNode((config.container||parent)||document.body);\n\n\t// solve problem with non-unique ids\n\tif(node._settings)\n\t\tid = _correctId(node, multiset, id);\n\n\tvar top_node;\n\tvar moving = false;\n\tvar body_child = (node == document.body);\n\tif (config._settings || (node && multiset)){\n\t\ttop_node = config;\n\t\tmoving = true;\n\t} else {\n\t\tif (node && body_child)\n\t\t\tconfig.$topView = true;\n\t\tif (!config._inner)\n\t\t\tconfig._inner = {};\n\n\t\tif (parent && parent.getParentView){\n\t\t\tstate._parent_cell = (!id && id!==0) ? parent.getParentView() : parent;\n\t\t}\n\n\t\ttop_node = _view(config);\n\t}\n\n\tif (body_child && !top_node.setPosition && !top_node.$apiOnly)\n\t\tuse(\"fixHeight\")();\n\n\tif (top_node._settings && top_node._settings._hidden && !node.$view){\n\t\ttop_node._settings._container = node;\n\t} else if (!top_node.$apiOnly){\n\t\tif (node.appendChild)\n\t\t\t_appendDom(node, top_node, config);\n\t\telse if (node.destructor){\n\t\t\tvar target = node;\n\n\t\t\t//addView or view moving with target id\n\t\t\tif (!id && id!==0 && !isArray(top_node)){\n\t\t\t\tid = node;\n\t\t\t\tnode = node.getParentView();\n\t\t\t}\n\n\t\t\t//if target supports view adding\n\t\t\tif (node && node._replace){\n\t\t\t\tif (moving && top_node.getParentView){\n\t\t\t\t\t//if source supports view removing\n\t\t\t\t\tlet parent = top_node.getParentView();\n\t\t\t\t\tif (parent  && parent._remove){\n\t\t\t\t\t\tparent._remove(top_node);\n\t\t\t\t\t}\n\t\t\t\t\t//adjust parent link and scope\n\t\t\t\t\ttop_node._parent_cell = node;\n\t\t\t\t\ttop_node.$scope = node.$scope;\n\t\t\t\t}\n\n\t\t\t\tnode._replace(top_node, id);\n\t\t\t} else {\n\t\t\t\tlet parent = target.$view.parentNode;\n\t\t\t\ttarget.destructor();\n\t\t\t\t_appendDom(parent, top_node, config);\n\t\t\t}\n\t\t} else\n\t\t\tassert(0, \"Not existing parent:\"+config.container);\n\t}\n\n\treturn top_node;\n}\n\nfunction _appendDom(node, top_node, config){\n\tnode.appendChild(top_node._viewobj);\n\tif (top_node.getParentView()) return;\n\n\t//resize window with position center or top\n\t//do not resize other windows and elements\n\t// which are attached to custom html containers\n\tif (((!top_node.setPosition || top_node._settings.fullscreen) && node == document.body) || top_node._settings.position )\n\t\tstate.top_views.push(top_node._destructor_handler);\n\tif (!config.skipResize)\n\t\ttop_node.adjust();\n}\n\nfunction _correctId(target, multiset, id){\n\t//replace view\n\tvar views = [target];\n\t//replace content of layout\n\tif (multiset)\n\t\tviews = target.getChildViews();\n\t//replace content of window\n\telse if (target._body_cell)\n\t\tviews = [target._body_cell];\n\t//add cell in layout by number\n\telse if (typeof id == \"number\"){\n\t\treturn id;\n\t//replace cell in layout by id\n\t} else if (id){\n\t\tviews = [$$(id)];\n\t\t_deleteIds(views);\n\t\treturn views[0].config.id;\n\t}\n\n\t_deleteIds(views);\n\treturn id;\n}\n\nfunction _deleteIds(uis){\n\tfor (var i = uis.length - 1; i >= 0; i--){\n\t\tlet current = uis[i];\n\t\t//remove original id\n\t\tdelete views[current.config.id];\n\t\t//create temp id\n\t\tcurrent.config.id = \"x\"+uid();\n\t\tviews[current.config.id] = current;\n\t\t//process childs\n\t\tif (current.getChildViews)\n\t\t\t_deleteIds(current.getChildViews());\n\t\t//process related UI\n\t\tif (current._destroy_with_me)\n\t\t\t_deleteIds(current._destroy_with_me);\n\t}\n}\n\n\nfunction _view(config){\n\n\tif (DEBUG){\n\t\t// check for trailing comma\n\t\tvar coll = config.cells || config.rows || config.elements || config.cols;\n\t\tif (coll)\n\t\t\tfor (let i=0; i<coll.length; i++)\n\t\t\t\tif (coll[i] === null || typeof coll[i] === \"undefined\")\n\t\t\t\t\tassert(0, \"You have trailing comma or Null element in collection's configuration\");\n\t}\n\n\tif (config.view){\n\t\tvar view = config.view;\n\t\tassert(ui[view], \"unknown view:\"+view);\n\t\treturn new ui[view](config);\n\t} else if (config.rows || config.cols){\n\t\tvar cells = config.rows||config.cols;\n\t\tvar accordion = false;\n\t\tfor (let i=0; i<cells.length; i++){\n\t\t\tif (cells[i].body && !cells[i].view && !cells[i].align)\n\t\t\t\taccordion = true;\n\t\t}\n\t\tif (accordion){\n\t\t\treturn new ui.headerlayout(config);\n\t\t} else\n\t\t\treturn new ui.layout(config);\n\t}\n\telse if (config.cells)\n\t\treturn new ui.multiview(config);\n\telse if (config.template || config.content)\n\t\treturn new ui.template(config);\t\n\telse if (config.align && config.body){\n\t\treturn new ui.align(config);\n\t} else return new ui.spacer(config);\n}\n//FIXME\nui._view = _view;\n\nfunction $$(id){\n\tif (!id) return null;\n\t\n\tif (views[id]) return views[id];\n\n\tvar name = id;\n\tif (typeof id == \"object\"){\n\t\tif (id._settings)\n\t\t\treturn id;\n\t\tname = id.target||id;\n\t}\n\treturn views[locate({ target:toNode(name)},/*@attr*/\"view_id\")];\n}\nif (typeof window.$$ === \"undefined\") window.$$ = $$;\n\t\n\t\n\nlet protoUI = function(){\n\tvar origins = arguments;\n\tvar selfname = origins[0].name;\n\t\n\tvar t = function(data){\n\t\tif (!t)\n\t\t\treturn ui[selfname].prototype;\n\n\t\tvar origins = t.$protoWait;\n\t\tif (origins){\n\t\t\tvar params = [origins[0]];\n\t\t\t\n\t\t\tfor (let i=1; i < origins.length; i++){\n\t\t\t\tparams[i] = origins[i];\n\n\t\t\t\tif (params[i].$protoWait)\n\t\t\t\t\tparams[i] = params[i].call(-1, params[i].name);\n\n\t\t\t\tif (params[i].prototype && params[i].prototype.name)\n\t\t\t\t\tui[params[i].prototype.name] = params[i];\n\t\t\t}\n\t\t\tui[selfname] = proto.apply(-1, params);\n\n\t\t\tif (t._webix_type_wait)\t\n\t\t\t\tfor (let i=0; i < t._webix_type_wait.length; i++)\n\t\t\t\t\ttype(ui[selfname], t._webix_type_wait[i]);\n\t\t\t\t\n\t\t\tt = origins = null;\t\n\t\t}\n\t\t\t\n\t\tif (this != -1)\n\t\t\treturn new ui[selfname](data);\n\t\telse \n\t\t\treturn ui[selfname];\n\t};\n\tt.$protoWait = Array.prototype.slice.call(arguments, 0);\n\treturn (ui[selfname]=t);\n};\n\nlet proto = function(){\n\tvar origins = arguments;\n\tvar compilation = origins[0];\n\tvar has_constructor = !!compilation.$init;\n\tvar construct = [];\n\t\n\tassert(compilation,\"Invalid mixing target\");\n\t\t\n\tfor (var i=origins.length-1; i>0; i--) {\n\t\tassert(origins[i],\"Invalid mixing source\");\n\t\tif (typeof origins[i]== \"function\")\n\t\t\torigins[i]=origins[i].prototype;\n\t\tif (origins[i].$init) \n\t\t\tconstruct.push(origins[i].$init);\n\t\tif (origins[i].defaults){ \n\t\t\tvar defaults = origins[i].defaults;\n\t\t\tif (!compilation.defaults)\n\t\t\t\tcompilation.defaults = {};\n\t\t\tfor (let def in defaults)\n\t\t\t\tif (isUndefined(compilation.defaults[def]))\n\t\t\t\t\tcompilation.defaults[def] = defaults[def];\n\t\t}\n\t\tif (origins[i].type && compilation.type){\n\t\t\tfor (let def in origins[i].type)\n\t\t\t\tif (!compilation.type[def])\n\t\t\t\t\tcompilation.type[def] = origins[i].type[def];\n\t\t}\n\t\t\t\n\t\tfor (var key in origins[i]){\n\t\t\tif (!compilation[key] && compilation[key] !== false)\n\t\t\t\tcompilation[key] = origins[i][key];\n\t\t}\n\t}\n\t\n\tif (has_constructor)\n\t\tconstruct.push(compilation.$init);\n\t\n\t\n\tcompilation.$init = function(){\n\t\tfor (var i=0; i<construct.length; i++)\n\t\t\tconstruct[i].apply(this, arguments);\n\t};\n\tif (compilation.$skin)\n\t\tcompilation.$skin();\n\n\tvar result = function(config){\n\t\tthis.$ready=[];\n\t\tassert(this.$init,\"object without init method\");\n\t\tthis.$init(config);\n\t\tif (this._parseSettings)\n\t\t\tthis._parseSettings(config, this.defaults);\n\t\tfor (var i=0; i < this.$ready.length; i++)\n\t\t\tthis.$ready[i].call(this);\n\t};\n\tresult.prototype = compilation;\n\t\n\tcompilation = origins = null;\n\treturn result;\n};\n\nattachEvent(\"onClick\", function(e){\n\tconst element = $$(e);\n\n\tif (element && element.touchable){\n\t\tuse(\"UIManager\").applyChanges(element);\n\n\t\tif (element.config.disabled) return;\n\n\t\tlet css = \"\";\n\t\tlet trg = e.target;\n\t\tif (trg.className && trg.className.toString().indexOf(\"webix_view\") === 0) return;\n\n\t\tif (element)\n\t\t\tuse(\"UIManager\")._focus_action(element);\n\n\t\t//reaction on custom css elements in buttons\n\t\t//loop through all parents\n\t\twhile (trg && trg.parentNode){\n\t\t\tif (trg.getAttribute){\n\t\t\t\tif (trg.getAttribute(/*@attr*/\"view_id\"))\n\t\t\t\t\tbreak;\n\n\t\t\t\tcss = trg.className;\n\t\t\t\tif (css){\n\t\t\t\t\tcss = css.toString().split(\" \");\n\t\t\t\t\tfor (let i =0; i<css.length; i++){\n\t\t\t\t\t\tif (element.on_click[css[i]]){\n\t\t\t\t\t\t\tconst res = element.on_click[css[i]].call(element,e,element._settings.id,trg);\n\t\t\t\t\t\t\tif (res === false)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttrg = trg.parentNode;\n\t\t}\n\n\t\tif (element._settings.click){\n\t\t\tconst code = toFunctor(element._settings.click, element.$scope);\n\t\t\tif (code && code.call) code.call(element, element._settings.id, e);\n\t\t}\n\n\t\tlet popup = element._settings.popup;\n\t\tif (popup && !element._settings.readonly && !e.longtouch_drag){\n\t\t\tpopup = $$(popup);\n\t\t\tassert(popup, \"Unknown popup\");\n\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tconst node = element.getInputNode() || element.getNode();\n\n\t\t\t\tpopup._settings.master = element._settings.id;\n\t\t\t\tpopup.show(node, null, true);\n\n\t\t\t\tnode.setAttribute(\"aria-expanded\", true);\n\t\t\t\tif (popup._settings.id != element._settings.suggest)\t// not a suggest\n\t\t\t\t\tuse(\"UIManager\").setFocus(popup.getBody());\n\t\t\t}\n\t\t}\n\n\t\telement.callEvent(\"onItemClick\", [element._settings.id, e]);\n\t}\n});\n\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\tvar mod = window.webix_on_core_ready({ proto, protoUI});\n\t\tproto = mod.proto;\n\t\tprotoUI = mod.protoUI;\n\t}\n}\n\nexport { ui, proto, protoUI, $$ };","import {assert} from \"./debug\";\nimport {event} from \"./htmlevents\";\nimport env from \"./env.js\";\nimport {isArray, delay} from \"./helpers.js\";\n\nimport {callEvent, attachEvent} from \"./customevents.js\";\n\nfunction ready(code){\n\tif (_ready) code.call();\n\telse _ready_code.push(code);\n}\nlet _ready = false;\nlet _ready_code = [];\n\n//autodetect codebase folder\nvar temp = document.getElementsByTagName(\"SCRIPT\");\t//current script, most probably\nassert(temp.length,\"Can't locate codebase\");\nif (temp.length){\n\t//full path to script\n\ttemp = (temp[temp.length-1].getAttribute(\"src\")||\"\").split(\"/\");\n\t//get folder name\n\ttemp.splice(temp.length-1, 1);\n\tenv.codebase = temp.slice(0, temp.length).join(\"/\")+\"/\";\n}\n\nvar handler = function(){\n\tif(env.isIE)\n\t\tdocument.body.className += \" webix_ie\";\n\tcallEvent(\"onReady\",[]);\n};\n\nvar doit = function(){\n\t_ready = true;\n\n\t/* global webix_ready */ \n\tif (window.webix_ready && isArray(webix_ready))\n\t\t_ready_code = webix_ready.concat(_ready_code);\n\n\tfor (var i=0; i < _ready_code.length; i++)\n\t\t_ready_code[i].call();\n\t_ready_code=[];\n};\n\nattachEvent(\"onReady\", function(force){\n\tif (force) \n\t\tdoit();\n\telse \n\t\tdelay(doit);\n});\n\nif (document.readyState == \"complete\") handler();\nelse event(window, \"load\", handler);\n\nready(function(){\n\tevent(document.body, \"click\", function(e){\n\t\tcallEvent(\"onClick\", [e]);\n\t});\n});\n\n\nexport default ready;","import {ui, $$} from \"../ui/core\";\nimport {isUndefined} from \"../webix/helpers\";\nimport {create} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\n\nconst fullscreen = {\n\tset:function(view, config){\n\t\tconfig = config || {};\n\n\t\tif(this._view)\n\t\t\tthis.exit();\n\n\t\tif($$(view))\n\t\t\tview = $$(view);\n\t\telse{\n\t\t\tif(typeof view == \"string\")\n\t\t\t\tview = document.getElementById(view);\n\t\t\tif(view instanceof Element)\n\t\t\t\tview = {$view: view, $html: true};\n\t\t\tassert(view, \"Incorrect view for fullscreen mode\");\n\t\t}\n\n\t\tthis._view = view;\n\t\tthis._pos = this._setPosition();\n\n\t\tconst viewConfig = view.config;\n\t\tif(view.setPosition){\n\t\t\tviewConfig.fullscreen = true;\n\t\t\tview.resize();\n\n\t\t\treturn view;\n\t\t}\n\t\telse{\n\t\t\tthis._fullscreen = ui({\n\t\t\t\tview:\"window\",\n\t\t\t\thead: this._getHeadConfig(config),\n\t\t\t\tcss:config.css||\"\",\n\t\t\t\tfullscreen:true,\n\t\t\t\tborderless:true,\n\t\t\t\t//better resize logic\n\t\t\t\tbody:{rows:[]}\n\t\t\t});\n\n\t\t\tif(viewConfig)\n\t\t\t\tthis._sizes = {\n\t\t\t\t\twidth: viewConfig.width, minWidth: viewConfig.minWidth, maxWidth: viewConfig.maxWidth,\n\t\t\t\t\theight: viewConfig.height, minHeight: viewConfig.minHeight, maxHeight: viewConfig.maxHeight\n\t\t\t\t};\n\n\t\t\tif(view.getParentView && view.getParentView()){\n\t\t\t\tthis._parent = view.getParentView();\n\n\t\t\t\tif(this._parent.index){\n\t\t\t\t\tthis._pos.index = this._parent.index(view);\n\t\t\t\t\tthis._pos.active = this._parent.getActiveId ? this._parent.getActiveId() == viewConfig.id : false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis._parent = view.$view.parentNode;\n\t\t\t\tthis._pos.node = create(\"div\");\n\n\t\t\t\t//save old position\n\t\t\t\tthis._parent.replaceChild(this._pos.node, view.$view);\n\t\t\t}\n\n\t\t\tthis._fullscreen.getBody().addView(view.$html ? {view:\"template\", content:view.$view, css:\"webix_fullscreen_html\"} : view);\n\n\t\t\tthis._fullscreen.show();\n\t\t\tthis._setSizes(view);\n\n\t\t\treturn this._fullscreen;\n\t\t}\n\t},\n\texit:function(){\n\t\tif(this._view){\n\t\t\tconst viewConfig = this._view.config;\n\t\t\tthis._setPosition(true);\n\t\t\tif(this._view.setPosition){\n\t\t\t\tviewConfig.fullscreen = false;\n\t\t\t\tthis._view.resize();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(this._parent instanceof Element){\n\t\t\t\t\tthis._view._parent_cell = null;\n\t\t\t\t\tif(this._view._set_inner)\n\t\t\t\t\t\tthis._view._set_inner(this._view.config);\n\t\t\t\t\tthis._parent.replaceChild(this._view.$view, this._pos.node);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(!isUndefined(this._pos.index)){\n\t\t\t\t\t\tthis._parent.addView(this._view, this._pos.index);\n\t\t\t\t\t\tif(this._pos.active)\n\t\t\t\t\t\t\tthis._view.show(false, false);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tthis._view._parent_cell = this._parent;\n\t\t\t\t\t\tthis._parent._replace(this._view);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._setSizes(this._view, this._sizes);\n\n\t\t\t\t//prevent view destruction (with layout)\n\t\t\t\tif(!this._view.$html)\n\t\t\t\t\tthis._fullscreen.getBody()._cells = [];\n\n\t\t\t\t//we can't set head false with replace, so we need to close win\n\t\t\t\tthis._fullscreen.close();\n\t\t\t}\n\t\t\tthis._clearValues();\n\t\t}\n\t},\n\t_clearValues:function(){\n\t\tdelete this._parent;\n\t\tdelete this._view;\n\t\tdelete this._sizes;\n\t\tdelete this._pos;\n\t\tdelete this._fullscreen;\n\t},\n\t_setPosition(restore){\n\t\tconst view = this._view;\n\t\tconst oldStyles = {};\n\n\t\tif(view.setPosition){\n\t\t\tif(restore)\n\t\t\t\tview.setPosition(this._pos.left, this._pos.top);\n\t\t\telse{\n\t\t\t\toldStyles.left = view.config.left;\n\t\t\t\toldStyles.top = view.config.top;\n\t\t\t\tview.setPosition(0,0);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconst rules = [\"position\", \"top\", \"bottom\", \"left\", \"right\"];\n\t\t\tconst style = view.$view.style;\n\n\t\t\trules.forEach(rule => {\n\t\t\t\tif(restore)\n\t\t\t\t\tstyle[rule] = this._pos[rule];\n\t\t\t\telse{\n\t\t\t\t\toldStyles[rule] = style[rule];\n\t\t\t\t\tstyle[rule] = rule == \"position\" ? \"relative\" : 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn oldStyles;\n\t},\n\t_setSizes:function(view, sizes){\n\t\tif(!view.$html){\n\t\t\tsizes = sizes || {height:0, minHeight:0, maxHeight:0, width:0, minWidth:0, maxWidth:0};\n\t\t\tview.define(sizes);\n\t\t\tview.resize();\n\t\t}\n\t},\n\t_getHeadConfig:function(config){\n\t\tif(config.head === false || typeof config.head == \"object\")\n\t\t\treturn config.head;\n\t\telse{\n\t\t\treturn {\n\t\t\t\tcols:[\n\t\t\t\t\t{template:config.head||\"\", type:\"header\", borderless:true},\n\t\t\t\t\t{view:\"icon\", icon:\"wxi-close\", click:()=>{\n\t\t\t\t\t\tthis.exit();\n\t\t\t\t\t}}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport default fullscreen;","import ready from \"../webix/ready\";\n\nimport {assert} from \"../webix/debug\";\nimport {event} from \"../webix/htmlevents\";\nimport {delay,uid,_power_array,isUndefined,isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {locate,preventEvent} from \"../webix/html\";\nimport {modalbox} from \"../webix/message\";\nimport fullscreen from \"../webix/fullscreen\";\n\nimport {$$} from \"../ui/core\";\nimport state from \"../core/state\";\n\nimport {define} from \"../services\";\n\n\nconst UIManager = {\n\t_view: null,\n\t_hotkeys: {},\n\t_focus_time:0,\n\t_controls: {\n\t\t\"esc\": \"escape\",\n\t\t\"up\": \"arrowup\",\n\t\t\"down\": \"arrowdown\",\n\t\t\"left\": \"arrowleft\",\n\t\t\"right\": \"arrowright\",\n\t\t\"pgdown\": \"pagedown\",\n\t\t\"pgup\": \"pageup\",\n\t\t\"space\": \" \",\n\t\t\"multiply\": \"*\",\n\t\t\"add\": \"+\",\n\t\t\"subtract\": \"-\",\n\t\t\"decimal\": \".\",\n\t\t\"divide\": \"/\",\n\t\t\"pausebreak\": \"pause\",\n\t\t\"5numlocked\": \"clear\"\n\t},\n\t_keyboard_layouts: {\n\t\tQWERTY: {\n\t\t\t\"KeyA\": \"a\", \"KeyB\": \"b\", \"KeyC\": \"c\", \"KeyD\": \"d\", \"KeyE\": \"e\",\n\t\t\t\"KeyF\": \"f\", \"KeyG\": \"g\", \"KeyH\": \"h\", \"KeyI\": \"i\", \"KeyJ\": \"j\",\n\t\t\t\"KeyK\": \"k\", \"KeyL\": \"l\", \"KeyM\": \"m\", \"KeyN\": \"n\", \"KeyO\": \"o\",\n\t\t\t\"KeyP\": \"p\", \"KeyQ\": \"q\", \"KeyR\": \"r\", \"KeyS\": \"s\", \"KeyT\": \"t\",\n\t\t\t\"KeyU\": \"u\", \"KeyV\": \"v\", \"KeyW\": \"w\", \"KeyX\": \"x\", \"KeyY\": \"y\",\n\t\t\t\"KeyZ\": \"z\",\n\n\t\t\t\"Digit0\": \"0\", \"Digit1\": \"1\", \"Digit2\": \"2\", \"Digit3\": \"3\", \"Digit4\": \"4\",\n\t\t\t\"Digit5\": \"5\", \"Digit6\": \"6\", \"Digit7\": \"7\", \"Digit8\": \"8\", \"Digit9\": \"9\",\n\t\t\t\n\t\t\t\"Numpad0\": \"0\", \"Numpad1\": \"1\", \"Numpad2\": \"2\", \"Numpad3\": \"3\", \"Numpad4\": \"4\",\n\t\t\t\"Numpad5\": \"5\", \"Numpad6\": \"6\", \"Numpad7\": \"7\", \"Numpad8\": \"8\", \"Numpad9\": \"9\",\n\t\t\t\"NumpadAdd\": \"add\", \"NumpadSubtract\": \"subtract\", \"NumpadMultiply\": \"multiply\",\n\t\t\t\"NumpadDivide\": \"divide\", \"NumpadDecimal\": \"decimal\", \"NumpadEnter\": \"enter\",\n\t\t\t\n\t\t\t\"ControlLeft\": \"ctrl\", \"ControlRight\": \"ctrl\",\n\t\t\t\"AltLeft\": \"alt\", \"AltRight\": \"alt\",\n\t\t\t\"ShiftLeft\": \"shift\", \"ShiftRight\": \"shift\",\n\t\t\t\"MetaLeft\": \"meta\", \"MetaRight\": \"meta\",\n\t\t\t\n\t\t\t\"Backquote\": \"`\", \"Backslash\": \"\\\\\", \"Semicolon\": \";\", \"Quote\": \"'\",\n\t\t\t\"Comma\": \",\", \"Period\": \".\", \"Slash\": \"/\", \"BracketLeft\": \"[\",\n\t\t\t\"BracketRight\": \"]\", \"Minus\": \"-\", \"Equal\": \"=\", \"IntlBackslash\": \"\\\\\",\n\t\t\t\"IntlRo\": \"\\\\\", \"IntlYen\": \"\\\\\",\n\t\t},\n\t\tQWERTZ: {\n\t\t\t\"KeyY\": \"z\", \"KeyZ\": \"y\", \n\t\t\t\"Minus\": \"ß\", \"Equal\": \"´\", \"BracketLeft\": \"ü\",\n\t\t\t\"BracketRight\": \"+\", \"Semicolon\": \"ö\", \"Quote\": \"ä\",\n\t\t\t\"Backslash\": \"#\", \"IntlBackslash\": \"<\"\n\t\t},\n\t\tAZERTY: {\n\t\t\t\"KeyQ\": \"a\", \"KeyA\": \"q\", \"KeyZ\": \"w\", \"KeyW\": \"z\",\n\t\t\t\"KeyM\": \",\", \"Comma\": \";\", \"Period\": \":\", \"Semicolon\": \"m\",\n\t\t\t\"Digit1\": \"&\", \"Digit2\": \"é\", \"Digit3\": \"\\\"\", \"Digit4\": \"'\",\n\t\t\t\"Digit5\": \"(\", \"Digit6\": \"-\", \"Digit7\": \"è\", \"Digit8\": \"_\",\n\t\t\t\"Digit9\": \"ç\", \"Digit0\": \"à\", \"Minus\": \")\", \"Equal\": \"=\",\n\t\t\t\"BracketLeft\": \"^\", \"BracketRight\": \"$\", \"Backslash\": \"*\",\n\t\t\t\"Quote\": \"ù\", \"Slash\": \"!\", \"Backquote\": \"²\",\n\t\t\t\"IntlBackslash\": \"<\", \"IntlRo\": \"µ\"\n\t\t}\n\t},\n\t_inputs:{\n\t\t\"input\": 1,\n\t\t\"button\":1,\n\t\t\"textarea\":1,\n\t\t\"select\":1\n\t},\n\t_enable: function() {\n\t\t// attaching events here\n\t\tevent(document, \"keydown\", this._keypress, { bind:this });\n\t\tevent(document, \"compositionstart\", ()=> this._startComposition());\n\t\tevent(document, \"compositionend\", ()=> this._endComposition());\n\t\tevent(document.body, \"click\", this._focus_click, { capture:true, bind:this });\n\t\tevent(document.body, \"focus\", this._focus_tab, { capture:true, bind:this });\n\n\t\tstate.destructors.push({obj:this});\n\t},\n\t_startComposition: function(){\n\t\tclearTimeout(this._composition);\n\t\tthis._composition = true;\n\t},\n\t_endComposition: function(){\n\t\t//in some browsers compositionEnd fires before the keyDown event\n\t\tthis._composition = delay(() => delete this._composition);\n\t},\n\tdestructor: function(){\n\t\tUIManager._view = null;\n\t},\n\tgetFocus: function() {\n\t\treturn this._view;\n\t},\n\t_focus_action:function(view){\n\t\tthis._focus_was_there = this._focus_was_there || view._settings.id;\n\t},\n\tsetFocus: function(view, only_api, tab){\n\t\t//view can be empty\n\t\tview = $$(view);\n\t\t//unfocus if view is hidden\n\t\tif (view && !view.$view) view = null;\n\n\t\t//store last click time, it is necessary to prevent refocusing\n\t\t//for example when user moves focus from onclick handler somewher\n\t\t//and we want to prevent autofocusing, when event will reach document.body\n\t\tthis._focus_time = state._focus_time = new Date();\n\n\t\tif (this._view === view) return true;\n\t\tif (this._view && this._view.callEvent)\n\t\t\tthis._view.callEvent(\"onBlur\", [this._view]);\n\n\t\tif (view && view.callEvent){\n\t\t\tview.callEvent(\"onFocus\", [view, this._view]);\n\t\t\tif(tab) view.callEvent(\"onTabFocus\", [view, this._view]);\n\t\t}\n\t\tcallEvent(\"onFocusChange\", [view, this._view]);\n\n\t\tif (this._view && this._view.blur && !only_api) this._view.blur();\n\t\tthis._view = view;\n\t\tif (view && view.focus && !only_api) view.focus();\n\t\treturn true;\n\t},\n\tapplyChanges: function(element){\n\t\tvar view = this.getFocus();\n\t\tif (view && view != element && view._applyChanges)\n\t\t\tview._applyChanges(element);\n\t},\n\thasFocus: function(view) {\n\t\treturn (view === this._view) ? true : false;\n\t},\n\t_focus: function(e){\n\t\tfor(let i = 0; i < modalbox.order.length; i++){\n\t\t\tif(modalbox.pull[ modalbox.order[i] ]._box.contains(e.target))\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar view = locate(e, /*@attr*/\"view_id\") || this._focus_was_there;\n\n\t\t//if html was repainted we can miss the view, so checking last processed one\n\t\tview = $$(view);\n\t\tthis._focus_was_there = null;\n\n\t\t//set timer, to fix issue with Android input focusin\n\t\tstate._focus_time = new Date();\n\n\t\tif (view == this._view) return true;\n\n\t\tif (view){\n\t\t\tif (this.canFocus(view)){\n\t\t\t\t// keep form focus\n\t\t\t\tif (this._view && this._view.getFormView() == view && this._view.focus)\n\t\t\t\t\tthis._view.focus();\n\t\t\t\telse{\n\t\t\t\t\t//radio view with scroll: focus changes onClick event target into radiogroup, so we need to readjust the focus target before it happens\n\t\t\t\t\tif (e.target.type == \"radio\" || e.target.getAttribute(\"role\") == \"radio\")\n\t\t\t\t\t\te.target.setAttribute(\"tabindex\", \"0\");\n\n\t\t\t\t\tthis.setFocus(view);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//remove focus from an unreachable view\n\t\t\telse if (view.$view.contains(e.target))\n\t\t\t\te.target.blur();\n\t\t}\n\t\telse this.setFocus(null);\n\n\t\treturn true;\n\t},\n\t_focus_click:function(e){\n\t\t// if it was onfocus/onclick less then 100ms behore then we ignore it\n\t\tif ((new Date())-this._focus_time < 100) {\n\t\t\tthis._focus_was_there = null;\n\t\t\treturn false;\n\t\t}\n\t\treturn this._focus(e);\n\t},\n\t_focus_tab: function(e){\n\t\tif(!this._inputs[e.target.nodeName.toLowerCase()])\n\t\t\treturn false;\n\t\treturn this._focus(e);\n\t},\n\t_top_modal: function(view){\n\t\tconst modality = state._modality;\n\t\tif (!modality.length) return true;\n\n\t\tconst top = this._getTop(view);\n\t\treturn (top.$view.style.zIndex||0) >= Math.max(...modality);\n\t},\n\t_getTop: function(view){\n\t\tlet top = view.queryView(view => !view.getParentView(), \"parent\") || view;\n\n\t\tconst insideContainer = $$(top.$view.parentNode); //container inside view (like filter in query view list)\n\t\tif(insideContainer)\n\t\t\ttop = this._getTop(insideContainer);\n\n\t\treturn top;\n\t},\n\tcanFocus:function(view){\n\t\tif(document.body.modality || view.$view.modality || view.queryView(view => view.$view.modality, \"parent\")) //modalbox\n\t\t\treturn false;\n\t\treturn view.isVisible() && view.isEnabled() && !view.config.disabled && this._top_modal(view) && !view.queryView({disabled:true}, \"parent\");\n\t},\n\n\t_moveChildFocus: function(check_view){\n\t\tvar focus = this.getFocus();\n\t\t//we have not focus inside of closing item\n\t\tif (check_view && !this._is_child_of(check_view, focus))\n\t\t\treturn false;\n\n\t\tif (!this._focus_logic(\"getPrev\", check_view))\n\t\t\tthis._view = null;\n\t},\n\t_is_child_of: function(parent, child) {\n\t\tif (!parent) return false;\n\t\tif (!child) return false;\n\t\twhile (child) {\n\t\t\tif (child === parent) return true;\n\t\t\tchild = child.getParentView();\n\t\t}\n\t\treturn false;\n\t},\n\t_keypress_timed:function(){\n\t\tif (this && this.callEvent)\n\t\t\tthis.callEvent(\"onTimedKeyPress\",[]);\n\t},\n\t_keypress: function(e) {\n\t\tlet code = e.which || e.keyCode;\n\n\t\t// processing or not found\n\t\tif (code == 229 || code == 0) return;\n\n\t\t// numpad keys\n\t\tif (code > 95 && code < 106) code -= 48;\n\n\t\tconst view = this.getFocus();\n\t\tif (view && view.callEvent) {\n\t\t\tif (view.callEvent(\"onKeyPress\", [code, e]) === false)\n\t\t\t\tpreventEvent(e);\n\t\t\tif (view.hasEvent(\"onTimedKeyPress\")){\n\t\t\t\tclearTimeout(view._key_press_timeout);\n\t\t\t\tview._key_press_timeout = delay(this._keypress_timed, view, [], (view._settings.keyPressTimeout||250));\n\t\t\t}\n\t\t}\n\n\t\tif (this._check_keycode(e) === false) {\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t// dir - getNext or getPrev\n\t_focus_logic: function(dir, focus) {\n\t\tvar next = focus||this.getFocus();\n\t\tif(next){\n\t\t\tdir = dir || \"getNext\";\n\t\t\tvar start = next;\n\t\t\tvar marker = uid();\n\n\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\tnext = this[dir](next);\n\t\t\t\t// view with focus ability\n\t\t\t\tif (next && this.canFocus(next))\n\t\t\t\t\treturn this.setFocus(next);\n\n\t\t\t\t// elements with focus ability not found\n\t\t\t\tif (next === start || next.$fmarker == marker){\n\t\t\t\t\tif(focus)\n\t\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t//prevents infinity loop\n\t\t\t\tnext.$fmarker = marker;\n\t\t\t}\n\t\t}\n\t},\n\t_tab_logic:function(view, e){\n\t\tvar mode = !e.shiftKey;\n\t\tif (view && view._custom_tab_handler && !view._custom_tab_handler(mode, e))\n\t\t\treturn false;\n\n\t\tif (view && view._in_edit_mode){\n\t\t\tif (view.editNext)\n\t\t\t\treturn view.editNext(mode);\n\t\t\telse if (view.editStop){\n\t\t\t\tview.editStop();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else\n\t\t\tdelay(function(){\n\t\t\t\tview = $$(document.activeElement);\n\t\t\t\tif(view && !UIManager.canFocus(view))\n\t\t\t\t\treturn UIManager._focus_logic(mode ? \"getNext\" : \"getPrev\", view);\n\t\t\t\tUIManager.setFocus(view, true, true);\n\t\t\t});\n\t},\n\tgetTop: function(id) {\n\t\tvar next, view = $$(id);\n\n\t\twhile (view && (next = view.getParentView()))\n\t\t\tview = next;\n\t\treturn view;\n\t},\n\n\tgetNext: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//tab to first children\n\t\tif (cells.length && !_inner_call)\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn cells[i];\n\n\t\t//unique case - single view without child and parent\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells.length){\n\t\t\tvar index = _power_array.find.call(p_cells, view)+1;\n\t\t\twhile (index < p_cells.length) {\n\t\t\t\t//next visible child\n\t\t\t\tif (this.canFocus(p_cells[index])) \n\t\t\t\t\treturn p_cells[index];\n\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} \n\n\t\t//sibling of parent\n\t\treturn this.getNext(parent, true);\n\t},\n\n\tgetPrev: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//last child of last child\n\t\tif (cells.length && _inner_call)\n\t\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn this.getPrev(cells[i], true);\n\n\t\tif (_inner_call && this.canFocus(view)) return view;\n\n\t\t//fallback from top to bottom\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn this.canFocus(view) ? this.getPrev(view, true) : view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells) {\n\t\t\tvar index = _power_array.find.call(p_cells, view)-1;\n\t\t\twhile (index >= 0) {\n\t\t\t\tif (this.canFocus(p_cells[index]))\n\t\t\t\t\treturn this.getPrev(p_cells[index], true);\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getPrev(parent, true);\n\t},\n\taddHotKey: function(keys, handler, view) {\n\t\tassert(handler, \"Hot key handler is not defined\");\n\t\tconst code = this._parse_keys(keys);\n\n\t\tif (!view) view = null;\n\t\tif (!this._hotkeys[code]) this._hotkeys[code] = [];\n\t\tthis._hotkeys[code].push({ handler, view });\n\n\t\treturn keys;\n\t},\n\tremoveHotKey: function(keys, func, view){\n\t\tconst code = this._parse_keys(keys);\n\t\tif (!func && !view)\n\t\t\tdelete this._hotkeys[code];\n\t\telse {\n\t\t\tvar t = this._hotkeys[code];\n\t\t\tif (t){\n\t\t\t\tfor (var i = t.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (view && t[i].view !== view) continue;\n\t\t\t\t\tif (func && t[i].handler !== func) continue;\n\t\t\t\t\tt.splice(i,1);\n\t\t\t\t}\n\t\t\t\tif (!t.length)\n\t\t\t\t\tdelete this._hotkeys[code];\n\t\t\t}\n\n\t\t}\n\t},\n\t_get_key(e) {\n\t\t// key can be undefined (browser autofill)\n\t\tif (!e.key) return \"\";\n\n\t\t// naive check for QWERTZ and AZERTY layouts\n\t\t// we are handling QWERTY/QWERTZ/AZERTY layouts only, as they are most common\n\t\tconst key = this._check_keyboard_layout(e) ? e.key.toLowerCase() : this._normalize_key_code(e);\n\t\treturn this._controls[key] || key;\n\t},\n\t_normalize_key_code(e) {\n\t\t// https://w3c.github.io/uievents-code/\n\t\t// https://w3c.github.io/uievents-code/#key-alphanumeric-section\n\t\t// convert key code to layout-agnostic key names (QWERTY)\n\t\t// special keys not in the default layout are not converted (fallback to e.key)\n\t\treturn this._keyboard_layouts[\"QWERTY\"][e.code] || e.key.toLowerCase();\n\t},\n\t_check_keyboard_layout(e) {\n\t\treturn this._keyboard_layouts[\"QWERTZ\"][e.code] === e.key.toLowerCase() || this._keyboard_layouts[\"AZERTY\"][e.code] === e.key.toLowerCase();\n\t},\n\t_keycode: function(key, ctrl, shift, alt, meta) {\n\t\treturn key+\"_\"+[\"\", (ctrl ? \"1\" : \"0\"), (shift ? \"1\" : \"0\"), (alt ? \"1\" : \"0\"), (meta ? \"1\" : \"0\")].join(\"\");\n\t},\n\t_check_keycode: function(e){\n\t\tconst keyCode = e.which || e.keyCode;\n\t\tconst is_any = !e.ctrlKey && !e.altKey && !e.metaKey && (keyCode!=9)&&(keyCode!=27)&&(keyCode!=13);\n\t\tconst code = this._keycode(this._get_key(e), e.ctrlKey, e.shiftKey, e.altKey, e.metaKey);\n\n\t\tvar focus = this.getFocus();\n\t\tif (this._hotkeys[code])\n\t\t\treturn  this._process_calls(this._hotkeys[code], focus, e);\n\t\telse if (is_any && this._hotkeys[\"any_0000\"])\n\t\t\treturn  this._process_calls(this._hotkeys[\"any_0000\"], focus, e);\n\n\t\treturn true;\n\t},\n\t_process_calls:function(calls, focus, e){\n\t\tfor (var i = 0; i < calls.length; i++) {\n\t\t\tvar key = calls[i];\n\t\t\tif ((key.view !== null) &&\t\t//common hot-key\n\t\t\t\t(focus !== key.view) &&\t\t//hot-key for current view\n\t\t\t\t//hotkey for current type of view\n\t\t\t\t(typeof(key.view) !== \"string\" || !focus || focus.name !== key.view)) continue;\n\n\t\t\tvar temp_result = key.handler(focus, e);\n\t\t\tif (!!temp_result === temp_result) return temp_result;\n\t\t}\n\t\treturn true;\n\t},\n\t_parse_keys: function(keys) {\n\t\tvar controls = this._controls;\n\t\tvar parts = keys.toLowerCase().split(/[ +\\-_]/);\n\t\tvar ctrl, shift, alt, meta;\n\t\tctrl = shift = alt = meta = 0;\n\t\tvar letter = \"\";\n\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\tif (parts[i] === \"ctrl\") ctrl = 1;\n\t\t\telse if (parts[i] === \"shift\") shift = 1;\n\t\t\telse if (parts[i] === \"alt\") alt = 1;\n\t\t\telse if (parts[i] === \"command\") meta = 1;\n\t\t\telse {\n\t\t\t\tletter = controls[parts[i]] || parts[i];\n\t\t\t}\n\t\t}\n\n\t\treturn this._keycode(letter, ctrl, shift, alt, meta);\n\t},\n\tgetState:function(node, children) {\n\t\tchildren = (children||false);\n\t\tnode = $$(node);\n\t\tvar state = {\n\t\t\tid: node.config.id,\n\t\t\twidth: node.config.width,\n\t\t\theight: node.config.height,\n\t\t\tgravity: node.config.gravity\n\t\t};\n\t\tif (!isUndefined(node.config.collapsed)) state.collapsed = node.config.collapsed;\n\t\tif (node.name === \"tabs\" || node.name === \"tabbar\") state.activeCell = node.getValue();\n\t\t\n\t\tif (children) {\n\t\t\tstate = [state];\n\t\t\tif (node._cells) {\n\t\t\t\tfor (var i = 0; i < node._cells.length; i++)\n\t\t\t\t\tstate = state.concat(this.getState(node._cells[i], children));\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tsetState:function(states) {\n\t\tif (!isArray(states)) states = [states];\n\t\n\t\tfor (var i = 0; i < states.length; i++) {\n\t\t\tvar state = states[i];\n\t\t\tvar node = $$(state.id);\n\t\t\tif (!node) continue;\n\t\n\t\t\tif (!isUndefined(state.collapsed)) node.define(\"collapsed\", state.collapsed);\n\t\t\tif (!isUndefined(state.activeCell)) node.setValue(state.activeCell, \"auto\");\n\t\n\t\t\tnode.define(\"width\", state.width);\n\t\t\tnode.define(\"height\", state.height);\n\t\t\tnode.define(\"gravity\", state.gravity);\n\t\t}\n\t\tvar top = $$(states[0].id);\n\t\tif (top) top.resize();\n\t}\n};\n\nready(function() {\n\tUIManager._enable();\n\n\tUIManager.addHotKey(\"enter\", function(view, ev){\n\t\tif (UIManager._composition)\n\t\t\treturn false;\n\t\tif (view && view.callEvent)\n\t\t\tview.callEvent(\"onEnter\", [ev]);\n\t\tif (view && view.editStop && view._in_edit_mode){\n\t\t\tview.editStop();\n\t\t\treturn true;\n\t\t} else if (view && view.touchable){\n\t\t\tconst form = view.getFormView();\n\t\t\tif (form && !view._skipSubmit)\n\t\t\t\tform.callEvent(\"onSubmit\",[view,ev]);\n\t\t}\n\t});\n\tUIManager.addHotKey(\"esc\", function(view, ev){\n\t\tif (view){\n\t\t\tif (view.editCancel && view._in_edit_mode){\n\t\t\t\tview.editCancel();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst top = view.getTopParentView();\n\t\t\tif (top && top.setPosition){\n\t\t\t\tif (fullscreen._fullscreen == top)\n\t\t\t\t\tfullscreen.exit();\n\t\t\t\tif (top._editorMaster){\n\t\t\t\t\tconst master = $$(top._editorMaster);\n\t\t\t\t\tif (master.editCancel && master._in_edit_mode)\n\t\t\t\t\t\tmaster.editCancel();\n\t\t\t\t}\n\t\t\t\ttop._hide(ev);\n\t\t\t}\n\t\t}\n\t});\n\tUIManager.addHotKey(\"shift+tab\", UIManager._tab_logic);\n\tUIManager.addHotKey(\"tab\", UIManager._tab_logic);\n});\n\ndefine(\"UIManager\", UIManager);\n\nexport default UIManager;","import {extend, clone} from \"../webix/helpers\";\n\nimport {$$} from \"../ui/core\";\n\nimport CollectionBind from \"./collectionbind\";\nimport ValueBind from \"./valuebind\";\nimport RecordBind from \"./recordbind\";\n\nconst BindSource = {\n\t$init:function(){\n\t\tthis._bind_hash = {};\t\t//rules per target\n\t\tthis._bind_updated = {};\t//update flags\n\t\tthis._ignore_binds = {};\n\t\t\n\t\t//apply specific bind extension\n\t\tthis._bind_specific_rules(this);\n\t},\n\tsaveBatch:function(code){\n\t\tthis._do_not_update_binds = true;\n\t\tcode.call(this);\n\t\tthis._do_not_update_binds = false;\n\t\tthis._update_binds();\n\t},\n\tsetBindData:function(data, key){\n\t\t//save called, updating master data\n\t\tif (key)\n\t\t\tthis._ignore_binds[key] = true;\n\n\t\tif (this.setValue)\n\t\t\tthis.setValue(data, \"auto\");\n\t\telse if (this.setValues)\n\t\t\tthis.setValues(data, false, \"auto\");\n\t\telse {\n\t\t\tvar id = this.getCursor();\n\t\t\tif (id)\n\t\t\t\tthis.updateItem(id, data);\n\t\t\telse\n\t\t\t\tthis.add(data);\n\t\t}\n\t\tthis.callEvent(\"onBindUpdate\", [data, key]);\t\t\n\t\tif (this.save)\n\t\t\tthis.save();\n\t\t\n\t\tif (key)\n\t\t\tthis._ignore_binds[key] = false;\n\t},\n\t//fill target with data\n\tgetBindData:function(key, update){\n\t\t//fire only if we have data updates from the last time\n\t\tif (this._bind_updated[key]) return false;\n\t\tvar target = $$(key);\n\t\t//fill target only when it visible\n\t\tif (target.isVisible(target._settings.id)){\n\t\t\tthis._bind_updated[key] = true;\n\t\t\tthis._bind_update(target, this._bind_hash[key][0], this._bind_hash[key][1]); //trigger component specific updating logic\n\t\t\tif (update && target.filter)\n\t\t\t\ttarget.refresh();\n\t\t}\n\t},\n\t//add one more bind target\n\taddBind:function(source, rule, format){\n\t\tthis._bind_hash[source] = [rule, format];\n\t},\n\tremoveBind:function(source){\n\t\tdelete this._bind_hash[source];\n\t\tdelete this._bind_updated[source];\n\t\tdelete this._ignore_binds[source];\n\t},\n\t//returns true if object belong to \"collection\" type\n\t_bind_specific_rules:function(obj){\n\t\tif (obj.filter)\n\t\t\textend(this, CollectionBind);\n\t\telse if (obj.setValue)\n\t\t\textend(this, ValueBind);\n\t\telse\n\t\t\textend(this, RecordBind);\n\t},\n\t//inform all binded objects, that source data was updated\n\t_update_binds:function(){\n\t\tif (!this._do_not_update_binds)\n\t\t\tfor (var key in this._bind_hash){\n\t\t\t\tif (this._ignore_binds[key]) continue;\n\t\t\t\tthis._bind_updated[key] = false;\n\t\t\t\tthis.getBindData(key, true);\n\t\t\t}\n\t},\n\t//copy data from source to the target\n\t_bind_update_common:function(target, rule, data){\n\t\tif (target.setValue)\n\t\t\ttarget.setValue((data&&rule)?data[rule]:data,\"auto\");\n\t\telse if (!target.filter){\n\t\t\tif (!data && target.clear)\n\t\t\t\ttarget.clear(\"auto\");\n\t\t\telse {\n\t\t\t\tif (target._check_data_feed(data))\n\t\t\t\t\ttarget.setValues(clone(data), false, \"auto\");\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.data.silent(function(){\n\t\t\t\tthis.filter(rule,data);\n\t\t\t});\n\t\t}\n\t\ttarget.callEvent(\"onBindApply\", [data,rule,this]);\n\t}\n};\n\nexport default BindSource;","import {assert} from \"../webix/debug\";\nimport {debug_size_box} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {create, createCss, remove, addCss, removeCss, triggerEvent, preventEvent} from \"../webix/html\";\nimport {toNode, extend} from \"../webix/helpers\";\nimport env from \"../webix/env\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\nimport {_uid, _each} from \"../ui/helpers\";\n\nimport state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\n\nimport Settings from \"../core/settings\";\nimport Destruction from \"../core/destruction\";\nimport BaseBind from \"../core/basebind\";\n\nconst UIExtension = window.webix_view||{};\n\nconst api = {\n\tname:\"baseview\",\n\t//attribute , which will be used for ID storing\n\t$init:function(config){\n\t\tif (!config.id) \n\t\t\tconfig.id = _uid(this.name);\n\t\t\n\t\tthis._parent_cell = state._parent_cell;\n\t\tstate._parent_cell = null;\n\n\t\t// if scope not provided directly, and there is no parent view\n\t\t// check if we have a global scope\n\t\tthis.$scope = config.$scope || (this._parent_cell ? this._parent_cell.$scope : state._global_scope);\n\t\t\n\t\tif (!this._viewobj){\n\t\t\tthis._contentobj = this._viewobj = create(\"DIV\",{\n\t\t\t\t\"class\":\"webix_view\"\n\t\t\t});\n\t\t\tthis.$view = this._viewobj;\n\t\t}\n\t},\n\t$skin:false,\n\tdefaults:{\n\t\twidth:0,\n\t\theight:0,\n\t\tgravity:1\n\t},\n\tgetNode:function(){\n\t\treturn this._viewobj;\n\t},\n\t// needed only to maintain the deprecated ActiveContent module\n\t// do not use it anywhere else\n\t$setNode:function(node){\n\t\tthis._viewobj = this._dataobj = this.$view = node;\n\t},\n\tgetParentView:function(){\n\t\treturn this._parent_cell||null;\t\n\t},\n\tgetTopParentView:function(){\n\t\tvar parent = this.getParentView();\n\t\treturn parent ? parent.getTopParentView() :  this;\n\t},\n\tgetFormView:function(){\n\t\tvar parent = this.getParentView();\n\t\treturn (!parent || parent._recollect_elements) ? parent : parent.getFormView();\n\t},\n\tgetChildViews:function(){ return []; },\n\tqueryView:function(search, all){\n\t\tlet confirm;\n\t\tif (typeof search === \"string\")\n\t\t\tsearch = { view:search };\n\t\tif (typeof search === \"object\")\n\t\t\tconfirm = test => {\n\t\t\t\tconst config = test.config;\n\n\t\t\t\tfor (let key in search){\n\t\t\t\t\tif (config[key] != search[key])\n\t\t\t\t\t\treturn false; \n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\t\telse\n\t\t\tconfirm = search;\n\n\t\tif (all === \"self\" && confirm(this)) return this;\n\t\tconst results = all === \"all\" ? [] : false;\n\t\tconst direction = all === \"parent\" ? this._queryGoUp : this._queryGoDown;\n\n\t\tconst found = this._queryView(confirm, direction, results);\n\t\treturn all === \"all\" ? results : found;\n\t},\n\t_queryGoDown:function(node){\n\t\treturn node.getChildViews();\n\t},\n\t_queryGoUp:function(node){\n\t\tvar parent = node.getParentView();\n\t\treturn parent ? [parent] : [];\n\t},\n\t_queryView:function(confirm, next, all){\n\t\tvar kids = next(this);\n\t\tfor (var i =0; i<kids.length; i++){\n\t\t\tif (confirm(kids[i])){\n\t\t\t\tif (all)\n\t\t\t\t\tall.push(kids[i]);\n\t\t\t\telse\n\t\t\t\t\treturn kids[i];\n\t\t\t}\n\n\t\t\tvar sub = kids[i]._queryView(confirm, next, all);\n\t\t\tif (sub && !all){\n\t\t\t\treturn sub;\n\t\t\t} \n\t\t}\n\t\treturn null;\n\t},\n\tisVisible:function(base_id){\n\t\tif (this._settings.hidden){\n\t\t\tif(base_id){\n\t\t\t\tif (!this._hidden_render) {\n\t\t\t\t\tthis._hidden_render = [];\n\t\t\t\t\tthis._hidden_hash = {};\n\t\t\t\t}\n\t\t\t\tif (!this._hidden_hash[base_id]){\n\t\t\t\t\tthis._hidden_hash[base_id] =  true;\n\t\t\t\t\tthis._hidden_render.push(base_id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar parent = this.getParentView();\n\t\tif (parent) return parent.isVisible(base_id, this._settings.id);\n\t\t\n\t\treturn true;\n\t},\n\tisEnabled:function(){\n\t\tif(this._disable_cover)\n\t\t\treturn false;\n\n\t\tvar parent= this.getParentView();\n\t\tif(parent)\n\t\t\treturn parent.isEnabled();\n\n\t\treturn true;\n\t},\n\t_fix_cover:function(){\n\t\tif (this._disable_cover && !this._disable_cover.parentNode)\n\t\t\tthis._viewobj.appendChild(this._disable_cover);\n\t},\n\tdisable:function(){\n\t\tremove(this._disable_cover);\n\t\tthis._settings.disabled = true;\n\t\tconst container = this._viewobj;\n\n\t\tthis._disable_cover = create(\"div\",{\n\t\t\t\"class\":\"webix_disabled\",\n\t\t\t\"style\":`left:${container.scrollLeft}px; top:${container.scrollTop}px;`\n\t\t});\n\n\t\tcontainer.appendChild(this._disable_cover);\n\t\tcontainer.setAttribute(\"aria-disabled\", \"true\");\n\t\taddCss(container,\"webix_disabled_view\",true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\tenable:function(){\n\t\tthis._settings.disabled = false;\n\n\t\tif (this._disable_cover){\n\t\t\tremove(this._disable_cover);\n\t\t\tremoveCss(this._viewobj,\"webix_disabled_view\");\n\t\t\tthis._viewobj.removeAttribute(\"aria-disabled\");\n\t\t\tthis._disable_cover = null;\n\t\t}\n\t},\n\tdisabled_setter:function(value){\n\t\tif (value)\n\t\t\tthis.disable();\n\t\telse\n\t\t\tthis.enable();\n\t\treturn value;\n\t},\n\tcontainer_setter:function(value){\n\t\tassert(toNode(value),\"Invalid container\");\n\t\treturn true;\n\t},\n\tcss_setter:function(value){\n\t\tif (typeof value == \"object\")\n\t\t\tvalue = createCss(value);\n\n\t\tthis._viewobj.className += \" \"+value;\n\t\treturn value;\n\t},\n\tid_setter:function(value){\n\t\tif (state._global_collection && (state._global_collection != this || this._prev_global_col)){\n\t\t\tvar oldvalue = this.config.$id = value;\n\t\t\t(this._prev_global_col || state._global_collection)._elements[value] = this;\n\t\t\tvalue = _uid(this.name);\n\t\t\t(this._prev_global_col || state._global_collection)._translate_ids[value]=oldvalue;\n\t\t}\n\t\tassert(!ui.views[value], \"Non unique view id: \"+value);\n\t\tui.views[value] = this;\n\t\tthis._viewobj.setAttribute(/*@attr*/\"view_id\", value);\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\t\tvar last = this._last_size;\n\t\tif (last && last[0]==x && last[1]==y) {\n\t\t\tif (DEBUG) debug_size_box(this, [x,y,\"not changed\"]);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (DEBUG) debug_size_box(this, [x,y]);\n\t\t\n\t\tthis._last_size = [x,y];\n\t\tthis.$width  = this._content_width = x-(this._scroll_y?env.scrollSize:0);\n\t\tthis.$height = this._content_height = y-(this._scroll_x?env.scrollSize:0);\n\n\t\tvar config = this._settings;\n\t\tif (!config.flex){\n\t\t\tthis._viewobj.style.width = x+\"px\";\n\t\t\tthis._viewobj.style.height = y+\"px\";\n\t\t}\n\n\t\treturn true;\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar s = this._settings;\n\n\t\tvar size = [\n\t\t\t(s.width || s.minWidth || 0)*1,\n\t\t\t(s.width || s.maxWidth || 100000)*1,\n\t\t\t(s.height || s.minHeight || 0)*1,\n\t\t\t(s.height || s.maxHeight || 100000)*1,\n\t\t\ts.gravity\n\t\t];\n\n\t\tif (assert){\n\t\t\tvar check = (isNaN(size[0]) || isNaN(size[1]) || isNaN(size[2]) || isNaN(size[3]));\n\t\t\tif (check){\n\t\t\t\tassert(false, \"Size is not a number \"+this._settings.id);\n\t\t\t\ts.width = s.height = s.maxWidth = s.maxHeight = s.minWidth = s.minHeight = 0;\n\t\t\t\tsize = [0,0,100000,100000,1];\n\t\t\t}\n\t\t}\n\n\t\tsize[0]+=dx; size[1]+=dx;\n\t\tsize[2]+=dy; size[3]+=dy;\n\t\treturn size;\n\t},\n\tshow:function(force, animate_settings){\n\t\tvar parent = this.getParentView();\n\t\tvar show = !arguments[2];\n\t\tif (parent) {\n\t\t\tif(!animate_settings && animate_settings !== false && this._settings.animate)\n\t\t\t\tif (parent._settings.animate)\n\t\t\t\t\tanimate_settings = extend((parent._settings.animate?extend({},parent._settings.animate):{}), this._settings.animate, true);\n\n\t\t\tif (show?parent._show:parent._hide)\n\t\t\t\t(show?parent._show:parent._hide).call(parent, this, animate_settings);\n\t\t\tif (show)\n\t\t\t\tthis._render_hidden_views();\n\n\t\t\t//force show of parent view\n\t\t\t//stop further processing is view is a part of isolated scope\n\t\t\tif (force && show)  \n\t\t\t\tparent.show(parent.$$?false:force);\n\t\t}\n\t\telse{\n\t\t\tif (this._settings.hidden){\n\t\t\t\tif (show){\n\t\t\t\t\tvar node = toNode(this._settings._container||document.body);\n\t\t\t\t\tnode.appendChild(this._viewobj);\n\t\t\t\t\tthis._settings.hidden = false;\n\n\t\t\t\t\tthis.adjust();\n\n\t\t\t\t\tif (this.callEvent){\n\t\t\t\t\t\tthis.callEvent(\"onViewShow\", []);\n\n\t\t\t\t\t\tif (this._signal_hidden_cells)\n\t\t\t\t\t\t\t_each(this, this._signal_hidden_cells);\n\t\t\t\t\t}\n\t\t\t\t\tthis._render_hidden_views();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!show){\n\t\t\t\t\tthis._settings.hidden = this._settings._hidden = true;\n\t\t\t\t\tif (this._viewobj){\n\t\t\t\t\t\tthis._settings._container = this._viewobj.parentNode;\n\t\t\t\t\t\tremove(this._viewobj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_render_hidden_views:function(){\n\t\tif (this._hidden_render){\n\t\t\tfor (var i=0; i < this._hidden_render.length; i++){\n\t\t\t\tvar ui_to_render = $$(this._hidden_render[i]);\n\t\t\t\tif (ui_to_render)\n\t\t\t\t\tui_to_render.render();\n\t\t\t}\n\t\t\tthis._hidden_render = [];\n\t\t\tthis._hidden_hash = {};\n\t\t}\n\t},\n\t_onKeyPress:function(code, e){\n\t\tconst target = e.target, role = target.getAttribute(\"role\");\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"tab\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\thidden_setter:function(value){\n\t\tif (value) this.hide();\n\t\treturn this._settings.hidden;\n\t},\n\thide:function(){\n\t\tthis.show(null, null, true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\tadjust:function(){\n\t\tif(!this._viewobj.parentNode)\n\t\t\treturn false;\n\n\t\tvar x = this._viewobj.parentNode.clientWidth||0;\n\t\tvar y = this._viewobj.parentNode.clientHeight||0;\n\n\t\tvar sizes=this.$getSize(0,0);\n\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\n\t\t//minWidth\n\t\tif (sizes[0]>x) x = sizes[0];\n\t\t//minHeight\n\t\tif (sizes[2]>y) y = sizes[2];\n\n\t\t//maxWidth rule\n\t\tif ((!fullscreen || this._settings.width)  && x>sizes[1]) x = sizes[1];\n\t\t//maxHeight rule\n\t\tif ((!fullscreen || this._settings.height) && y>sizes[3]) y = sizes[3];\n\n\t\tthis.$setSize(x,y);\n\t\tif (state._responsive_exception){\n\t\t\tstate._responsive_exception = false;\n\t\t\tthis.adjust();\n\t\t}\n\t},\n\tresize:function(){\n\t\tif (state._child_sizing_active || state._freeze_resize || state._responsive_tinkery ) return;\n\n\t\tvar parent = this.getParentView();\n\t\tif (parent){\n\t\t\tif (parent.resizeChildren)\n\t\t\t\tparent.resizeChildren();\n\t\t\telse\n\t\t\t\tparent.resize();\n\t\t} else {\n\t\t\tthis.adjust();\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t}\n};\n\nconst view = protoUI(api, Settings, Destruction, BaseBind, UIExtension);\nexport default { api, view };","import {pos as getPos} from \"../webix/html\";\nimport {delay, extend, isUndefined} from \"../webix/helpers\";\nimport TooltipControl from \"../core/tooltipcontrol\";\n\n//indirect UI import\nimport \"../views/tooltip\";\n\n/*\n\tBehavior: AutoTooltip - links tooltip to data driven item\n*/\n\nconst AutoTooltip = {\n\ttooltip_setter:function(value){\n\t\tif (value){\n\t\t\tif (typeof value === \"function\" || typeof value === \"string\")\n\t\t\t\tvalue = { template:value };\n\t\t\tif (typeof value !== \"object\")\n\t\t\t\tvalue = {};\n\n\t\t\tif (value.overflow && isUndefined(value.template))\n\t\t\t\tvalue.template = \"\";\n\n\t\t\tthis._init_tooltip_once();\n\t\t\treturn value;\n\t\t} else if (this._settings.tooltip)\n\t\t\treturn { template:\"\" };\n\t},\n\t_init_tooltip_once:function(){\n\t\tTooltipControl.addTooltip(this);\n\t\tthis.attachEvent(\"onDestruct\",function(){\n\t\t\tTooltipControl.removeTooltip(this);\n\t\t});\n\t\tthis.attachEvent(\"onAfterScroll\", function(){\n\t\t\tif (TooltipControl._tooltip_exist)\n\t\t\t\tTooltipControl._hide_tooltip();\n\t\t});\n\n\t\tthis._init_tooltip_once = function(){};\n\t},\n\t$tooltipIn:function(t){\n\t\tlet tooltip = TooltipControl._tooltip;\n\t\tlet def = extend({dx:20, dy:0, template:\"{obj.value}\", css:\"\"}, this._settings.tooltip, true);\n\n\t\ttooltip.define( def );\n\t\treturn t;\n\t},\n\t$tooltipOut:function(){\n\t\tTooltipControl._hide_tooltip();\n\t\treturn null;\n\t},\n\t$tooltipMove:function(t,e,c){\n\t\tconst tooltip = this._settings.tooltip;\n\t\tconst overflow = !tooltip || isUndefined(tooltip.overflow) ? TooltipControl.overflow : tooltip.overflow;\n\t\tconst time = !tooltip || isUndefined(tooltip.delay) ? TooltipControl.delay : tooltip.delay;\n\t\tconst text = overflow ? c.overflow : c.first;\n\n\t\tif (time > 0)\n\t\t\tTooltipControl._hide_tooltip();\n\t\tTooltipControl._before_show_delay = delay(this._show_tooltip, this, [t, e, text], time);\n\t},\n\t_show_tooltip:function(t,e,text){\n\t\tconst data = text || this._get_tooltip_data(t,e);\n\t\tif (!data || !this.isVisible())\n\t\t\treturn;\n\t\tTooltipControl._tooltip.show(data, getPos(e));\n\t},\n\t_get_tooltip_data:function(t,e){\n\t\tif (this.locate && this.getItem){\n\t\t\tlet id = this.locate(e);\n\t\t\tif (!id) return null;\n\n\t\t\treturn this.getItem(id);\n\t\t}\n\t\treturn this._settings;\n\t}\n};\n\nexport default AutoTooltip;","import {insertBefore, remove} from \"../webix/html\";\nimport state from \"../core/state\";\nimport env from \"../webix/env\";\nimport {isArray, clone, toNode, delay} from \"../webix/helpers\";\nimport {event, eventRemove} from \"../webix/htmlevents\";\nimport Settings from \"../core/settings\";\n\n\nconst animate = function(html_element, config){\n\tvar animation = config;\n\tif (isArray(html_element)){\n\t\tfor (var i=0; i < html_element.length; i++) {\n\t\t\tif(isArray(config))\n\t\t\t\tanimation = config[i];\n\n\t\t\tif(animation.type == \"slide\"){\n\t\t\t\tif(animation.subtype == \"out\" && i===0) { // next\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(animation.subtype == \"in\" && i==1) { // current\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(animation.type == \"flip\"){\n\t\t\t\tvar animation_copy = clone(animation);\n\t\t\t\tif(i===0) { // next\n\t\t\t\t\tanimation_copy.type = \"flipback\";\n\t\t\t\t}\n\t\t\t\tif(i==1) { // current\n\t\t\t\t\tanimation_copy.callback = null;\n\t\t\t\t}\n\t\t\t\tanimate(html_element[i], animation_copy);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tanimate(html_element[i], animation);\n\t\t}\n\t\treturn;\n\t}\n\tvar node = toNode(html_element);\n\tif (node._has_animation)\n\t\tanimate.end(node, animation);\n\telse\n\t\tanimate.start(node, animation);\n};\nanimate.end = function(node, animation){\n\t//stop animation\n\tnode.style[env.transitionDuration] = \"1ms\";\n\tnode._has_animation = null;\n\t//clear animation wait order, if any\n\tif (state._wait_animate)\n\t\twindow.clearTimeout(state._wait_animate);\n\n\t//plan next animation, if any\n\tstate._wait_animate = delay(animate, this, [node,animation],10);\n};\nanimate.formLine=function(next, current, animation){\n\tvar direction = animation.direction;\n\n\t//sometimes user can initiate animation multiple times ( fast clicking )\n\t//as result animation may be called against already removed from the dom node\n\tif(current.parentNode)\n\t\tcurrent.parentNode.style.position = \"relative\";\n\t\n\tcurrent.style.position = \"absolute\";\n\tnext.style.position = \"absolute\";\n\n\t//this is initial shift of second view in animation\n\t//normally we need to have this value as 0\n\t//but FF has bug with animation initially invisible elements\n\t//so we are adjusting this value, to make 1px of second view visible\n\tvar defAniPos = env.isFF ? ( direction == \"top\" || direction == \"left\" ? -1 : 1) : 0;\n\n\tif(direction==\"top\"||direction==\"bottom\"){\n\t\tnext.style.left=\"0px\";\n\t\tnext.style.top = (animation.top || defAniPos) + (direction==\"top\"?1:-1)*current.offsetHeight+\"px\";\n\t}\n\telse{\n\t\tnext.style.top = (animation.top || 0) + \"px\";\n\t\tnext.style.left = defAniPos + (direction==\"left\"?1:-1)*current.offsetWidth+\"px\";\n\t}\n\n\t// apply 'keepViews' mode, iframe, datatable with x scroll solution\n\t//( keepViews won't work in case of \"in\" and \"out\" subtypes )\n\tif(current.parentNode == next.parentNode && animation.keepViews)\n\t\tnext.style.display = \"\";\n\telse\n\t\tinsertBefore(next, current.nextSibling, current.parentNode);\n\n\tif(animation.type == \"slide\" && animation.subtype == \"out\") {\n\t\tnext.style.left = \"0px\";\n\t\tnext.style.top = (animation.top || 0)+\"px\";\n\t\tcurrent.parentNode.removeChild(current);\n\t\tinsertBefore(current, next.nextSibling, next.parentNode);\n\t}\n\treturn [next, current];\n};\nanimate.breakLine=function(line){\n\tif(arguments[1])\n\t\tline[1].style.display = \"none\"; // 'keepViews' multiview mode\n\telse\n\t\tremove(line[1]); // 1 = current\n\tanimate.clear(line[0]);\n\tanimate.clear(line[1]);\n\tline[0].style.position=\"\";\n};\nanimate.clear=function(node){\n\tnode.style[env.transform] = \"none\";\n\tnode.style[env.transition] = \"none\";\n\tnode.style.top = node.style.left = \"\";\n};\nanimate.defaults = {\n\ttype: \"slide\",\n\tdelay: \"0\",\n\tduration: \"500\",\n\ttiming: \"ease-in-out\",\n\tx: 0,\n\ty: 0\n};\nanimate.start = function(node, animation){\n\t//getting config object by merging specified and default options\n\tif (typeof animation == \"string\")\n\t\tanimation = {type: animation};\n\n\tanimation = Settings._mergeSettings(animation,animate.defaults);\n\n\tvar settings = node._has_animation = animation;\n\tvar skew_options, scale_type;\n\n\t//jshint -W086:true\n\tswitch(settings.type == \"slide\" && settings.direction) { // getting new x, y in case it is slide with direction\n\t\tcase \"right\":\n\t\t\tsettings.x = node.offsetWidth;\n\t\t\tbreak;\n\t\tcase \"left\":\n\t\t\tsettings.x = -node.offsetWidth;\n\t\t\tbreak;\n\t\tcase \"top\":\n\t\t\tsettings.y = -node.offsetHeight;\n\t\t\tbreak;\n\t\tcase \"bottom\":\n\t\tdefault:\n\t\t\tsettings.y = settings.y||node.offsetHeight;\n\t\t\tbreak;\n\t}\n\n\tif(settings.type == \"flip\" || settings.type == \"flipback\") {\n\t\tskew_options = [0, 0];\n\t\tscale_type = \"scaleX\";\n\t\tif(settings.subtype == \"vertical\") {\n\t\t\tskew_options[0] = 20;\n\t\t\tscale_type = \"scaleY\";\n\t\t}\n\t\telse\n\t\t\tskew_options[1] = 20;\n\t\tif(settings.direction == \"right\" || settings.direction == \"bottom\") {\n\t\t\tskew_options[0] *= -1; skew_options[1] *= -1;\n\t\t}\n\t}\n\n\tvar duration = settings.duration + \"ms \" + settings.timing + \" \" + settings.delay+\"ms\";\n\tvar css_general = \"transformStyle: preserve-3d;\"; // general css rules\n\tvar css_transition = \"\";\n\tvar css_transform = \"\";\n\n\tswitch(settings.type) {\n\t\tcase \"fade\": // changes opacity to 0\n\t\t\tcss_transition = \"opacity \" + duration;\n\t\t\tcss_general = \"opacity: 0;\";\n\t\t\tbreak;\n\t\tcase \"show\": // changes opacity to 1\n\t\t\tcss_transition = \"opacity \" + duration;\n\t\t\tcss_general = \"opacity: 1;\";\n\t\t\tbreak;\n\t\tcase \"flip\":\n\t\t\tduration = (settings.duration/2) + \"ms \" + settings.timing + \" \" + settings.delay+\"ms\";\n\t\t\tcss_transform = \"skew(\"+skew_options[0]+\"deg, \"+skew_options[1]+\"deg) \"+scale_type+\"(0.00001)\";\n\t\t\tcss_transition = \"all \"+(duration);\n\t\t\tbreak;\n\t\tcase \"flipback\":\n\t\t\tsettings.delay += settings.duration/2;\n\t\t\tduration = (settings.duration/2) + \"ms \" + settings.timing + \" \" + settings.delay+\"ms\";\n\t\t\tnode.style[env.transform] = \"skew(\"+(-1*skew_options[0])+\"deg, \"+(-1*skew_options[1])+\"deg) \"+scale_type+\"(0.00001)\";\n\t\t\tnode.style.left = \"0\";\n\n\t\t\tcss_transform = \"skew(0deg, 0deg) \"+scale_type+\"(1)\";\n\t\t\tcss_transition = \"all \"+(duration);\n\t\t\tbreak;\n\t\tcase \"slide\": // moves object to specified location\n\t\t\tvar x = settings.x +\"px\";\n\t\t\tvar y = settings.y +\"px\";\n\t\t\t// translate(x, y) OR translate3d(x, y, 0)\n\t\t\tcss_transform = env.translate+\"(\"+x+\", \"+y+((env.translate==\"translate3d\")?\", 0\":\"\")+\")\";\n\t\t\tcss_transition = \"transform \" + duration;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\t//set styles only after applying transition settings\n\tdelay(function(){\n\t\tnode.style[env.transition] = css_transition;\n\t\tdelay(function(){\n\t\t\tif (css_general)\n\t\t\t\tnode.style.cssText += css_general;\n\t\t\tif (css_transform)\n\t\t\t\tnode.style[env.transform] = css_transform;\n\t\t\tvar transitionEnded = false;\n\t\t\tvar tid = event(node, env.transitionEnd, function(ev){\n\t\t\t\tnode._has_animation = null;\n\t\t\t\tif (settings.callback) settings.callback.call((settings.master||window), node,settings,ev);\n\t\t\t\ttransitionEnded = true;\n\t\t\t\teventRemove(tid);\n\t\t\t});\n\t\t\twindow.setTimeout(function(){\n\t\t\t\tif(!transitionEnded){\n\t\t\t\t\tlet master = settings.master||window;\n\t\t\t\t\tnode._has_animation = null;\n\t\t\t\t\tif (!master.$destructed && settings.callback) settings.callback.call(master, node,settings);\n\t\t\t\t\ttransitionEnded = true;\n\t\t\t\t\teventRemove(tid);\n\t\t\t\t}\n\t\t\t}, (settings.duration*1+settings.delay*1)*1.3);\n\t\t});\n\t});\n};\n\nexport default animate;","const skin = {\n\ttopLayout:\"space\",\n\t//bar in accordion\n\tbarHeight:34,\t\t\t//!!!Set the same in skin.less!!!\n\ttabbarHeight: 34,\n\tsidebarTitleHeight: 34,\n\trowHeight:24,\n\ttoolbarHeight:34,\n\tlistItemHeight:28,\t\t//list, grouplist, dataview, etc.\n\tunitHeaderHeight:20,\n\tpropertyItemHeight:24,\n\ttimelineItemHeight:50,\n\tinputHeight: 30,\n\tbuttonHeight: 30,\n\tinputPadding: 3,\n\tmenuHeight: 28,\n\tlabelTopHeight: 16,\n\tfontSize: 13,\n\n\tinputSpacing: 4,\n\tborderWidth: 1,\n\n\tsliderHandleWidth: 10,\n\tsliderPadding: 10,\n\tsliderBorder: 1,\n\tvSliderPadding:13,\n\tvSliderHeight:100,\n\tswitchHeight:20,\n\tswitchWidth:40,\n\n\t//margin - distance between cells\n\tlayoutMargin:{ space:5, wide:5, clean:0, head:4, line:-1, toolbar:4, form:4, accordion: 5  },\n\t//padding - distance inside cell between cell border and cell content\n\tlayoutPadding:{ space:5, wide:0, clean:0, head:0, line:0, toolbar:1, form:12, accordion: 0  },\n\t//space between tabs in tabbar\n\ttabMargin:3,\n\ttabOffset: 0,\n\ttabBottomOffset: 3,\n\ttabTopOffset:1,\n\n\tcustomCheckbox: true,\n\tcustomRadio: true,\n\n\tpopupPadding: 8,\n\n\tdataPadding: 10,\n\n\tcalendarWeekHeaderHeight: 24,\n\tpadding:0,\n\taccordionType: \"accordion\",\n\n\toptionHeight: 23,\n\ttimelineColor:\"#3498db\",\n\n\tbackColor:\"#ffffff\",\n\tdataBorderColor:\"#ebebeb\",\n\n\t//colorboard\n\tcolorPadding: 4\n};\n\nexport default skin;","import env from \"../webix/env\";\nimport ready from \"../webix/ready\";\n\nimport {event} from \"../webix/htmlevents\";\nimport {callEvent} from \"../webix/customevents\";\nimport {preventEvent, removeCss, addCss, addStyle} from \"../webix/html\";\n\n//late binding\nimport {$$} from \"../ui/core\";\n\nconst Touch = {\n\tconfig:{\n\t\tlongTouchDelay:700,\n\t\tscrollDelay:150,\n\t\tgravity:500,\n\t\tdeltaStep:10,\n\t\tspeed:\"0ms\",\n\t\tfinish:1000,\n\t\telastic:true\n\t},\n\tlimit:function(value){\n\t\tTouch._limited = value !== false;\t\n\t},\n\tdisable:function(){\n\t\tTouch._disabled = true;\n\t},\n\tenable:function(){\n\t\tTouch._disabled = false;\n\t},\n\t$init:function(){\n\t\tTouch.$init = function(){};\n\n\t\tevent(document.body, env.touch.down,\tTouch._touchstart, {passive:false});\n\t\tevent(document.body, env.touch.move, \tTouch._touchmove, {passive:false});\n\t\tevent(document, env.touch.up, \tTouch._touchend);\n\n\t\tevent(document.body,\"dragstart\",function(e){\n\t\t\tif(Touch._disabled || Touch._limited) return;\n\t\t\treturn preventEvent(e);\n\t\t});\n\n\t\tTouch._clear_artefacts();\n\t\tTouch._scroll = [null, null];\n\t\tTouch.$active = true;\n\t},\n\t_clear_artefacts:function(){\n\t\tTouch._start_context = Touch._current_context = Touch._prev_context = Touch._scroll_context = null;\n\t\tTouch._scroll_mode = Touch._scroll_node = Touch._scroll_stat = Touch._long_touched = null;\n\t\tTouch._delta = \t{ _x_moment:0, _y_moment:0, _time:0 };\n\n\t\tif (Touch._css_button_remove){\n\t\t\tremoveCss(Touch._css_button_remove,\"webix_touch\");\n\t\t\tTouch._css_button_remove = null;\n\t\t}\n\t\t\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = true;\n\t\tTouch._axis_x = true;\n\t\tTouch._axis_y = true;\n\t\tif (!Touch._active_transion)\n\t\t\tTouch._scroll_end();\n\t},\n\t_touchend:function(e){\n\t\tif (Touch._start_context) {\n\t\t\tif (!Touch._scroll_mode) {\n\t\t\t\tif (!Touch._long_touched && !(Touch._axis_x * Touch._axis_y)) {\n\t\t\t\t\tconst delta = Touch._get_delta(e);\n\t\t\t\t\tif (!Touch._axis_x && delta._x/(delta._y||1) > 4) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeX\");\n\t\t\t\t\t} else if (!Touch._axis_y && delta._y/(delta._x||1) > 4) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeY\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet finish = Touch.config.finish;\n\t\t\t\tconst temp = Touch._get_matrix(Touch._scroll_node);\n\t\t\t\tconst x = temp.e;\n\t\t\t\tconst y = temp.f;\n\n\t\t\t\tconst delta = Touch._get_delta(e);\n\t\t\t\tconst view = $$(Touch._scroll_node);\n\n\t\t\t\tconst gravity = (view && view.$scroll) ? view.$scroll.gravity : Touch.config.gravity;\n\t\t\t\tif (delta._time) {\n\t\t\t\t\tconst nx = x + gravity * delta._x_moment / delta._time;\n\t\t\t\t\tconst ny = y + gravity * delta._y_moment / delta._time;\n\n\t\t\t\t\tconst cnx = Touch._scroll[0] ? Touch._correct_minmax(nx, false, false, Touch._scroll_stat.dx, Touch._scroll_stat.px) : x;\n\t\t\t\t\tconst cny = Touch._scroll[1] ? Touch._correct_minmax(ny, false, false, Touch._scroll_stat.dy, Touch._scroll_stat.py) : y;\n\n\t\t\t\t\tconst size = Math.max(Math.abs(cnx - x), Math.abs(cny - y));\n\t\t\t\t\tif (size < 150)\n\t\t\t\t\t\tfinish = finish * size / 150;\n\n\t\t\t\t\tif (cnx != x || cny != y)\n\t\t\t\t\t\tfinish = Math.round(finish * Math.max((cnx - x) / (nx - x), (cny - y) / (ny - y)));\n\n\t\t\t\t\tconst result = {e: cnx, f: cny};\n\t\t\t\t\tif (view && view.adjustScroll)\n\t\t\t\t\t\tview.adjustScroll(result);\n\n\t\t\t\t\tfinish = Math.min(Touch.config.finish, Math.max(100, finish));\n\t\t\t\t\tif (x != result.e || y != result.f) {\n\t\t\t\t\t\tTouch._set_matrix(Touch._scroll_node, result.e, result.f, finish + \"ms\");\n\t\t\t\t\t\tif (Touch._scroll_master)\n\t\t\t\t\t\t\tTouch._scroll_master._sync_scroll(result.e, result.f, finish + \"ms\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTouch._scroll_end();\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tTouch._scroll_end();\n\t\t\t}\n\t\t\tTouch._translate_event(\"onTouchEnd\");\n\t\t\tTouch._clear_artefacts();\n\t\t}\n\t},\n\t_touchmove:function(e){\n\t\tif (!Touch._scroll_context || !Touch._start_context) return;\n\n\t\tvar\tdelta = Touch._get_delta(e);\n\t\tTouch._translate_event(\"onTouchMove\");\n\n\t\tif (Touch._scroll_mode){\n\t\t\tTouch._set_scroll_pos();\n\t\t} else {\n\t\t\tTouch._axis_x = Touch._axis_check(delta._x, \"x\", Touch._axis_x);\n\t\t\tTouch._axis_y = Touch._axis_check(delta._y, \"y\", Touch._axis_y);\n\t\t\tif (Touch._scroll_mode){\n\t\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\t\tif (view){\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tview.callEvent(\"onBeforeScroll\",[data]);\n\t\t\t\t\tif (data.update){\n\t\t\t\t\t\tTouch.config.speed = data.speed;\n\t\t\t\t\t\tTouch.config.scale = data.scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tTouch._init_scroller(); //apply scrolling\n\t\t\t} else {\n\t\t\t\tconst state = Touch._is_scroll();\n\t\t\t\tconst view = $$(state && state[0]);\t\t// support subviews\n\t\t\t\tif (view && view.$hasYScroll && view.$hasYScroll() && e.cancelable){\n\t\t\t\t\treturn preventEvent(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_mode && e.cancelable)\n\t\t\treturn preventEvent(e);\n\t},\n\t_set_scroll_pos:function(){\n\t\tif (!Touch._scroll_node) return;\n\t\tvar temp = Touch._get_matrix(Touch._scroll_node);\n\t\tvar prev = Touch._prev_context || Touch._start_context;\n\n\t\tvar view = $$(Touch._scroll_node);\n\t\tvar elastic = (view && view.$scroll) ? view.$scroll.elastic : Touch.config.elastic;\n\n\t\tif (Touch._scroll[0])\n\t\t\ttemp.e = Touch._correct_minmax( temp.e - prev.x + Touch._current_context.x , elastic, temp.e, Touch._scroll_stat.dx, Touch._scroll_stat.px);\n\t\tif (Touch._scroll[1])\n\t\t\ttemp.f = Touch._correct_minmax( temp.f - prev.y + Touch._current_context.y , elastic, temp.f, Touch._scroll_stat.dy, Touch._scroll_stat.py);\n\n\t\tTouch._set_matrix(Touch._scroll_node, temp.e, temp.f, \"0ms\");\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_scroll(temp.e, temp.f, \"0ms\");\n\t},\n\tscrollTo:function(node, x, y, speed){\n\t\tTouch._set_matrix(node,x,y,speed);\n\t},\n\t_set_matrix:function(node, xv, yv, speed){\n\t\tif (!speed){\n\t\t\tnode.style[env.transform] = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tTouch._active_transion = true;\n\t\tif (node){\n\t\t\tvar trans = Touch.config.translate || env.translate;\n\t\t\tnode.style[env.transform] = trans+\"(\"+Math.round(xv)+\"px, \"+Math.round(yv)+\"px\"+((trans==\"translate3d\")?\", 0\":\"\")+\")\";\n\t\t\tnode.style[env.transitionDuration] = speed;\n\t\t}\n\t},\n\t_get_matrix:function(node){\n\t\tvar matrix = window.getComputedStyle(node)[env.transform];\n\t\tvar tmatrix;\n\n\t\tif (matrix == \"none\")\n\t\t\ttmatrix = {e:0, f:0};\n\t\telse {\n\t\t\tif(window.WebKitCSSMatrix)\n\t\t\t\t/* global WebKitCSSMatrix */\n\t\t\t\ttmatrix = new WebKitCSSMatrix(matrix);\n\t\t\telse {\n\t\t\t\t// matrix(1, 0, 0, 1, 0, 0) --> 1, 0, 0, 1, 0, 0\n\t\t\t\tvar _tmatrix = matrix.replace(/(matrix\\()(.*)(\\))/gi, \"$2\");\n\t\t\t\t// 1, 0, 0, 1, 0, 0 --> 1,0,0,1,0,0\n\t\t\t\t_tmatrix = _tmatrix.replace(/\\s/gi, \"\");\n\t\t\t\t_tmatrix = _tmatrix.split(\",\");\n\n\t\t\t\ttmatrix = {};\n\t\t\t\tvar tkey = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\t\t\t\tfor(var i=0; i<tkey.length; i++){\n\t\t\t\t\ttmatrix[tkey[i]] = parseInt(_tmatrix[i], 10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_pos(tmatrix);\n\n\t\treturn tmatrix;\n\t},\t\n\t_correct_minmax:function(value, allow, current, dx, px){\n\t\tif (value === current) return value;\n\n\t\tif (px > dx) return 0;\n\n\t\tconst delta = Math.abs(value-current);\n\t\tconst sign = delta/(value-current);\n\t\tif (value > 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : 0;\n\n\t\tconst max = dx - px;\n\t\tif (max + value < 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : -max;\n\n\t\treturn value;\n\t},\t\n\t_init_scroll_node:function(node){\n\t\tif (!node.scroll_enabled){\n\t\t\tnode.scroll_enabled = true;\n\t\t\tnode.parentNode.style.position = \"relative\";\n\t\t\tnode.style.cssText += \"transition:transform; user-select:none; transform-style:flat;\";\n\t\t\tnode.addEventListener(env.transitionEnd, function(e){\n\t\t\t\tif (e.target === this) Touch._scroll_end.call(this);\n\t\t\t}, false);\n\t\t}\n\t},\n\t_init_scroller:function(){\n\t\tif (Touch._scroll_mode.indexOf(\"x\") !== -1) Touch._scroll[0] = true;\n\t\tif (Touch._scroll_mode.indexOf(\"y\") !== -1) Touch._scroll[1] = true;\n\n\t\tif (Touch._scroll[0] || Touch._scroll[1])\n\t\t\tTouch._scroll[2] = Touch._scroll_node;\n\n\t\tTouch._init_scroll_node(Touch._scroll_node);\n\t},\n\t_axis_check:function(value, mode, old){\n\t\tif (value > Touch.config.deltaStep){\n\t\t\tif (Touch._was_not_moved){\n\t\t\t\tTouch._long_move(mode);\n\t\t\t\tTouch._locate(mode);\n\t\t\t\tif ((Touch._scroll_mode||\"\").indexOf(mode) == -1) Touch._scroll_mode = \"\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn old;\n\t},\n\t_scroll_end:function(){\n\t\t//sending event to the owner of the scroll only\n\t\tvar result,state,view;\n\t\tview = $$(Touch._scroll_node||this);\n\t\tif (view){\n\t\t\tif (Touch._scroll_node)\n\t\t\t\tresult = Touch._get_matrix(Touch._scroll_node);\n\t\t\telse if(view.getScrollState){\n\t\t\t\tstate = view.getScrollState();\n\t\t\t\tresult = {e:-state.x, f:-state.y};\n\t\t\t}\n\t\t\tcallEvent(\"onAfterScroll\", [result]);\n\t\t\tif (view.callEvent)\n\t\t\t\tview.callEvent(\"onAfterScroll\",[result]);\n\t\t}\n\t\tif (!Touch._scroll_mode)\n\t\t\tTouch._scroll = [null, null];\n\t\tTouch._active_transion = false;\n\t},\n\t_long_move:function(){\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = false;\t\n\t},\t\n\t_stop_old_scroll:function(e){\n\t\tif (Touch._scroll[2]){\n\t\t\tTouch._stop_scroll(e, (Touch._scroll[0] ? \"x\" : \"y\"));\n\t\t} else\n\t\t\treturn true;\n\t},\n\t_touchstart :function(e){\n\t\tif (Touch._disabled) return;\n\n\t\tTouch._long_touched = null;\n\t\tTouch._scroll_context = Touch._start_context = env.touch.context(e);\n\n\t\tif (Touch._limited && !Touch._is_scroll())\n\t\t\tTouch._scroll_context = null;\n\n\t\tTouch._translate_event(\"onTouchStart\");\n\n\t\tif (Touch._stop_old_scroll(e))\n\t\t\tTouch._long_touch_timer = window.setTimeout(Touch._long_touch, Touch.config.longTouchDelay);\n\n\t\tconst element = $$(e);\n\t\tif (element && element.touchable && (!e.target.className || e.target.className.indexOf(\"webix_view\") !== 0)){\n\t\t\tTouch._css_button_remove = element.getNode(e);\n\t\t\taddCss(Touch._css_button_remove,\"webix_touch\");\n\t\t}\n\t},\n\t_long_touch:function(){\n\t\tif(Touch._start_context){\n\t\t\tTouch._long_touched = true;\n\t\t\tTouch._translate_event(\"onLongTouch\");\n\t\t\tcallEvent(\"onClick\", [Touch._start_context]);\n\t\t}\n\t},\n\t_stop_scroll:function(e, stop_mode){\n\t\tTouch._locate(stop_mode);\n\t\tif (Touch._scroll[2]){\n\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\tif (view)\n\t\t\t\tview.callEvent(\"onBeforeScroll\", [Touch._start_context,Touch._current_context]);\n\n\t\t\tif (!Touch._scroll_node || Touch._scroll_node.parentNode !== Touch._scroll[2].parentNode){\n\t\t\t\tTouch._clear_artefacts();\n\t\t\t\tTouch._scroll_end();\n\t\t\t\tTouch._start_context = env.touch.context(e);\n\t\t\t}\n\t\t}\n\t\tTouch._touchmove(e);\n\t},\t\n\t_get_delta:function(e){\n\t\tTouch._prev_context = Touch._current_context;\n\t\tTouch._current_context = env.touch.context(e);\n\n\t\tTouch._delta._x = Math.abs(Touch._start_context.x - Touch._current_context.x);\n\t\tTouch._delta._y = Math.abs(Touch._start_context.y - Touch._current_context.y);\n\n\t\tif (Touch._prev_context){\n\t\t\tif (Touch._current_context.time - Touch._prev_context.time < Touch.config.scrollDelay){\n\t\t\t\tTouch._delta._x_moment = Touch._delta._x_moment/1.3+Touch._current_context.x - Touch._prev_context.x;\n\t\t\t\tTouch._delta._y_moment = Touch._delta._y_moment/1.3+Touch._current_context.y - Touch._prev_context.y;\n\t\t\t} else {\n\t\t\t\tTouch._delta._y_moment = Touch._delta._x_moment = 0;\n\t\t\t}\n\t\t\tTouch._delta._time = Touch._delta._time/1.3+(Touch._current_context.time - Touch._prev_context.time);\n\t\t}\n\n\t\treturn Touch._delta;\n\t},\n\t_get_sizes:function(node){\n\t\treturn {\n\t\t\tdx:node.offsetWidth,\n\t\t\tdy:node.offsetHeight,\n\t\t\tpx:node.parentNode.offsetWidth,\n\t\t\tpy:node.parentNode.offsetHeight\n\t\t};\n\t},\n\t_is_scroll:function(locate_mode){\n\t\tvar node = Touch._start_context.target;\n\t\twhile(node && node.tagName != \"BODY\"){\n\t\t\tif (node.getAttribute){\n\t\t\t\tvar mode = node.getAttribute(\"touch_scroll\");\n\t\t\t\tif (mode && (!locate_mode || mode.indexOf(locate_mode) != -1))\n\t\t\t\t\treturn [node, mode];\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t_locate:function(locate_mode){\n\t\tvar state = Touch._is_scroll(locate_mode);\n\t\tif (state){\n\t\t\tTouch._scroll_mode = state[1];\n\t\t\tTouch._scroll_node = state[0];\n\t\t\tTouch._scroll_stat = Touch._get_sizes(state[0]);\n\t\t}\n\t\treturn state;\n\t},\n\t_translate_event:function(name){\n\t\tcallEvent(name, [Touch._start_context,Touch._current_context]);\n\t\tvar view = Touch._get_event_view(name);\n\t\tif (view)\n\t\t\tview.callEvent(name, [Touch._start_context,Touch._current_context]);\n\t},\n\t_get_event_view:function(name, active){\n\t\tvar view = $$(active ? Touch._scroll_node : Touch._start_context);\n\t\tif(!view) return null;\n\n\t\twhile (view){\n\t\t\tif (view.hasEvent && view.hasEvent(name))\n\t\t\t\treturn view;\n\t\t\tview = view.getParentView();\n\t\t}\n\n\t\treturn null;\n\t},\t\n\t_get_context:function(e){\n\t\tif (!e.touches[0]) {\n\t\t\tvar temp = Touch._current_context;\n\t\t\ttemp.time = new Date();\n\t\t\treturn temp;\n\t\t}\n\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.touches[0].pageX,\n\t\t\ty:e.touches[0].pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t},\n\t_get_context_m:function(e){\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.pageX,\n\t\t\ty:e.pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t}\n};\n\nfunction touchInit(){\n\tif (env.touch){\n\t\tTouch.$init();\n\n\t\t//not full screen mode\n\t\tif (document.body.className.indexOf(\"webix_full_screen\") === -1)\n\t\t\tTouch.limit(true);\n\n\t\tif (env.isSafari && CSS.supports(\"-webkit-overflow-scrolling: touch\"))\n\t\t\taddStyle(\".webix_view{ -webkit-overflow-scrolling:touch; } .webix_scroll_cont{ transform:translateZ(0px); }\");\n\t}\n}\n\nready(touchInit);\n\nenv.mouse = {\n\tdown: \"mousedown\",\n\tmove: \"mousemove\",\n\tup: \"mouseup\",\n\tcontext: Touch._get_context_m\n};\n\nenv.touch = env.touch && {\n\tdown: \"touchstart\",\n\tmove: \"touchmove\",\n\tup: \"touchend\",\n\tcontext: Touch._get_context\n};\n\t\n\nexport default Touch;","import {preventEvent, addCss, removeCss, pos as getPos, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport Touch from \"../core/touch\";\nimport {zIndex} from \"../ui/helpers\";\nimport {_to_array, toNode} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {attachEvent, callEvent} from \"../webix/customevents\";\n\n\n/*\n\tBehavior:DND - low-level dnd handling\n\t@export\n\t\tgetContext\n\t\taddDrop\n\t\taddDrag\n\t\t\n\tDND master can define next handlers\n\t\tonCreateDrag\n\t\tonDragIng\n\t\tonDragOut\n\t\tonDrag\n\t\tonDrop\n\tall are optional\n*/\n\nconst DragControl ={\n\t//has of known dnd masters\n\t_drag_masters : _to_array([\"dummy\"]),\n\t/*\n\t\tregister drop area\n\t\t@param node \t\t\thtml node or ID\n\t\t@param ctrl \t\t\toptions dnd master\n\t\t@param master_mode \t\ttrue if you have complex drag-area rules\n\t*/\n\taddDrop:function(node,ctrl,master_mode){\n\t\tnode = toNode(node);\n\t\tnode.webix_drop=this._getCtrl(ctrl);\n\t\tif (master_mode) node.webix_master=true;\n\t},\n\t//return index of master in collection\n\t//it done in such way to prevent dnd master duplication\n\t//probably useless, used only by addDrop and addDrag methods\n\t_getCtrl:function(ctrl){\n\t\tctrl = ctrl||DragControl;\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index<0){\n\t\t\tindex = this._drag_masters.length;\n\t\t\tthis._drag_masters.push(ctrl);\n\t\t\tif (ctrl.attachEvent)\n\t\t\t\tctrl.attachEvent(\"onDestruct\", () => DragControl.unlink(ctrl));\n\t\t}\n\t\treturn index;\n\t},\n\tunlink(ctrl){\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index > -1){\n\t\t\t// if active view was destroyed, stop dnd\n\t\t\tif (DragControl._active && DragControl._active.webix_drag == index)\n\t\t\t\tDragControl._stopDrag();\n\t\t\t// if last target was destroyed, reset it and continue dnd\n\t\t\tif (DragControl._last && DragControl._last.webix_drop == index)\n\t\t\t\tDragControl._last = null;\n\n\t\t\tthis._drag_masters[index] = null;\n\t\t}\n\t},\n\t_createTouchDrag: function(e, pointer){\n\t\tconst dragCtrl = DragControl;\n\t\tconst master = this._getActiveDragMaster();\n\t\t// for data items only\n\t\tif (master && master.$longTouchLimit){\n\t\t\tif (!dragCtrl._html && !dragCtrl.createDrag(e, pointer)) return;\n\t\t\te.longtouch_drag = true;\n\n\t\t\tconst pos = getPos(e);\n\t\t\tconst customPos = dragCtrl.$dragPos(pos, e);\n\n\t\t\tconst ctx = dragCtrl._drag_context;\n\t\t\tdragCtrl._html.style.top= pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset)+\"px\";\n\t\t\tdragCtrl._html.style.left= pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\t\t}\n\t},\n\t/*\n\t\tregister drag area\n\t\t@param node \thtml node or ID\n\t\t@param ctrl \toptions dnd master\n\t*/\n\taddDrag:function(node,ctrl){\n\t\tnode = toNode(node);\n\t\tnode.webix_drag = this._getCtrl(ctrl);\n\t\t_event(node,\"dragstart\",preventEvent);\n\t\t_event(node, env.mouse.down, e => this._preStart(e, node, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(node, env.touch.down, e => this._preStart(e, node, \"touch\"));\n\t},\n\t//logic of drag - start, we are not creating drag immediately, instead of that we hears mouse moving\n\t_preStart:function(e, node, pointer){\n\t\tif (DragControl._active){\n\t\t\t//if we have nested drag areas, use the top one and ignore the inner one\n\t\t\tif (DragControl._saved_event == e) return;\n\t\t\tDragControl._preStartFalse(e);\n\t\t\tDragControl.destroyDrag(e);\n\t\t}\n\t\tDragControl._active = node;\n\n\t\tconst evobj = env[pointer].context(e);\n\t\tDragControl._start_pos = evobj;\n\t\tDragControl._saved_event = e;\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._startDrag(e, pointer), passive);\n\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._preStartFalse);\n\n\t\t//need to run here, or will not work in IE\n\t\taddCss(document.body,\"webix_noselect\", 1);\n\t},\n\t//if mouse was released before moving - this is not a dnd, remove event handlers\n\t_preStartFalse:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._touch_animation = !e.cancelable;\n\t},\n\t//mouse was moved without button released - dnd started, update event handlers\n\t_startDrag:function(e, pointer){\n\t\tconst touch = (pointer === \"touch\");\n\n\t\t// mouse: allow dnd only on left click\n\t\tif(!touch && DragControl._saved_event.button)\n\t\t\treturn;\n\n\t\t// check touch scroll animation\n\t\tDragControl._touch_animation = !e.cancelable;\n\t\tif (touch && DragControl._touch_animation){\n\t\t\tDragControl._clean_dom_after_drag();\n\t\t\treturn DragControl.destroyDrag(e);\n\t\t}\n\n\t\t//prevent unwanted dnd\n\t\tvar pos = env[pointer].context(e);\n\t\tvar master = DragControl._getActiveDragMaster();\n\n\t\t// only long-touched elements can be dragged\n\t\tvar longTouchLimit = (touch && master && master.$longTouchLimit && !Touch._long_touched);\n\t\tif (longTouchLimit || Math.abs(pos.x-DragControl._start_pos.x)<5 && Math.abs(pos.y-DragControl._start_pos.y)<5)\n\t\t\treturn;\n\n\t\tif (!DragControl._html && !DragControl.createDrag(DragControl._saved_event, pointer))\n\t\t\treturn DragControl._clean_dom_after_drag();\n\t\tDragControl._clean_dom_after_drag(true);\n\n\t\tDragControl.sendSignal(\"start\"); //useless for now\n\n\t\tif (touch) {\n\t\t\t// important: for touch events use e.target as EventTarget\n\t\t\tDragControl._webix_drag_mm = event(e.target, env[pointer].move, e => DragControl._moveDrag(e, pointer), { passive:false });\n\t\t\tDragControl._webix_drag_mu = event(e.target, env[pointer].up, DragControl._stopDrag);\n\t\t} else {\n\t\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._moveDrag(e, pointer));\n\t\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._stopDrag);\n\t\t}\n\t\tDragControl._moveDrag(e, pointer, true);\n\t},\n\t//mouse was released while dnd is active - process target\n\t_stopDrag:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._saved_event = null;\n\n\t\tif (DragControl._last && e){\t//if some drop target was confirmed\n\t\t\tDragControl.$drop(DragControl._active, DragControl._last, e);\n\t\t\tDragControl.$dragOut(DragControl._active, DragControl._last, null, e);\n\t\t}\n\t\tDragControl.destroyDrag(e);\n\t\tDragControl.sendSignal(\"stop\");\t//useless for now\n\t},\n\t_clean_dom_after_drag:function(still_drag){\n\t\tthis._webix_drag_mm = eventRemove(this._webix_drag_mm);\n\t\tthis._webix_drag_mu = eventRemove(this._webix_drag_mu);\n\t\tif (!still_drag)\n\t\t\tremoveCss(document.body,\"webix_noselect\");\n\t},\n\t//dnd is active and mouse position was changed\n\t_moveDrag:function(e, pointer, first){\n\t\tvar dragCtrl = DragControl;\n\t\tvar pos = getPos(e);\n\n\t\t//give possibility to customize drag position\n\t\tvar customPos = dragCtrl.$dragPos(pos, e);\n\t\t//adjust drag marker position\n\t\tvar ctx = dragCtrl._drag_context;\n\t\tdragCtrl._html.style.top=pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset) +\"px\";\n\t\tdragCtrl._html.style.left=pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\n\t\t// check landing at least once\n\t\tif (first) dragCtrl._skip = false;\n\n\t\tif (dragCtrl._skip)\n\t\t\tdragCtrl._skip = false;\n\t\telse {\n\t\t\tlet evobj = e;\n\t\t\tif (pointer === \"touch\"){\n\t\t\t\tconst scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t\t\tconst context = env[pointer].context(e);\n\t\t\t\tconst target = document.elementFromPoint(context.x - scrollLeft, context.y - scrollTop);\n\t\t\t\tevobj = new Proxy(e, {\n\t\t\t\t\tget: function(obj, prop){\n\t\t\t\t\t\tif (prop === \"target\"){\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst res = obj[prop];\n\t\t\t\t\t\tif (typeof res === \"function\"){\n\t\t\t\t\t\t\treturn res.bind(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tdragCtrl._checkLand((evobj.target), evobj);\n\t\t}\n\t\t\n\t\treturn preventEvent(e);\n\t},\n\t//check if item under mouse can be used as drop landing\n\t_checkLand:function(node,e){\n\t\twhile (node && node.tagName!=\"BODY\"){\n\t\t\tif (node.webix_drop){\t//if drop area registered\n\t\t\t\tif (this._last && (this._last!=node || node.webix_master))\t//if this area with complex dnd master\n\t\t\t\t\tthis.$dragOut(this._active,this._last,node,e);\t\t\t//inform master about possible mouse-out\n\t\t\t\tif (!this._last || this._last!=node || node.webix_master){\t//if this is new are or area with complex dnd master\n\t\t\t\t\tthis._last=null;\t\t\t\t\t\t\t\t\t\t//inform master about possible mouse-in\n\t\t\t\t\tthis._landing=this.$dragIn(DragControl._active,node,e);\n\t\t\t\t\tif (this._landing)\t//landing was rejected\n\t\t\t\t\t\tthis._last=node;\n\t\t\t\t\treturn;\t\t\t\t\n\t\t\t\t} \n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode=node.parentNode;\n\t\t}\n\t\tif (this._last)\t//mouse was moved out of previous landing, and without finding new one \n\t\t\tthis._last = this._landing = this.$dragOut(this._active,this._last,null,e);\n\t},\n\t//mostly useless for now, can be used to add cross-frame dnd\n\tsendSignal:function(signal){\n\t\tDragControl.active=(signal==\"start\");\n\t\tcallEvent(\"onDragMode\", [signal]);\n\t},\n\t\n\t//return master for html area\n\tgetMaster:function(t){\n\t\treturn this._drag_masters[t.webix_drag||t.webix_drop];\n\t},\n\t//return dhd-context object\n\tgetContext:function(){\n\t\treturn this._drag_context;\n\t},\n\tgetNode:function(){\n\t\treturn this._html;\n\t},\n\t//called when dnd is initiated, must create drag representation\n\tcreateDrag:function(e, pointer){\n\t\tvar a = DragControl._active;\n\n\t\tDragControl._drag_context = {};\n\t\tvar master = this._drag_masters[a.webix_drag];\n\t\tvar drag_container;\n\n\t\t//if custom method is defined - use it\n\t\tif (master.$dragCreate){\n\t\t\tdrag_container = master.$dragCreate(a,e,pointer);\n\t\t\tif (!drag_container) return false;\n\t\t\tthis._setDragOffset(e);\n\t\t\tdrag_container.style.position = \"absolute\";\n\t\t} else {\n\t\t//overvise use default one\n\t\t\tvar text = DragControl.$drag(a,e,pointer);\n\t\t\tDragControl._setDragOffset(e);\n\n\t\t\tif (!text) return false;\n\t\t\tdrag_container = document.createElement(\"DIV\");\n\t\t\tdrag_container.innerHTML=text;\n\t\t\tdrag_container.className=\"webix_drag_zone\";\n\t\t\tdocument.body.appendChild(drag_container);\n\n\t\t\tvar context = DragControl._drag_context;\n\t\t\tif (context.html){\n\t\t\t\tcontext.x_offset = -Math.round(drag_container.offsetWidth  * 0.5);\n\t\t\t\tcontext.y_offset = -Math.round(drag_container.offsetHeight * 0.75);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t\tdragged item must have topmost z-index\n\t\t\tin some cases item already have z-index\n\t\t\tso we will preserve it if possible\n\t\t*/\n\t\tdrag_container.style.zIndex = Math.max(drag_container.style.zIndex,zIndex());\n\n\t\tDragControl._skipDropH = event(drag_container, env[pointer].move, DragControl._skip_mark);\n\n\t\tif (!DragControl._drag_context.from)\n\t\t\tDragControl._drag_context = {source:a, from:a};\n\t\t\n\t\tDragControl._html = drag_container;\n\t\treturn true;\n\t},\n\t//helper, prevents unwanted mouse-out events\n\t_skip_mark:function(){\n\t\tDragControl._skip = true;\n\t},\n\t//after dnd end, remove all traces and used html elements\n\tdestroyDrag:function(e){\n\t\tvar a = DragControl._active;\n\t\tvar master = this._drag_masters[a.webix_drag];\n\n\t\tif (DragControl._skipDropH)\n\t\t\tDragControl._skipDropH = eventRemove(DragControl._skipDropH);\n\t\t\n\t\tif (master && master.$dragDestroy){\n\t\t\tif(DragControl._html)\n\t\t\t\tmaster.$dragDestroy(a,DragControl._html,e);\n\t\t} else\n\t\t\tremove(DragControl._html);\n\n\t\tif (master && master._auto_scroll_delay)\n\t\t\tmaster._auto_scroll_delay = window.clearTimeout(master._auto_scroll_delay);\n\n\t\tif (DragControl._dropHTML)\n\t\t\tremove(DragControl._dropHTML);\n\n\t\tDragControl._landing=DragControl._active=DragControl._last=DragControl._html=DragControl._dropHTML=null;\n\t\tDragControl._drag_context = null;\n\t},\n\t_getActiveDragMaster: function(){\n\t\treturn DragControl._drag_masters[DragControl._active.webix_drag];\n\t},\n\ttop:0,\t //relative position of drag marker to mouse cursor\n\tleft:0,\n\t_setDragOffset:function(e){\n\t\tconst pos = DragControl._start_pos;\n\t\tconst ctx = DragControl._drag_context;\n\n\t\tif(typeof ctx.x_offset != \"undefined\" && typeof ctx.y_offset != \"undefined\")\n\t\t\treturn null;\n\n\t\tctx.x_offset = ctx.y_offset = 0;\n\t\tconst m = DragControl._getActiveDragMaster();\n\t\tif (m._getDragItemPos && m !== this){\n\t\t\tconst itemPos = m._getDragItemPos(pos,e);\n\t\t\tif (itemPos){\n\t\t\t\tctx.x_offset = itemPos.x - pos.x;\n\t\t\t\tctx.y_offset = itemPos.y - pos.y;\n\t\t\t}\n\t\t}\n\t},\n\t$dragPos:function(pos, e){\n\t\tvar m=this._drag_masters[DragControl._active.webix_drag];\n\t\tif (m.$dragPos && m!=this){\n\t\t\tm.$dragPos(pos, e, DragControl._html);\n\t\t\treturn true;\n\t\t}\n\t},\n\t//called when mouse was moved in drop area\n\t$dragIn:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragIn && m!=this) return m.$dragIn(s,t,e);\n\t\tt.className=t.className+\" webix_drop_zone\";\n\t\treturn t;\n\t},\n\t//called when mouse was moved out drop area\n\t$dragOut:function(s,t,n,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragOut && m!=this) return m.$dragOut(s,t,n,e);\n\t\tt.className=t.className.replace(\"webix_drop_zone\",\"\");\n\t\treturn null;\n\t},\n\t//called when mouse was released over drop area\n\t$drop:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tDragControl._drag_context.from = DragControl.getMaster(s);\n\t\tif (m.$drop && m!=this) return m.$drop(s,t,e);\n\t\tt.appendChild(s);\n\t},\n\t//called when dnd just started\n\t$drag:function(s,e,p){\n\t\tvar m=this._drag_masters[s.webix_drag];\n\t\tif (m.$drag && m!=this) return m.$drag(s,e,p);\n\t\treturn \"<div style='\"+s.style.cssText+\"'>\"+s.innerHTML+\"</div>\";\n\t}\t\n};\n\n//global touch-drag handler\nattachEvent(\"onLongTouch\", function(ev){\n\tconst active = DragControl._active;\n\tif(!DragControl._touch_animation && active && active.contains(ev.target))\n\t\tDragControl._createTouchDrag(ev, \"touch\");\n});\n\n\nexport default DragControl;","import {pos as getPos, offset} from \"../webix/html\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport animate from \"../webix/animate\";\nimport {$active} from \"../webix/skin\";\n\nimport state from \"../core/state\";\nimport env from \"../webix/env\";\nimport UIManager from \"../core/uimanager\";\nimport Destruction from \"../core/destruction\";\n\nimport {zIndex} from \"../ui/helpers\";\nimport {toNode, delay, clone, uid, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent, attachEvent} from \"../webix/customevents\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport Movable from \"../core/movable\";\nimport Modality from \"../core/modality\";\nimport ResizeArea from \"../core/resizearea\";\n\nimport baseview from \"./baseview\";\nimport base from \"./view\";\n\nconst api = {\n\tname:\"window\",\n\n\t$init:function(config){\n\t\tthis._viewobj.innerHTML = \"<div class='webix_win_content'><div class='webix_win_head'></div><div class='webix_win_body'></div></div>\";\n\n\t\tthis._contentobj = this._viewobj.firstChild;\n\t\tthis._headobj = this._contentobj.childNodes[0];\n\t\tthis._dataobj = this._bodyobj = this._contentobj.childNodes[1];\n\t\tthis._viewobj.className +=\" webix_window\";\n\n\t\tthis._viewobj.setAttribute(\"role\", \"dialog\");\n\t\tthis._viewobj.setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._head_cell = this._body_cell = null;\n\t\tthis._settings._inner = {top:false, left:false, right:false, bottom:false }; //set border flags\n\t\tif (!config.id) config.id = uid();\n\n\t\t_event(this._contentobj, \"click\", this._ignore_clicks, {bind:this});\n\t\t_event(this._contentobj, \"click\", function(){\n\t\t\t// brings a window to the front of other windows\n\t\t\tif(!this._settings.zIndex && this._settings.toFront){\n\t\t\t\tthis._viewobj.style.zIndex = zIndex();\n\t\t\t}\n\t\t}, {bind:this, capture:true});\n\n\t\t// hidden_setter handling\n\t\tif(config.modal)\n\t\t\tthis._modal = true;\n\t\t// head_setter handling\n\t\tif(config.headHeight)\n\t\t\tthis._settings.headHeight = config.headHeight;\n\t\tif(config.close)\n\t\t\tthis._settings.close = config.close;\n\n\t\tthis.attachEvent(\"onViewMoveEnd\", function(){\n\t\t\tif(this._settings.position)\n\t\t\t\tdelete this._settings.position;\n\t\t});\n\t},\n\t_ignore_clicks:function(e){\n\t\tconst popups = state._popups;\n\t\tlet index = popups.find(this);\n\t\tif (index == -1)\n\t\t\tindex = popups.length - 1;\n\n\t\te.click_view = index;\n\t},\n\tgetChildViews:function(){\n\t\tif (this._head_cell)\n\t\t\treturn [this._head_cell, this._body_cell];\n\t\telse\n\t\t\treturn [this._body_cell];\n\t},\n\tzIndex_setter:function(value){\n\t\tthis._viewobj.style.zIndex = value;\n\t\treturn value;\n\t},\n\t_remove:function(){ \n\t\tthis.body_setter();\n\t},\n\t_replace:function(new_view, old_view){\n\t\told_view = old_view || this._body_cell;\n\t\tconst isBody = old_view == this._body_cell;\n\n\t\told_view.destructor();\n\n\t\tif(isBody)\n\t\t\tthis._body_cell = new_view;\n\t\telse \n\t\t\tthis._head_cell = new_view;\n\n\t\t(isBody ? this._bodyobj : this._headobj).appendChild(new_view._viewobj);\n\n\t\tconst cell = new_view._viewobj.style;\n\n\t\tlet settings = { top:true, left:true, right:true, bottom:true };\n\t\tlet size = \"0px\";\n\n\t\tif(new_view.config.borderless === false){\n\t\t\tsettings = clone(this._settings._inner);\n\t\t\tsize = \"1px\";\n\t\t}\n\t\tnew_view._settings._inner = settings;\n\t\tcell.borderTopWidth = cell.borderBottomWidth = cell.borderLeftWidth = cell.borderRightWidth = size;\n\n\t\tthis.resize(true);\n\t},\n\tshow:function(node, mode, point){\n\t\tif (node === true){\n\t\t\t//recursive call from some child item\n\t\t\tif (!this._settings.hidden)\n\t\t\t\treturn;\n\t\t\tnode = null;\n\t\t}\n\n\t\tif(!this.callEvent(\"onBeforeShow\",arguments))\n\t\t\treturn false;\n\n\t\tthis._settings.hidden = false;\n\t\tthis._viewobj.style.zIndex = zIndex(this._settings.zIndex);\n\t\tif (this._settings.modal || this._modal){\n\t\t\tthis._modal_set(true);\n\t\t\tthis._modal = null; // hidden_setter handling\n\t\t}\n\n\t\tlet elPos, dx, dy;\n\t\tmode = mode || {};\n\t\tif (!mode.pos)\n\t\t\tmode.pos = this._settings.relative;\n\n\t\t//get position of source html node\n\t\t//we need to show popup which pointing to that node\n\t\tif (node){\n\t\t\t//if event was provided - get node info from it\n\t\t\tif (typeof node == \"object\" && !node.tagName){\n\t\t\t\t/*below logic is far from ideal*/\n\t\t\t\tif (node.target){\n\t\t\t\t\telPos = getPos(node);\n\t\t\t\t\tdx = 20;\n\t\t\t\t\tdy = 5;\n\t\t\t\t} else\n\t\t\t\t\telPos = node;\n\t\t\t} else {\n\t\t\t\tnode = toNode(node);\n\t\t\t\tassert(node,\"Not existing target for window:show\");\n\t\t\t\telPos = offset(node);\n\t\t\t}\n\n\t\t\t//size of body, we need to fit popup inside\n\t\t\tconst x = Math.max(window.innerWidth || 0, document.body.offsetWidth);\n\t\t\tconst y = Math.max(window.innerHeight || 0, document.body.offsetHeight);\n\n\t\t\t//size of node, near which popup will be rendered\n\t\t\tdx = dx || node.offsetWidth  || 0;\n\t\t\tdy = dy || node.offsetHeight || 0;\n\t\t\t//size of popup element\n\t\t\tconst size = this._last_size;\n\n\t\t\tlet fin_x = elPos.x;\n\t\t\tlet fin_y = elPos.y;\n\t\t\tlet point_y = 0;\n\t\t\tlet point_x = 0;\n\t\t\tlet scrollLeft = 0, scrollTop = 0;\n\t\t\tconst fit = this._settings.autofit;\n\t\t\tif (fit){\n\t\t\t\tconst nochange = (fit === \"node\");\n\t\t\t\tlet delta_x = 6, delta_y = 6, delta_point = 6;\n\t\t\t\tif (!this._settings.point)\n\t\t\t\t\tdelta_x = delta_y = delta_point = 0;\n\n\t\t\t\t//default pointer position - top \n\t\t\t\tpoint = \"top\";\n\t\t\t\tfin_y=0; fin_x = 0;\n\n\t\t\t\tscrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\t//if we want to place menu at righ, but there is no place move it to left instead\n\t\t\t\tif (x - elPos.x - dx < size[0] && mode.pos == \"right\" && !nochange)\n\t\t\t\t\tmode.pos = \"left\";\n\n\t\t\t\tif (mode.pos == \"right\"){\n\t\t\t\t\tfin_x = elPos.x+delta_x+dx; \n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"left\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x - delta_point;\n\t\t\t\t} else if (mode.pos == \"left\"){\n\t\t\t\t\tfin_x = elPos.x-delta_x-size[0]-1;\n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"right\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x + size[0]+1;\n\t\t\t\t} else  {\n\t\t\t\t\t//left border of screen\n\t\t\t\t\tif (elPos.x < scrollLeft){\n\t\t\t\t\t\tfin_x = scrollLeft;\n\t\t\t\t\t//popup exceed the right border of screen\n\t\t\t\t\t} else if (x+scrollLeft-elPos.x > size[0]){\n\t\t\t\t\t\tfin_x = elPos.x; //aligned\n\t\t\t\t\t} else{\n\t\t\t\t\t\tfin_x = x+scrollLeft-delta_x-size[0]; //not aligned\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint_x = Math.round(elPos.x+dx/2);\n\t\t\t\t\t//when we have a small popup, point need to be rendered at center of popup\n\t\t\t\t\tpoint_x = Math.min(point_x, fin_x + size[0] - delta_point*3);\n\t\t\t\t}\n\n\t\t\t\t//if height is not fixed - use default position\n\t\t\t\tscrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tif (((!size[1] || (y+scrollTop-dy-elPos.y-delta_y > size[1])) || nochange) && mode.pos != \"top\"){\n\t\t\t\t\t//bottom\t\n\t\t\t\t\tfin_y = dy+elPos.y+delta_y - (!this._settings.point ? 0: 4);\n\t\t\t\t\tif (!point_y){\n\t\t\t\t\t\tpoint = \"top\";\n\t\t\t\t\t\tpoint_y = fin_y-delta_point;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//top\n\t\t\t\t\tfin_y = elPos.y-delta_y - size[1];\n\t\t\t\t\tif (fin_y < 0){\n\t\t\t\t\t\tfin_y = 0; \n\t\t\t\t\t\t//left|right point can be used, but there is no place for top point\n\t\t\t\t\t\tif (point == \"top\") point = false;\n\t\t\t\t\t} else if (!point_y){\n\t\t\t\t\t\tpoint = \"bottom\";\n\t\t\t\t\t\tfin_y --;\n\t\t\t\t\t\tpoint_y = fin_y+size[1]+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deltax = (mode.x || 0);\n\t\t\tconst deltay = (mode.y || 0);\n\n\t\t\tconst fixed = this._checkFixedPosition();\n\t\t\tthis.$view.style.position = fixed ? \"fixed\" : \"absolute\";\n\t\t\tif (fixed){\n\t\t\t\tfin_y = fin_y - scrollTop;\n\t\t\t\tpoint_y = point_y - scrollTop;\n\t\t\t}\n\n\t\t\tthis.setPosition(fin_x+deltax, fin_y+deltay);\n\t\t\tif (this._set_point){\n\t\t\t\tif (point && this._settings.point)\n\t\t\t\t\tthis._set_point(point,point_x+deltax, point_y+deltay, fixed);\n\t\t\t\telse\n\t\t\t\t\tthis._hide_point();\n\t\t\t}\n\t\t} else\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\n\t\tthis._viewobj.style.display = \"block\";\n\t\tthis._hide_timer = 1;\n\t\tdelay(function(){ this._hide_timer = 0; }, this, [], (env.fastClick ? 100 : 400));\n\n\t\tthis._render_hidden_views();\n\n\t\tif (this.config.autofocus){\n\t\t\tthis._prev_focus = UIManager.getFocus();\n\t\t\tUIManager.setFocus(this);\n\t\t}\n\n\t\tif (-1 == state._popups.find(this))\n\t\t\tstate._popups.push(this);\n\n\t\tthis.callEvent(\"onShow\",[]);\n\t}, \n\t_hide:function(e){\n\t\t//do not hide modal windows\n\t\tif (this._settings.hidden || this._settings.modal || !this._settings.escHide || this._hide_timer) return;\n\n\t\tif(e){\n\t\t\t//do not hide submenu when clicking on menu folder\n\t\t\tif (e.showpopup && (e.showpopup == this._settings.id || (this.getTopMenu && this.getTopMenu()._settings.id == e.showpopup))) return;\n\t\t\t//do not hide popup, when starting dnd with a long touch\n\t\t\tif (env.touch && e.longtouch_drag) return;\n\t\t\t//do not hide popup, when we hide inner suggest by pressing esc\n\t\t\tif (e.hidesuggest) return;\n\t\t}\n\n\t\t//do not hide popup, when we have modal layer above the popup\n\t\tif (state._modality.length && this._viewobj.style.zIndex <= Math.max(...state._modality)) return;\n\n\t\t//ignore inside clicks and clicks in child-popups\n\n\t\tif (e){\n\t\t\tlet index = e.click_view;\n\t\t\tif (!index && index !== 0) index = -1;\n\n\t\t\tconst myindex = state._popups.find(this);\n\n\t\t\tif (myindex <= index) return;\n\t\t}\n\n\t\tthis._hide_single();\n\t},\n\thidden_setter:function(value){\n\t\tif(value) \n\t\t\tthis.hide();\n\t\telse\n\t\t\tthis.show();\n\t\treturn !!value;\n\t},\n\thide:function(){\n\t\tconst index = this._hide_single();\n\t\tthis._hide_sub_popups(index);\n\t},\n\t_hide_single:function(){\n\t\tif (this.$destructed || this._settings.hidden) return;\n\n\t\tif (this._settings.modal)\n\t\t\tthis._modal_set(false);\n\n\t\tthis._hiding_process();\n\n\t\tif (this._settings.master){\n\t\t\tconst view = $$(this._settings.master);\n\t\t\tif (view && view.touchable && view._settings.popup === this._settings.id){\n\t\t\t\tconst node = view.getInputNode() || view.getNode();\n\t\t\t\tnode.setAttribute(\"aria-expanded\", false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._settings.autofocus){\n\t\t\tconst el = document.activeElement;\n\t\t\t//as result of hotkey, we can have a activeElement set to document.body\n\t\t\tif (el && this._viewobj && (this._viewobj.contains(el) || el === document.body)){\n\t\t\t\tUIManager.setFocus(this._prev_focus);\n\t\t\t\tthis._prev_focus = null;\n\t\t\t}\n\t\t}\n\n\t\t// clear state\n\t\tconst index = state._popups.find(this);\n\t\tif (index > -1)\n\t\t\tstate._popups.removeAt(index);\n\n\t\treturn index;\n\t},\n\t_hiding_process:function(){\n\t\tif (this._settings.position == \"top\"){\n\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:-(this._content_height+20), duration: 300,\n\t\t\t\tcallback:this._hide_callback, master:this});\n\t\t} else \n\t\t\tthis._hide_callback();\n\t},\n\t//hide all child-popups\n\t_hide_sub_popups:function(index){\n\t\tif (index > -1){\n\t\t\tconst order = state._popups;\n\t\t\tfor (let i=order.length-1; i>=index; i--)\n\t\t\t\tif (order[i]._hide_point)\t//hide only popups, skip windows\n\t\t\t\t\torder[i]._hide_single();\n\t\t}\n\t},\n\tdestructor: function() {\n\t\tthis.hide();\n\t\tDestruction.destructor.apply(this, []);\n\t},\n\t_hide_callback:function(){\n\t\tif (!this.$destructed){\n\t\t\tthis._viewobj.style.display = \"none\";\n\t\t\tthis._settings.hidden = true;\n\t\t\tthis.callEvent(\"onHide\",[]);\n\t\t}\n\t},\n\tclose:function(){\n\t\tthis.destructor(); \n\t},\n\t_inner_body_set:function(value){\n\t\tif (typeof value.borderless == \"undefined\")\n\t\t\tvalue.borderless = true;\n\t},\n\tbody_setter:function(value){\n\t\tif (typeof value != \"object\")\n\t\t\tvalue = {template:value };\n\t\tthis._inner_body_set(value);\n\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\thead_setter:function(value){\n\t\tif (value === false) return value;\n\n\t\tconst height = this._settings.headHeight;\n\t\tconst text = typeof value == \"string\";\n\t\tconst config = { height, padding:0, css: \"webix_win_title\", type:\"header\", borderless:true };\n\t\tif(text){\n\t\t\tthis._viewobj.setAttribute(\"aria-label\", value);\n\t\t\tvalue = { template:value };\n\t\t}\n\t\tif(value.view == \"template\" || (!value.view && value.template)){\n\t\t\textend(value, config);\n\t\t}\n\t\tif(text && this.config.close){\n\t\t\tvalue = { padding:{ left: $active.inputHeight+2, right:2 }, cols:[\n\t\t\t\tvalue,\n\t\t\t\t{ height, view:\"icon\", icon:\"wxi-close\", click:()=>{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}}\n\t\t\t]};\n\t\t}\n\t\telse\n\t\t\textend(value, {borderless:true});\n\n\t\tstate._parent_cell = this;\n\t\tthis._head_cell = ui._view(value);\n\n\t\tconst template = this._head_cell._viewobj.querySelector(\".webix_win_title>div\");\n\t\tif(template)\n\t\t\ttemplate.style.lineHeight = height + \"px\";\n\n\t\tthis._headobj.appendChild(this._head_cell._viewobj);\n\t\treturn value;\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\tgetHead:function(){\n\t\treturn this._head_cell;\n\t},\n\tadjust:function(){ return this.resize(); },\n\tresizeChildren:function(){\n\t\tif (this._body_cell)\n\t\t\tthis.resize();\n\t},\n\tresize:function(){\n\t\tbaseview.api.adjust.call(this);\n\t\tcallEvent(\"onResize\", []);\n\t\tif (this.isVisible()){\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\t\t}\n\t},\n\t_checkFixedPosition: function() {\n\t\tif(this._settings.master) {\n\t\t\tconst top = $$(this._settings.master).getTopParentView().$view;\n\t\t\treturn top && top.style.position === \"fixed\";\n\t\t}\n\t\treturn false;\n\t},\n\t_setPosition:function(x,y){\n\t\tif ((this._settings.position || this._checkFixedPosition())){\n\t\t\tthis.$view.style.position = \"fixed\";\n\n\t\t\tconst width = this._content_width;\n\t\t\tconst height = this._content_height;\n\t\t\tif (width <= 0 || height <= 0) return;\n\n\t\t\tconst maxWidth = (window.innerWidth||document.documentElement.offsetWidth);\n\t\t\tconst maxHeight = (window.innerHeight||document.documentElement.offsetHeight);\n\t\t\tlet left = Math.round((maxWidth-width)/2);\n\t\t\tlet top = Math.round((maxHeight-height)/2);\n\n\t\t\tif (typeof this._settings.position == \"function\"){\n\t\t\t\tconst state = { \tleft:left, top:top, \n\t\t\t\t\twidth:width, height:height, \n\t\t\t\t\tmaxWidth:maxWidth, maxHeight:maxHeight };\n\t\t\t\tthis._settings.position.call(this, state);\n\t\t\t\tif (state.width != width || state.height != height){\n\t\t\t\t\tthis._settings.width = state.width;\n\t\t\t\t\tthis._settings.height = state.height;\n\t\t\t\t\tthis.$setSize(state.width, state.height);\n\t\t\t\t}\n\t\t\t\tthis.setPosition(state.left, state.top);\n\t\t\t} else {\n\t\t\t\tif (this._settings.position == \"top\"){\n\t\t\t\t\ttop = -1*height;\n\t\t\t\t}\n\t\t\t\t//popup inside a fixed win\n\t\t\t\tif(!this._settings.position){\n\t\t\t\t\tleft = this._settings.left || left;\n\t\t\t\t\ttop = this._settings.top || top;\n\t\t\t\t}\n\t\t\t\tthis.setPosition(left, top);\n\t\t\t}\n\n\t\t\tif (this._settings.position == \"top\")\n\t\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:height-((this._settings.padding||0)*2), duration: 300 ,callback:this._topPositionCallback, master:this});\n\t\t} else \n\t\t\tthis.setPosition(x,y);\n\t},\n\t_topPositionCallback:function(node){\n\t\tanimate.clear(node);\n\t\tthis._settings.top=-((this._settings.padding||0)*2);\n\t\tthis.setPosition(this._settings.left, this._settings.top);\n\t},\n\tsetPosition:function(x,y){\n\t\tthis._viewobj.style.top = y+\"px\";\n\t\tthis._viewobj.style.left = x+\"px\";\n\t\tthis._settings.left = x; this._settings.top=y;\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t//line between head and body\n\t\tif (this._settings.head)\n\t\t\tdy += 1;\n\n\t\tconst size =  this._body_cell.$getSize(0,0);\n\t\tlet headMinWidth = 0;\n\t\tif (this._head_cell){\n\t\t\tconst head_size = this._head_cell.$getSize(0,0);\n\t\t\tif (head_size[3]==head_size[2])\n\t\t\t\tthis._settings.headHeight = head_size[3];\n\t\t\tdy += this._settings.headHeight;\n\t\t\theadMinWidth = head_size[0];\n\t\t}\n\n\t\tif (this._settings.fullscreen){\n\t\t\tconst width = window.innerWidth || document.body.clientWidth;\n\t\t\tconst height = window.innerHeight || document.body.clientHeight;\n\t\t\treturn [width, width, height, height];\n\t\t}\n\n\t\t//get layout sizes\n\t\tconst self_size = base.api.$getSize.call(this, 0, 0);\n\n\t\t//use child settings if layout's one was not defined\n\t\tif (headMinWidth && size[1] > 100000)\n\t\t\tsize[0] = Math.max(headMinWidth, size[0]);\n\n\t\tself_size[1] = Math.min(self_size[1],(size[1]>=100000&&self_size[1]>=100000?Math.max(size[0], self_size[0]):size[1])+dx);\n\t\tself_size[3] = Math.min(self_size[3],(size[3]>=100000&&self_size[3]>=100000?Math.max(size[2], self_size[2]):size[3])+dy);\n\n\t\tself_size[0] = Math.min(Math.max(self_size[0],size[0] + dx), self_size[1]);\n\t\tself_size[2] = Math.min(Math.max(self_size[2],size[2] + dy), self_size[3]);\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tx = this._content_width;\n\t\ty = this._content_height;\n\t\tif (this._settings.head === false) {\n\t\t\tthis._headobj.style.display=\"none\";\n\t\t\tthis._body_cell.$setSize(x,y);\n\t\t} else { \n\t\t\tthis._head_cell.$setSize(x,this._settings.headHeight);\n\t\t\tthis._body_cell.$setSize(x,y-this._settings.headHeight);\n\t\t}\n\t},\n\t$skin:function(){\n\t\tthis.defaults.headHeight = $active.barHeight;\n\t},\n\tdefaults:{\n\t\ttop:0,\n\t\tleft:0,\n\t\tautofit:true,\n\t\trelative:\"bottom\",\n\t\tbody:\"\",\n\t\thead:\"\",\n\t\thidden: true,\n\t\tautofocus:true,\n\t\tminWidth:300,\n\t\tminHeight:200,\n\t\tescHide:true\n\t}\n};\n\n//global longtouch handler\nattachEvent(\"onLongTouch\", function(ev){\n\tif (!ev || !ev.target) return;\n\n\tlet view = $$(ev.target);\n\tif (view){\n\t\tview = view.queryView(a => !a.getParentView(), \"parent\")||view;\n\n\t\tconst popups = state._popups;\n\t\tconst index = popups.find(view);\n\t\tif (index !== -1) ev.click_view = index;\n\t}\n});\n\nconst view = protoUI(api, base.view, Movable, Modality, EventSystem, ResizeArea);\nexport default {api, view};","import i18n from \"./i18n\";\n\nconst csv = {\n\tescape:true,\n\tdelimiter:{\n\t\trows: \"\\n\",\n\t\tcols: \"\\t\"\n\t},\n\tparse:function(text, sep){\n\t\tsep = sep||this.delimiter;\n\t\tif (!this.escape)\n\t\t\treturn this._split_clip_data(text, sep);\n\n\t\tvar lines = text.replace(/\\n$/,\"\").split(sep.rows);\n\n\t\tvar i = 0;\n\t\twhile (i < lines.length - 1) {\n\t\t\tif (this._substr_count(lines[i], \"\\\"\") % 2 === 1) {\n\t\t\t\tlines[i] += sep.rows + lines[i + 1];\n\t\t\t\tdelete lines[i + 1];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tvar csv = [];\n\n\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\tif (typeof(lines[i]) !== \"undefined\") {\n\t\t\t\tvar tline = lines[i];\n\t\t\t\tvar start = 0;\n\t\t\t\tvar line = [];\n\t\t\t\tvar quoted = false;\n\t\t\t\tfor (var j=0; j<=tline.length; j++){\n\t\t\t\t\tif (!quoted && tline[j] === sep.cols || j === tline.length){\n\t\t\t\t\t\tvar chunk = tline.substr(start, j-start);\n\t\t\t\t\t\tif (chunk[0] === chunk[chunk.length-1] && chunk[0] === \"\\\"\"){\n\t\t\t\t\t\t\tchunk = chunk.substr(1, chunk.length-2).replace(\"\\\"\\\"\", \"\\\"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline.push(chunk);\n\t\t\t\t\t\tstart = j+1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tline[j] === \"\\\"\") {\n\t\t\t\t\t\tquoted = !quoted;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcsv.push(line);\n\t\t\t}\n\t\t}\n\t\treturn csv;\n\t},\n\t_split_clip_data: function(text, sep) {\n\t\tvar lines = text.split(sep.rows);\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = lines[i].split(sep.cols);\n\t\t}\n\t\treturn lines;\n\t},\n\t/*! counts how many occurances substring in string **/\n\t_substr_count: function(string, substring) {\n\t\tvar arr = string.split(substring);\n\t\treturn arr.length - 1;\n\t},\n\tstringify:function(data, sep){\n\t\tsep = sep||this.delimiter;\n\n\t\tif (!this.escape){\n\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\tdata[i] = data[i].join(sep.cols);\n\t\t\treturn data.join(sep.rows);\n\t\t}\n\n\t\tvar reg = /\\n|\"|;|,/;\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tfor (var j = 0; j < data[i].length; j++) {\n\t\t\t\tvar chunk = data[i][j];\n\t\t\t\tif (chunk instanceof Date)\n\t\t\t\t\tdata[i][j] = i18n.parseFormatStr(chunk);\n\t\t\t\telse if (reg.test(chunk))\n\t\t\t\t\tdata[i][j] = \"\\\"\" + chunk.toString().replace(/\"/g, \"\\\"\\\"\") + \"\\\"\";\n\t\t\t}\n\t\t\tdata[i] = data[i].join(sep.cols);\n\t\t}\n\t\tdata = data.join(sep.rows);\n\t\treturn data;\n\t}\n};\n\nexport default csv;","import {isArray, extend, uid} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\n\n\n/*\n\tBehavior:DataMove - allows to move and copy elements, heavily relays on DataStore.move\n\t@export\n\t\tcopy\n\t\tmove\n*/\nconst DataMove ={\n\t//creates a copy of the item\n\tcopy:function(sid,tindex,tobj, details){\n\t\tdetails = details || {};\n\t\tvar new_id = details.newId || sid;\n\t\ttobj = tobj||this;\n\n\t\tvar data = this.getItem(sid);\n\t\tassert(data,\"Incorrect ID in DataMove::copy\");\n\t\t\n\t\t//make data conversion between objects\n\t\tif (tobj)\n\t\t\tdata = tobj._externalData(data);\n\t\t\n\t\t//adds new element same as original\n\t\treturn tobj.data.add(tobj._externalData(data,new_id),tindex,(details.parent || 0));\n\t},\n\t_next_move_index:function(nid, next, source){\n\t\tif (next && nid){\n\t\t\tvar new_index = this.getIndexById(nid);\n\t\t\treturn new_index + ((source == this && source.getIndexById(next) < new_index) ? 0 : 1);\n\t\t}\n\t},\n\t//move item to the new position\n\tmove:function(sid,tindex,tobj, details){\n\t\tdetails = details || {};\n\t\tconst new_id = details.newId || sid;\n\n\t\ttobj = tobj||this;\n\t\tassert(tobj.data, \"moving attempt to component without datastore\");\n\t\tif (!tobj.data) return;\n\n\t\t//can process an arrya - it allows to use it from onDrag \n\t\tif (isArray(sid)){\n\t\t\t//block separate repaint operations\n\t\t\tif (sid.length > 3) //heuristic value, duplicated below\n\t\t\t\tthis.$blockRender = tobj.$blockRender = true;\n\n\t\t\tfor (let i=0; i<sid.length; i++) {\n\t\t\t\t//increase index for each next item in the set, so order of insertion will be equal to order in the array\n\t\t\t\tconst nid = this.move(sid[i], tindex, tobj, details);\n\t\t\t\ttindex = tobj._next_move_index(nid, sid[i+1], this);\n\t\t\t}\n\n\t\t\tthis.$blockRender = tobj.$blockRender = false;\n\t\t\tif (sid.length > 3){\n\t\t\t\t//repaint whole component\n\t\t\t\tthis.refresh();\n\t\t\t\tif (tobj != this)\n\t\t\t\t\ttobj.refresh();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tlet nid = sid; //id after moving\n\t\tconst item = this.getItem(sid);\n\t\tassert(item, \"Incorrect ID in DataMove::move\");\n\t\t\n\t\tif (!tobj || tobj == this){\n\t\t\tif (tindex < 0) tindex = this.data.order.length - 1;\n\t\t\tthis.data.move(this.getIndexById(sid),tindex);\t//move inside the same object\n\t\t\tthis.data.callEvent(\"onDataMove\", [sid, tindex, null, this.data.order[tindex+1]]);\n\t\t} else {\n\t\t\t//copy to the new object\n\t\t\tnid = tobj.data.add(tobj._externalData(item,new_id),tindex, (details.parent || 0));\n\t\t\tthis.data.remove(sid);//delete in old object\n\t\t}\n\t\treturn nid;\t//return ID of item after moving\n\t},\n\t//move item on one position up\n\tmoveUp:function(id,step){\n\t\tconst index = this.getIndexById(id)-(step||1);\n\t\treturn this.move(id,(index<0)?0:index);\n\t},\n\t//move item on one position down\n\tmoveDown:function(id,step){\n\t\treturn this.moveUp(id, (step||1)*-1);\n\t},\n\t//move item to the first position\n\tmoveTop:function(id){\n\t\treturn this.move(id,0);\n\t},\n\t//move item to the last position\n\tmoveBottom:function(id){\n\t\treturn this.move(id,this.data.count()-1);\n\t},\n\t/*\n\t\tthis is a stub for future functionality\n\t\tcurrently it just makes a copy of data object, which is enough for current situation\n\t*/\n\t_externalData:function(data,id){\n\t\tvar newdata = extend({},data);\n\t\tnewdata.id = (!id || this.data.pull[id])?uid():id;\n\t\t\n\n\t\tnewdata.$template=null;\n\n\t\tif (this._settings.externalData)\n\t\t\tnewdata = this._settings.externalData.call(this, newdata, id, data);\n\t\treturn newdata;\n\t}\n};\n\nexport default DataMove;","import {assert} from \"../webix/debug\";\nimport {copy, isUndefined, bind, isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {define} from \"../services\";\n\nimport {$$, proto} from \"../ui/core\";\n\nimport {ajax} from \"../load/ajax\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport Settings from \"../core/settings\";\nimport EventSystem from \"../core/eventsystem\";\nimport ValidateData from \"../core/validatedata\";\n\nconst _pull = {};\n\nexport function dp(name,getOnly){\n\tif (typeof name == \"object\" && name._settings)\n\t\tname = name._settings.id;\n\tif (_pull[name] || getOnly)\n\t\treturn _pull[name];\n\n\tif (typeof name == \"string\"||typeof name == \"number\")\n\t\tname = { master:$$(name) };\n\n\tvar dp = new DataProcessor(name);\n\tvar masterId = dp._settings.master._settings.id;\n\t_pull[masterId]=dp;\n\n\t$$(masterId).attachEvent(\"onDestruct\",function(){\n\t\t_pull[this._settings.id] = null;\n\t\tdelete _pull[this._settings.id];\n\t});\n\n\treturn dp;\n}\n\ndefine(\"dp\", dp);\n\ndp.$$ = function(id){\n\treturn _pull[id];\n};\n\n\nexport const DataProcessor = proto({\n\tdefaults: {\n\t\tautoupdate:true,\n\t\tupdateFromResponse:false,\n\t\tmode:\"post\",\n\t\toperationName:\"webix_operation\",\n\t\ttrackMove:false\n\t},\n\n\n\t/*! constructor\n\t **/\n\t$init: function() {\n\t\tthis.reset();\n\t\tthis._ignore = false;\n\t\tthis.name = \"DataProcessor\";\n\t\tthis.$ready.push(this._after_init_call);\n\t},\n\treset:function(){\n\t\tthis._updates = [];\n\t},\n\turl_setter:function(value){\n\t\t/*\n\t\t\twe can use simple url or mode->url\n\t\t*/\n\t\tvar mode = \"\";\n\t\tif (typeof value == \"string\"){\n\t\t\tvar parts = value.split(\"->\");\n\t\t\tif (parts.length > 1){\n\t\t\t\tvalue = parts[1];\n\t\t\t\tmode = parts[0];\n\t\t\t}\n\t\t} else if (value && value.mode){\n\t\t\tmode = value.mode;\n\t\t\tvalue = value.url;\n\t\t}\n\n\t\tif (mode)\n\t\t\treturn proxy(mode, value);\n\n\t\treturn value;\n\t},\n\tmaster_setter:function(value){\n\t\tvar store = value;\n\t\tif (value.name != \"DataStore\")\n\t\t\tstore = value.data;\n\n\t\tthis._settings.store = store;\n\t\treturn value;\n\t},\n\t_promise:function(handler){\n\t\tconst prev = this._waitSave;\n\t\tthis._waitSave = [];\n\t\t\n\t\thandler();\n\t\tconst result = Promise.all(this._waitSave);\n\n\t\tthis._waitSave = prev;\n\t\tif (prev)\n\t\t\tprev.push(result);\n\n\t\treturn result;\n\t},\n\t/*! attaching onStoreUpdated event\n\t **/\n\t_after_init_call: function(){\n\t\tconst store = this._settings.store;\n\t\tif (store){\n\t\t\tstore.attachEvent(\"onStoreUpdated\", bind(this._onStoreUpdated, this));\n\t\t\tstore.attachEvent(\"onDataMove\", bind(this._onDataMove, this));\n\t\t}\n\t},\n\tignore:function(code,master){\n\t\tvar temp = this._ignore;\n\t\tthis._ignore = true;\n\t\tcode.call((master||this));\n\t\tthis._ignore = temp;\n\t},\n\toff:function(){\n\t\tthis._ignore = true;\n\t},\n\ton:function(){\n\t\tthis._ignore = false;\n\t},\n\n\t_copy_data:function(source){\n\t\tvar obj = {};\n\t\tfor (var key in source)\t\n\t\t\tif (key.indexOf(\"$\")!==0)\n\t\t\t\tobj[key]=source[key];\n\t\treturn obj;\n\t},\n\tsave:function(id, operation, obj){\n\t\toperation = operation || \"update\";\n\t\treturn this._save_inner(id, obj, operation, true);\n\t},\n\t_save_inner:function(id, obj, operation, now){\n\t\tif (typeof id == \"object\") id = id.toString();\n\t\tif (!id || this._ignore === true || !operation || operation == \"paint\") return;\n\n\t\tvar store = this._settings.store;\n\t\tif (store){\n\t\t\tobj = obj || this._settings.store.getItem(id);\n\t\t\tif (store._scheme_serialize)\n\t\t\t\tobj = store._scheme_serialize(obj);\n\t\t}\n\n\t\tvar update = { id: id, data:this._copy_data(obj), operation:operation };\n\t\t//save parent id\n\t\tif (!isUndefined(obj.$parent)) update.data.parent = obj.$parent;\n\n\t\tif (update.operation != \"delete\"){\n\t\t\t//prevent saving of not-validated records\n\t\t\tvar master = this._settings.master;\n\t\t\tif (master && master.data && master.data.getMark && master.data.getMark(id, \"webix_invalid\"))\n\t\t\t\tupdate._invalid = true;\n\n\t\t\tif (!this.validate(null, update.data))\n\t\t\t\tupdate._invalid = true;\n\t\t}\n\n\t\tif (this._check_unique(update))\n\t\t\tthis._updates.push(update);\n\n\t\tif (this._settings.autoupdate || now)\n\t\t\treturn this._sendData(id);\n\t\t\t\n\t\treturn;\n\t},\n\t_onDataMove:function(sid, tindex, parent, targetid){\n\t\tif (this._settings.trackMove){\n\t\t\tvar obj = copy(this._settings.store.getItem(sid));\n\n\t\t\tobj.webix_move_index = tindex;\n\t\t\tobj.webix_move_id = targetid;\n\t\t\tobj.webix_move_parent = parent;\n\t\t\tthis._save_inner(sid, obj, \"order\");\n\t\t}\n\t},\n\t_onStoreUpdated: function(id, obj, operation){\n\t\tswitch (operation) {\n\t\t\tcase \"save\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"update\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\toperation = \"insert\";\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\t\toperation = \"delete\";\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t\treturn this._save_inner(id, obj, operation);\n\t},\n\t_check_unique:function(check){\n\t\tfor (var i = 0; i < this._updates.length; i++){\n\t\t\tvar one = this._updates[i];\n\t\t\tif (one.id == check.id && !one._in_progress){\n\t\t\t\tif (check.operation == \"delete\"){\n\t\t\t\t\tif (one.operation == \"insert\")\n\t\t\t\t\t\tthis._updates.splice(i,1);\n\t\t\t\t\telse \n\t\t\t\t\t\tone.operation = \"delete\";\n\t\t\t\t}\n\t\t\t\tone.data = check.data;\n\t\t\t\tone._invalid = check._invalid;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsend:function(){\n\t\treturn this._sendData();\n\t},\n\t_sendData: function(triggerId){\n\t\tif (!this._settings.url)\n\t\t\treturn;\n\n\t\tvar wait;\n\t\tvar marked = this._updates;\n\t\tvar to_send = [];\n\t\tvar url = this._settings.url;\n\n\t\tfor (let i = 0; i < marked.length; i++) {\n\t\t\tvar tosave = marked[i];\n\n\t\t\tif (tosave._in_progress) continue;\n\t\t\tif (tosave._invalid) continue;\n\n\t\t\tvar id = tosave.id;\n\t\t\t// call to .save(id) without autoupdate mode will send the specific object only\n\t\t\tif (!this._settings.autoupdate && triggerId && triggerId != id)\n\t\t\t\tcontinue;\n\n\t\t\tvar operation = tosave.operation;\n\t\t\tvar precise_url = proxy.$parse((typeof url == \"object\" && !url.$proxy) ? url[operation] : url);\n\t\t\tvar custom = precise_url && (precise_url.$proxy || typeof precise_url === \"function\");\n\n\t\t\tif (!precise_url) continue;\n\n\t\t\tconst store = this._settings.store;\n\t\t\tif (store && store._scheme_save)\n\t\t\t\tstore._scheme_save(tosave.data);\n\n\t\t\tif (!this.callEvent(\"onBefore\"+operation, [id, tosave]))\n\t\t\t\tcontinue;\n\t\t\ttosave._in_progress = true;\n\n\t\t\tif (!this.callEvent(\"onBeforeDataSend\", [tosave])) return;\n\n\t\t\ttosave.data = this._updatesData(tosave.data);\n\n\t\t\tlet result;\n\t\t\tif (precise_url.$proxy){\n\t\t\t\tif (precise_url.save){\n\t\t\t\t\t//proxy\n\t\t\t\t\tresult = precise_url.save(this.config.master, tosave, this);\n\t\t\t\t}\n\t\t\t\tto_send.push(tosave);\n\t\t\t} else {\n\t\t\t\tif (operation == \"insert\")\n\t\t\t\t\tdelete tosave.data.id;\n\t\t\t\t\n\t\t\t\tif (custom){\n\t\t\t\t\t//save function\n\t\t\t\t\tresult = precise_url.call(this.config.master, tosave.id, tosave.operation, tosave.data);\n\t\t\t\t} else {\n\t\t\t\t\t//normal url\n\t\t\t\t\ttosave.data[this._settings.operationName] = operation;\n\n\t\t\t\t\tresult = this._send(precise_url, tosave.data, this._settings.mode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, { id: tosave.id, status: tosave.operation });\n\t\t\t\tif (triggerId && id === triggerId){\n\t\t\t\t\twait = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onAfterDataSend\", [tosave]);\n\t\t}\n\n\t\tif (url.$proxy && url.saveAll && to_send.length){\n\t\t\tlet result = url.saveAll(this.config.master, to_send, this);\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, null);\n\t\t\t\tif (!wait)\n\t\t\t\t\twait = result;\n\t\t\t}\n\t\t}\n\n\t\treturn wait;\n\t},\n\t_proxy_on_save:function(result, state){\n\t\tif(result){\n\t\t\tif(!result.then)\n\t\t\t\tresult = promise.resolve(result);\n\n\t\t\tresult = result.then((data) => {\n\t\t\t\tif (data && typeof data.json == \"function\")\n\t\t\t\t\tdata = data.json();\n\n\t\t\t\tvar processed;\n\t\t\t\tif (state === null){\n\t\t\t\t\tprocessed = this._processResult(data); //array of responses\n\t\t\t\t} else {\n\t\t\t\t\tprocessed = this._processResult(state, \"\", data, -1); //text, data, loader\n\t\t\t\t}\n\n\t\t\t\tif (!processed)\n\t\t\t\t\tthrow processed; // trigger rejection\n\n\t\t\t\treturn processed;\n\t\t\t}, (x) => {\n\t\t\t\tthis._processError(state, \"\", null, x);\n\t\t\t\tthrow x;\n\t\t\t});\n\n\t\t\tif (this._waitSave)\n\t\t\t\tthis._waitSave.push(result);\n\n\t\t\treturn result;\n\t\t}\n\t},\n\n\t/*! process updates list to POST and GET params according dataprocessor protocol\n\t *\t@param updates\n\t *\t\tlist of objects { id: \"item id\", data: \"data hash\", operation: \"type of operation\"}\n\t *\t@return\n\t *\t\tobject { post: { hash of post params as name: value }, get: { hash of get params as name: value } }\n\t **/\n\n\n\n\t_updatesData:function(source){\n\t\tvar target = {};\n\t\tfor (var j in source){\n\t\t\tif (j.indexOf(\"$\")!==0)\n\t\t\t\ttarget[j] = source[j];\n\t\t}\n\t\treturn target;\n\t},\n\n\n\n\t/*! send dataprocessor query to server\n\t *\tand attach event to process result\n\t *\t@param url\n\t *\t\tserver url\n\t *\t@param get\n\t *\t\thash of get params\n\t *\t@param post\n\t *\t\thash of post params\n\t *\t@mode\n\t *\t\t'post' or 'get'\n\t **/\n\t_send: function(url, post, mode) {\n\t\tassert(url, \"url was not set for DataProcessor\");\n\t\treturn ajax()[mode](url, post);\n\t},\n\tattachProgress:function(start, end, error){\n\t\tthis.attachEvent(\"onBeforeDataSend\", start);\n\t\tthis.attachEvent(\"onAfterSync\", end);\n\t\tthis.attachEvent(\"onAfterSaveError\", error);\n\t\tthis.attachEvent(\"onLoadError\", error);\n\t},\n\t_processError:function(id, text, data, loader){\n\t\tif (id)\n\t\t\tthis._innerProcessResult(true, id.id, false, id.status, false, {text:text, data:data, loader:loader});\n\t\telse {\n\t\t\tthis.callEvent(\"onLoadError\", arguments);\n\t\t\tcallEvent(\"onLoadError\", [text, data, loader, this]);\n\t\t}\n\t},\n\t_innerProcessResult:function(error, id, newid, status, obj, details){\n\t\tvar master = this._settings.master;\n\t\tvar update = this.getItemState(id);\n\t\tupdate._in_progress = false;\n\n\n\n\t\tif (error){\n\t\t\tif (this.callEvent(\"onBeforeSaveError\", [id, status, obj, details])){\n\t\t\t\tupdate._invalid = true;\n\t\t\t\tif(this._settings.undoOnError && master._settings.undo){\n\t\t\t\t\tthis.ignore(function(){\n\t\t\t\t\t\tmaster.undo(id);\n\t\t\t\t\t});\n\t\t\t\t\tthis.setItemState(id, false);\n\t\t\t\t}\n\t\t\t\tthis.callEvent(\"onAfterSaveError\", [id, status, obj, details]);\n\t\t\t}\n\t\t\treturn;\n\t\t} else\n\t\t\tthis.setItemState(id, false);\n\n\t\tconst store = this._settings.store;\n\t\tif (store && store.exists(id)){\n\t\t\t//update from response\n\t\t\tif (newid && id != newid)\n\t\t\t\tstore.changeId(id, newid);\n\n\t\t\tif (obj && status != \"delete\" && this._settings.updateFromResponse)\n\t\t\t\tthis.ignore(function(){\t\t\t\t\n\t\t\t\t\tstore.updateItem(newid || id, obj);\n\t\t\t\t});\n\t\t}\n\t\t\t\n\n\t\t//clean undo history, for the saved record\n\t\tif(this._settings.undoOnError && master._settings.undo)\n\t\t\tmaster.removeUndo(newid||id);\n\n\t\tthis.callEvent(\"onAfterSave\",[obj, id, details]);\n\t\tthis.callEvent(\"onAfter\"+status, [obj, id, details]);\n\n\t\treturn obj || {};\n\t},\n\tprocessResult: function(state, hash, details){\n\t\t//compatibility with custom json response\n\t\tvar error = (hash && (hash.status == \"error\" || hash.status == \"invalid\"));\n\t\tvar newid = (hash ? ( hash.newid || hash.id ) : false);\n\n\t\treturn this._innerProcessResult(error, state.id, newid, state.status, hash, details);\n\t},\n\t// process saving from result\n\t_processResult: function(state, text, data, loader){\n\t\tvar finalResult;\n\t\tthis.callEvent(\"onBeforeSync\", [state, text, data, loader]);\n\n\t\tif(isArray(state)){ //saveAll results\n\t\t\tfinalResult = [];\n\t\t\tstate.forEach((one) => {\n\t\t\t\tfinalResult.push(this.processResult(one, one, {}));\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tif (loader === -1){\n\t\t\t\t//callback from promise\n\t\t\t\tfinalResult = this.processResult(state, data, {});\n\t\t\t} else {\n\t\t\t\tvar proxy = this._settings.url;\n\t\t\t\tif (proxy.$proxy && proxy.result){\n\t\t\t\t\tfinalResult = proxy.result(state, this._settings.master, this, text,  data, loader) || {};\n\t\t\t\t} else {\n\t\t\t\t\tvar hash;\n\t\t\t\t\tif (text){\n\t\t\t\t\t\thash = data.json();\n\t\t\t\t\t\t//invalid response\n\t\t\t\t\t\tif (text && (hash === null || typeof hash == \"undefined\"))\n\t\t\t\t\t\t\thash = { status:\"error\" };\n\t\t\t\t\t}\n\t\t\t\t\tfinalResult = this.processResult(state, hash,  {text:text, data:data, loader:loader});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onAfterSync\", [state, text, data, loader]);\n\t\treturn finalResult;\n\t},\n\n\n\t/*! if it's defined escape function - call it\n\t *\t@param value\n\t *\t\tvalue to escape\n\t *\t@return\n\t *\t\tescaped value\n\t **/\n\tescape: function(value) {\n\t\tif (this._settings.escape)\n\t\t\treturn this._settings.escape(value);\n\t\telse\n\t\t\treturn encodeURIComponent(value);\n\t},\n\tgetState:function(){\n\t\tif (!this._updates.length) return false;\n\t\tfor (var i = this._updates.length - 1; i >= 0; i--)\n\t\t\tif (this._updates[i]._in_progress)\n\t\t\t\treturn \"saving\";\n\n\t\treturn true;\n\t},\n\tgetItemState:function(id){\n\t\tvar index = this._get_stack_index(id);\n\t\treturn this._updates[index] || null;\n\t},\n\tsetItemState:function(id, state){\n\t\tif (state){\n\t\t\tthis._save_inner(id, null, \"update\");\n\t\t} else{\n\t\t\tvar index = this._get_stack_index(id);\n\t\t\tif (index > -1)\n\t\t\t\tthis._updates.splice(index, 1);\n\t\t}\n\t},\n\t_get_stack_index: function(id) {\n\t\tvar index = -1;\n\t\tfor (var i=0; i < this._updates.length; i++)\n\t\t\tif (this._updates[i].id == id) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\treturn index;\n\t}\n\n}, Settings, EventSystem, ValidateData);","import {extend, _to_array, uid, isUndefined, copy, isArray, bind} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\nimport i18n from \"../webix/i18n\";\n\nimport EventSystem from \"./eventsystem\";\nimport DataDriver from \"../load/drivers/index\";\n\n/*\n\tDataStore is not a behavior, it standalone object, which represents collection of data.\n\tCall provideAPI to map data API\n\n\t@export\n\t\texists\n\t\tgetIdByIndex\n\t\tgetIndexById\n\t\tget\n\t\tset\n\t\trefresh\n\t\tcount\n\t\tsort\n\t\tfilter\n\t\tnext\n\t\tprevious\n\t\tclearAll\n\t\tfirst\n\t\tlast\n*/\n\nfunction DataStore(){\n\tthis.name = \"DataStore\";\n\t\n\textend(this, EventSystem);\n\n\tthis.setDriver(\"json\");\t//default data source is an\n\tthis.pull = {};\t\t\t\t\t\t//hash of IDs\n\tthis.order = _to_array();\t\t//order of IDs\n\tthis._marks = {};\n}\n\nDataStore.prototype={\n\t//defines type of used data driver\n\t//data driver is an abstraction other different data formats - xml, json, csv, etc.\n\tsetDriver:function(type){\n\t\tassert(DataDriver[type],\"incorrect DataDriver\");\n\t\tthis.driver = DataDriver[type];\n\t},\n\t//process incoming raw data\n\t_parse:function(data){\n\t\tthis.callEvent(\"onParse\", [this.driver, data]);\n\n\t\tif (this._filter_order)\n\t\t\tthis.filter();\n\t\n\t\t//get size and position of data\n\t\tconst info = this.driver.getInfo(data);\n\n\t\tif (info.config)\n\t\t\tthis.callEvent(\"onServerConfig\",[info.config]);\n\n\t\tconst options = this.driver.getOptions(data);\n\t\tif (options)\n\t\t\tthis.callEvent(\"onServerOptions\", [options]);\n\n\t\t//get array of records\n\t\tconst recs = this.driver.getRecords(data);\n\n\t\tthis._inner_parse(info, recs);\n\n\t\t//in case of tree store we may want to group data\n\t\tif (this._scheme_group && this._group_processing && !this._not_grouped_order)\n\t\t\tthis._group_processing(this._scheme_group);\n\n\t\t//optional data sorting\n\t\tif (this._scheme_sort){\n\t\t\tthis.blockEvent();\n\t\t\tthis.sort(this._scheme_sort);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[this.driver, data]);\n\t\t//repaint self after data loading\n\t\tthis.refresh();\n\t},\n\t_inner_parse:function(info, recs){\n\t\tlet from = info.from;\n\t\tlet subload = true;\n\t\tlet marks = false;\n\n\t\t//some data is loaded and new data doesn't have \"pos\" - assuming update\n\t\tif (!from && from !== 0 && this.order[0]){\n\t\t\tif (this._removeMissed){\n\t\t\t\t//update mode, create kill list\n\t\t\t\tmarks = {};\n\t\t\t\tfor (let i=0; i<this.order.length; i++)\n\t\t\t\t\tmarks[this.order[i]]=true;\n\t\t\t}\n\t\t\t\n\t\t\tsubload = false;\n\t\t\tfrom = this.order.length;\n\t\t} else \n\t\t\tfrom = (from || 0)*1;\n\n\t\tlet j=0;\n\t\tfor (let i = 0; i < recs.length; i++){\n\t\t\t//get hash of details for each record\n\t\t\tconst temp = this.driver.getDetails(recs[i]);\n\t\t\tconst id = this.id(temp); \t//generate ID for the record\n\t\t\tif (!this.pull[id]){\t\t//if such ID already exists - update instead of insert\n\t\t\t\tthis.order[j+from]=id;\t\n\t\t\t\tj++;\n\t\t\t} else if (subload && this.order[j+from])\n\t\t\t\tj++;\n\n\t\t\tif(this.pull[id]){\n\t\t\t\textend(this.pull[id], temp, true);//add only new properties\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(this.pull[id]);\n\t\t\t\t//update mode, remove item from kill list\n\t\t\t\tif (marks)\n\t\t\t\t\tdelete marks[id];\n\t\t\t} else{\n\t\t\t\tthis.pull[id] = temp;\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(temp);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//update mode, delete items which are not existing in the new xml\n\t\tif (marks){\n\t\t\tthis.blockEvent();\n\t\t\tfor (let delid in marks)\n\t\t\t\tthis.remove(delid);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tconst endpos = info.size * 1;\n\t\tif (endpos) {\n\t\t\tif (!this.order[endpos-1])\n\t\t\t\tthis.order[endpos-1] = undefined;\n\t\t\tif (endpos < this.order.length)\n\t\t\t\tthis.order = _to_array(this.order.slice(0, endpos));\n\t\t}\n\t},\n\t//generate id for data object\n\tid:function(data){\n\t\treturn data.id||(data.id=uid());\n\t},\n\tchangeId:function(old, newid){\n\t\t//assert(this.pull[old],\"Can't change id, for non existing item: \"+old);\n\t\tif(old == newid) return;\n\t\t\n\t\tif(this.pull[old])\n\t\t\tthis.pull[newid] = this.pull[old];\n\t\t\n\t\tthis.pull[newid].id = newid;\n\t\tthis.order[this.order.find(old)]=newid;\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order[this._filter_order.find(old)]=newid;\n\t\tif (this._marks[old]){\n\t\t\tthis._marks[newid] = this._marks[old];\n\t\t\tdelete this._marks[old];\n\t\t}\n\n\n\t\tthis.callEvent(\"onIdChange\", [old, newid]);\n\t\tif (this._render_change_id)\n\t\t\tthis._render_change_id(old, newid);\n\t\tdelete this.pull[old];\n\t},\n\t//get data from hash by id\n\tgetItem:function(id){\n\t\treturn this.pull[id];\n\t},\n\t//assigns data by id\n\tupdateItem:function(id, update, mode){\n\t\tif (typeof id === \"object\")\n\t\t\tid = id.toString();\n\n\t\tconst data = this.getItem(id);\n\t\tlet old = null;\n\n\t\t//check is change tracking active\n\t\tconst changeTrack = this.hasEvent(\"onDataUpdate\");\n\n\t\tassert(data, \"Invalid ID for updateItem\");\n\t\tassert(!update || !update.id || update.id == id, \"Attempt to change ID in updateItem\");\n\t\tif (!isUndefined(update) && data !== update){\n\t\t\t//preserve original object\n\t\t\tif (changeTrack)\n\t\t\t\told = copy(data);\n\n\t\t\tid = data.id;\t//preserve id\n\t\t\textend(data, update, true);\n\t\t\tdata.id = id;\n\t\t}\n\n\t\tif (this._scheme_update)\n\t\t\tthis._scheme_update(data);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[id, data, (mode||\"update\")]);\n\n\t\tif (changeTrack)\n\t\t\tthis.callEvent(\"onDataUpdate\", [id, data, old]);\n\t},\n\t//sends repainting signal\n\trefresh:function(id){\n\t\tif (this._skip_refresh) return; \n\t\t\n\t\tif (id){\n\t\t\tif (this.exists(id))\n\t\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\t}else\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\t//converts range IDs to array of all IDs between them\n\tgetRange:function(from,to){\t\t\n\t\t//if some point is not defined - use first or last id\n\t\t//BEWARE - do not use empty or null ID\n\t\tif (from)\n\t\t\tfrom = this.getIndexById(from);\n\t\telse \n\t\t\tfrom = (this.$min||this.startOffset)||0;\n\t\tif (to)\n\t\t\tto = this.getIndexById(to);\n\t\telse {\n\t\t\tto = this.$max === 0 ? 0 : Math.min((this.$max?this.$max-1:(this.endOffset||Infinity)),(this.count()-1));\n\t\t\tif (to<0) to = 0; //we have not data in the store\n\t\t}\n\n\t\tif (from > to){ //can be in case of backward shift-selection\n\t\t\tlet a=to; to=from; from=a;\n\t\t}\n\n\t\treturn this.getIndexRange(from,to);\n\t},\n\t//converts range of indexes to array of all IDs between them\n\tgetIndexRange:function(from,to){\n\t\tto = Math.min((to === 0 ? 0 : (to||Infinity)), this.count()-1);\n\n\t\tconst ret = _to_array(); //result of method is rich-array\n\t\tfor (let i = (from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.order[i]));\n\t\treturn ret;\n\t},\n\t//returns total count of elements\n\tcount:function(){\n\t\treturn this.order.length;\n\t},\n\t//returns truy if item with such ID exists\n\texists:function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\t//nextmethod is not visible on component level, check DataMove.move\n\t//moves item from source index to the target index\n\tmove:function(sindex,tindex){\n\t\tassert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\t\tif (sindex == tindex) return;\n\n\t\tconst id = this.getIdByIndex(sindex);\n\t\tconst obj = this.getItem(id);\n\n\t\tif (this._filter_order)\n\t\t\tthis._move_inner(this._filter_order, 0, 0, this.getIdByIndex(sindex), this.getIdByIndex(tindex));\n\n\t\tthis._move_inner(this.order, sindex, tindex);\n\t\t\n\t\t\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"move\"]);\n\t},\n\t_move_inner:function(col, sindex, tindex, sid, tid){\n\t\tif (sid||tid){\n\t\t\tsindex = tindex = -1;\n\t\t\tfor (let i = 0; i < col.length; i++){\n\t\t\t\tif (col[i] == sid && sindex<0)\n\t\t\t\t\tsindex = i;\n\t\t\t\tif (col[i] == tid && tindex<0)\n\t\t\t\t\ttindex = i;\n\t\t\t}\n\t\t}\n\t\tconst id = col[sindex];\n\t\tcol.removeAt(sindex);\t//remove at old position\n\t\tcol.insertAt(id,Math.min(col.length, tindex));\t//insert at new position\n\t},\n\tscheme:function(config){\n\t\tthis._scheme = {};\n\t\tthis._scheme_save = config.$save;\n\t\tthis._scheme_init = config.$init||config.$change;\n\t\tthis._scheme_update = config.$update||config.$change;\n\t\tthis._scheme_serialize = config.$serialize;\n\t\tthis._scheme_group = config.$group;\n\t\tthis._scheme_sort = config.$sort;\n\t\tthis._scheme_export = config.$export;\n\n\t\t//ignore $-starting properties, as they have special meaning\n\t\tfor (let key in config)\n\t\t\tif (key.substr(0,1) != \"$\")\n\t\t\t\tthis._scheme[key] = config[key];\n\t},\n\timportData:function(target, silent){\n\t\tconst data = target ? (target.data || target) : [];\n\t\tthis._filter_order = null;\n\n\t\tif (typeof data.serialize == \"function\"){\n\t\t\tthis.order = _to_array([].concat(data.order));\n\n\t\t\t//make full copy, to preserve object properties\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (this._make_full_copy){\n\t\t\t\tthis._make_full_copy = false;\n\t\t\t\tconst oldpull = this.pull;\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull){\n\t\t\t\t\tconst old = oldpull[key];\n\t\t\t\t\tthis.pull[key] = copy(data.pull[key]);\n\t\t\t\t\tif (old && old.open) this.pull[key].open = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull)\n\t\t\t\t\tthis.pull[key] = data.pull[key];\n\t\t\t}\n\n\t\t\tif (data.branch && this.branch){\n\t\t\t\tthis.branch = copy(data.branch);\n\t\t\t\tthis._filter_branch = null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.order = _to_array();\n\t\t\tthis.pull = {};\n\t\t\tlet id, obj;\n\n\t\t\tif (isArray(target))\n\t\t\t\tfor (let key=0; key<target.length; key++){\n\t\t\t\t\tobj = id = target[key];\n\t\t\t\t\tif (typeof obj == \"object\")\n\t\t\t\t\t\tobj.id = obj.id || uid();\n\t\t\t\t\telse\n\t\t\t\t\t\tobj = { id:id, value:id };\n\n\t\t\t\t\tthis.order.push(obj.id);\n\t\t\t\t\tif (this._scheme_init)\n\t\t\t\t\t\tthis._scheme_init(obj);\n\t\t\t\t\tthis.pull[obj.id] = obj;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tfor (let key in data){\n\t\t\t\t\tthis.order.push(key);\n\t\t\t\t\tthis.pull[key] = { id:key, value: data[key] };\n\t\t\t\t}\n\t\t}\n\t\tif (this._extraParser && !data.branch){\n\t\t\tthis.branch = { 0:[]};\n\t\t\tif (!this._datadriver_child)\n\t\t\t\tthis._set_child_scheme(\"data\");\n\n\t\t\tfor (let i = 0; i<this.order.length; i++){\n\t\t\t\tconst key = this.order[i];\n\t\t\t\tthis._extraParser(this.pull[key], 0, 0, false);\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[]);\n\t\tif (!silent)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\tsync:function(source, filter, silent){\n\t\tthis.unsync();\n\n\t\tconst type = typeof source;\n\t\tif (type == \"string\")\n\t\t\tsource = $$(source);\n\n\t\tif (type != \"function\" && type != \"object\"){\n\t\t\tsilent = filter;\n\t\t\tfilter = null;\n\t\t}\n\t\t\n\t\tif (source.name != \"DataStore\" && source.name != \"TreeStore\"){\n\t\t\tif (source.data && (source.data.name === \"DataStore\" || source.data.name === \"TreeStore\"))\n\t\t\t\tsource = source.data;\n\t\t\telse {\n\t\t\t\tthis._sync_source = source;\n\t\t\t\treturn callEvent(\"onSyncUnknown\", [this, source, filter]);\n\t\t\t}\n\t\t}\n\n\t\tconst sync_logic = bind(function(id, data, mode){\n\t\t\tif (this._skip_next_sync) return;\n\n\t\t\t//sync of tree-structure with after-filtering\n\t\t\t//we need to make a full copy, to preserve $count\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (filter && this.branch) this._make_full_copy = true;\n\t\t\tthis.importData(source, true);\n\t\t\t\n\t\t\tif (filter)\n\t\t\t\tthis.silent(filter);\n\t\t\tif (this._on_sync)\n\t\t\t\tthis._on_sync();\n\n\t\t\tif(!(id && data && mode) && !this.count())//clearall\n\t\t\t\tthis._marks = {};\n\t\t\tif(mode ==\"delete\" && this._marks[id])\n\t\t\t\tdelete this._marks[id];\n\n\t\t\tthis.callEvent(\"onSyncApply\",[]);\n\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh();\n\t\t\telse\n\t\t\t\tsilent = false;\n\t\t}, this);\n\n\t\tthis._sync_events = [\n\t\t\tsource.attachEvent(\"onStoreUpdated\", sync_logic),\n\t\t\tsource.attachEvent(\"onIdChange\", bind(function(old, nid){ this.changeId(old, nid); this.refresh(nid); }, this))\n\t\t];\n\t\tthis._sync_source = source;\n\n\t\t//backward data saving\n\t\tthis._back_sync_handler = this.attachEvent(\"onStoreUpdated\", function(id, data, mode){\n\t\t\tif (mode == \"update\" || mode == \"save\"){\n\t\t\t\tthis._skip_next_sync = 1;\n\t\t\t\tsource.updateItem(id, data);\n\t\t\t\tthis._skip_next_sync = 0;\n\t\t\t}\n\t\t});\n\n\t\tsync_logic();\n\t},\n\tunsync:function(){\n\t\tif (this._sync_source){\n\t\t\tconst source = this._sync_source;\n\n\t\t\tif ((source.name != \"DataStore\" && source.name != \"TreeStore\") &&\n\t\t\t\t\t(!source.data || source.data.name != \"DataStore\" || source.data.name != \"TreeStore\")){\n\t\t\t\t//data sync with external component\n\t\t\t\tcallEvent(\"onUnSyncUnknown\", [this, source]);\n\t\t\t} else {\n\t\t\t\t//data sync with webix component\n\t\t\t\tfor (let i = 0; i < this._sync_events.length; i++)\n\t\t\t\t\tsource.detachEvent(this._sync_events[i]);\n\t\t\t\tthis.detachEvent(this._back_sync_handler);\n\t\t\t}\n\n\t\t\tthis._sync_source = null;\n\t\t}\n\t},\n\tdestructor:function(){\n\t\tthis.unsync();\n\n\t\tthis.pull = this.order = this._marks = null;\n\t\tthis._evs_events = this._evs_handlers = {};\n\t},\n\t//adds item to the store\n\tadd:function(obj,index){\n\t\t//default values\t\t\n\t\tif (this._scheme)\n\t\t\tfor (let key in this._scheme)\n\t\t\t\tif (isUndefined(obj[key]))\n\t\t\t\t\tobj[key] = this._scheme[key];\n\n\t\tif (this._scheme_init)\n\t\t\tthis._scheme_init(obj);\n\n\t\t//generate id for the item\n\t\tconst id = this.id(obj);\n\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\tconst order = arguments[2]||this.order;\n\n\t\t//by default item is added to the end of the list\n\t\tconst data_size = order.length;\n\n\t\tif (isUndefined(index) || index < 0)\n\t\t\tindex = data_size; \n\t\t//check to prevent too big indexes\t\t\t\n\t\tif (index > data_size){\n\t\t\tassert(0, \"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\tindex = Math.min(order.length,index);\n\t\t}\n\t\tif (this.callEvent(\"onBeforeAdd\", [id, obj, index]) === false) return false;\n\n\t\tassert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[id]=obj;\n\t\torder.insertAt(id,index);\n\t\tif (this._filter_order){\t//adding during filtering\n\t\t\t//we can't know the location of new item in full dataset, making suggestion\n\t\t\t//put at end of original dataset by default\n\t\t\tlet original_index = this._filter_order.length;\n\t\t\t//if some data exists, put at the same position in original and filtered lists\n\t\t\tif (this.order.length)\n\t\t\t\toriginal_index = Math.min((index || 0), original_index);\n\n\t\t\tthis._filter_order.insertAt(id,original_index);\n\t\t}\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"add\"]);\n\t\tthis.callEvent(\"onAfterAdd\",[id,index]);\n\n\t\treturn obj.id;\n\t},\n\t\n\t//removes element from datastore\n\tremove:function(id){\n\t\t//id can be an array of IDs - result of getSelect, for example\n\t\tif (isArray(id)){\n\t\t\tfor (let i = 0; i < id.length; i++)\n\t\t\t\tthis.remove(id[i]);\n\t\t\treturn;\n\t\t}\n\t\tif (this.callEvent(\"onBeforeDelete\",[id]) === false) return false;\n\t\t\n\t\tassert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tconst obj = this.getItem(id); //save for later event\n\t\t//clear from collections\n\t\tthis.order.remove(id);\n\t\tif (this._filter_order) \n\t\t\tthis._filter_order.remove(id);\n\t\t\t\n\t\tdelete this.pull[id];\n\t\tif (this._marks[id])\n\t\t\tdelete this._marks[id];\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"delete\"]);\n\t\tthis.callEvent(\"onAfterDelete\",[id]);\n\t},\n\t//deletes all records in datastore\n\tclearAll:function(soft){\n\t\t//instead of deleting one by one - just reset inner collections\n\t\tthis.pull = {};\n\t\tthis._marks = {};\n\t\tthis.order = _to_array();\n\t\t//this.feed = null;\n\t\tthis._filter_order = null;\n\t\tif (!soft)\n\t\t\tthis.url = null;\n\t\tthis.callEvent(\"onClearAll\",[soft]);\n\t\tthis.refresh();\n\t},\n\t//converts index to id\n\tgetIdByIndex:function(index){\n\t\tassert(index >= 0,\"DataStore::getIdByIndex Incorrect index\");\n\t\treturn this.order[index];\n\t},\n\t//converts id to index\n\tgetIndexById:function(id){\n\t\tif (!this.pull[id])\n\t\t\treturn -1;\n\t\telse\n\t\t\treturn this.order.find(id);\t//slower than getIdByIndex\n\t},\n\t//returns ID of next element\n\tgetNextId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)+(step||1)];\n\t},\n\t//returns ID of first element\n\tgetFirstId:function(){\n\t\treturn this.order[0];\n\t},\n\t//returns ID of last element\n\tgetLastId:function(){\n\t\treturn this.order[this.order.length-1];\n\t},\n\t//returns ID of previous element\n\tgetPrevId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)-(step||1)];\n\t},\n\t/*\n\t\tsort data in collection\n\t\t\tby - settings of sorting\n\n\t\tor\n\t\t\tby - array of settings\n\n\t\tor\n\n\t\t\tby - sorting function\n\t\t\tdir - \"asc\" or \"desc\"\n\n\t\tor\n\n\t\t\tby - property\n\t\t\tdir - \"asc\" or \"desc\"\n\t\t\tas - type of sortings\n\n\t\tSorting function will accept 2 parameters and must return 1,0,-1, based on desired order\n\n\t\treturns true if sorting was successful, false otherwise\n\t*/\n\tsort:function(by, dir, as){\n\t\tlet parameters;\n\t\tlet sort = by;\n\n\t\tif (isArray(sort)){\n\t\t\tsort = sort.map(a => this._sort_init(a));\n\t\t\tparameters = [sort];\n\t\t} else {\n\t\t\tsort = this._sort_init(by, dir, as);\n\t\t\tparameters = [sort.by, sort.dir, sort.as, sort];\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeSort\", parameters)) return false;\n\t\tconst sorter = this.sorting.create(sort);\n\n\t\tthis.order = this._sort_core(sorter, this.order);\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order = this._sort_core(sorter, this._filter_order);\n\t\tif (this._filter_branch)\t//treestore\n\t\t\tthis._sort_core(sorter, this.order, this._filter_branch);\n\n\t\t//repaint self\n\t\tthis.refresh();\n\n\t\tthis.callEvent(\"onAfterSort\", parameters);\n\t\treturn true;\n\t},\n\t_sort_init:function(by, dir, as){\n\t\tlet sort = by;\n\n\t\tif (typeof by == \"function\")\n\t\t\tsort = {as:by, dir:dir};\n\t\telse if (typeof by == \"string\")\n\t\t\tsort = {by:by, dir:dir, as:as};\n\n\t\tif (typeof sort.by == \"string\")\n\t\t\tsort.by = sort.by.replace(/#/g,\"\");\n\n\t\treturn sort;\n\t},\n\t_sort_core:function(sorter, order){\n\t\tif (this.order.length){\n\t\t\tconst pre = order.splice(0, this.$freeze);\n\t\t\t//get array of IDs\n\t\t\tconst neworder = _to_array();\n\t\t\tfor (let i = order.length-1; i>=0; i--)\n\t\t\t\tneworder[i] = this.pull[order[i]];\n\n\t\t\tneworder.sort(sorter);\n\t\t\treturn _to_array(pre.concat(neworder.map(function(obj){ \n\t\t\t\tassert(obj, \"Client sorting can't be used with dynamic loading\");\n\t\t\t\treturn this.id(obj);\n\t\t\t},this)));\n\t\t}\n\t\treturn order;\n\t},\n\t/*\n\t\tFilter datasource\n\t\t\n\t\ttext - property, by which filter\n\t\tvalue - filter mask\n\t\t\n\t\tor\n\t\t\n\t\ttext - filter method\n\t\t\n\t\tFilter method will receive data object and must return true or false\n\t*/\n\t_filter_reset:function(preserve){\n\t\t//remove previous filtering , if any\n\t\tif (this._filter_order && !preserve){\n\t\t\tthis.order = this._filter_order;\n\t\t\tdelete this._filter_order;\n\t\t}\n\t},\n\t_filter_core:function(filter, value, preserve){\n\t\tconst neworder = _to_array();\n\t\tconst freeze = this.$freeze || 0;\n\n\t\tfor (let i=0; i < this.order.length; i++){\n\t\t\tconst id = this.order[i];\n\t\t\tif (i < freeze || filter(this.getItem(id),value))\n\t\t\t\tneworder.push(id);\n\t\t}\n\t\t//set new order of items, store original\n\t\tif (!preserve || !this._filter_order)\n\t\t\tthis._filter_order = this.order;\n\t\tthis.order = neworder;\n\t},\n\tfind:function(config, first){\n\t\tconst result = [];\n\n\t\tfor(let i in this.pull){\n\t\t\tconst data = this.pull[i];\n\n\t\t\tlet match = true;\n\t\t\tif (typeof config == \"object\"){\n\t\t\t\tfor (let key in config)\n\t\t\t\t\tif (data[key] != config[key]){\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if (!config(data))\n\t\t\t\tmatch = false;\n\n\t\t\tif (match)\n\t\t\t\tresult.push(data);\n\t\t\t\n\t\t\tif (first && result.length)\n\t\t\t\treturn result[0];\n\t\t}\n\n\t\treturn first ? null : result;\n\t},\n\tfilter:function(text,value,preserve){\n\t\t//unfilter call but we already in not-filtered state\n\t\tif (!text && !this._filter_order && !this._filter_branch) return;\n\t\tif (!this.callEvent(\"onBeforeFilter\", [text, value])) return;\n\t\t\n\t\tthis._filter_reset(preserve);\n\t\tif (!this.order.length) return;\n\n\t\t//if text not define -just unfilter previous state and exit\n\t\tif (text){\n\t\t\tlet filter = text;\n\t\t\tvalue = value||\"\";\n\t\t\tif (typeof text == \"string\"){\n\t\t\t\ttext = text.replace(/#/g,\"\");\n\t\t\t\tif (typeof value == \"function\")\n\t\t\t\t\tfilter = function(obj){\n\t\t\t\t\t\treturn value(obj[text]);\n\t\t\t\t\t};\n\t\t\t\telse{\n\t\t\t\t\tvalue = value.toString().toLowerCase();\n\t\t\t\t\tfilter = function(obj,value){\t//default filter - string start from, case in-sensitive\n\t\t\t\t\t\tassert(obj, \"Client side filtering can't be used with dynamic loading\");\n\t\t\t\t\t\treturn (obj[text]||\"\").toString().toLowerCase().indexOf(value)!=-1;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._filter_core(filter, value, preserve, this._filterMode);\n\t\t}\n\t\t//repaint self\n\t\tthis.refresh();\n\t\t\n\t\tthis.callEvent(\"onAfterFilter\", []);\n\t},\n\t/*\n\t\tIterate through collection\n\t*/\n\t_obj_array:function(){\n\t\tconst data = [];\n\t\tfor (let i = this.order.length - 1; i >= 0; i--)\n\t\t\tdata[i]=this.pull[this.order[i]];\n\n\t\treturn data;\n\t},\n\teach:function(method, master, all){\n\t\tlet order = this.order;\n\t\tif (all)\n\t\t\torder = this._filter_order || order;\n\n\t\tfor (let i = 0; i<order.length; i++){\n\t\t\tif(order[i])\n\t\t\t\tmethod.call((master||this), this.getItem(order[i]), i);\n\t\t}\n\t},\n\t_methodPush:function(object,method){\n\t\treturn function(){ return object[method].apply(object,arguments); };\n\t},\n\t/*\n\t\tmap inner methods to some distant object\n\t*/\n\tprovideApi:function(target,eventable){\n\t\t\t\n\t\tif (eventable){\n\t\t\tthis.mapEvent({\n\t\t\t\tonbeforesort:\ttarget,\n\t\t\t\tonaftersort:\ttarget,\n\t\t\t\tonbeforeadd:\ttarget,\n\t\t\t\tonafteradd:\t\ttarget,\n\t\t\t\tonbeforedelete:\ttarget,\n\t\t\t\tonafterdelete:\ttarget,\n\t\t\t\tondataupdate:\ttarget/*,\n\t\t\t\tonafterfilter:\ttarget,\n\t\t\t\tonbeforefilter:\ttarget*/\n\t\t\t});\n\t\t}\n\n\t\tconst list = [\"sort\",\"add\",\"remove\",\"exists\",\"getIdByIndex\",\"getIndexById\",\"getItem\",\"updateItem\",\"refresh\",\"count\",\"filter\",\"find\",\"getNextId\",\"getPrevId\",\"clearAll\",\"getFirstId\",\"getLastId\",\"serialize\",\"sync\"];\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t\ttarget[list[i]] = this._methodPush(this,list[i]);\n\t},\n\taddMark:function(id, mark, css, value, silent){\n\t\tconst obj = this._marks[id]||{};\n\t\tthis._marks[id] = obj;\n\t\tif (!obj[mark]){\n\t\t\tobj[mark] = value||true;\n\t\t\tif (css){\n\t\t\t\tconst old_css = obj.$css||\"\";\n\t\t\t\tobj.$css = old_css+\" \"+mark;\n\t\t\t}\n\t\t\tif (!silent)\n\t\t\t\tthis.refresh(id);\n\t\t}\n\t\treturn obj[mark];\n\t},\n\tremoveMark:function(id, mark, css, silent){\n\t\tconst obj = this._marks[id];\n\t\tif (obj){\n\t\t\tif (obj[mark])\n\t\t\t\tdelete obj[mark];\n\t\t\tif (css){\n\t\t\t\tconst current_css = obj.$css;\n\t\t\t\tif (current_css){\n\t\t\t\t\tconst re = new RegExp(\"(\\\\s|^)\"+mark+\"(\\\\s|$)\");\n\t\t\t\t\tobj.$css = current_css.replace(re, (v,b,a) => b && a ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh(id);\n\t\t}\n\t},\n\tgetMark:function(id, mark){\n\t\tconst obj = this._marks[id];\n\t\treturn (obj ? obj[mark] : false);\n\t},\n\tclearMark:function(name, css, silent){\n\t\tfor (const id in this._marks){\n\t\t\tconst obj = this._marks[id];\n\t\t\tif (obj[name]){\n\t\t\t\tdelete obj[name];\n\t\t\t\tif (css && obj.$css){\n\t\t\t\t\tconst re = new RegExp(\"(\\\\s|^)\"+name+\"(\\\\s|$)\");\n\t\t\t\t\tobj.$css = obj.$css.replace(re, (v,b,a) => b && a ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t\tif (!silent)\n\t\t\t\t\tthis.refresh(id);\n\t\t\t}\n\t\t}\n\t},\n\t/*\n\t\tserializes data to a json object\n\t*/\n\tserialize: function(all){\n\t\tlet ids = this.order;\n\t\tif (all && this._filter_order)\n\t\t\tids = this._filter_order;\n\n\t\tconst result = [];\n\t\tfor(let i=0; i< ids.length;i++) {\n\t\t\tlet el = this.pull[ids[i]];\n\t\t\tif (this._scheme_serialize){\n\t\t\t\tel = this._scheme_serialize(el);\n\t\t\t\tif (el===false) continue;\n\t\t\t}\n\t\t\tresult.push(el);\n\t\t}\n\t\treturn result;\n\t},\n\tsorting:{\n\t\tcreate:function(config){\n\t\t\tif (isArray(config))\n\t\t\t\treturn this._multi(config);\n\t\t\treturn this._dir(config.dir, this._by(config.by, config.as));\n\t\t},\n\t\tas:{\n\t\t\t//handled by dataFeed\n\t\t\t\"server\":function(){\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\"date\":function(a,b){\n\t\t\t\ta = a-0; b = b-0;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"int\":function(a,b){\n\t\t\t\ta = a*1; b = b*1;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_strict\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_locale_strict\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"string_locale\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"raw\":function(a,b){\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t}\n\t\t},\n\t\t_multi:function(methods){\n\t\t\tmethods = methods.map(c => this._dir(c.dir, this._by(c.by, c.as)));\n\n\t\t\treturn function(a,b){\n\t\t\t\tlet result, i = 0;\n\t\t\t\tdo {\n\t\t\t\t\tresult = methods[i](a,b);\n\t\t\t\t} while(!result && methods[++i]);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t},\n\t\t_by:function(prop, method){\n\t\t\tlet customMethod;\n\n\t\t\tif (typeof method != \"function\")\n\t\t\t\tmethod = this.as[method||\"string\"];\n\t\t\telse\n\t\t\t\tcustomMethod = true;\n\n\t\t\tassert(method, \"Invalid sorting method\");\n\t\t\treturn function(a,b){\n\t\t\t\tif(!customMethod){\n\t\t\t\t\ta = a[prop];\n\t\t\t\t\tb = b[prop];\n\t\t\t\t}\n\t\t\t\treturn method(a, b, prop);\n\t\t\t};\n\t\t},\n\t\t_dir:function(prop, method){\n\t\t\tif (prop == \"asc\" || !prop)\n\t\t\t\treturn method;\n\t\t\treturn function(a,b){\n\t\t\t\treturn method(a,b)*-1;\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport default DataStore;","import {ajax} from \"../load/ajax\";\nimport {bind, delay, extend, toFunctor, isArray} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nimport {dp} from \"../load/dataprocessor\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport DataStore from \"../core/datastore\";\nimport AtomDataLoader from \"../core/atomdataloader\";\n\n\n/*\n\tBehavior:DataLoader - load data in the component\n\t\n\t@export\n\t\tload\n\t\tparse\n*/\nconst DataLoader =proto({\n\t$init:function(config){\n\t\t//prepare data store\n\t\tconfig = config || \"\";\n\n\t\tthis._feed_last = {};\n\t\tthis._data_generation = 0;\n\n\t\tthis.data = new DataStore();\n\t\tthis.data.attachEvent(\"onClearAll\", bind(this._call_onclearall, this));\n\t\tthis.data.attachEvent(\"onServerConfig\", bind(this._call_on_config, this));\n\t\tthis.attachEvent(\"onDestruct\", this._call_onclearall);\n\n\t\tthis.data.feed = this._feed;\n\t\tthis.data.owner = config.id;\n\t},\n\t_feed:function(from, count, callback, defer, clear){\n\t\t//allow only single request at same time\n\t\tif (this._load_count){\n\t\t\tif(this._feed_last.from == from && this._feed_last.count == count) return promise.reject();\n\t\t\tdefer = promise.defer();\n\t\t\tthis._load_count = [from,count,callback,defer,clear];\t//save last ignored request\n\t\t\treturn defer;\n\t\t} else\n\t\t\tthis._load_count = true;\n\t\tthis._feed_last.from = from;\n\t\tthis._feed_last.count = count;\n\t\treturn this._feed_common.call(this, from, count, callback, defer, false, clear);\n\t},\n\t_feed_common:function(from, count, callback, defer, details, clear){\n\t\tlet url = this.data.url;\n\t\tif (from < 0) from = 0;\n\n\t\tif(!details)\n\t\t\tdetails = { start: from, count:count };\n\n\t\tif(this.count())\n\t\t\tdetails[\"continue\"] = \"true\";\n\n\t\tconst state = this.getState ? this.getState() : null;\n\t\t// proxy\n\t\tif (url && typeof url != \"string\"){\n\t\t\tif (state){\n\t\t\t\tif (state.sort)\n\t\t\t\t\tdetails.sort = state.sort;\n\t\t\t\tif (state.filter)\n\t\t\t\t\tdetails.filter = state.filter;\n\t\t\t}\n\t\t\treturn this.load(url, 0, details, clear).then(\n\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t() => this._feed_callback()\n\t\t\t);\n\t\t} else { // GET\n\t\t\turl = url+((url.indexOf(\"?\")==-1)?\"?\":\"&\");\n\n\t\t\tvar params = [];\n\t\t\tfor(var d in details){\n\t\t\t\tparams.push(d+\"=\"+details[d]);\n\t\t\t}\n\t\t\tif (state){\n\t\t\t\tif (state.sort){\n\t\t\t\t\tvar sort = isArray(state.sort) ? state.sort : [state.sort];\n\t\t\t\t\tfor (var i=0; i<sort.length; i++)\n\t\t\t\t\t\tparams.push(\"sort[\"+sort[i].id+\"]=\"+encodeURIComponent(sort[i].dir));\n\t\t\t\t}\n\t\t\t\tif (state.filter)\n\t\t\t\t\tfor (var key in state.filter){\n\t\t\t\t\t\tvar filterValue = state.filter[key];\n\t\t\t\t\t\tif(typeof filterValue == \"object\")\n\t\t\t\t\t\t\tfilterValue = ajax().stringify(filterValue); //server daterangefilter\n\t\t\t\t\t\tparams.push(\"filter[\"+key+\"]=\"+encodeURIComponent(filterValue));\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\turl += params.join(\"&\");\n\t\t\tif (this._feed_last.url !== url){\n\t\t\t\tthis._feed_last.url = url;\n\t\t\t\treturn this.load(url, 0, null, clear).then(\n\t\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t\t() => this._feed_callback()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._load_count = false;\n\t\t\t\treturn promise.reject();\n\t\t\t}\n\t\t}\n\t},\n\t_feed_on_load:function(data, callback, defer){\n\t\tdelay(()=> this._feed_callback(), \"\", \"\", 100);\n\t\tif(callback)\n\t\t\tajax.$callback(this, callback, data);\n\t\tif(defer)\n\t\t\tdefer.resolve(data);\n\t\treturn data;\n\t},\n\t_feed_callback:function(){\n\t\t//after loading check if we have some ignored requests\n\t\tvar temp = this._load_count;\n\t\tthis._load_count = false;\n\t\tif (typeof temp ==\"object\")\n\t\t\tthis.data.feed.apply(this, temp);\t//load last ignored request\n\t},\n\t//loads data from external URL\n\tload:function(url){\n\t\turl = proxy.$parse(url);\n\t\tvar ajax = AtomDataLoader.load.apply(this, arguments);\n\n\t\t//prepare data feed for dyn. loading\n\t\tif (!this.data.url)\n\t\t\tthis.data.url = url;\n\n\t\treturn ajax;\n\t},\n\t//load next set of data rows\n\tloadNext:function(count, start, callback, url, now, clear){\n\t\tvar config = this._settings;\n\t\tif (config.datathrottle && !now){\n\t\t\tif (this._throttle_request)\n\t\t\t\twindow.clearTimeout(this._throttle_request);\n\n\t\t\tlet defer = promise.defer();\n\t\t\tthis._throttle_request = delay(function(){\n\t\t\t\tdefer.resolve(this.loadNext(count, start, callback, url, true, clear));\n\t\t\t},this, 0, config.datathrottle);\n\t\t\treturn defer;\n\t\t}\n\n\t\tif (!start && start !== 0) start = this.count();\n\t\tif (!count)\n\t\t\tcount = config.datafetch || this.count();\n\n\t\tthis.data.url = url || this.data.url;\n\t\tif (this.callEvent(\"onDataRequest\", [start,count,callback,url]) && this.data.url)\n\t\t\treturn this.data.feed.call(this, start, count, callback, false, clear);\n\t\treturn promise.reject();\n\t},\n\t_maybe_loading_already:function(count, from){\n\t\tvar last = this._feed_last;\n\t\tif(this._load_count && last.url){\n\t\t\tif (last.from<=from && (last.count+last.from >= count + from )) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tremoveMissed_setter:function(value){\n\t\treturn (this.data._removeMissed = value);\n\t},\n\t//init of dataprocessor delayed after all settings processing\n\t//because it need to be the last in the event processing chain\n\t//to get valid validation state\n\t_init_dataprocessor:function(){\n\t\tvar url = this._settings.save;\n\n\t\tif (url === true)\n\t\t\turl = this._settings.save = this._settings.url;\n\n\t\tvar obj = { master: this };\n\t\t\n\t\tif (url && url.url)\n\t\t\textend(obj, url);\n\t\telse\n\t\t\tobj.url = url;\n\n\t\tdp(obj);\n\t},\n\tsave_setter:function(value){\n\t\tif (value)\n\t\t\tthis.$ready.push(this._init_dataprocessor);\n\n\t\treturn value;\n\t},\n\twaitSave:function(handler){\n\t\treturn dp(this)._promise(() => {\n\t\t\thandler.call(this);\n\t\t}).then(many => many.length == 1 ? many[0] : many);\n\t},\n\tscheme_setter:function(value){\n\t\tthis.data.scheme(value);\n\t},\n\tdataFeed_setter:function(value){\n\t\tvalue = proxy.$parse(value);\n\n\t\tthis.data.attachEvent(\"onBeforeFilter\", bind(function(text, filtervalue){\n\t\t\tvar result;\n\n\t\t\t//complex filtering, can't be routed to dataFeed\n\t\t\tif (typeof text == \"function\") return true;\n\n\t\t\t//we have dataFeed and some text\n\t\t\tif (this._settings.dataFeed && (text || filtervalue)){\n\t\t\t\ttext = text || \"id\";\n\t\t\t\tif (filtervalue && typeof filtervalue == \"object\")\n\t\t\t\t\tfiltervalue = filtervalue.id;\n\n\t\t\t\tvar url = this._settings.dataFeed;\n\n\t\t\t\t//url data feed\n\t\t\t\tif(typeof url ==\"string\"){\n\t\t\t\t\tvar urldata = \"filter[\"+text+\"]=\"+encodeURIComponent(filtervalue);\n\t\t\t\t\tresult = this._fetch(\n\t\t\t\t\t\turl+(url.indexOf(\"?\")<0?\"?\":\"&\")+urldata,\n\t\t\t\t\t\tthis._settings.datatype\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t//js data feed\n\t\t\t\telse{\n\t\t\t\t\tvar filter = {};\n\t\t\t\t\tfilter[text] = filtervalue;\n\t\t\t\t\tif (typeof url == \"function\"){\n\t\t\t\t\t\tresult = url.call(this, filtervalue, filter);\n\t\t\t\t\t} else if (url.$proxy && url.load) {\n\t\t\t\t\t\tresult = url.load(this, { filter });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (result){\n\t\t\t\t\tif (!result.then)\n\t\t\t\t\t\tresult = promise.resolve(result);\n\n\t\t\t\t\tresult.then(\n\t\t\t\t\t\tdata => {\n\t\t\t\t\t\t\tthis._onLoad(data, true);\n\t\t\t\t\t\t\tthis.data.callEvent(\"onAfterFilter\", []);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx => this._onLoadError(x)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},this));\n\t\treturn value;\n\t},\n\t_call_onready:function(){\n\t\tif (this._settings.ready && !this._ready_was_used){\n\t\t\tvar code = toFunctor(this._settings.ready, this.$scope);\n\t\t\tif (code)\n\t\t\t\tdelay(code, this, arguments);\n\t\t\tif (this.callEvent)\n\t\t\t\tdelay(this.callEvent, this, [\"onReady\", []]);\n\t\t\tthis._ready_was_used = true;\n\t\t}\n\t},\n\t_call_onclearall:function(soft){\n\t\tthis._data_generation++;\n\t\tif (!soft){\n\t\t\tthis._load_count = false;\n\t\t\tthis._feed_last = {};\n\t\t\tthis.waitData = promise.defer();\n\t\t}\n\t},\n\t_call_on_config:function(config){\n\t\tthis._parseSettingColl(config);\n\t}\n},AtomDataLoader);\n\n\n\nexport default DataLoader;","import {pos, offset} from \"../webix/html\";\nimport {use} from \"../services\";\nimport Touch from \"../core/touch\";\nimport {extend, delay, _power_array, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DragControl from \"../core/dragcontrol\";\nimport AutoScroll from \"../core/autoscroll\";\n\n\n/*\n\tBehavior:DragItem - adds ability to move items by dnd\n\t\n\tdnd context can have next properties\n\t\tfrom - source object\n\t\tto - target object\n\t\tsource - id of dragged item(s)\n\t\ttarget - id of drop target, null for drop on empty space\n\t\tstart - id from which DND was started\n*/\n\nconst DragItem ={\n\t//helper - defines component's container as active zone for dragging and for dropping\n\t_initHandlers:function(obj, source, target){\n\t\tif (!source) DragControl.addDrop(obj._contentobj,obj,true);\n\t\tif (!target) DragControl.addDrag(obj._contentobj,obj);\n\t\tthis.attachEvent(\"onDragOut\",function(a,b){ this.$dragMark(a,b); });\n\t\tthis.attachEvent(\"onBeforeAutoScroll\",function(){\n\t\t\tvar context = DragControl.getContext();\n\t\t\treturn !!(DragControl._active && context && (context.to === this || this._auto_scroll_force));\n\t\t});\n\t},\n\tdrag_setter:function(value){\n\t\tif (value){\n\t\t\textend(this, AutoScroll, true);\n\t\t\tif (value == \"order\" || value == \"move\")\n\t\t\t\textend(this, use(\"DragOrder\"), true);\n\t\t\tif (value == \"inner\" || value == \"order\")\n\t\t\t\tthis._inner_drag_only = true;\n\n\t\t\tthis._initHandlers(this, value == \"source\", value == \"target\");\n\t\t\tdelete this.drag_setter;\t//prevent double initialization\n\t\t}\n\t\treturn value;\n\t},\n\t/*\n\t\ts - source html element\n\t\tt - target html element\n\t\td - drop-on html element ( can be not equal to the target )\n\t\te - native html event \n\t*/\n\t//called when drag moved over possible target\n\t$dragIn:function(s,t,e){\n\t\tvar id = this.locate(e) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//in inner drag mode - ignore dnd from other components\n\t\tif ((this._inner_drag_only || context.from._inner_drag_only) && context.from !== this) return false;\n\n\t\tvar to = DragControl.getMaster(t);\n\t\t//previous target\n\t\tvar html = (this.getItemNode(id, e)||this._dataobj);\n\t\t//prevent double processing of same target\n\t\tif (html == DragControl._landing) return html;\n\t\tcontext.target = id;\n\t\tcontext.to = to;\n\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\tconst fragile = (this._touch_scroll && !this._settings.prerender);\n\t\tif (this._settings.dragscroll !== false  && !fragile)\n\t\t\tthis._auto_scroll_delay = delay(function(pos,id){\n\t\t\t\tthis._drag_pause(id);\n\t\t\t\tthis._auto_scroll(pos,id);\n\t\t\t}, this, [pos(e), id], 250);\n\n\t\tif (!this.$dropAllow(context, e)  || !this.callEvent(\"onBeforeDragIn\",[context, e])){\n\t\t\tcontext.to = context.target = null;\n\t\t\tif (this._auto_scroll_delay)\n\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\treturn null;\n\t\t}\n\t\t//mark target only when landing confirmed\n\t\tthis.$dragMark(context,e);\n\t\treturn html;\n\t},\n\t$dropAllow:function(){\n\t\treturn true;\n\t},\n\t_drag_pause:function(){\n\t\t//may be reimplemented in some components\n\t\t// tree for example\n\t},\n\t_target_to_id:function(target){\n\t\treturn target && typeof target === \"object\" ? target.toString() : target;\n\t},\n\t//called when drag moved out from possible target\n\t$dragOut:function(s,t,n,e){\n\t\tvar id = (this._viewobj.contains(n) ? this.locate(e): null) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//still over previous target\n\t\tif ((context.target||\"\").toString() == (id||\"\").toString()) return null;\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t//unmark previous target\n\t\tcontext.target = context.to = null;\n\t\tthis.callEvent(\"onDragOut\",[context,e]);\n\t\treturn null;\n\t},\n\t//called when drag moved on target and button is released\n\t$drop:function(s,t,e){\n\t\tvar context = DragControl._drag_context;\n\t\t//finalize context details\n\t\tcontext.to = this;\n\t\tthis._define_index(s,t,context);\n\n\t\t//unmark last target\n\t\tthis.$dragMark({}, e);\n\n\t\tif( context.from && context.from != context.to && context.from.callEvent ){\n\t\t\tif(!context.from.callEvent(\"onBeforeDropOut\", [context,e]))\n\t\t\t\treturn;\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeDrop\",[context,e])) return;\n\t\t//moving\n\t\tthis._context_to_move(context,e);\n\t\t\n\t\tthis.callEvent(\"onAfterDrop\",[context,e]);\n\t},\n\t_define_index:function(s,t,context){\n\t\tvar target = this._target_to_id(context.target);\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (target){\n\t\t\t\tcontext.parent = this.getParentId(target);\n\t\t\t\tcontext.index = this.getBranchIndex(target);\n\t\t\t} else context.index = -1;\n\t\t} else\n\t\t\tcontext.index = target?this.getIndexById(target):this.count();\n\t},\n\t_context_to_move:function(context){\n\t\tassert(context.from, \"Unsopported d-n-d combination\");\n\t\tif (context.from && context.from.move){\t//from different component with item dnd\n\t\t\tvar details = { parent: context.parent, mode: context.pos };\n\t\t\tcontext.from.move(context.source,context.index,context.to, details);\n\t\t}\n\t},\n\t$longTouchLimit: true,\n\t_getDragItemPos: function(pos,e){\n\t\tif (this.getItemNode){\n\t\t\tvar id = this.locate(e, true);\n\t\t\t//in some case, node may be outiside of dom ( spans in datatable for example )\n\t\t\t//so getItemNode can return null\n\t\t\tvar node = id ? this.getItemNode(id) : null;\n\t\t\treturn node ? offset(node) : node;\n\t\t}\n\t},\n\t//called when drag action started\n\t$drag:function(s,e){\n\t\tvar id = this.locate(e, true);\n\t\tif (id){\n\t\t\tvar list = [id];\n\n\t\t\tif (this.getSelectedId){ //has selection model\n\t\t\t\t//if dragged item is one of selected - drag all selected\n\t\t\t\tvar selection = this.getSelectedId(true, true);\t\n\n\t\t\t\tif (selection && selection.length > 1 && _power_array.find.call(selection,id)!=-1){\n\t\t\t\t\tvar hash = {}; \n\t\t\t\t\tlist = [];\n\t\t\t\t\tfor (let i=0;i<selection.length; i++)\n\t\t\t\t\t\thash[selection[i]]=true;\n\t\t\t\t\tfor (let i = 0; i<this.data.order.length; i++){\n\t\t\t\t\t\tvar hash_id = this.data.order[i];\n\t\t\t\t\t\tif (hash[hash_id])\n\t\t\t\t\t\t\tlist.push(hash_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//save initial dnd params\n\t\t\tvar context = DragControl._drag_context = { source:list, start:id };\n\t\t\tcontext.from = this;\n\n\t\t\tif (this.callEvent(\"onBeforeDrag\",[context,e])){\n\t\t\t\tif (Touch._start_context)\n\t\t\t\t\tdelay(function(){ Touch._start_context = null; });\n\n\t\t\t\t//set drag representation\n\t\t\t\treturn context.html||this.$dragHTML(this.getItem(id), e, context);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t$dragHTML:function(obj,e,context){\n\t\tlet html = this._toHTML(obj);\n\t\tif ( isArray(context.source) && context.source.length > 1 )\n\t\t\thtml = this._toMultipleHTML(html, context.source.length);\n\t\treturn html;\n\t},\n\t_toMultipleHTML:function(html, len){\n\t\thtml = \"<div class='webix_drag_main'>\"+html+\"</div>\";\n\t\tlet multiple = \"<div class='webix_drag_multiple'></div>\";\n\t\tif ( len > 2 )\n\t\t\tmultiple = \"<div class='webix_drag_multiple_last'></div>\" + multiple;\n\t\treturn multiple+html+\"<span class='webix_badge'>\"+len+\"</span>\";\n\t},\n\t$dragMark:function(context){\n\t\tvar target = null;\n\t\tif (context.target)\n\t\t\ttarget = this._target_to_id(context.target);\n\n\t\t//touch webkit will stop touchmove event if source node removed\n\t\tif (this._marked && this._marked != target){\n\t\t\tthis._remove_css([this._marked], \"webix_drag_over\", true);\n\t\t\tthis._marked = null;\n\t\t}\n\n\t\tif (!this._marked && target){\n\t\t\tthis._marked = target;\n\t\t\tthis._add_css([target], \"webix_drag_over\", true);\n\t\t\treturn target;\n\t\t}\n\t\t\n\t\treturn !!context.to;\n\t},\n\t_add_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.addCss(source[i], css);\n\t},\n\t_remove_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.removeCss(source[i], css);\n\t},\n\n\t// methods used in order/move modes\n\t$dropHTML: function(){\n\t\treturn \"\";\n\t},\n\t_set_drop_area:function(target, t){\n\t\tconst node = this.getItemNode(target);\n\t\tif (node){\n\t\t\tnode.parentNode.insertBefore(DragControl._dropHTML[0], node);\n\t\t} else t.children[0].appendChild(DragControl._dropHTML[0]);\n\t}\n};\n\nexport default DragItem;","import {offset, pos, remove} from \"../webix/html\";\nimport {isArray} from \"../webix/helpers\";\nimport {define} from \"../services\";\n\nimport DragItem from \"../core/dragitem\";\nimport DragControl from \"../core/dragcontrol\";\n\nconst DragOrder ={\n\t$drag: function(s,e){\n\t\tlet html = DragItem.$drag.apply(this, arguments);\n\t\tif (!html) return html;\n\n\t\tlet context = DragControl._drag_context;\n\n\t\tif (this._close_branches)\n\t\t\tthis._close_branches(context);\n\n\t\tif (this._inner_drag_only && this.getBranchIndex)\n\t\t\tthis._drag_order_stored_left = this._drag_order_complex?((this.getItem(context.start).$level+1) * 20 + 8):0;\n\n\t\tif (isArray(context.source)){\n\t\t\tDragControl._setDragOffset(e);\n\t\t\tthis._add_css(context.source, \"webix_invisible\");\n\t\t}\n\t\treturn html;\n\t},\n\t$dragIn:function(s,t,e){\n\t\tlet html = DragItem.$dragIn.apply(this, arguments);\n\t\tif (!html) return html;\n\n\t\tif (!DragControl._dropHTML)\n\t\t\tDragControl._dropHTML = this._init_drop_area();\n\n\t\tlet context = DragControl._drag_context;\n\t\tlet target = \"$webix-last\";\n\t\tif (context.target)\n\t\t\ttarget = this._target_to_id(context.target);\n\n\t\tif (target != \"$webix-last\" && target != \"$webix-drop\"){\n\t\t\tlet settings = {direction:this._settings.layout||this._drag_direction||\"y\", x:\"width\", y:\"height\"};\n\t\t\tlet ofs = offset(html);\n\t\t\tlet direction = pos(e)[settings.direction] - ofs[settings.direction];\n\t\t\tif ( direction*2 > ofs[settings[settings.direction]] )\n\t\t\t\ttarget = this.getNextId(target) || \"$webix-last\";\n\t\t}\n\n\t\tif (target == this._marked_item_id || target == \"$webix-drop\")\n\t\t\treturn html;\n\n\t\tthis._marked_item_id = target;\n\t\tthis._set_drop_area(target, t);\n\n\t\treturn html;\n\t},\n\t$dragPos:function(pos){\n\t\tif (!this._inner_drag_only){\n\t\t\tlet context = DragControl._drag_context;\n\t\t\tpos.y += context.y_offset;\n\t\t\tpos.x += context.x_offset;\n\t\t\treturn;\n\t\t}\n\n\t\tlet box = offset(this.$view);\n\t\tlet xdrag = (this._settings.layout == \"x\");\n\n\t\tif (xdrag){\n\t\t\tbox.x -= 12;\n\t\t\tpos.y = box.y - 8;\n\t\t\tpos.x = pos.x - 18;\n\n\t\t\tif (pos.x < box.x)\n\t\t\t\tpos.x = box.x;\n\t\t\telse {\n\t\t\t\tlet max = box.x + box.width;\n\t\t\t\tif (pos.x > max)\n\t\t\t\t\tpos.x = max;\n\t\t\t}\n\t\t} else {\n\t\t\tbox.y += (this._header_height||0) - 12;\n\t\t\tpos.x = box.x + 8 + (this._drag_order_stored_left||0);\n\t\t\tpos.y = pos.y - 18;\n\n\t\t\tif (pos.y < box.y)\n\t\t\t\tpos.y = box.y;\n\t\t\telse {\n\t\t\t\tlet max = box.y + box.height - (this._header_height||0);\n\t\t\t\tif (pos.y > max)\n\t\t\t\t\tpos.y = max;\n\t\t\t}\n\t\t}\n\t},\n\t$dragOut:function(s,ot,nt){\n\t\tif (ot != nt){\n\t\t\tif (this._remove_drop_area) this._remove_drop_area();\n\t\t\telse remove(DragControl._dropHTML);\n\t\t\tthis._marked_item_id = DragControl._dropHTML = null;\n\t\t}\n\t\treturn DragItem.$dragOut.apply(this, arguments);\n\t},\n\t_define_index:function(s,t,context){\n\t\tvar target = this._marked_item_id == \"$webix-last\" ? null : this._marked_item_id;\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (target){\n\t\t\t\tcontext.parent = this.getParentId(target);\n\t\t\t\tcontext.index = this.getBranchIndex(target);\n\t\t\t\tif (s == t && this.getParentId(context.start) == context.parent && this.getBranchIndex(context.start) < context.index)\n\t\t\t\t\tcontext.index -= 1;\n\t\t\t} else context.index = -1;\n\t\t} else {\n\t\t\tcontext.index = target?this.getIndexById(target):this.count();\n\t\t\tcontext.index -= (s == t && this.getIndexById(context.start)<context.index?1:0);\n\t\t}\n\t},\n\t$dragDestroy: function(){\n\t\tconst context = DragControl._drag_context;\n\n\t\tif (isArray(context.source))\n\t\t\tthis._remove_css(context.source, \"webix_invisible\");\n\n\t\tif (this._settings.dynamic)\n\t\t\tthis.render(null, null, \"drag-end\");\n\n\t\tremove(DragControl._html);\n\t},\n\t_init_drop_area: function(){\n\t\tlet node = document.createElement(\"div\");\n\t\tnode.className = \"webix_drop_area\";\n\t\tnode.style.width = this.type.width + \"px\";\n\t\tnode.style.height = this.type.height + \"px\";\n\t\tnode.innerHTML = this.$dropHTML();\n\t\tnode.setAttribute(this._id, \"$webix-drop\");\n\n\t\treturn [node];\n\t},\n\t$dragMark: function(){\n\t\treturn false;\n\t}\n};\n\ndefine(\"DragOrder\", DragOrder);\n\nexport default DragOrder;","import {create} from \"../webix/html\";\nimport {isArray, isUndefined, copy, toNode, delay, extend} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nfunction init_suggest(editor, input){\n\tconst suggest = editor.config.suggest;\n\tif (suggest){\n\t\tconst box = editor.config.suggest = create_suggest(suggest);\n\t\tconst boxobj = $$(box);\n\t\tif (boxobj && input)\n\t\t\tboxobj.linkInput(input);\n\t\treturn boxobj;\n\t}\n}\n\nfunction attach_editend(suggest){\n\tif (suggest && suggest.setMasterValue && !suggest._editor_initialized){\n\t\tsuggest._editor_initialized = true;\n\t\tsuggest.attachEvent(\"onValueSuggest\", function(){\n\t\t\tdelay(()=>callEvent(\"onEditEnd\", []));\n\t\t});\n\t}\n}\n\nfunction create_suggest(config){\n\tif (typeof config == \"string\") return config;\n\tif (config.linkInput) return config._settings.id;\n\n\tif (typeof config == \"object\"){\n\t\tif (isArray(config))\n\t\t\tconfig = { data: config };\n\t\tconfig.view = config.view || \"suggest\";\n\t} else if (config === true)\n\t\tconfig = { view:\"suggest\" };\n\n\tconst obj = ui(config);\n\treturn obj.config.id;\n}\n\nfunction getLabel(config){\n\tconst text = (config.header && config.header[0]) ? config.header[0].text : config.editValue||config.label;\n\treturn (text || \"\").toString().replace(/<[^>]*>/g, \"\");\n}\n\n/*\nthis.node - html node, available after render call\nthis.config - editor config\nthis.value - original value\nthis.popup - id of popup \n*/\nconst editors = {\n\t\"text\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t\tthis.getInputNode(this.node).select();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode(this.node).value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tconst input = this.getInputNode(this.node);\n\t\t\tinput.value = value;\n\n\t\t\tconst suggest = init_suggest(this, input);\n\t\t\tattach_editend(suggest);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<input type='text' aria-label='\"+getLabel(this.config)+\"'>\");\n\t\t}\n\t},\n\t\"inline-checkbox\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.checked;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"inline-text\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.value;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t\tthis.node.select();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"checkbox\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().checked;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().checked = !!value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<div><input type='checkbox' aria-label='\"+getLabel(this.config)+\"'></div>\");\n\t\t}\n\t},\n\t\"select\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().value = value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\tlet html = \"\";\n\t\t\tconst options = this.config.options || this.config.collection;\n\t\t\tassert(options,\"options not defined for select editor\");\n\n\t\t\tif (options.data && options.data.each)\n\t\t\t\toptions.data.each(function(obj){\n\t\t\t\t\thtml +=\"<option value='\"+obj.id+\"'>\"+obj.value+\"</option>\";\n\t\t\t\t});\n\t\t\telse {\n\t\t\t\tif (isArray(options)){\n\t\t\t\t\tfor (let i = 0; i < options.length; i++){\n\t\t\t\t\t\tconst rec = options[i];\n\t\t\t\t\t\tconst isplain = isUndefined(rec.id);\n\t\t\t\t\t\tconst id = isplain ? rec : rec.id;\n\t\t\t\t\t\tconst label = isplain ? rec : rec.value;\n\n\t\t\t\t\t\thtml +=\"<option value='\"+id+\"'>\"+label+\"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else for (let key in options){\n\t\t\t\t\thtml +=\"<option value='\"+key+\"'>\"+options[key]+\"</option>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<select aria-label='\"+getLabel(this.config)+\"'>\"+html+\"</select>\");\n\t\t}\n\t},\n\tpopup:{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tdestroy:function(){\n\t\t\tthis.getPopup().hide();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().getValue()||\"\";\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getPopup().show(this.node);\n\t\t\tthis.getInputNode().setValue(value);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.getPopup().getChildViews()[0];\n\t\t},\n\t\tgetPopup:function(){\n\t\t\tlet id = this.config.$popup;\n\n\t\t\tif (!(id && $$(id)))\n\t\t\t\tid = this.config.$popup = this.createPopup();\n\n\t\t\treturn $$(id);\n\t\t},\n\t\tcreatePopup:function(){\n\t\t\tconst popup = this.config.popup || this.config.suggest;\n\t\t\tif (popup){\n\t\t\t\tlet pobj;\n\t\t\t\tif (typeof popup == \"object\" && !popup.name){\n\t\t\t\t\tpopup.view = popup.view || \"suggest\";\n\t\t\t\t\tpobj = ui(copy(popup));\n\t\t\t\t} else\n\t\t\t\t\tpobj = $$(popup);\n\n\t\t\t\t//custom popup may be linked already\n\t\t\t\tif(!pobj._linked){\n\t\t\t\t\tif (pobj.linkInput)\n\t\t\t\t\t\tpobj.linkInput(document.body);\n\t\t\t\t\telse if(this.linkInput)\n\t\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\t\tpobj._linked = true;\n\t\t\t\t}\n\t\t\t\tattach_editend(pobj);\n\n\t\t\t\treturn pobj;\n\t\t\t}\n\n\t\t\tconst editor = editors.$popup[this.popupType];\n\t\t\tlet popupId = editor.$popup;\n\n\t\t\tif(!(popupId && $$(popupId))){\n\t\t\t\tconst popup = ui(copy(editor));\n\t\t\t\tif(!popup.linkInput && !popupId)\n\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\teditor.$popup = popupId = popup._settings.id;\n\t\t\t\tthis.popupInit(popup);\n\t\t\t}\n\n\t\t\treturn popupId;\n\t\t},\n\t\tlinkInput:function(node){\n\t\t\t_event(toNode(node), \"keydown\", e => {\n\t\t\t\t//abort, when editor was not initialized yet\n\t\t\t\tif (!this.config.$popup) return;\n\n\t\t\t\tconst code = e.which || e.keyCode, list = this.getInputNode();\n\t\t\t\tif(!list.isVisible()) return;\n\n\t\t\t\tif(list.moveSelection && code < 41 && code > 32){\n\t\t\t\t\tlet dir;\n\t\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\t\telse if(code == 34) dir = \"pgdown\";\n\t\t\t\t\telse if(code == 35) dir = \"bottom\";\n\t\t\t\t\telse if(code == 36) dir = \"top\";\n\t\t\t\t\telse if(code == 37) dir = \"left\";\n\t\t\t\t\telse if(code == 38) dir = \"up\";\n\t\t\t\t\telse if(code == 39) dir = \"right\";\n\t\t\t\t\telse if(code == 40) dir = \"down\";\n\n\t\t\t\t\tlist.moveSelection(dir);\n\t\t\t\t}\n\t\t\t\t// shift+enter support for 'popup' editor\n\t\t\t\telse if(code === 13 && ( e.target.nodeName !==\"TEXTAREA\" || !e.shiftKey))\n\t\t\t\t\tcallEvent(\"onEditEnd\", []);\n\t\t\t\n\t\t\t});\n\t\t},\n\n\t\tpopupInit:function(){},\n\t\tpopupType:\"text\",\n\t\trender:function(){ return {}; },\n\t\t$inline:true\n\t}\n};\n\neditors.color = extend({\n\tfocus:function(){},\n\tpopupType:\"color\",\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onItemClick\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.date = extend({\n\tfocus:function(){},\n\tpopupType:\"date\",\n\tsetValue:function(value){\n\t\tthis._is_string = this.config.stringResult || (value && typeof value == \"string\");\n\t\teditors.popup.setValue.call(this, value);\n\t},\n\tgetValue:function(){\n\t\treturn this.getInputNode().getValue(this._is_string?i18n.parseFormatStr:\"\")||\"\";\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onAfterDateSelect\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.combo = extend({\n\t_create_suggest:function(config){\n\t\tlet suggest, id;\n\t\tif (this.config.popup){\n\t\t\tsuggest = this.config.popup;\n\t\t\tid = suggest.config.id;\n\t\t}\n\t\telse if (config){\n\t\t\tid = create_suggest(config);\n\t\t\tsuggest = $$(id);\n\t\t} else\n\t\t\tid = this._shared_suggest(config);\n\n\t\tattach_editend(suggest);\n\t\treturn id;\n\t},\n\t_shared_suggest:function(){\n\t\tconst e = editors.combo;\n\n\t\tif(e._suggest && $$(e._suggest))\n\t\t\treturn e._suggest;\n\n\t\treturn e._suggest = this._create_suggest(true);\n\t},\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor\"\n\t\t}, \"<input type='text' role='combobox' aria-label='\"+getLabel(this.config)+\"'>\");\n\n\t\t//save suggest id for future reference\t\t\n\t\tconst suggest = this.config.suggest = this._create_suggest(this.config.suggest);\n\n\t\tif (suggest){\n\t\t\t$$(suggest).linkInput(node.firstChild, true);\n\t\t\t_event(node.firstChild, \"click\", () => this.showPopup());\n\t\t}\n\t\treturn node;\n\t},\n\tgetPopup:function(){\n\t\treturn $$(this.config.suggest);\n\t},\n\tshowPopup:function(){\n\t\tconst popup = this.getPopup();\n\t\tconst list = popup.getList();\n\t\tconst input = this.getInputNode();\n\t\tconst value = this._initial_value;\n\n\t\tpopup.show(input);\n\t\tinput.setAttribute(\"aria-expanded\", \"true\");\n\t\tif (value){\n\t\t\tassert(list.exists(value), \"Option with ID \"+value+\" doesn't exist\");\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t\tpopup._last_input_target = input;\n\t},\n\tafterRender:function(){\n\t\tthis.showPopup();\n\t},\n\tsetValue:function(value){\n\t\tthis._initial_value = value;\n\t\tif (this.config.suggest){\n\t\t\tconst sobj = $$(this.config.suggest);\n\t\t\tconst data = this.config.collection || this.config.options;\n\t\t\tif (data)\n\t\t\t\tsobj.getList().data.importData(data);\n\n\t\t\tthis.getInputNode(this.node).value = sobj.getItemText(value);\n\t\t}\n\t},\n\tgetValue:function(){\n\t\tlet value = this.getInputNode().value;\n\t\tif (this.config.suggest){\n\t\t\tconst suggest = $$(this.config.suggest),\n\t\t\t\tlist = suggest.getList();\n\t\t\tif (value || (list.getSelectedId && list.getSelectedId()))\t\n\t\t\t\tvalue = suggest.getSuggestion(value);\n\t\t}\n\t\treturn value;\n\t}\n}, editors.text);\n\neditors.richselect = extend({\n\tfocus:function(){},\n\tgetValue:function(){\n\t\treturn this.getPopup().getValue();\n\t},\n\tsetValue:function(value){\n\t\tconst suggest = this.config.collection || this.config.options;\n\t\tthis.getInputNode();\n\t\tif (suggest)\n\t\t\tthis.getPopup().getList().data.importData(suggest);\n\n\t\tthis.getPopup().show(this.node);\n\t\tthis.getPopup().setValue(value);\n\t},\n\tgetInputNode:function(){\n\t\treturn this.getPopup().getList();\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.linkInput(document.body);\n\t\tattach_editend(popup);\n\t},\n\tpopupType:\"richselect\"\n}, editors.popup);\n\neditors.password = extend({\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor webix_password_editor\"\n\t\t}, \"<input type='password' aria-label='\"+getLabel(this.config)+\"'><span class='webix_icon wxi-eye'></span>\");\n\n\t\tconst icon = node.querySelector(\".webix_icon\");\n\t\t_event(icon, \"click\", () => {\n\t\t\tthis.toggleInput();\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t});\n\t\treturn node;\n\t},\n\ttoggleInput:function(){\n\t\tconst input = this.getInputNode(this.node);\n\t\tconst isPassword = input.getAttribute(\"type\") === \"password\";\n\t\tinput.setAttribute(\"type\", isPassword ? \"text\" : \"password\");\n\n\t\tconst icon = input.nextSibling;\n\t\ticon.className = `webix_icon wxi-eye${isPassword ? \"-slash\" : \"\"}`;\n\t},\n\tmasterFormat: function(value){\n\t\treturn !value && value !== 0 ? \"\" : \"&bull;\".repeat(value.toString().length);\n\t}\n}, editors.text);\n\neditors.$popup = {\n\ttext:{\n\t\tview:\"popup\", width:250, height:150,\n\t\tbody:{ view:\"textarea\" }\n\t},\n\tcolor:{\n\t\tview:\"popup\",\n\t\tbody:{ view:\"colorboard\" }\n\t},\n\tdate:{\n\t\tview:\"popup\", width:250, height:250, padding:0,\n\t\tbody:{ view:\"calendar\", icons:true, borderless:true }\n\t},\n\trichselect:{\n\t\tview:\"suggest\",\n\t\tbody:{ view:\"list\", select:true }\n\t},\n\tmultiselect:{\n\t\tview:\"multisuggest\",\n\t\tsuggest:{\n\t\t\tbutton:true\n\t\t}\n\t}\n};\n\nexport default editors;","import {remove, removeCss, addCss} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {extend, bind, delay, isUndefined} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {attachEvent, callEvent, detachEvent} from \"../webix/customevents\";\nimport Undo from \"../core/undo\";\n\n\nimport globalState from \"../core/state\";\nimport editors from \"../webix/editors\";\n/*\n\tBehavior:EditAbility - enables item operation for the items\n\t\n\t@export\n\t\tedit\n\t\tstopEdit\n*/\n\nconst EditAbility ={\n\tdefaults:{\n\t\teditaction:\"click\"\n\t},\n\t$init:function(config){\n\t\tthis._editors = {};\n\t\tthis._in_edit_mode = 0;\n\t\tthis._edit_open_time = 0;\n\t\tthis._contentobj.style.position = \"relative\";\n\t\tif (config)\n\t\t\tconfig.onDblClick = config.onDblClick || {};\n\n\t\tthis.attachEvent(\"onAfterRender\", this._refocus_inline_editor);\n\n\t\t//when we call extend the editable prop can be already set\n\t\tif (this._settings.editable)\n\t\t\tthis._init_edit_events_once();\n\n\t\textend(this,Undo);\n\t},\n\t_try_reselecting_text:function(input, start){\n\t\ttry {\t\t\t//Chrome throws an error if selectionStart is not accessible\n\t\t\tif (typeof input.selectionStart === \"number\") {\n\t\t\t\tinput.selectionStart = start >= 0 ? start : input.value.length;\n\t\t\t\tinput.selectionEnd = input.value.length;\n\t\t\t}\n\t\t} catch(e){}\t// eslint-disable-line\n\t},\n\t_refocus_inline_editor:function(){\n\t\tconst editor = this.getEditor();\n\t\tif (editor && editor.$inline && !editor.getPopup){\n\t\t\tconst newnode = this._locateInput(editor);\n\t\t\tif (newnode && newnode != editor.node){\n\t\t\t\teditor.node = newnode;\n\t\t\t\tnewnode.focus();\n\n\t\t\t\tconst justOpened = (new Date())-this._edit_open_time > 200;\n\t\t\t\tthis._try_reselecting_text(newnode, justOpened ? -1 : 0);\n\t\t\t}\n\t\t}\n\t},\n\teditable_setter:function(value){\n\t\tif (value)\n\t\t\tthis._init_edit_events_once();\n\t\treturn value;\n\t},\n\t_init_edit_events_once:function(){\n\t\t//will close editor on any click outside\n\t\tconst e1 = attachEvent(\"onEditEnd\", bind(function(){\n\t\t\tif (this._in_edit_mode)\n\t\t\t\tthis.editStop();\n\t\t}, this));\n\t\tconst e2 = attachEvent(\"onClick\", bind(function(e){\n\t\t\t//but ignore click which opens editor\n\t\t\tif (this._in_edit_mode && (new Date())-this._edit_open_time > 200){\n\t\t\t\tif (!this._last_editor || this._last_editor.popupType || !e || ( !this._last_editor.node || !this._last_editor.node.contains(e.target)))\n\t\t\t\t\tthis.editStop();\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.attachEvent(\"onDestruct\", function(){ detachEvent(e1); detachEvent(e2); });\n\t\t\n\t\t//property sheet has simple data object, without events\n\t\tif (this.data.attachEvent)\n\t\t\tthis.data.attachEvent(\"onIdChange\", bind(function(oldid, newid){\n\t\t\t\tthis._changeEditorId(oldid, newid);\n\t\t\t}, this));\n\n\t\t//when clicking on row - will start editor\n\t\tthis.attachEvent(\"onItemClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"click\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\tthis.attachEvent(\"onItemDblClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"dblclick\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\t//each time when we clicking on input, reset timer to prevent self-closing\n\t\tthis._reset_active_editor = bind(function(){\n\t\t\tthis._edit_open_time = new Date();\n\t\t},this);\n\n\t\tthis._init_edit_events_once = function(){};\n\n\t\tif (this._component_specific_edit_init)\n\t\t\tthis._component_specific_edit_init();\n\t},\n\t_handle_live_edits:function(){\n\t\tdelay(function(){\n\t\t\tvar editor = this.getEditor();\n\t\t\tif (editor && editor.config.liveEdit){\n\t\t\t\tvar state = { value:editor.getValue(), old: editor.value };\n\t\t\t\tif (state.value == state.old) return;\n\n\t\t\t\teditor.value = state.value;\n\t\t\t\tthis._set_new_value(editor, state.value, false);\n\t\t\t\tthis.callEvent(\"onLiveEdit\", [state, editor]);\n\t\t\t}\n\t\t}, this);\n\t},\n\t_show_editor_form:function(id){\n\t\tvar form = this._settings.form;\n\t\tif (typeof form != \"string\")\n\t\t\tthis._settings.form = form = ui(form).config.id;\n\n\t\tform = $$(form);\n\t\tvar realform = form.setValues?form:form.getChildViews()[0];\n\t\t\n\t\trealform.setValues(this.getItem(id.row || id), false, \"auto\");\n\t\tform.config.master = this.config.id;\n\t\tform.show( this.getItemNode(id) );\n\n\t\tvar first = realform.getChildViews()[0];\n\t\tif (first.focus)\n\t\t\tfirst.focus();\n\t},\n\tedit:function(id, preserve, show){\n\t\tif (!this._settings.editable || !this.callEvent(\"onBeforeEditStart\", [id])) return false;\n\t\tif (this._settings.form)\n\t\t\treturn this._show_editor_form(id);\n\n\t\tvar editor = this._get_editor_type(id);\n\t\tif (editor){\n\t\t\tif (this.getEditor(id)) return;\n\t\t\tif (!preserve) this.editStop();\n\n\t\t\t//render html input\n\t\t\tassert(editors[editor], \"Invalid editor type: \"+editor);\n\t\t\tvar type = extend({}, editors[editor]);\n\n\t\t\tvar node = this._init_editor(id, type, show);\n\t\t\tif (type.config.liveEdit)\n\t\t\t\tthis._live_edits_handler = this.attachEvent(\"onKeyPress\", this._handle_live_edits);\n\n\t\t\tvar area = type.getPopup?type.getPopup(node)._viewobj:node;\n\n\t\t\tif (area)\n\t\t\t\t_event(area, \"click\", this._reset_active_editor);\n\t\t\tif (node)\n\t\t\t\t_event(node, \"input\", this._on_editor_change, { bind:{ view:this, id:id }});\n\t\t\tif (show !== false)\n\t\t\t\ttype.focus();\n\n\t\t\tif (this.$fixEditor)\n\t\t\t\tthis.$fixEditor(type);\n\n\t\t\t//save time of creation to prevent instant closing from the same click\n\t\t\tthis._edit_open_time = globalState.edit_open_time = new Date();\n\n\t\t\tUIManager.setFocus(this, true);\n\t\t\tthis.callEvent(\"onAfterEditStart\", [id]);\n\t\t\treturn type;\n\t\t}\n\t\treturn null;\n\t},\n\tgetEditor:function(id){\n\t\tif (!id)\n\t\t\treturn this._last_editor;\n\n\t\treturn this._editors[id];\n\t},\n\t_changeEditorId:function(oldid, newid)\t{\n\t\tvar editor = this._editors[oldid];\n\t\tif (editor){\n\t\t\tthis._editors[newid] = editor;\n\t\t\teditor.id = newid;\n\t\t\tdelete this._editors[oldid];\n\t\t}\n\t},\n\t_on_editor_change:function(){\n\t\tif (this.view.hasEvent(\"onEditorChange\"))\n\t\t\tthis.view.callEvent(\"onEditorChange\", [this.id, this.view.getEditorValue(this.id) ]);\n\t},\n\t_get_edit_config:function(){\n\t\treturn this._settings;\n\t},\n\t_init_editor:function(id, type, show){\n\t\ttype.config = this._get_edit_config(id);\n\t\tvar node = type.render();\n\n\t\tif (type.$inline)\n\t\t\tnode = this._locateInput(id);\n\t\ttype.node = node;\n\n\t\tvar item = this.getItem(id);\n\t\t//value can be configured by editValue option\n\t\tvar value = item[this._settings.editValue||\"value\"];\n\t\t//if property was not defined - use empty value\n\t\tif (isUndefined(value))\n\t\t\tvalue = \"\";\n\n\t\ttype.setValue(value, item);\n\t\ttype.value = value;\n\n\t\tthis._addEditor(id, type);\n\n\t\tif(type.getPopup){\n\t\t\tconst popup = type.getPopup();\n\t\t\tpopup.attachEvent(\"onHide\", function(){\n\t\t\t\tif(this._edit_active) this.show();\n\t\t\t});\n\t\t\tpopup._editorMaster = this._settings.id;\n\t\t}\n\n\t\t//show it over cell\n\t\tif (show !== false)\n\t\t\tthis.showItem(id);\n\t\tif (!type.$inline)\n\t\t\tthis._sizeToCell(id, node, true);\n\n\t\tif (type.afterRender)\n\t\t\ttype.afterRender();\n\t\treturn node;\n\t},\n\t_locate_cell:function(id){\n\t\treturn this.getItemNode(id);\n\t},\n\t_locateInput:function(id){\n\t\tvar cell = this._locate_cell(id);\n\t\tif (cell)\n\t\t\tcell = cell.getElementsByTagName(\"input\")[0] || cell;\n\n\t\treturn cell;\n\t},\n\t_get_editor_type:function(){\n\t\treturn this._settings.editor;\n\t},\n\t_addEditor:function(id, type){\n\t\ttype.id = id;\n\t\tthis._editors[id]= this._last_editor = type;\n\t\tthis._in_edit_mode++;\n\t},\n\t_removeEditor:function(editor){\n\t\tif (this._last_editor == editor)\n\t\t\tthis._last_editor = 0;\n\t\t\n\t\tif (editor.destroy)\n\t\t\teditor.destroy();\n\n\t\tdelete editor.popup;\n\t\tdelete editor.node;\n\n\t\tdelete this._editors[editor.id];\n\t\tthis._in_edit_mode--;\n\t},\n\tfocusEditor:function(){\n\t\tvar editor = this.getEditor.apply(this, arguments);\n\t\tif (editor && editor.focus)\n\t\t\teditor.focus();\n\t},\n\teditCancel:function(){\n\t\tthis.editStop(null, null, true);\n\t},\n\t_applyChanges: function(el){\n\t\tif (el){\n\t\t\tvar ed = this.getEditor();\n\t\t\tif (ed && ed.getPopup && ed.getPopup() == el.getTopParentView()) return;\n\t\t}\n\t\tthis.editStop();\n\t},\n\teditStop:function(id){\n\t\tif (this._edit_stop) return;\n\t\tthis._edit_stop = 1;\n\n\n\t\tvar cancel = arguments[2];\n\t\tvar result = 1;\n\t\tif (!id){\n\t\t\tthis._for_each_editor(function(editor){\n\t\t\t\tresult = result * this._editStop(editor, cancel);\n\t\t\t});\n\t\t} else \n\t\t\tresult = this._editStop(this._editors[id], cancel);\n\n\t\tthis._edit_stop = 0;\n\t\treturn result;\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft, \n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.offsetHeight,\n\t\t\twidth:html.offsetWidth,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_sizeToCell:function(id, node, inline){\n\t\t//fake inputs\n\t\tif (!node.style) return;\n\n\t\tvar pos = this._cellPosition(id, null, true);\n\n\t\tnode.style.top = pos.top + \"px\";\n\t\tnode.style.left = pos.left + \"px\";\n\n\t\tnode.style.width = pos.width-1+\"px\";\n\t\tnode.style.height = pos.height-1+\"px\";\n\n\t\tnode.top = pos.top; //later will be used during y-scrolling\n\n\t\tif (inline) pos.parent.appendChild(node);\n\t\treturn pos;\n\t},\n\t_for_each_editor:function(handler){\n\t\tfor (var editor in this._editors)\n\t\t\thandler.call(this, this._editors[editor]);\n\t},\n\t_editStop:function(editor, ignore){\n\t\tif (!editor || globalState._final_destruction) return;\n\t\tvar state = { \n\t\t\tvalue : this._get_new_value(editor), \n\t\t\told : editor.value\n\t\t};\n\n\t\tconst popup = editor.getPopup ? editor.getPopup() : null;\n\n\t\tif (this.callEvent(\"onBeforeEditStop\", [state, editor, ignore])){\n\t\t\tif (!ignore){\n\t\t\t\t//special case, state.old = 0, state.value = \"\"\n\t\t\t\t//we need to state.old to string, to detect the change\n\t\t\t\tvar old = state.old;\n\t\t\t\tif (typeof state.value == \"string\") old += \"\";\n\n\t\t\t\tif (old != state.value || editor.config.liveEdit){\n\t\t\t\t\tvar item = this._set_new_value(editor, state.value, true);\t\n\t\t\t\t\tthis.updateItem(editor.row || editor.id, item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (editor.$inline)\n\t\t\t\teditor.node = null;\n\t\t\telse\n\t\t\t\tremove(editor.node);\n\n\t\t\tif (popup){\n\t\t\t\tpopup.hide();\n\t\t\t\tdelete popup._edit_active;\n\t\t\t}\n\n\t\t\tthis._removeEditor(editor);\n\t\t\tif (this._live_edits_handler)\n\t\t\t\tthis.detachEvent(this._live_edits_handler);\n\n\t\t\tthis.callEvent(\"onAfterEditStop\", [state, editor, ignore]);\n\t\t\treturn 1;\n\t\t}\n\t\telse if(popup){\n\t\t\tif(!popup.isVisible())\n\t\t\t\tpopup.show();\n\t\t\teditor.getPopup()._edit_active = true;\n\n\t\t}\n\t\treturn 0;\n\t},\n\tvalidateEditor:function(id){\n\t\tlet result = true;\n\t\tif (this._settings.rules){\n\t\t\tconst editor = this.getEditor(id);\n\t\t\tconst key = editor.column||this._settings.editValue||\"value\";\n\t\t\tconst rule = this._settings.rules[key];\n\t\t\tconst all = this._settings.rules.$all;\n\t\t\tconst input = editor.getInputNode();\n\n\t\t\tif ((rule || all) && !input._viewobj){ //only for html inputs\n\t\t\t\tconst obj = this.data.getItem(editor.row||editor.id);\n\t\t\t\tconst value = editor.getValue();\n\n\t\t\t\tif (rule)\n\t\t\t\t\tresult = rule.call(this, value, obj, key);\n\t\t\t\tif (all)\n\t\t\t\t\tresult = all.call(this, value, obj, key) && result;\n\t\t\t\n\t\t\t\tif (result)\n\t\t\t\t\tremoveCss(input, \"webix_invalid\");\n\t\t\t\telse\n\t\t\t\t\taddCss(input, \"webix_invalid\");\n\n\t\t\t\tcallEvent(\"onLiveValidation\", [editor, result, obj, value]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tgetEditorValue:function(id){\n\t\tvar editor;\n\t\tif (arguments.length === 0)\n\t\t\teditor = this._last_editor;\n\t\telse\n\t\t\teditor = this.getEditor(id);\n\n\t\tif (editor)\n\t\t\treturn editor.getValue();\n\t},\n\tgetEditState:function(){\n\t\treturn this._last_editor || false;\n\t},\n\teditNext:function(next, from){\n\t\treturn this._edit_next(next, from);\n\t},\n\t_edit_next:function(next, from){\n\t\tnext = next !== false; //true by default\n\t\tif (this._in_edit_mode == 1 || from){\n\t\t\t//only if one editor is active\n\t\t\tconst editor_next = this._find_cell_next((this._last_editor || from ), function(id){\n\t\t\t\tif (this._get_editor_type(id))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t}, next);\n\n\t\t\tif (this.editStop()){\t//if we was able to close previous editor\n\t\t\t\tif (editor_next){\t//and there is a new target\n\t\t\t\t\tconst result = this.edit(editor_next);\t//init new editor\n\t\t\t\t\tthis._after_edit_next(editor_next);\n\t\t\t\t\tif(result === false)\n\t\t\t\t\t\treturn this._edit_next(next, editor_next);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t//stab, used in datatable\n\t_after_edit_next:function(){},\n\t_find_cell_next:function(start, check, direction){\n\t\tvar row = this.getIndexById(start.id);\n\t\tvar order = this.data.order;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t_get_new_value(editor){\n\t\treturn editor.getValue();\n\t},\n\t_set_new_value:function(editor, new_value, copy){\n\t\tvar item = copy ? {} : this.getItem(editor.id);\n\t\titem[this._settings.editValue||\"value\"] = new_value;\n\t\treturn item;\n\t}\n};\n\nexport default EditAbility;","import {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\n\nconst FlexLayout = {\n\t$init:function(){\n\t\tthis.$view.className += \" webix_flexlayout\";\n\t},\n\t_fix_vertical_layout:function(){\n\n\t},\n\t_beforeResetBorders:function(){\n\n\t},\n\t_afterResetBorders:function(){\n\n\t},\n\t$getSize:function(){\n\t\tif (DEBUG) debug_size_box_start(this, true);\n\t\t\n\t\tvar w=0, h=0, g = this._settings.gravity;\n\t\tthis._sizes = [];\n\n\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\tvar size = this._cells[i].$getSize(0,0);\n\t\t\tthis._sizes.push(size);\n\n\t\t\tw = Math.max(w, size[0]);\n\t\t\th = Math.max(h, size[2]);\n\t\t}\n\n\t\tw += this._padding.left + this._padding.right;\n\t\th += this._padding.top + this._padding.bottom;\n\n\t\tif (this._settings.width)\n\t\t\tw = Math.max(w, this._settings.width);\n\t\tif (this._settings.height)\n\t\t\th = Math.max(h, this._settings.height);\n\n\t\tvar self_size = [w, 100000, h, 100000, g];\n\t\tif (DEBUG) debug_size_box_end(this, self_size);\n\t\treturn self_size;\n\t},\n\trender:function(){ this.resize(); },\n\t_set_child_size:function(){\n\t\tif (!this.isVisible(this._settings.id)) return;\n\t\tvar st = this.$view.style;\n\t\tvar margin = Math.round(this._margin/2);\n\t\tst.paddingTop = this._padding.top-margin + \"px\";\n\t\tst.paddingBottom = this._padding.bottom-margin + \"px\";\n\t\tst.paddingLeft = this._padding.left-margin + \"px\";\n\t\tst.paddingRight = this._padding.right-margin + \"px\";\n\n\t\tfor (let i=0; i<this._cells.length; i++){\n\t\t\tif (this._cells[i]._settings.hidden) continue;\n\t\t\tlet view = this._cells[i].$view;\n\t\t\tlet size = this._sizes[i];\n\t\t\tlet config = this._cells[i]._settings;\n\n\t\t\tif (view){\n\t\t\t\tview.style.minWidth = size[0]+\"px\";\n\t\t\t\tif (size[1] < 100000 && size[1] != size[0])\n\t\t\t\t\tview.style.maxWidth = size[1]+\"px\";\n\n\t\t\t\tview.style.flexBasis = config.flexBasis || (size[0])+\"px\";\n\t\t\t\tview.style.flexGrow = config.flexGrow || ((size[1] != size[0]) ? size[4] : 0);\n\t\t\t\tview.style.height = (size[3] != size[2]) ? \"auto\" : (size[2] + \"px\");\n\n\t\t\t\tview.style.minHeight = size[2]+\"px\";\n\t\t\t\tif (size[3] < 100000 && size[3] != size[2])\n\t\t\t\t\tview.style.maxHeight = size[3]+\"px\";\n\n\t\t\t\tview.style.margin = margin + \"px\";\n\t\t\t}\n\t\t}\n\n\t\tvar whs = [];\n\t\tfor (let i=0; i<this._cells.length; i++){\n\t\t\tif (this._cells[i]._settings.hidden) continue;\n\t\t\tlet view = this._cells[i].$view;\n\t\t\twhs[i] = [view.offsetWidth, view.offsetHeight];\n\t\t}\n\t\t\n\t\tfor (let i=0; i<this._cells.length; i++){\n\t\t\tif (this._cells[i]._settings.hidden) continue;\n\t\t\tlet cell = this._cells[i];\n\t\t\tlet view = cell.$view;\n\t\t\tif (view){\n\t\t\t\tcell._settings.flex = true;\n\t\t\t\tlet size = this._sizes[i];\n\t\t\t\tvar h = size[2] == size[3] ? size[2] : whs[i][1];\n\t\t\t\tcell.$setSize(whs[i][0], h);\n\t\t\t\tcell._settings.flex = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.$view.style.height = \"\";\n\t\tthis.$height = this._content_height = this.$view.scrollHeight;\n\t\tthis.$view.style.height = this._content_height+\"px\";\n\t}\n};\n\nexport default FlexLayout;","import {_to_array, uid} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport GroupMethods from \"../core/groupmethods\";\n\n\nconst GroupStore = {\n\t$init:function(){\n\t\tthis.attachEvent(\"onClearAll\", () => this._not_grouped_order = null);\n\t\tthis.attachEvent(\"onSyncApply\", () => this._not_grouped_order = null);\n\t},\n\tungroup:function(target){\n\t\t// reset filters before ungrouping\n\t\tif (this._filter_reset)\n\t\t\tthis._filter_reset(false);\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (!this._ungroupLevel(target)) return;\n\t\t} else {\n\t\t\tif (!this._not_grouped_order) return;\n\n\t\t\tthis.order = this._not_grouped_order;\n\t\t\tthis.pull = this._not_grouped_pull;\n\n\t\t\tthis._not_grouped_order = this._not_grouped_pull = null;\n\t\t}\n\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_ungroupLevel(target){\n\t\tconst parent = target || 0;\n\t\tconst level = parent == \"0\" ? 1 : this.getItem(parent).$level + 1;\n\t\tlet changed = false;\n\t\tconst top = this.branch[parent];\n\t\tlet order = [];\n\n\t\tfor (var i=0; i<top.length; i++){\n\t\t\tconst id = top[i];\n\t\t\tif (this.pull[id].$group){\n\t\t\t\tchanged = true;\n\t\t\t\tvar group = this.branch[id];\n\n\t\t\t\tif (group)\n\t\t\t\t\tthis.branch[id] = group.filter(a => {\n\t\t\t\t\t\tif (!this.pull[a].$footer)\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\tthis._unregisterItem(a);\n\t\t\t\t\t});\n\t\t\t\torder = order.concat(this.branch[id] || []);\n\t\t\t\tthis._unregisterItem(id);\n\t\t\t} else\n\t\t\t\torder.push(id);\n\t\t}\n\n\t\tif (!changed) return false;\n\t\tthis.branch[parent] = order;\n\t\tthis._fix_group_levels(this.branch[parent], parent, level);\n\n\t\tif (typeof target === \"undefined\")\n\t\t\tthis._ungroupLevel();\n\n\t\treturn true;\n\t},\n\t_unregisterItem(id){\n\t\tdelete this.pull[id];\n\t\tdelete this.branch[id];\n\t},\n\t_group_processing:function(scheme){\n\t\tthis.blockEvent();\n\t\tthis.group(scheme);\n\t\tthis.unblockEvent();\n\t},\n\t_group_prop_accessor:function(val){\n\t\tif (typeof val == \"function\")\n\t\t\treturn val;\n\t\tconst acc = function(obj){ return obj[val]; };\n\t\tacc.$name = val;\n\t\treturn acc;\n\t},\t\n\tgroup:function(config, target){\n\t\tassert(config, \"Empty config\");\n\n\t\tlet input;\n\t\tif (typeof config === \"string\"){\n\t\t\tinput = config;\n\t\t\tconfig = { by:this._group_prop_accessor(config), map:{} };\n\t\t} else if (typeof config === \"function\"){\n\t\t\tconfig = { by:config, map:{} };\n\t\t} else if (typeof config.by === \"string\"){\n\t\t\tinput = config.by;\n\t\t\tconfig.by = this._group_prop_accessor(config.by);\n\t\t}\n\t\tconfig.map = config.map || {};\n\t\tif (input && !config.map[input])\n\t\t\tconfig.map[input] = [input];\n\t\tconfig.missing = (config.missing === undefined) ? true : config.missing;\n\n\t\t// reset filters before grouping\n\t\tif (this._filter_reset)\n\t\t\tthis._filter_reset(false);\n\n\t\tif (this.getBranchIndex)\n\t\t\treturn this._group_tree(config, target);\n\t\t\n\t\tif (!this._not_grouped_order){\n\t\t\tthis._not_grouped_order = this.order;\n\t\t\tthis._not_grouped_pull = this.pull;\n\t\t}\n\n\t\tconst groups = {};\n\t\tconst labels = [];\n\t\tconst missed = [];\n\t\tconst misGroup = config.missing;\n\t\tthis.each(function(data){\n\t\t\tlet current = config.by(data);\n\t\t\tif (!current && current !== 0){\n\t\t\t\tif (misGroup === false) return;\n\t\t\t\tif (misGroup === true){\n\t\t\t\t\tmissed.push(data);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrent = misGroup;\n\t\t\t}\n\n\t\t\tif (!groups[current]){\n\t\t\t\tlabels.push({ id:current, value:current, $group:true, $row:config.row });\n\t\t\t\tgroups[current] = _to_array();\n\t\t\t}\n\t\t\tgroups[current].push(data);\n\t\t});\n\n\t\tfor (let i=0; i<labels.length; i++){\n\t\t\tlet group = labels[i];\n\t\t\tthis._map_group(config.map, group, groups[labels[i].id]);\n\n\t\t\tif (this.hasEvent(\"onGroupCreated\"))\n\t\t\t\tthis.callEvent(\"onGroupCreated\", [group.id, group.value, groups[labels[i].id]]);\n\t\t}\n\n\t\tthis.order = _to_array();\n\t\tthis.pull = {};\n\t\tthis._fill_pull(labels);\n\t\tthis._fill_pull(missed);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_fill_pull:function(arr){\n\t\tfor (let i=0; i < arr.length; i++){\n\t\t\tlet id = this.id(arr[i]);\n\t\t\tif (this.pull[id])\n\t\t\t\tid = arr[i].id = uid();\n\n\t\t\tthis.pull[id] = arr[i];\n\t\t\tthis.order.push(id);\n\t\t\tif (this._scheme_init)\n\t\t\t\tthis._scheme_init(arr[i]);\n\t\t}\n\t},\n\t_map_group:function(map, group, data){\n\t\tfor (let prop in map){\n\t\t\tlet functor = (map[prop][1]||\"any\");\n\t\t\tlet property = this._group_prop_accessor(map[prop][0]);\n\t\t\tif (typeof functor != \"function\"){\n\t\t\t\tassert(GroupMethods[functor], \"Unknown grouping rule: \"+functor);\n\t\t\t\tfunctor = GroupMethods[functor];\n\t\t\t}\n\n\t\t\tgroup[prop] = functor.call(this, property, data);\n\t\t}\n\t},\n\t_group_tree:function(config, parent){\n\t\t//prepare\n\t\tlet level = 0;\n\t\tif (parent)\n\t\t\tlevel = this.getItem(parent).$level;\n\t\telse parent = 0;\n\n\t\t//run\n\t\tconst topbranch = [];\n\t\tconst labels = [];\n\t\tconst missed = [];\n\n\t\tlet order = this.branch[parent];\n\t\tlet groups = {};\n\t\tfor (let i=0; i<order.length; i++){\n\t\t\tconst data = this.getItem(order[i]);\n\t\t\tlet current = config.by(data);\n\n\t\t\tif (!current && current !== 0)\n\t\t\t\tif (config.missing === false) continue;\n\t\t\t\telse if (config.missing === true){\n\t\t\t\t\tmissed.push(data.id);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else current = config.missing;\n\n\t\t\tlet ancestor = groups[current];\n\t\t\tif (!ancestor){\n\t\t\t\tlet id = uid();\n\t\t\t\tlet newitem = this.pull[id] = { id, value:current, $group:true, $row:config.row};\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(newitem);\n\n\t\t\t\tlabels.push(newitem);\n\t\t\t\tancestor = groups[current] = this.branch[id] = [];\n\t\t\t\tancestor._formath = [];\n\t\t\t\ttopbranch.push(id);\n\t\t\t}\n\t\t\tancestor.push(data.id);\n\t\t\tancestor._formath.push(data);\n\t\t}\n\n\t\tthis.branch[parent] = topbranch.concat(missed);\n\t\tfor (let i=0; i<labels.length; i++){\n\t\t\tlet group = labels[i];\n\t\t\tthis._map_group(config.map, group, this.branch[labels[i].id]._formath);\n\n\t\t\tif (this.hasEvent(\"onGroupCreated\"))\n\t\t\t\tthis.callEvent(\"onGroupCreated\", [group.id, group.value, this.branch[group.id]._formath]);\n\n\t\t\tif (config.footer){\n\t\t\t\tlet id = \"footer$\"+group.id;\n\t\t\t\tlet footer = this.pull[id] = { id:id, $footer:true, value: group.value, $level:level, $count:0, $parent:group.id, $row:config.footer.row};\n\n\t\t\t\tthis._map_group(config.footer, footer, this.branch[labels[i].id]._formath);\n\t\t\t\t\n\t\t\t\tthis.branch[group.id].push(footer.id);\n\t\t\t\tthis.callEvent(\"onGroupFooter\", [footer.id, footer.value, this.branch[group.id]._formath]);\n\t\t\t}\n\t\t\tdelete this.branch[group.id]._formath;\n\t\t}\n\n\t\tthis._fix_group_levels(this.branch[parent], parent, level+1);\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_fix_group_levels:function(branch, parent, level){\n\t\tif (parent)\n\t\t\tthis.getItem(parent).$count = branch.length;\n\n\t\tfor (let i = 0; i < branch.length; i++) {\n\t\t\tconst item = this.pull[branch[i]];\n\t\t\titem.$level = level;\n\t\t\titem.$parent = parent;\n\n\t\t\tconst next = this.branch[item.id];\n\t\t\tif (next)\n\t\t\t\tthis._fix_group_levels(next, item.id, level+1);\n\t\t}\n\t}\n};\n\nexport default GroupStore;","import {preventEvent} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\n\n\nconst KeysNavigation = {\n\t$init:function(){\n\t\tif(this.getSelectedId)\n\t\t\tthis.attachEvent(\"onAfterRender\", this._set_focusable_item);\n\t\tif(this.moveSelection)\n\t\t\tthis.attachEvent(\"onTabFocus\", this._set_item_focus);\n\t},\n\t_set_item_focus:function(){\n\t\tif(this.getSelectedId){\n\t\t\tvar sel = this.getSelectedId(true);\n\t\t\tif(!sel.length || !this.getItemNode(sel[0]))\n\t\t\t\tthis.moveSelection(\"down\"); //select and show\n\t\t}\n\t},\n\t_set_focusable_item:function(){\n\t\tvar sel = this.getSelectedId(true);\n\t\tif(!sel.length || !this.getItemNode(sel[0])){\n\t\t\tvar node =  this._dataobj.querySelector(\"[\"+this._id+\"]\");\n\t\t\tif(node)\n\t\t\t\tnode.setAttribute(\"tabindex\", \"0\");\n\t\t}\n\t},\n\t_navigation_helper:function(mode){\n\t\treturn function(view, e){\n\t\t\tvar tag = e.target;\n\n\t\t\t//ignore clipboard listener\n\t\t\tif (!tag.getAttribute(/*@attr*/\"webixignore\")){\n\t\t\t\t//ignore hotkeys if focus in the common input\n\t\t\t\t//to allow normal text edit operations\n\t\t\t\tvar name = tag.tagName;\n\t\t\t\tif (name == \"INPUT\" || name == \"TEXTAREA\" || name == \"SELECT\") return true;\n\t\t\t}\n\n\t\t\tif (view && view.moveSelection && view.config.navigation && !view._in_edit_mode){\n\t\t\t\tpreventEvent(e);\n\t\t\t\treturn view.moveSelection(mode, {shift:e.shiftKey, ctrl:e.ctrlKey, e});\n\t\t\t}\n\t\t};\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tconst config = this._settings;\n\t\tif (config.disabled) return;\n\n\t\tif ((mode == \"right\" || mode == \"left\") && this._parent_menu){\n\t\t\tconst parent = $$(this._parent_menu);\n\t\t\tparent._hide_sub_menu(true);\n\t\t\tif (parent.config.layout === \"x\")\n\t\t\t\tparent.moveSelection(mode);\n\t\t\telse\n\t\t\t\tUIManager.setFocus(parent);\n\t\t\treturn;\n\t\t}\n\n\t\t//get existing selection\n\t\tlet selected = this.getSelectedId(true);\n\t\tconst x_layout = (this.count && (config.layout ==\"x\" || config.xCount > 1));\n\n\t\tlet prev = true;\n\t\tif (!selected.length && this.count()){\n\t\t\tif (mode == \"down\" || (mode == \"right\" && x_layout)) mode = \"top\";\n\t\t\telse if (mode == \"up\" || (mode == \"left\" && x_layout)) mode = \"bottom\";\n\t\t\telse return;\n\t\t\tselected = [this.getFirstId()];\n\t\t\tprev = false;\n\t\t}\n\n\t\tif (selected.length == 1){  //if we have a selection\n\t\t\tselected = selected[0];\n\t\t\tprev = (prev === true) ? selected : null;\n\n\t\t\tif (mode == \"left\"){\n\t\t\t\tif (this.close && !this._ignore_clicks) return this.close(selected);\t//tree (not window)\n\t\t\t\tif (this._level_up && this._level_up(selected)) return this.render();\t//grouplist\n\t\t\t} else if (mode == \"right\"){\n\t\t\t\tif (this.open) return this.open(selected);\n\t\t\t\tif (this._level_down && this._level_down(selected)) return this.render();\n\t\t\t}\n\n\t\t\tif (mode == \"top\") {\n\t\t\t\tselected = this.getFirstId();\n\t\t\t} else if (mode == \"bottom\") {\n\t\t\t\tselected = this.getLastId();\n\t\t\t} else if (mode == \"up\" || mode == \"left\" || mode == \"pgup\") {\n\t\t\t\tconst index = this.getIndexById(selected);\n\t\t\t\tconst step = mode == \"pgup\" ? 10 : 1;\n\t\t\t\tselected = this.getIdByIndex(Math.max(0, index-step));\n\t\t\t} else if (mode == \"down\" || mode == \"right\" || mode == \"pgdown\") {\n\t\t\t\tconst index = this.getIndexById(selected);\n\t\t\t\tconst step = mode == \"pgdown\" ? 10 : 1;\n\t\t\t\tselected = this.getIdByIndex(Math.min(this.count()-1, index+step));\n\t\t\t} else {\n\t\t\t\tassert(false, \"Not supported selection moving mode\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dir = (mode == \"up\" || mode == \"left\" || mode == \"pgdown\" || mode == \"bottom\")?-1:1;\n\t\t\tif (this._skip_item) {\n\t\t\t\tselected = this._skip_item(selected, prev, dir);\n\t\t\t\tif (!selected) return;\n\t\t\t}\n\n\t\t\tthis.showItem(selected);\n\t\t\tthis.select(selected);\n\n\t\t\tif (this.getSubMenu && this.getSubMenu(selected))\n\t\t\t\tthis._mouse_move_activation(selected, this.getItemNode(selected));\n\n\t\t\tif (!config.clipboard && focus !== false){\n\t\t\t\tconst node = this.getItemNode(selected);\n\t\t\t\tif (node) node.focus();\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tnavigation_setter:function(value){\n\t\t//using global flag to apply hotkey only once\n\t\tif (value && !UIManager._global_nav_grid_hotkeys){\n\t\t\tUIManager._global_nav_grid_hotkeys = true;\n\t\t\t//hotkeys will react on any component but will not work in edit mode\n\t\t\t//you can define moveSelection method to handle navigation keys\n\t\t\tUIManager.addHotKey(\"up\",         this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"down\",       this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"right\",      this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"left\",       this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"shift+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"shift+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"shift+right\",   this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"shift+left\", this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"ctrl+shift+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+right\",   this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+left\", this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"pageup\", \tthis._navigation_helper(\"pgup\"));\n\t\t\tUIManager.addHotKey(\"pagedown\",   this._navigation_helper(\"pgdown\"));\n\t\t\tUIManager.addHotKey(\"home\", \t    this._navigation_helper(\"top\"));\n\t\t\tUIManager.addHotKey(\"end\", \t\tthis._navigation_helper(\"bottom\"));\n\n\t\t\tUIManager.addHotKey(\"shift+pageup\", \tthis._navigation_helper(\"pgup\"));\n\t\t\tUIManager.addHotKey(\"shift+pagedown\",   this._navigation_helper(\"pgdown\"));\n\t\t\tUIManager.addHotKey(\"shift+home\", \t    this._navigation_helper(\"top\"));\n\t\t\tUIManager.addHotKey(\"shift+end\", \t\tthis._navigation_helper(\"bottom\"));\n\n\t\t\tUIManager.addHotKey(\"ctrl+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"ctrl+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"ctrl+left\",   this._navigation_helper(\"left\"));\n\t\t\tUIManager.addHotKey(\"ctrl+right\", this._navigation_helper(\"right\"));\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\nexport default KeysNavigation;","import {_getClassName, locate} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {extend, delay, toFunctor} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport env from \"../webix/env\";\n\n\nconst MouseEvents={\n\t$init: function(config){\n\t\tconfig = config || {};\n\n\t\tthis._clickstamp = 0;\n\t\tthis._dbl_sensetive = env.touch ? 500 : 300;\n\t\tthis._item_clicked = null;\n\n\t\tthis._mouse_action_extend(config.onClick, \"on_click\");\n\t\tthis._mouse_action_extend(config.onContext, \"on_context\");\n\t\tthis._mouse_action_extend(config.onDblClick, \"on_dblclick\");\n\t\tthis._mouse_action_extend(config.onMouseMove, \"on_mouse_move\");\n\n\t\t//attach dom events if related collection is defined\n\t\tif (this.on_click)\n\t\t\t_event(this._contentobj, \"click\", this._onClick, {bind:this});\n\n\t\tif (this.on_context)\n\t\t\t_event(this._contentobj, \"contextmenu\", this._onContext, {bind:this});\n\n\t\tif (this.on_mouse_move)\n\t\t\tthis._enable_mouse_move();\n\t},\n\n\t_enable_mouse_move:function(){\n\t\tif (!this._mouse_move_enabled){\n\t\t\tthis.on_mouse_move = this.on_mouse_move || {};\n\t\t\t_event(this._contentobj,\"mousemove\",this._onMouse,{bind:this});\n\t\t\t_event(this._contentobj,\"mouseout\",this._onMouse,{bind:this});\n\t\t\tthis._mouse_move_enabled = 1;\n\t\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\t\tif (this._mouse_move_timer)\n\t\t\t\t\twindow.clearTimeout(this._mouse_move_timer);\n\t\t\t});\n\t\t}\n\n\t},\n\n\t_mouse_action_extend:function(config, key){\n\t\tif (config){\n\t\t\tconst now = this[key];\n\t\t\tconst step = now ? extend({}, now) : {};\n\t\t\tthis[key] = extend(step, config);\n\t\t}\n\t},\n\n\t//inner onclick object handler\n\t_onClick: function(e){\n\t\tif(!this.isEnabled())\n\t\t\treturn false;\n\n\t\tUIManager._focus_action(this);\n\n\t\tif(this.on_dblclick && this.locate){\n\t\t\tif(this._clickHandler && this._item_clicked+\"\" == this.locate(e)+\"\"){\n\t\t\t\tclearTimeout(this._clickHandler);\n\t\t\t\tthis._clickHandler = null;\n\t\t\t\treturn this._onDblClick(e);\n\t\t\t}\n\n\t\t\tthis._item_clicked = this.locate(e);\n\t\t\tthis._clickHandler = delay(()=> {\n\t\t\t\tthis._clickHandler = null;\n\t\t\t\treturn this._mouseEvent(e, this.on_single_click, \"ItemSingleClick\");\n\t\t\t}, null, [e], this._dbl_sensetive);\n\t\t}\n\n\t\treturn this._mouseEvent(e, this.on_click, \"ItemClick\");\n\t},\n\t//inner ondblclick object handler\n\t_onDblClick: function(e) {\n\t\treturn this._mouseEvent(e,this.on_dblclick,\"ItemDblClick\");\n\t},\n\t//process oncontextmenu events\n\t_onContext: function(e) {\n\t\tthis._mouseEvent(e, this.on_context, \"BeforeContextMenu\", \"AfterContextMenu\");\n\t},\n\t/*\n\t\tevent throttler - ignore events which occurs too fast\n\t\tduring mouse moving there are a lot of event firing - we need no so much\n\t\talso, mouseout can fire when moving inside the same html container - we need to ignore such fake calls\n\t*/\n\t_onMouse:function(e){\n\t\tif (this.$destructed) return;\n\t\tif (document.createEventObject)\t//make a copy of event, will be used in timed call\n\t\t\te = document.createEventObject(event);\n\n\t\tif (this._mouse_move_timer)\t//clear old event timer\n\t\t\twindow.clearTimeout(this._mouse_move_timer);\n\n\t\t//this event just inform about moving operation, we don't care about details\n\t\tthis.callEvent(\"onMouseMoving\",[e]);\n\t\t//set new event timer\n\t\tthis._mouse_move_timer = delay(function(e){\n\t\t\t//called only when we have at least 100ms after previous event\n\t\t\tif (e.type == \"mousemove\")\n\t\t\t\tthis._onMouseMove(e);\n\t\t\telse\n\t\t\t\tthis._onMouseOut(e);\n\t\t}, this, [e], (this._settings.mouseEventDelay||500));\n\t},\n\n\t//inner mousemove object handler\n\t_onMouseMove: function(e) {\n\t\tif (!this._mouseEvent(e,this.on_mouse_move,\"MouseMove\"))\n\t\t\tthis._onMouseOut(e);\n\t},\n\t//inner mouseout object handler\n\t_onMouseOut: function(e) {\n\t\tthis.callEvent(\"onMouseOut\",[e]);\n\t},\n\t//common logic for click and dbl-click processing\n\t_mouseEvent:function(e, hash, name, pair){\n\t\tif ((e.processed && !(name == \"ItemSingleClick\" && e.processed == \"ItemClick\")) || !this._viewobj) return;\n\t\te.processed = name;\n\n\t\tlet trg = e.target;\n\n\t\tlet css = \"\";\n\t\tlet id = null;\n\t\tlet found = false;\n\t\t//loop through all parents\n\t\t//we need to check for this._viewobj as some handler can destroy the view\n\t\twhile (trg && trg.parentNode && this._viewobj && trg != this._viewobj.parentNode){\n\t\t\tif (!found && trg.getAttribute){ //if element with ID mark is not detected yet\n\t\t\t\tid = trg.getAttribute(this._id); //check id of current one\n\t\t\t\tif (id){\n\t\t\t\t\t// prevent clicking on disabled items\n\t\t\t\t\tif (trg.getAttribute(\"webix_disabled\")){\n\t\t\t\t\t\tthis._item_clicked = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._item_clicked = id;\n\t\t\t\t\tif (this.callEvent){\n\t\t\t\t\t\t//it will be triggered only for first detected ID, in case of nested elements\n\t\t\t\t\t\tif (!this.callEvent(\"on\"+name,[id,e,trg])) return;\n\t\t\t\t\t\tif (pair) this.callEvent(\"on\"+pair,[id,e,trg]);\n\t\t\t\t\t}\n\t\t\t\t\t//set found flag\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcss=_getClassName(trg);\n\t\t\t//check if pre-defined reaction for element's css name exists\n\t\t\tif (hash && css){\n\t\t\t\tcss = css.toString().split(\" \");\n\t\t\t\tfor (let i = 0; i < css.length; i++){\n\t\t\t\t\tif (hash[css[i]]){\n\t\t\t\t\t\tconst functor = toFunctor(hash[css[i]], this.$scope);\n\t\t\t\t\t\tconst res =  functor.call(this,e,id||locate(e, this._id),trg);\n\t\t\t\t\t\tif(res === false)\n\t\t\t\t\t\t\treturn found;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttrg = trg.parentNode;\n\t\t}\n\t\treturn found; //returns true if item was located and event was triggered\n\t}\n};\n\nexport default MouseEvents;\n","import {delay} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\n\n\nconst PagingAbility = {\n\tpager_setter:function(pager){\n\t\tif (typeof pager == \"string\"){\n\t\t\tvar ui_pager = $$(pager);\n\t\t\tif (!ui_pager){\n\t\t\t\tthis.$blockRender = true;\n\t\t\t\tdelay(function(){\n\t\t\t\t\tvar obj = $$(pager);\n\n\t\t\t\t\tthis._settings.pager = this.pager_setter(obj);\n\t\t\t\t\tvar s = obj._settings;\n\t\t\t\t\ts.count = this.data._count_pager_total(s.level);\n\t\t\t\t\tobj.refresh();\n\n\t\t\t\t\tthis.$blockRender = false;\n\t\t\t\t\tthis.render();\n\t\t\t\t}, this);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tpager = ui_pager;\n\t\t}\n\n\t\tfunction check_pager_sizes(repeat){\n\t\t\t// reset topSplit - since now the pager is responsible for rendering\n\t\t\tif (this.config.topSplit)\n\t\t\t\tthis.config.topSplit = 0;\n\n\t\t\tif (pager.config.autosize && this.getVisibleCount){\n\t\t\t\tvar count = this.getVisibleCount();\n\t\t\t\tif (isNaN(count)){\n\t\t\t\t\tpager.config.size = 1;\n\t\t\t\t\tdelay(check_pager_sizes, this, [true]);\n\t\t\t\t} else if (count != pager.config.size){\n\t\t\t\t\tpager.config.size = count;\n\t\t\t\t\tpager.refresh();\n\t\t\t\t\tif (repeat === true)\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar s = this._settings.pager;\n\t\t\t//initial value of pager = -1, waiting for real value\n\t\t\tif (s.page == -1) return false;\t\n\t\t\t\n\t\t\tthis.data.$min = this._count_pager_index(0, s.page*s.size);\t//affect data.getRange\n\t\t\tthis.data.$max = this._count_pager_index(this.data.$min, s.size);\n\t\t\tthis.data.$pagesize = this.data.$max - this.data.$min;\n\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.attachEvent(\"onBeforeRender\",check_pager_sizes);\n\n\t\tif (!pager.$view){\n\t\t\tpager.view = \"pager\";\n\t\t\tpager = ui(pager);\n\t\t}\n\t\tthis._pager = pager;\n\t\tpager.$master = this;\n\n\t\tthis.data.attachEvent(\"onStoreUpdated\", function(){\n\t\t\tvar s = pager._settings;\n\t\t\ts.count = this._count_pager_total(s.level);\n\t\t\tpager.refresh();\n\t\t});\n\t\tthis.data._count_pager_total = this._count_pager_total;\n\n\t\treturn pager._settings;\n\t},\n\t_count_pager_total:function(level){\n\t\tlet childs = 0;\n\n\t\tif (level)\n\t\t\tthis.order.forEach(id => {\n\t\t\t\tif (id && this.getItem(id).$level != 1)\n\t\t\t\t\tchilds++;\n\t\t\t});\n\n\t\treturn this.count()-childs;\n\t},\n\t_count_pager_index:function(start, count){\n\t\tif (this._settings.pager.level){\n\t\t\tconst order = this.data.order;\n\t\t\tif(!order.length)\n\t\t\t\tcount = 0;\n\t\t\telse\n\t\t\t\tfor(let i = start; i <= start+count; i++){\n\t\t\t\t\tconst id = order[i];\n\t\t\t\t\tif(id && this.getItem(id).$level != 1)\n\t\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t}\n\t\treturn start+count;\n\t},\n\tsetPage:function(value){\n\t\tif (this._pager)\n\t\t\tthis._pager.select(value);\n\t},\n\tgetPage:function(){\n\t\treturn this._pager._settings.page;\n\t},\n\tgetPager:function(){\n\t\treturn this._pager;\n\t}\n};\n\nexport default PagingAbility;","import {locate, insertBefore, remove} from \"../webix/html\";\nimport {bind, clone, extend, toFunctor} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport type from \"../webix/type\";\n\nconst RenderStack ={\n\t$init:function(){\n\t\tassert(this.data,\"RenderStack :: Component doesn't have DataStore\");\n\t\tassert(template,\"template :: template is not accessible\");\n\n\t\t//used for temporary HTML elements\n\t\t//automatically nulified during destruction\n\t\tthis._html = document.createElement(\"DIV\");\n\t\t\t\t\n\t\tthis.data.attachEvent(\"onIdChange\", bind(this._render_change_id, this));\n\t\tthis.attachEvent(\"onItemClick\", this._call_onclick);\n\t\t\n\t\t//create copy of default type, and set it as active one\n\t\tif (!this.types){ \n\t\t\tthis.types = { \"default\" : this.type };\n\t\t\tthis.type.name = \"default\";\n\t\t}\n\t\tthis.type = clone(this.type);\n\t},\n\t\n\tcustomize:function(obj){ \n\t\ttype(this,obj);\n\t},\n\titem_setter:function(value){\n\t\treturn this.type_setter(value);\n\t},\n\ttype_setter:function(value){\n\t\tif(!this.types[value])\n\t\t\tthis.customize(value);\n\t\telse {\n\t\t\tthis.type = clone(this.types[value]);\n\t\t\tif (this.type.css) \n\t\t\t\tthis._contentobj.className+=\" \"+this.type.css;\n\t\t}\n\t\tif (this.type.on_click)\n\t\t\textend(this.on_click, this.type.on_click);\n\n\t\treturn value;\n\t},\n\t\n\ttemplate_setter:function(value){\n\t\tthis.type.template=template(value);\n\t},\n\t//convert single item to HTML text (templating)\n\t_toHTML:function(obj){\n\t\tvar mark = this.data._marks[obj.id];\n\t\t//check if related template exist\n\t\tassert((!obj.$template || this.type[\"template\"+obj.$template]),\"RenderStack :: Unknown template: \"+obj.$template);\n\t\tthis.callEvent(\"onItemRender\",[obj]);\n\t\treturn this.type.templateStart(obj,this.type, mark)+(obj.$template?this.type[\"template\"+obj.$template]:this.type.template)(obj,this.type,mark)+this.type.templateEnd(obj, this.type,mark);\n\t},\n\t//convert item to HTML object (templating)\n\t_toHTMLObject:function(obj){\n\t\tthis._html.innerHTML = this._toHTML(obj);\n\t\treturn this._html.firstChild;\n\t},\n\t_render_change_id:function(old, newid){\n\t\tvar obj = this.getItemNode(old);\n\t\tif (obj) {\n\t\t\tobj.setAttribute(this._id, newid);\n\t\t\tthis._htmlmap[newid] = this._htmlmap[old];\n\t\t\tdelete this._htmlmap[old];\n\t\t}\n\t},\n\t//calls function that is set in onclick property\n\t_call_onclick:function(){\n\t\tif (this._settings.click){\n\t\t\tvar code = toFunctor(this._settings.click, this.$scope);\n\t\t\tif (code && code.call) code.apply(this,arguments);\n\t\t}\n\t},\n\t//return html container by its ID\n\t//can return undefined if container doesn't exists\n\tgetItemNode:function(search_id){\n\t\tif (this._htmlmap)\n\t\t\treturn this._htmlmap[search_id];\n\t\t\t\n\t\t//fill map if it doesn't created yet\n\t\tthis._htmlmap={};\n\t\t\n\t\tvar t = this._dataobj.childNodes;\n\t\tfor (var i=0; i < t.length; i++){\n\t\t\tvar id = t[i].getAttribute(this._id); //get item's\n\t\t\tif (id)\n\t\t\t\tthis._htmlmap[id]=t[i];\n\t\t}\n\t\t//call locator again, when map is filled\n\t\treturn this.getItemNode(search_id);\n\t},\n\t//return id of item from html event\n\tlocate:function(e){ return locate(e,this._id); },\n\t/*change scrolling state of top level container, so related item will be in visible part*/\n\tshowItem:function(id){\n\n\t\tvar html = this.getItemNode(id);\n\t\tif (html && this.scrollTo){\n\t\t\tvar txmin = html.offsetLeft;\n\t\t\tvar txmax = txmin + html.offsetWidth;\n\t\t\tvar tymin = html.offsetTop;\n\n\t\t\tvar tymax = tymin + html.offsetHeight;\n\t\t\tvar state = this.getScrollState();\n\n\t\t\tvar x = state.x;\n\t\t\tif (x > txmin || x + this._content_width < txmax )\n\t\t\t\tx = txmin;\n\t\t\tvar y = state.y;\n\t\t\tif (y > tymin || y + this._content_height < tymax )\n\t\t\t\ty = tymin;\n\n\t\t\tthis.scrollTo(x,y);\n\t\t\tif(this._setItemActive)\n\t\t\t\tthis._setItemActive(id);\n\t\t}\n\t},\n\t//update view after data update\n\t//method calls low-level rendering for related items\n\t//when called without parameters - all view refreshed\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tif (id){\n\t\t\tvar cont = this.getItemNode(id); //get html element of updated item\n\t\t\tswitch(type){\n\t\t\t\tcase \"paint\":\n\t\t\t\tcase \"update\":\n\t\t\t\t\t//in case of update - replace existing html with updated one\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\tvar t1 = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t1, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"delete\":\n\t\t\t\t\t//in case of delete - remove related html\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\tremove(cont);\n\t\t\t\t\tdelete this._htmlmap[id];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"add\":\n\t\t\t\t\t//in case of add - put new html at necessary position\n\t\t\t\t\tvar t2 = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t2, this.getItemNode(this.data.getNextId(id)), this._dataobj);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"move\":\n\t\t\t\t\t//moving without repainting the item\n\t\t\t\t\tinsertBefore(this.getItemNode(id), this.getItemNode(this.data.getNextId(id)), this._dataobj);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tassert(0, \"Unknown render command: \"+type);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t//full reset\n\t\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\t\t//getRange - returns all elements\n\t\t\t\t(this._renderobj||this._dataobj).innerHTML = this.data.getRange().map(this._toHTML,this).join(\"\");\n\t\t\t\tthis._htmlmap = null; //clear map, it will be filled at first getItemNode\n\t\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default RenderStack;","import {addCss, removeCss} from \"../webix/html\";\nimport {_to_array, bind, isArray} from \"../webix/helpers\";\nimport {_event, event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport env from \"../webix/env\";\n\nimport ready from \"../webix/ready\";\nimport state from \"../core/state\";\n\n\n/*\n\tBehavior:SelectionModel - manage selection states\n\t@export\n\t\tselect\n\t\tunselect\n\t\tselectAll\n\t\tunselectAll\n\t\tisSelected\n\t\tgetSelectedId\n*/\nconst SelectionModel ={\n\t$init:function(){\n\t\t//collection of selected IDs\n\t\tthis._selected = _to_array();\n\t\tassert(this.data, \"SelectionModel :: Component doesn't have DataStore\");\n\n\t\t//remove selection from deleted items\n\t\tthis.data.attachEvent(\"onStoreUpdated\",bind(this._data_updated,this));\n\t\tthis.data.attachEvent(\"onStoreLoad\", bind(this._data_loaded,this));\n\t\tthis.data.attachEvent(\"onAfterFilter\", bind(this._data_filtered,this));\n\t\tthis.data.attachEvent(\"onSyncApply\", bind(this._select_check,this));\n\t\tthis.data.attachEvent(\"onIdChange\", bind(this._id_changed,this));\n\t\tthis.$ready.push(this._set_noselect);\n\t},\n\t_set_noselect: function(){\n\t\tif (this._settings.select==\"multiselect\" || this._settings.multiselect || this._settings.select==\"area\")\n\t\t\t_event(this.$view,\"mousedown\", function(e){\n\t\t\t\tif (e.shiftKey || (env.isIE && e.ctrlKey)){\n\t\t\t\t\tconst node = env.isIE ? document.body : this;\n\t\t\t\t\tstate._noselect_element = node;\n\t\t\t\t\taddCss(node, \"webix_noselect\", true);\n\t\t\t\t}\n\t\t\t});\n\t},\n\t_id_changed:function(oldid, newid){\n\t\tfor (var i = this._selected.length - 1; i >= 0; i--)\n\t\t\tif (this._selected[i]==oldid)\n\t\t\t\tthis._selected[i]=newid;\n\t},\n\t_data_filtered:function(){\n\t\tfor (var i = this._selected.length - 1; i >= 0; i--){\n\t\t\tif (this.data.getIndexById(this._selected[i]) < 0) {\n\t\t\t\tvar id = this._selected[i];\n\t\t\t\tthis.removeCss(id, \"webix_selected\", true);\n\t\t\t\tthis._selected.splice(i,1);\n\t\t\t\tthis.callEvent(\"onSelectChange\",[id]);\n\t\t\t}\n\t\t}\n\t},\n\t//helper - linked to onStoreUpdated\n\t_data_updated:function(id,obj,type){\n\t\tif (type == \"delete\"){\t\t\t\t//remove selection from deleted items\n\t\t\tif (this.loadBranch){\n\t\t\t\t//hierarchy, need to check all\n\t\t\t\tthis._select_check();\n\t\t\t} else{\n\t\t\t\tthis._selected.remove(id);\n\t\t\t\tthis.callEvent(\"onSelectChange\",[this._selected]);\n\t\t\t}\n\t\t}\n\t\telse if (!id && !this.data.count() && !this.data._filter_order && !this.data._filter_branch){\t//remove selection for clearAll\n\t\t\tthis._selected = _to_array();\n\t\t}\n\t},\n\t_data_loaded:function(){\n\t\tif (this._settings.select)\n\t\t\tthis.data.each(function(obj){\n\t\t\t\tif (obj && obj.$selected) this.select(obj.id);\n\t\t\t}, this);\n\t},\n\t_select_check:function(){\n\t\tlet selectionChanged;\n\t\tfor (let i = this._selected.length - 1; i >= 0; i--)\n\t\t\tif (!this.exists(this._selected[i])){\n\t\t\t\tselectionChanged = true;\n\t\t\t\tthis._selected.splice(i,1);\n\t\t\t}\n\t\tif(selectionChanged)\n\t\t\tthis.callEvent(\"onSelectChange\",[this._selected]);\n\t},\n\t//helper - changes state of selection for some item\n\t_select_mark:function(id,state,refresh,need_unselect){\n\t\tvar sname = state ? \"onBeforeSelect\" : \"onBeforeUnSelect\";\n\t\tif (!this.callEvent(sname,[id,state])) return false;\n\n\t\tif (need_unselect){\n\t\t\tthis._silent_selection = true;\n\t\t\tthis.unselectAll();\n\t\t\tthis._silent_selection = false;\n\t\t}\n\t\t\n\t\tif (state)\n\t\t\tthis.addCss(id, \"webix_selected\", true);\n\t\telse\n\t\t\tthis.removeCss(id, \"webix_selected\", true);\n\n\t\tif (refresh)\n\t\t\trefresh.push(id);\t\t\t\t//if we in the mass-select mode - collect all changed IDs\n\t\telse{\n\t\t\tif (state)\n\t\t\t\tthis._selected.push(id);\t\t//then add to list of selected items\n\t\t\telse\n\t\t\t\tthis._selected.remove(id);\n\t\t\tthis._refresh_selection(id);\t//othervise trigger repainting\n\t\t}\n\n\t\tvar ename = state ? \"onAfterSelect\" : \"onAfterUnSelect\";\n\t\tthis.callEvent(ename,[id]);\n\n\t\treturn true;\n\t},\n\t//select some item\n\tselect:function(id,preserve){\n\t\tvar ctrlKey = arguments[2];\n\t\tvar shiftKey = arguments[3];\n\t\t//if id not provide - works as selectAll\n\t\tif (!id) return this.selectAll();\n\n\t\t//allow an array of ids as parameter\n\t\tif (isArray(id)){\n\t\t\tfor (var i=0; i < id.length; i++)\n\t\t\t\tthis.select(id[i], (i?1:preserve), ctrlKey, shiftKey);\n\t\t\treturn;\n\t\t}\n\n\t\tassert(this.data.exists(id), \"Incorrect id in select command: \"+id);\n\t\t\n\t\t//block selection mode\n\t\tif (shiftKey && this._selected.length)\n\t\t\treturn this.selectAll(this._selected[this._selected.length-1],id);\n\n\t\t//single selection mode\n\t\tvar need_unselect = false;\n\t\tif (!ctrlKey && !preserve && (this._selected.length!=1 || this._selected[0]!=id))\n\t\t\tneed_unselect = true;\n\n\t\tif (!need_unselect && this.isSelected(id)){\n\t\t\tif (ctrlKey) this.unselect(id);\t//ctrl-selection of already selected item\n\t\t\treturn;\n\t\t}\n\n\t\tthis._select_mark(id, true, null, need_unselect);\n\t},\n\t//unselect some item\n\tunselect:function(id){\n\t\t//if id is not provided  - unselect all items\n\t\tif (!id) return this.unselectAll();\n\t\tif (!this.isSelected(id)) return;\n\t\t\n\t\tthis._select_mark(id,false);\n\t},\n\t//select all items, or all in defined range\n\tselectAll:function(from,to){\n\t\tvar range;\n\t\tvar refresh=[];\n\t\t\n\t\tif (from||to)\n\t\t\trange = this.data.getRange(from||null,to||null);\t//get limited set if bounds defined\n\t\telse\n\t\t\trange = this.data.getRange();\t\t\t//get all items in other case\n\t\t//in case of paging - it will be current page only\n\t\trange.each(function(obj){ \n\t\t\tif (!this.data.getMark(obj.id, \"webix_selected\")){\n\t\t\t\tif(this._select_mark(obj.id,true,refresh))\n\t\t\t\t\tthis._selected.push(obj.id);\n\t\t\t}\n\t\t},this);\n\t\t//repaint self\n\t\tthis._refresh_selection(refresh);\n\t},\n\t//remove selection from all items\n\tunselectAll:function(){\n\t\tvar refresh=[];\n\t\t\n\t\tthis._selected.each(function(id){\n\t\t\tthis._select_mark(id,false,refresh);\t//unmark selected only\n\t\t},this);\n\t\t\n\t\tthis._selected=_to_array();\n\t\tthis._refresh_selection(refresh);\t//repaint self\n\t},\n\t//returns true if item is selected\n\tisSelected:function(id){\n\t\treturn this._selected.find(id)!=-1;\n\t},\n\t/*\n\t\treturns ID of selected items or array of IDs\n\t\tto make result predictable - as_array can be used, \n\t\t\twith such flag command will always return an array \n\t\t\tempty array in case when no item was selected\n\t*/\n\tgetSelectedId:function(as_array){\t\n\t\tswitch(this._selected.length){\n\t\t\tcase 0: return as_array?[]:\"\";\n\t\t\tcase 1: return as_array?[this._selected[0]]:this._selected[0];\n\t\t\tdefault: return ([].concat(this._selected)); //isolation\n\t\t}\n\t},\n\tgetSelectedItem:function(as_array){\n\t\tvar sel = this.getSelectedId(true);\n\t\tif (sel.length > 1 || as_array){\n\t\t\tfor (var i = sel.length - 1; i >= 0; i--)\n\t\t\t\tsel[i] = this.getItem(sel[i]);\n\t\t\treturn sel;\n\t\t} else if (sel.length)\n\t\t\treturn this.getItem(sel[0]);\n\t},\n\t//detects which repainting mode need to be used\n\t_is_mass_selection:function(obj){\n\t\t// crappy heuristic, but will do the job\n\t\treturn obj.length>100 || obj.length > this.data.count/2;\n\t},\n\t_refresh_selection:function(refresh){\n\t\tif (typeof refresh != \"object\") refresh = [refresh];\n\t\tif (!refresh.length) return;\t//nothing to repaint\n\t\t\n\t\tif (this._is_mass_selection(refresh))\t\n\t\t\tthis.data.refresh();\t//many items was selected - repaint whole view\n\t\telse\n\t\t\tfor (var i=0; i < refresh.length; i++)\t//repaint only selected\n\t\t\t\tthis.render(refresh[i],this.data.getItem(refresh[i]),\"update\");\n\t\t\t\n\t\tif (!this._silent_selection)\t\n\t\t\tthis.callEvent(\"onSelectChange\",[refresh]);\n\t}\n};\n\nready(function(){\n\tevent(document.body,\"mouseup\", function(){\n\t\tif(state._noselect_element){\n\t\t\tremoveCss(state._noselect_element,\"webix_noselect\");\n\t\t\tstate._noselect_element = null;\n\t\t}\n\t});\n});\n\nexport default SelectionModel;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\n\nvar defaults = {\n\tpaddingX: 6,\n\tpaddingY: 6,\n\tradius: 2,\n\tminHeight: 4,\n\teventRadius: 8\n};\nfunction Line(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nLine.prototype.draw = function(data, width, height){\n\tvar points = this.getPoints(data, width, height);\n\tvar config = this.config;\n\tvar renderer = SVG;\n\tvar styles = config.color?this._applyColor(renderer,config.color):null;\n\t// draw line\n\tvar path = renderer.definePath(this._getLinePoints(points));\n\tvar graph = renderer.group(renderer.getPath(path,\"webix_sparklines_line\"+(styles?\" \"+styles.line:\"\")));\n\t// draw items\n\tgraph += this._drawItems(renderer, points, config.radius, \"webix_sparklines_item\"+(styles?\" \"+styles.item:\"\"));\n\t// draw event items\n\tvar eventRadius = Math.min(data.length?(width-2*(config.paddingX||0))/data.length:0,config.eventRadius);\n\tgraph += this._drawEventItems(renderer, points, eventRadius);\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_line_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nLine.prototype._applyColor = function(renderer,color){\n\tvar config = {\"line\":{},\"item\":{}},\n\t\tmap = renderer.styleMap;\n\tif(color){\n\t\tconfig.line[map.lineColor] = color;\n\t\tconfig.item[map.color] = color;\n\t\tfor(var name in config)\n\t\t\tconfig[name] = createCss(config[name]);\n\t}\n\treturn config;\n};\nLine.prototype._drawItems = function(renderer,points,radius,css,attrs){\n\tvar items = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\titems.push(renderer.getCircle(points[i], radius, css,attrs));\n\t}\n\treturn renderer.group(items.join(\"\"));\n};\nLine.prototype._drawEventItems = function(renderer,points,radius){\n\tvar items = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\titems.push(renderer.getCircle(points[i], radius, \"webix_sparklines_event_area\", {webix_area:i}));\n\t}\n\treturn renderer.group(items.join(\"\"));\n};\n\nLine.prototype._getLinePoints = function(points){\n\tvar i, type, result =[];\n\tfor( i =0; i< points.length; i++){\n\t\ttype = i?\"L\":\"M\";\n\t\tresult.push([type,points[i]]);\n\t}\n\treturn result;\n};\nLine.prototype.getPoints = function(data, width, height) {\n\tvar config = this.config;\n\tvar minValue = Math.min.apply(null,data);\n\tif (typeof config.origin !== \"undefined\")\n\t\tminValue = Math.min(config.origin, minValue);\n\n\tvar maxValue = Math.max.apply(null,data);\n\tvar result = [];\n\tvar x = config.paddingX||0;\n\tvar y = config.paddingY||0;\n\twidth = (width||100)-x*2;\n\tvar minHeight = config.minHeight||0;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tif(data.length==1)\n\t\t\tresult.push({x: width/2+x, y: height/2+x});\n\t\telse{\n\t\t\tvar unitX = width/(data.length-1);\n\t\t\tvar yNum = config.scale || (maxValue - minValue);\n\t\t\tvar unitY = (height- minHeight)/(yNum?yNum:1);\n\t\t\tif(!yNum)\n\t\t\t\theight /= 2;\n\t\t\tfor(var i=0; i < data.length; i++){\n\t\t\t\tresult.push({x: Math.ceil(unitX*i)+x, y: height-Math.ceil(unitY*(data[i]-minValue))+y-minHeight});\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n};\n\nexport default Line;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\n\nconst defaults = {\n\tpaddingX: 3,\n\tpaddingY: 4,\n\twidth: 20,\n\tmargin: 4,\n\tminHeight: 4,\n\teventRadius: 8,\n\torigin:0,\n\titemCss: function(value){return value < (this.config.origin||0)?\" webix_sparklines_bar_negative\":\"\";}\n};\n\nfunction Bar(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nBar.prototype.draw = function(data, width, height){\n\tlet graph = \"\";\n\tconst config = this.config;\n\tconst renderer = SVG;\n\tconst horizontal = config.horizontal;\n\tconst items = [];\n\tconst origin = parseInt(this._getOrigin(data, width, height),10)+0.5;\n\tconst points = this.getPoints(data, width, height, origin);\n\n\t// draw bars\n\tfor(let i = 0; i< points.length; i++){\n\t\tlet css;\n\t\tcss = (typeof config.itemCss == \"function\"?config.itemCss.call(this,data[i]):(config.itemCss||\"\"));\n\t\tif (config.negativeColor && data[i] < config.origin)\n\t\t\tcss += \" \"+this._applyColor(renderer,config.negativeColor);\n\t\telse if(config.color)\n\t\t\tcss += \" \"+this._applyColor(renderer,config.color);\n\t\tconst p = points[i];\n\t\titems.push(renderer.getRect(p.x, p.y, p.width, p.height,\"webix_sparklines_bar \"+css));\n\t}\n\tgraph += renderer.group(items.join(\"\"));\n\n\t// origin\n\tconst padding = horizontal ? config.paddingY : config.paddingX;\n\n\tif(horizontal)\n\t\tgraph += renderer.group(renderer.getLine({x: origin, y: padding},{x: origin, y: height-padding},\"webix_sparklines_origin\"));\n\telse\n\t\tgraph += renderer.group(renderer.getLine({x: padding, y: origin},{x: width-padding, y: origin},\"webix_sparklines_origin\"));\n\n\t// event areas\n\tconst evPoints = this._getEventPoints(data, width, height, origin);\n\tconst evItems = [];\n\tfor(let i = 0; i< evPoints.length; i++){\n\t\tconst p = evPoints[i];\n\t\tevItems.push(renderer.getRect(p.x, p.y, p.width, p.height,\"webix_sparklines_event_area \",{\"webix_area\":i}));\n\t}\n\tgraph += renderer.group(evItems.join(\"\"));\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_bar_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nBar.prototype._applyColor = function(renderer,color){\n\tconst config = {},\n\t\tmap = renderer.styleMap;\n\tif(color)\n\t\tconfig[map.color] = color;\n\treturn createCss(config);\n};\nBar.prototype._getOrigin = function(data, width, height){\n\tconst config = this.config;\n\tconst horizontal = config.horizontal;\n\tconst padding = horizontal ? config.paddingX : config.paddingY;\n\tconst size = ((horizontal ? width : height)||100)-padding*2;\n\tlet pos;\n\n\tif(horizontal)\n\t\tpos = padding;\n\telse{\n\t\tpos = padding+size;\n\t}\n\n\tif(config.origin !== false){\n\t\tconst minValue = Math.min(...data);\n\t\tconst maxValue = Math.max(...data);\n\t\tconst origin = config.origin||-0.000001;\n\t\tif(origin >= maxValue){\n\t\t\tpos = padding;\n\t\t}\n\t\telse if(origin > minValue){\n\t\t\tconst unit = size/(maxValue - minValue);\n\t\t\tpos += (horizontal ? 1 : -1)*unit*(origin-minValue);\n\t\t}\n\t}\n\treturn pos;\n};\nBar.prototype._getEventPoints = function(data, width, height){\n\tconst result = [];\n\tconst horizontal = this.config.horizontal;\n\tconst x = this.config.paddingX;\n\tconst y = this.config.paddingY;\n\twidth = (width||100)-x*2;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tconst unit = (horizontal ? height : width)/data.length;\n\t\tfor(let i = 0; i < data.length; i++){\n\t\t\tif(horizontal)\n\t\t\t\tresult.push({x, y: Math.ceil(unit*i)+y, height: unit, width});\n\t\t\telse\n\t\t\t\tresult.push({x: Math.ceil(unit*i)+x, y, height, width: unit});\n\t\t}\n\t}\n\treturn result;\n};\nBar.prototype.getPoints = function(data, width, height, originPos){\n\tconst config = this.config;\n\tconst horizontal = config.horizontal;\n\tlet minValue = Math.min(...data);\n\tif (config.origin < minValue) \n\t\tminValue = config.origin;\n\n\tconst maxValue = Math.max(...data);\n\tconst result = [];\n\tconst x = config.paddingX;\n\tconst y = config.paddingY;\n\tlet margin = config.margin;\n\tlet barWidth = config.width||20;\n\n\twidth = (width||100)-x*2;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tconst unit = (horizontal ? height : width)/data.length;\n\t\tconst scale = config.scale || (maxValue - minValue);\n\t\tbarWidth = Math.min(unit-margin,barWidth);\n\t\tmargin = unit-barWidth;\n\t\tlet origin = minValue;\n\n\t\tif(config.origin !== false && config.origin > minValue)\n\t\t\torigin = config.origin||0;\n\n\t\tconst itemHeight = (horizontal ? width : height)/(scale||1);\n\n\t\tfor(let i=0; i < data.length; i++){\n\t\t\tlet h = Math.abs(Math.ceil(itemHeight*(data[i]-origin)));\n\t\t\tif(data[i] && h < config.minHeight)\n\t\t\t\th += config.minHeight;\n\n\t\t\tif(horizontal)\n\t\t\t\tresult.push({x: originPos-(data[i]>=origin?0:h), y: Math.ceil(unit*i)+y+margin/2, height: barWidth, width: h});\n\t\t\telse\n\t\t\t\tresult.push({x: Math.ceil(unit*i)+x+margin/2, y: originPos-(data[i]>=origin?h:0), height: h, width: barWidth});\n\t\t}\n\t}\n\treturn result;\n};\n\nexport default Bar;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\nimport Spline from \"./spline\";\nimport Base from \"./line\";\n\n\nvar defaultsArea = {\n\tpaddingX: 3,\n\tpaddingY: 6,\n\tradius: 1,\n\tminHeight: 4,\n\teventRadius: 8\n};\n// spline area\nfunction SplineArea(config){\n\tthis.config = extend(copy(defaultsArea),config||{},true);\n}\nSplineArea.prototype = copy(Spline.prototype);\nSplineArea.prototype.draw = function(data, width, height){\n\tvar config = this.config,\n\t\tLine = Base.prototype,\n\t\trenderer = SVG,\n\t\tstyles = config.color?this._applyColor(renderer,config.color):null;\n\n\tvar points = this.getPoints(data, width, height);\n\t// draw area\n\tvar linePoints = points.splice(points.length - 3, 3);\n\tvar linePath = renderer._linePoints(linePoints);\n\tlinePath[0][0] = \"L\";\n\tvar areaPoints = renderer._curvePoints(points).concat(linePath);\n\tvar graph = renderer.group(renderer.getPath(renderer.definePath(areaPoints),\"webix_sparklines_area\"+(styles?\" \"+styles.area:\"\"), true));\n\t// draw line\n\tgraph += renderer.group(renderer.getPath(renderer.definePath(renderer._curvePoints(points)),\"webix_sparklines_line\"+(styles?\" \"+styles.line:\"\")));\n\n\tvar itemPoints = Line.getPoints.call(this,data, width, height);\n\t// draw items\n\tgraph += Line._drawItems(renderer, itemPoints, config.radius, \"webix_sparklines_item\"+(styles?\" \"+styles.item:\"\"));\n\t// draw event items\n\tvar eventRadius = Math.min(data.length?(width-2*(config.paddingX||0))/data.length:0,config.eventRadius);\n\tgraph += Line._drawEventItems(renderer, itemPoints, eventRadius);\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_splinearea_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nSplineArea.prototype._applyColor = function(renderer,color){\n\tconst config = {\"area\": {}, \"line\":{},\"item\":{}};\n\tconst map = renderer.styleMap;\n\tif(color){\n\t\tconfig.area[map.color] = config.line[map.lineColor] = config.item[map.color] = color;\n\t\tfor(let name in config)\n\t\t\tconfig[name] = createCss(config[name]);\n\t}\n\treturn config;\n};\nSplineArea.prototype.getPoints = function(data, width, height){\n\tvar points = Spline.prototype.getPoints.call(this, data, width, height);\n\tvar x = this.config.paddingX || 0;\n\tvar y = this.config.paddingY || 0;\n\tpoints.push({x: width - x, y: height - y},{x: x, y: height - y},{x: x, y: points[0][0].y});\n\treturn points;\n};\n\nexport default SplineArea;","import {create, preventEvent} from \"../webix/html\";\nimport {bind, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nimport env from \"../webix/env\";\nimport DataDriver from \"../load/drivers/index\";\n\n\nconst UploadDriver = {\n\t$render: function() {\n\t\tif (this._upload_area){\n\t\t\t//firstChild is webix_el_box container, which have relative position\n\t\t\t//as result, file control is placed under the button and not in the top corner\n\t\t\tthis._contentobj.firstChild.appendChild(this._upload_area);\n\t\t\treturn;\n\t\t}\n\t\tthis.files.attachEvent(\"onBeforeDelete\", this._stop_file);\n\n\t\tvar input_config =  {\n\t\t\t\"type\": \"file\",\n\t\t\t\"class\": \"webix_hidden_upload\",\n\t\t\ttabindex:-1\n\t\t};\n\n\t\tif (this._settings.accept)\n\t\t\tinput_config.accept = this._settings.accept;\n\n\t\tif (this._settings.multiple)\n\t\t\tinput_config.multiple = \"true\";\n\n\t\tif (this._settings.directory) {\n\t\t\tinput_config.webkitdirectory = \"true\";\n\t\t\tinput_config.mozdirectory = \"true\";\n\t\t\tinput_config.directory = \"true\";\n\t\t}\n\n\t\tvar f = create(\"input\", input_config);\n\t\tthis._upload_area = this._contentobj.firstChild.appendChild(f);\n\n\t\t_event(this._viewobj, \"drop\", bind(function(e) {\n\t\t\tthis.$drop(e);\n\t\t\tpreventEvent(e);\n\t\t}, this));\n\t\t_event(f, \"change\", bind(function() {\n\t\t\tthis._add_files(f.files);\n\n\t\t\tif (env.isIE) {\n\t\t\t\tvar t = document.createElement(\"form\");\n\t\t\t\tt.appendChild(this._upload_area);\n\t\t\t\tt.reset();\n\t\t\t\tthis._contentobj.firstChild.appendChild(f);\n\t\t\t} else\n\t\t\t\tf.value = \"\";\n\t\t}, this));\n\t\t_event(this._viewobj, \"click\", bind(function() {\n\t\t\tvar now_date = new Date();\n\t\t\tif (now_date - (this._upload_timer_click || 0) > 250) {\n\t\t\t\tthis.fileDialog();\n\t\t\t}\n\t\t}, this));\n\n\t\t_event(this._viewobj, \"dragenter\", preventEvent);\n\t\t_event(this._viewobj, \"dragexit\", preventEvent);\n\t\t_event(this._viewobj, \"dragover\", preventEvent);\n\t},\n\t_directoryEntry: function(value) {\n\t\treturn value.isDirectory;\n\t},\n\t_directoryDrop: function(item, state, path) {\n\t\tif (item.isFile){\n\t\t\titem.file(function(file){\n\t\t\t\tstate.addFile(file, null, null, { name : path+\"/\"+file.name });\n\t\t\t});\n\t\t} else if (item.isDirectory) {\n\t\t\t// Get folder contents\n\t\t\tvar dirReader = item.createReader();\n\t\t\tdirReader.readEntries(function(entries){\n\t\t\t\tfor (var i = 0; i < entries.length; i++){\n\t\t\t\t\tstate._directoryDrop(entries[i], state, (path ? (path + \"/\") : \"\") + item.name);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\t// adding files by drag-n-drop\n\t$drop: function(e) {\n\t\tvar files = e.dataTransfer.files;\n\t\tvar items = e.dataTransfer.items;\n\n\t\t// non-file drop\n\t\tif (!files.length) return;\n\n\t\tif (this.callEvent(\"onBeforeFileDrop\", [files, e])) {\n\t\t\titems = items || files; //IE10+\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\t//https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item.webkitGetAsEntry){\n\t\t\t\t\titem = item.webkitGetAsEntry();\n\t\t\t\t\tif (item.isDirectory){\n\t\t\t\t\t\tthis._directoryDrop(item, this, \"\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.addFile(files[i]);\n\t\t\t}\n\t\t}\n\t\tthis.callEvent(\"onAfterFileDrop\", [files, e]);\n\t},\n\tfileDialog:function(context){\n\t\tthis._upload_timer_click = new Date();\n\t\tthis._last_file_context = context;\n\t\tvar inputs = this._viewobj.getElementsByTagName(\"INPUT\");\n\t\tinputs[inputs.length-1].click();\n\t},\n\tsend: function(id){\n\t\t//alternative syntx send(callback)\n\t\tif (typeof id == \"function\"){\n\t\t\tthis._last_assigned_upload_callback = id;\n\t\t\tid = 0;\n\t\t}\n\n\t\tif (!id){\n\t\t\tvar order = this.files.data.order;\n\t\t\tvar complete = true;\n\n\t\t\tif (order.length)\n\t\t\t\tfor (var i=0; i<order.length; i++)\n\t\t\t\t\tcomplete = (!this.send(order[i])) && complete;\n\n\t\t\tif (complete)\n\t\t\t\tthis._upload_complete();\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar item = this.files.getItem(id);\n\t\tif (item.status !== \"client\") return false;\n\n\t\tassert(this._settings.upload, \"You need to define upload url for uploader component\");\n\t\titem.status = \"transfer\";\n\n\t\tvar formData = new FormData();\n\n\t\tformData.append(this.config.inputName, item.file, item.name);\n\t\tformData.append(this.config.inputName+\"_fullpath\", item.name);\n\n\t\tvar headers = {};\n\t\tvar globalData = this._settings.formData || {};\n\t\tif (typeof globalData === \"function\")\n\t\t\tglobalData = globalData.call(this);\n\t\tvar details = extend(item.formData||{} , globalData);\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar url = this._get_active_url(item);\n\t\tif(callEvent(\"onBeforeAjax\",[\"POST\", url, details, xhr, headers, formData])){\n\t\t\tfor (let key in details)\n\t\t\t\tformData.append(key, details[key]);\n\n\t\t\titem.xhr = xhr;\n\n\t\t\txhr.upload.addEventListener(\"progress\", bind(function(e){ this.$updateProgress(id, e.loaded/e.total*100); }, this), false);\n\t\t\txhr.onload = bind(function(){ if (!xhr.aborted) this._file_complete(id); }, this);\n\t\t\txhr.open(\"POST\", url, true);\n\n\t\t\tfor (let key in headers)\n\t\t\t\txhr.setRequestHeader(key, headers[key]);\n\n\t\t\txhr.send(formData);\n\t\t}\n\n\t\tthis.$updateProgress(id, 0);\n\t\treturn true;\n\t},\n\n\t\n\t_file_complete: function(id) {\n\t\tvar item = this.files.getItem(id);\n\t\tif (item){\n\t\t\tvar response = null;\n\t\t\tif(item.xhr.status < 400){\n\t\t\t\tvar driver = DataDriver[this._settings.datatype||\"json\"];\n\t\t\t\tresponse = driver.toObject(item.xhr.responseText);\n\t\t\t\tif (response)\n\t\t\t\t\tresponse = driver.getDetails(response);\n\t\t\t}\n\t\t\tif (!response || response.status == \"error\"){\n\t\t\t\t// file upload error\n\t\t\t\titem.status = \"error\";\n\t\t\t\tdelete item.percent;\n\t\t\t\tthis.files.updateItem(id);\n\t\t\t\tthis.callEvent(\"onFileUploadError\", [item, response]);\n\t\t\t} else {\n\t\t\t\t// file upload complete\n\t\t\t\tassert(\n\t\t\t\t\t(!response.status || response.status == \"server\"),\n\t\t\t\t\t\"Not supported status value, use 'error' or 'server'\"\n\t\t\t\t);\n\t\t\t\tthis._complete(id, response);\n\t\t\t}\n\t\t\tdelete item.xhr;\n\t\t}\n\t},\n\tstopUpload: function(id){\n\t\tbind(this._stop_file,this.files)(id);\n\t},\n\t_stop_file: function(id) {\n\t\tvar item = this.getItem(id);\n\t\tif (typeof(item.xhr) !== \"undefined\"){\n\t\t\titem.xhr.aborted = true;\n\t\t\titem.xhr.abort();\n\t\t\tdelete item.xhr;\n\t\t\titem.status = \"client\";\n\t\t}\n\t}\n\n};\n\nexport default UploadDriver;","import {addCss, removeCss} from \"../webix/html\";\nimport {isUndefined, copy} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\n\nimport CodeParser from \"../core/codeparser\";\n\n\n// #include core/parsing.js\n\nconst Values = {\n\t$init:function(){\n\t\tthis.elements = {};\n\t},\n\tfocus:function(name){\n\t\tif (name){\n\t\t\tassert(this.elements[name],\"unknown input name: \"+name);\n\t\t\tthis._focus(this.elements[name]);\n\t\t} else{\n\t\t\tfor(let n in this.elements){\n\t\t\t\tif(this._focus(this.elements[n]) !== false)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_focus: function(target){\n\t\tif (target && target.focus){\n\t\t\treturn target.focus();\n\t\t}\n\t\treturn false;\n\t},\n\tsetValues:function(data, update, config){\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.collapseNames(data, \"\", {}, (v) => !this.elements[v]);\n\t\tthis._inner_setValues(data, update, config);\n\t},\n\t_inner_setValues:function(data, update, config){\n\t\tthis._is_form_dirty = update;\n\t\t//prevent onChange calls from separate controls\n\t\tthis.blockEvent();\n\n\t\tif (!update || !this._values)\n\t\t\tthis._values = {};\n\n\t\tfor (let name in data)\n\t\t\tif (!this.elements[name])\n\t\t\t\tthis._values[name] = data[name];\n\n\t\tfor (let name in this.elements){\n\t\t\tconst input = this.elements[name];\n\t\t\tif (input){\n\t\t\t\tif (!isUndefined(data[name]))\n\t\t\t\t\tinput.setValue(data[name], config);\n\t\t\t\telse if (!update && input.$allowsClear)\n\t\t\t\t\tinput.setValue(\"\", config);\n\t\t\t\tthis._values[name] = input.getValue();\n\t\t\t}\n\t\t}\n\n\t\tthis.unblockEvent();\n\t\tthis.callEvent(\"onValues\",[]);\n\t},\n\tisDirty:function(){\n\t\treturn !!this._is_form_dirty || this.getDirtyValues(true) === true;\n\t},\n\tsetDirty:function(flag){\n\t\tthis._is_form_dirty = flag;\n\t\tif (!flag)\n\t\t\tthis._values = this._inner_getValues();\n\t},\n\tgetDirtyValues:function(){\n\t\tconst result = {};\n\t\tif (this._values){\n\t\t\tfor (let name in this.elements){\n\t\t\t\tconst view = this.elements[name];\n\t\t\t\tconst value = view.getValue();\n\t\t\t\tconst defaultValue = this._values[name];\n\n\t\t\t\tconst isDirty = view.$compareValue ? !view.$compareValue(defaultValue, value) : defaultValue != value;\n\t\t\t\tif (isDirty){\n\t\t\t\t\tresult[name] = value;\n\t\t\t\t\tif (arguments[0])\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tgetCleanValues:function(){\n\t\treturn this._values;\n\t},\n\tgetValues:function(filter){\n\t\tlet data = this._inner_getValues(filter);\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.expandNames(data);\n\n\t\treturn data;\n\t},\n\t_inner_getValues:function(filter){\n\t\t//get original data\t\t\n\t\tlet success,\n\t\t\telem = null;\n\n\t\tconst data = (this._values?copy(this._values):{});\n\n\t\t//update properties from linked controls\n\t\tfor (let name in this.elements){\n\t\t\telem = this.elements[name];\n\t\t\tsuccess = true;\n\t\t\tif(filter){\n\t\t\t\tif(typeof filter == \"object\"){\n\t\t\t\t\tif(filter.hidden === false)\n\t\t\t\t\t\tsuccess = elem.isVisible();\n\t\t\t\t\tif(success && filter.disabled === false)\n\t\t\t\t\t\tsuccess = elem.isEnabled();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsuccess = filter.call(this,elem);\n\t\t\t}\n\t\t\tif(success)\n\t\t\t\tdata[name] = elem.getValue();\n\t\t\telse\n\t\t\t\tdelete data[name]; //in case of this._values[name]\n\t\t}\n\t\treturn data;\n\t},\n\tclear:function(config){\n\t\tthis._is_form_dirty = false;\n\t\tconst data = {};\n\t\tfor (let name in this.elements)\n\t\t\tif (this.elements[name].$allowsClear)\n\t\t\t\tdata[name] = \"\";\n\t\t\n\t\tthis._inner_setValues(data, false, config);\n\t},\n\tmarkInvalid: function(name, state){\n\t\t// remove 'invalid' mark\n\t\tif(state === false){\n\t\t\tthis._clear_invalid(name);\n\t\t}\n\t\t// add 'invalid' mark\n\t\telse{\n\t\t\tlet messageChanged;\n\t\t\t// set invalidMessage\n\t\t\tif(typeof state == \"string\"){\n\t\t\t\tconst input = this.elements[name];\n\t\t\t\tif(input && input._settings.invalidMessage != state){\n\t\t\t\t\tinput._settings.invalidMessage = state;\n\t\t\t\t\tmessageChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//add mark to current validation process\n\t\t\tif (this._validate_details)\n\t\t\t\tthis._validate_details[name] = true;\n\n\t\t\tthis._mark_invalid(name, messageChanged);\n\t\t}\n\t},\n\t_mark_invalid:function(id, messageChanged){\n\t\tconst input = this.elements[id];\n\n\t\tif(input){\n\t\t\tconst config = input._settings;\n\t\t\tconst valid = !config.invalid;\n\n\t\t\tif (valid || messageChanged){\n\t\t\t\tif(valid){\n\t\t\t\t\taddCss(input._viewobj, \"webix_invalid\", true);\n\t\t\t\t\tconfig.invalid = true;\n\t\t\t\t}\n\n\t\t\t\tconst message = config.invalidMessage;\n\t\t\t\tif (typeof message === \"string\" && input.setBottomText)\n\t\t\t\t\tinput.setBottomText();\n\t\t\t}\n\t\t}\n\t},\n\t_clear_invalid:function(id){\n\t\tconst input = this.elements[id];\n\t\tif (input && input._settings.invalid){\n\t\t\tremoveCss(input._viewobj, \"webix_invalid\");\n\t\t\tinput._settings.invalid = false;\n\n\t\t\tconst message = input._settings.invalidMessage;\n\t\t\tif (typeof message === \"string\" && input.setBottomText)\n\t\t\t\tinput.setBottomText();\n\t\t}\n\t}\n};\n\n\nexport default Values;","import {offset, insertBefore, remove} from \"../webix/html\";\nimport {bind, copy, _to_array} from \"../webix/helpers\";\nimport base from \"../views/view\";\nimport {_event} from \"../webix/htmlevents\";\n\nimport DragControl from \"../core/dragcontrol\";\n\n/*\n\tRenders collection of items on demand\n*/\nconst VRenderStack = {\n\t$init:function(){\n\t\tthis._htmlmap = {};\n\t\t_event(this._viewobj, \"scroll\", bind(function(){\n\t\t\tthis.render(null, null, \"paint\");\n\t\t}, this));\n\t},\n\t//return html container by its ID\n\t//can return undefined if container doesn't exists\n\tgetItemNode:function(search_id){\n\t\treturn this._htmlmap && this._htmlmap[search_id];\n\t},\n\t/*change scrolling state of top level container, so related item will be in visible part*/\n\tshowItem:function(id){\n\t\tconst index = this.data.getIndexById(id);\n\t\tif (index > -1){\n\t\t\tconst top = index * this.type.height;\n\t\t\tconst bottom = top + this.type.height;\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst box = offset(this.$view);\n\t\t\tif (top < scroll.y)\n\t\t\t\tthis.scrollTo(0, top);\n\t\t\telse if (bottom > scroll.y+box.height)\n\t\t\t\tthis.scrollTo(0, bottom-box.height);\n\t\t}\n\t},\n\t//update view after data update\n\t//when called without parameters - all view refreshed\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tconst parent = (this._renderobj||this._dataobj);\n\n\t\tif (id){\n\t\t\tif (type == \"paint\" || type == \"update\"){\n\t\t\t\tconst cont = this.getItemNode(id); //get html element of updated item\n\t\t\t\tif (cont){\n\t\t\t\t\tconst t = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tt.style.top = cont.style.top;\n\t\t\t\t\tt.style.position = \"absolute\";\n\t\t\t\t\tt.style.left = 0; t.style.width = \"100%\";\n\n\t\t\t\t\tinsertBefore(t, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//updating not rendered yet item\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet isDrag, source, marked = this._marked_item_id;\n\t\tif (DragControl.active && type != \"drag-end\"){\n\t\t\tconst context = DragControl.getContext();\n\t\t\tisDrag = this._init_drop_area && context.from === this;\t\t//move and order modes\n\t\t\tsource = isDrag && _to_array(copy(context.source||[]));\n\t\t}\n\n\t\tif (type != \"paint\" || isDrag){\n\t\t\t//repaint all\n\t\t\tthis._htmlmap = {};\n\t\t\tparent.innerHTML = \"\";\n\t\t}\n\n\t\t//full reset\n\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\tconst count = this.data.count();\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst box = offset(this._viewobj);\n\n\t\t\tlet top = Math.floor(scroll.y / this.type.height)-2;\n\t\t\tlet bottom = Math.ceil((scroll.y + box.height) / this.type.height)+2;\n\n\t\t\ttop = Math.max(0, top);\n\t\t\tbottom = Math.min(count-1, bottom+(isDrag?source.length-1:0));\n\n\t\t\tconst html = [];\n\t\t\tfor (let i=top; i<=bottom; i++){\n\t\t\t\tconst sid = this.data.order[i];\n\t\t\t\tif (isDrag && source.find(sid) !== -1){\n\t\t\t\t\tif (sid == marked) marked = this.data.order[i+1];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (!this._htmlmap[sid]){\n\t\t\t\t\tconst item = this.data.getItem(sid);\n\t\t\t\t\tif (!item){\n\t\t\t\t\t\tthis._run_load_next({ \n\t\t\t\t\t\t\tcount:bottom-i+(this._settings.loadahead || 0),\n\t\t\t\t\t\t\tstart:i \n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\thtml.push(this._toHTML(item));\n\t\t\t\t} else {\n\t\t\t\t\thtml.push(`<div webix_skip=\"true\" ${this._id}=\"${sid}\"></div>`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._html.innerHTML = html.join(\"\");\n\n\t\t\tif (this._init_drop_area && type == \"drag-in\"){\t\t\t// can be external\n\t\t\t\tconst node = this._html.querySelector(`[${this._id}=\"${marked}\"]`);\n\t\t\t\tif (node) {\n\t\t\t\t\tthis._html.insertBefore(DragControl._dropHTML[0], node);\n\t\t\t\t} else this._html.appendChild(DragControl._dropHTML[0]);\n\t\t\t}\n\n\t\t\tparent.style.position = \"relative\";\n\t\t\tparent.style.height = count*this.type.height+\"px\";\n\n\t\t\tconst kids = this._html.childNodes;\n\t\t\tfor (let i=kids.length-1; i>=0; i--){\n\t\t\t\tconst child = kids[i];\n\t\t\t\tif (child.getAttribute(\"webix_skip\")) continue;\n\n\t\t\t\tconst cid = child.getAttribute(this._id);\n\t\t\t\tif (cid){\n\t\t\t\t\tchild.style.position = \"absolute\";\n\t\t\t\t\tchild.style.top = (top+i)*this.type.height+\"px\";\n\t\t\t\t\tchild.style.left = 0; child.style.width = \"100%\";\n\n\t\t\t\t\tparent.appendChild(child);\n\t\t\t\t\tthis._htmlmap[cid] = child;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t}\n\t},\n\t$setSize:function(){\n\t\tif (base.api.$setSize.apply(this, arguments)){\n\t\t\tthis.render(null, null, \"paint\");\n\t\t}\n\t},\n\t_run_load_next:function(conf){\n\t\tconst count = Math.max(conf.count, (this._settings.datafetch||this._settings.loadahead||0));\n\t\tif (this._maybe_loading_already(conf.count, conf.start)) return;\n\t\tthis.loadNext(count, conf.start);\n\t},\n\t_set_drop_area:function(){\n\t\tthis.render(null, null, \"drag-in\");\n\t},\n\t_remove_drop_area:function(){\n\t\tremove(DragControl._dropHTML);\n\t\tthis.render(null, null, \"drag-out\");\n\t},\n};\n\nexport default VRenderStack;","import {$active} from \"../../webix/skin\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\n\nexport const errorMessage = \"non-existing view for export\";\n\nfunction getDataHelper(key, column, raw){\n\tif (!raw && column.format)\n\t\treturn function(obj){ return column.format(obj[key]); };\n\n\treturn function(obj){ return obj[key]; };\n}\n\nfunction getHeaderText(view, header, filterHTML){\n\tlet text = header.text;\n\tif (header.contentId){\n\t\tconst content = view.getHeaderContent(header.contentId);\n\t\tif (content && !content.type.$icon)\n\t\t\ttext = content.getValue(true);\n\t}\n\tlet res = (text||\"\").toString();\n\tif(filterHTML)\n\t\tres = res.replace( /<[^>]*>/gi, \"\");\n\treturn res;\n}\n\nexport function getStyles(r, c, styles){\n\t//row index, column index, styles array\n\tif(styles[r] && styles[r][c])\n\t\treturn styles[r][c];\n\treturn {};\n}\n\nexport function getExportScheme(view, options){\n\tconst scheme = [];\n\tlet h_count = 0, f_count = 0;\n\tconst isTable = view.getColumnConfig;\n\tlet columns = options.columns;\n\tconst raw = !!options.rawValues;\n\tconst isTree = view.data.name == \"TreeStore\";\n\n\tlet treeLines = options.treeLines;\n\tif(treeLines === true || isUndefined(treeLines))\n\t\ttreeLines = \"value\";\n\n\tscheme.heights = {};\n\n\tif(options.hidden || options.hide){\n\t\tscheme.hiddenCols = {};\n\t\tscheme.hiddenRows = {};\n\t}\n\n\tif (!columns){\n\t\tcolumns = [];\n\t\tif (isTable){\n\t\t\tconst order = view._hidden_column_order;\n\t\t\tif(options.hidden && order.length){\n\t\t\t\tfor (let i = 0; i < order.length; i++){\n\t\t\t\t\tconst col = view.getColumnConfig(order[i]);\n\t\t\t\t\tif(!view.isColumnVisible(col.id))\n\t\t\t\t\t\tscheme.hiddenCols[col.id] = 1;\n\t\t\t\t\tcolumns.push(col);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tcolumns = columns.concat(view._columns);\n\t\t}\n\t\telse {\n\t\t\tconst obj = view.data.pull[view.data.order[0]];\n\t\t\tfor (let key in obj)\n\t\t\t\tif(key !== \"id\" && key[0] != \"$\")\n\t\t\t\t\tcolumns.push({id:key, isTree: isTree && key === treeLines});\n\t\t}\n\t}\n\telse if(!columns.length){\n\t//export options are set as - columns:{ rank:true, title:{ header:\"custom\"}}\n\t\tconst arr = [];\n\t\tfor(let key in columns)\n\t\t\tarr.push(extend({ id:key}, extend({}, columns[key])));\n\t\tcolumns = arr;\n\t}\n\n\tif (options.ignore)\n\t\tfor (let i=columns.length-1; i>=0; i--)\n\t\t\tif (options.ignore[columns[i].id])\n\t\t\t\tcolumns.splice(i,1);\n\n\tif (options.id)\n\t\tscheme.push({ id:\"id\", width:50, header:\" \", template:function(obj){ return obj.id; }});\n\n\tif (options.flatTree){\n\t\tconst flatKey = options.flatTree.id;\n\t\tconst copy = [].concat(options.flatTree.columns);\n\t\tconst fill = [];\n\t\tconst fillMode = !!options.flatTree.fill;\n\t\tfor (let i = 1; i <= copy.length; i++)\n\t\t\tcopy[i-1].template = (function(i){ \n\t\t\t\treturn function(obj){ \n\t\t\t\t\treturn obj.$level == i ? (fill[i]=obj[flatKey]) : ((fillMode && i<obj.$level)?fill[i]:\"\"); \n\t\t\t\t};\n\t\t\t})(i);\n\n\t\tlet index = 0;\n\t\tfor (let i = columns.length-1; i >= 0; i--)\n\t\t\tif (columns[i].id === flatKey)\n\t\t\t\tindex = i;\n\n\t\tcolumns = [].concat(columns.slice(0,index)).concat(copy).concat(columns.slice(index+1));\n\t}\n\n\tlet treeColumn;\n\n\tfor (let j = 0; j < columns.length; j++) {\n\t\tlet column = columns[j];\n\t\tlet key = column.id;\n\n\t\tif (column.noExport) continue;\n\n\t\t// raw mode has sense only for datatable\n\t\t// in other cases we don't have built-in data templates\n\t\tlet rawColumn = raw && isTable;\n\t\tif (isTable){\n\t\t\tconst sourceColumn = view.getColumnConfig(key);\n\t\t\t// when these's no column to take raw data from, or custom template defined - ignore raw mode\n\t\t\tif (column.template && (!sourceColumn || sourceColumn.template != column.template))\n\t\t\t\trawColumn = false;\n\t\t\tif(sourceColumn)\n\t\t\t\tcolumn = extend(extend({}, column), sourceColumn);\n\t\t}\n\n\t\tconst record = {\n\t\t\tid:         column.id,\n\t\t\ttemplate:   (( rawColumn || !column.template) ? getDataHelper(key, column, raw)  : column.template ),\n\t\t\twidth:      ((column.width   || 200) * (options.export_mode===\"excel\"?8.43/70:1 )),\n\t\t\theader:     (column.header!==false?(column.header||key)  : \"\")\n\t\t};\n\n\t\tif (column.collection) record.collection = column.collection;\n\n\t\tif(isTree && key === treeLines)\n\t\t\trecord.isTree = treeColumn = true;\n\n\t\tif(options.export_mode === \"excel\"){\n\t\t\textend(record, {\n\t\t\t\ttype: column.exportType || \"\",\n\t\t\t\tformat:column.exportFormat || \"\"\n\t\t\t});\n\t\t\tif(column.hidden){\n\t\t\t\tif(!scheme.hiddenCols)\n\t\t\t\t\tscheme.hiddenCols = {};\n\t\t\t\tscheme.hiddenCols[column.id] = 1;\n\t\t\t}\n\t\t}\n\n\t\tif(typeof record.header === \"string\") record.header = [{text:record.header}];\n\t\telse record.header = [].concat(record.header);\n\n\t\tfor(let i = 0; i<record.header.length; i++)\n\t\t\trecord.header[i] = record.header[i] ? getHeaderText(view, record.header[i], !!options.filterHTML) : \"\";\n\n\t\th_count = Math.max(h_count, record.header.length);\n\n\t\tif(view.config.footer){\n\t\t\tlet footer = column.footer || \"\";\n\t\t\tif(typeof footer == \"string\") footer = [{text:footer}];\n\t\t\telse footer = [].concat(footer);\n\n\t\t\tfor(let i = 0; i<footer.length; i++)\n\t\t\t\tfooter[i] = footer[i] ? getHeaderText(view, footer[i], !!options.filterHTML) : \"\";\n\n\t\t\trecord.footer = footer;\n\t\t\tf_count = Math.max(f_count, record.footer.length);\n\t\t}\n\t\tscheme.push(record);\n\t}\n\n\n\tif(!treeColumn && isTree && options.treeLines != treeLines && scheme[0])\n\t\tscheme[0].isTree = true;\n\n\tfor(let i =0; i<scheme.length; i++){\n\n\t\tlet diff = h_count-scheme[i].header.length;\n\t\tfor(let d=0; d<diff; d++)\n\t\t\tscheme[i].header.push(\"\");\n\n\t\tif(view.config.footer){\n\t\t\tdiff = f_count-scheme[i].footer.length;\n\t\t\tfor(let d=0; d<diff; d++)\n\t\t\t\tscheme[i].footer.push(\"\");\n\t\t}\n\t}\n\n\treturn scheme;\n}\n\nexport function getFileName(name, extension){\n\tif(name)\n\t\tname = name.replace(/[/?\\\\<>:*|\"]/g, \"\").substring(0, 150);\n\treturn `${name || \"Data\"}.${extension}`;\n}\n\nexport function getExportData(view, options, scheme, images){\n\tconst filterHTML = !!options.filterHTML;\n\tconst htmlFilter = /<[^>]*>/gi;\n\tlet data = [];\n\tlet header, headers;\n\tconst mode = options.export_mode;\n\tconst excel = mode == \"excel\";\n\n\tif((excel || mode == \"csv\") && options.docHeader){\n\t\tdata = [[(options.docHeader.text || options.docHeader).toString()], [\"\"]];\n\t\tif(excel && options.docHeader.height)\n\t\t\tscheme.heights[0] = options.docHeader.height;\n\t}\n\n\tif( options.header !== false && scheme.length){\n\t\tfor(let h=0; h < scheme[0].header.length; h++){\n\t\t\theaders = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){ \n\t\t\t\theader = \"\";\n\t\t\t\tif(scheme[i].header[h]){\n\t\t\t\t\theader = scheme[i].header[h];\n\t\t\t\t\tif (filterHTML)\n\t\t\t\t\t\theader = scheme[i].header[h] = header.replace(htmlFilter, \"\");\n\t\t\t\t}\n\t\t\t\theaders.push(header);\n\t\t\t}\n\n\t\t\tif(excel && view._columns && options.heights !==false &&\n\t\t\t(view._headers[h] !== $active.barHeight || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = view._headers[h];\n\n\t\t\tif (mode !== \"pdf\")\n\t\t\t\tdata[data.length] = headers;\n\t\t}\n\t}\n\toptions.yCorrection = (options.yCorrection||0)-data.length;\n\n\tconst treeline = (options.flatTree || options.plainOutput) ? \"\" : \"-\";\n\n\tview.data.each(function(item, index){\n\t\tif(!options.filter || options.filter(item)){\n\t\t\tconst reallyHidden = options.hidden && view.data._filter_order && view.getIndexById(item.id) == -1;\n\t\t\tif((options.hide && options.hide(item)) || reallyHidden){\n\t\t\t\tconst header = (options.docHeader?2:0)+(options.header===false?0:scheme[0].header.length);\n\t\t\t\tscheme.hiddenRows[header+index] = 1;\n\t\t\t}\n\n\t\t\tif(this.data._scheme_export){\n\t\t\t\titem = view.data._scheme_export(item);\n\t\t\t}\n\n\t\t\tlet line = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){\n\t\t\t\tlet column = scheme[i], cell = null;\n\t\t\t\t//spreadsheet use muon to store data, get value via $getExportValue\n\t\t\t\tif(view.$getExportValue){\n\t\t\t\t\tcell = view.$getExportValue(item.id, column.id, options);\n\t\t\t\t\tif(typeof cell == \"object\" && cell.image){\n\t\t\t\t\t\timages.push(cell.image);\n\t\t\t\t\t\tcell = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//datatable math\n\t\t\t\t\tlet formula;\n\t\t\t\t\tif(options.math && item[\"$\"+column.id] && item[\"$\"+column.id].charAt(0) ==\"=\"){\n\t\t\t\t\t\tif(excel)\n\t\t\t\t\t\t\tformula = item[\"$\"+column.id];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcell = item[\"$\"+column.id];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(this._spans_pull){\n\t\t\t\t\t\tlet span = this.getSpan(item.id, column.id);\n\t\t\t\t\t\tif(span && span[4] && span[0] == item.id && span[1] == column.id){\n\t\t\t\t\t\t\tcell = span[4];\n\t\t\t\t\t\t\tif(filterHTML && typeof cell === \"string\")\n\t\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!cell){\n\t\t\t\t\t\tcell = column.template(item, view.type, item[column.id], column, i);\n\t\t\t\t\t\tif (!cell && cell !== 0) cell = \"\";\n\t\t\t\t\t\tif(column.isTree && treeline)\n\t\t\t\t\t\t\tcell = \" \"+Array(item.$level).join(treeline)+\" \"+cell;\n\t\t\t\t\t\tif (filterHTML && typeof cell === \"string\"){\n\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//remove end/start spaces(ex.hierarchy data)\n\t\t\t\t\t\tif (typeof cell === \"string\" && mode === \"csv\")\n\t\t\t\t\t\t\tcell = cell.trim();\n\t\t\t\t\t\t//for multiline data\n\t\t\t\t\t\tif (typeof cell === \"string\" && (excel || mode === \"csv\")){\n\t\t\t\t\t\t\tcell = cell.replace(/<br\\s*\\/?>/mg,\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(formula)\n\t\t\t\t\t\tcell = { formula, value: cell };\n\t\t\t\t}\n\n\t\t\t\tline.push(cell);\n\t\t\t}\n\n\t\t\tif(excel && view._columns && options.heights !== false &&\n\t\t\t((item.$height && item.$height !== $active.rowHeight) || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = item.$height || this.config.rowHeight;\n\n\t\t\tdata.push(line);\n\t\t}\n\t}, view, options.hidden);\n\n\tif( options.footer !==false ){\n\t\tlet f_count = scheme[0].footer?scheme[0].footer.length:0;\n\t\tfor (let f = 0; f < f_count; f++){\n\t\t\tlet footers  = [];\n\t\t\tfor(let i = 0; i<scheme.length; i++){\n\t\t\t\tlet footer = scheme[i].footer[f];\n\t\t\t\tif (filterHTML) footer = scheme[i].footer[f] = footer.toString().replace(htmlFilter, \"\");\n\t\t\t\tfooters.push(footer);\n\t\t\t}\n\n\t\t\tif(excel && view._columns && options.heights !==false &&\n\t\t\t(view._footers[f] !== $active.barHeight || options.heights==\"all\")\n\t\t\t) scheme.heights[data.length] = view._footers[f];\n\n\t\t\tif(mode !== \"pdf\")\n\t\t\t\tdata.push(footers);\n\t\t}\n\t}\n\n\tif(excel && options.docFooter){\n\t\tdata = data.concat([[], [(options.docFooter.text || options.docFooter).toString()]]);\n\t\tif(options.docFooter.height)\n\t\t\tscheme.heights[data.length-1] = options.docFooter.height;\n\t}\n\n\treturn data;\n}","import {errorMessage, getExportScheme, getExportData, getStyles, getFileName} from \"./common\";\n\nimport i18n from \"../../webix/i18n\";\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {download} from \"../../webix/html\";\nimport {isArray} from \"../../webix/helpers\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\n\nlet font = {};\nexport const toPDF = function(id, options){\n\toptions = options || {};\n\n\toptions.export_mode = \"pdf\";\n\n\tconst fontFiles = {\n\t\tfontName: \"pt-sans.regular\",\n\t\tboldFontName: \"pt-sans.bold\",\n\t\titalicFontName: \"pt-sans.italic\",\n\t\titalicBoldFontName: \"pt-sans.italic-bold\"\n\t};\n\n\textend(options, fontFiles);\n\n\tid = isArray(id)?id:[id];\n\tlet views = [];\n\n\tfor (let i = 0; i < id.length; i++) {\n\t\tif(!id[i].id) id[i]  = { id:id[i] }; \n\n\t\tlet view = $$(id[i].id);\n\n\t\tif(view){\n\t\t\tconst viewOptions = extend(id[i].options || {}, options);\n\t\t\tconst display = viewOptions.display || \"table\";\n\t\t\tif(viewOptions.display == \"image\")\n\t\t\t\tdelete viewOptions.styles;\n\n\t\t\tif(view.$exportView)\n\t\t\t\tview = view.$exportView(viewOptions);\n\n\t\t\t//$exportView returns array\n\t\t\tif(isArray(view)){\n\t\t\t\tviews = views.concat(view);\n\t\t\t\tif(options.autowidth)\n\t\t\t\t\tgetAutowidth(viewOptions, options);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//display table should be first (in case of styles:true $exportView adds styles to the first view)\n\t\t\t\tif(display == \"table\" || display == \"all\"){\n\t\t\t\t\tif(view.data && view.data.pull){\n\t\t\t\t\t\tconst scheme = getExportScheme(view, viewOptions);\n\t\t\t\t\t\tviews.push({\n\t\t\t\t\t\t\tscheme, \n\t\t\t\t\t\t\texportData: getExportData(view, viewOptions, scheme),\n\t\t\t\t\t\t\tviewOptions\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(options.autowidth)\n\t\t\t\t\t\t\tgetAutowidth(view, options, scheme);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(display == \"image\" || display == \"all\"){\n\t\t\t\t\tconst node = viewOptions._hidden ? cloneNodeWithStyles(view.$view) : view.$view;\n\n\t\t\t\t\tviews.push({ node, viewOptions });\n\t\t\t\t\tif(options.autowidth)\n\t\t\t\t\t\tgetAutowidth(view, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tassert(view, errorMessage);\n\t}\n\n\tif(options.dataOnly)\n\t\treturn views;\n\n\treturn require([\n\t\tenv.cdn + \"/extras/pdfjs.js\", env.cdn + \"/extras/html2canvas-1.0.min.js\"\n\t]).then(function(){\n\t\tif(views.length == 0)\n\t\t\treturn promise.reject(errorMessage);\n\n\t\tlet allFontsLoaded = true;\n\n\t\tfor(let name in fontFiles)\n\t\t\tif(!font[name]){\n\t\t\t\tallFontsLoaded = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tif(allFontsLoaded){\n\t\t\treturn getPdfData(views, options).then(function(pdf){\n\t\t\t\treturn getBlob(pdf, options);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconst defer = promise.defer();\n\t\t\t/* global pdfjs */\n\t\t\tpdfjs.load(options.fontURL||env.cdn + \"/extras/\"+options.fontName+\".ttf\", function(err, regular){\n\t\t\t\tif(err)\n\t\t\t\t\treturn defer.reject(err);\n\t\t\t\tpdfjs.load(options.italicBoldFontURL||env.cdn + \"/extras/\"+options.italicBoldFontName+\".ttf\", function(errIB, ib){\n\t\t\t\t\tpdfjs.load(options.italicFontURL||env.cdn + \"/extras/\"+options.italicFontName+\".ttf\", function(errI, i){\n\t\t\t\t\t\tpdfjs.load(options.boldFontURL||env.cdn + \"/extras/\"+options.boldFontName+\".ttf\", function(errB, b){\n\t\t\t\t\t\t\tfont[options.fontName] = new pdfjs.TTFFont(regular);\n\t\t\t\t\t\t\tfont[options.boldFontName] = errB ? null : new pdfjs.TTFFont(b);\n\t\t\t\t\t\t\tfont[options.italicFontName] = errI ? null : new pdfjs.TTFFont(i);\n\t\t\t\t\t\t\tfont[options.italicBoldFontName] = errIB ? null : new pdfjs.TTFFont(ib);\n\n\t\t\t\t\t\t\tdefer.resolve(\n\t\t\t\t\t\t\t\tgetPdfData(views, options).then(function(pdf){\n\t\t\t\t\t\t\t\t\treturn getBlob(pdf, options);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn defer;\n\t\t}\n\t});\n};\n\nfunction getBlob(pdf, options){\n\tconst filename = getFileName(options.filename, \"pdf\");\n\tconst blob = new Blob([pdf.toString()], { type: \"application/pdf\" });\n\n\tif(options.download !== false)\n\t\tdownload(blob, filename);\n\treturn blob;\n}\n\nfunction getPdfData(views, options){\n\tconst doc = addPDFDoc(options);\n\tlet promises = [];\n\tfor (let i = 0; i < views.length; i++) {\n\t\tif(views[i].node)\n\t\t\tpromises.push(getPDFImage(views[i].node));\n\t\telse\n\t\t\tpromises.push(promise.resolve());\n\t}\n\n\treturn promise.all(promises).then(function(images){\n\t\tfor(let i = 0; i < promises.length; i++){\n\t\t\tconst viewOptions = views[i].viewOptions;\n\t\t\tif(viewOptions.textBefore)\n\t\t\t\taddText(doc, \"before\", viewOptions.textBefore);\n\n\t\t\tif(images[i])\n\t\t\t\tdoc.image(images[i], {align:\"center\"});\n\t\t\telse\n\t\t\t\taddPDFTable(views[i], doc);\n\n\t\t\tif(viewOptions.textAfter)\n\t\t\t\taddText(doc, \"after\", viewOptions.textAfter);\n\t\t\tif(i != views.length - 1)\n\t\t\t\tdoc.pageBreak();\n\t\t}\n\t\treturn addPDFHeader(doc, options);\n\t});\n}\n\nfunction addText(doc, type, text){\n\tif(type == \"after\")\n\t\tdoc.text().br();\n\tif(typeof text == \"string\")\n\t\ttext = {text:text};\n\n\tdoc.text(text.text, text.options || {});\n\tif(type == \"before\")\n\t\tdoc.text().br();\n}\n\nfunction getPDFImage(node){\n\tconst hidden = !document.body.contains(node);\n\tif(hidden){\n\t\t//node is a cloneNode of the real view, so it shouldn't be visible\n\t\tdocument.body.appendChild(node);\n\t\tnode.style.position = \"absolute\";\n\t\tnode.style.left = \"-9999px\";\n\t}\n\n\treturn window.html2canvas(\n\t\tnode,\n\t\t{\n\t\t\tbackground:\"#fff\",\n\t\t\tlogging:false,\n\t\t\tuseCORS:true\n\t\t})\n\t\t.then(function(canvas){\n\t\t\tconst image = canvas.toDataURL(\"image/jpeg\");\n\t\t\tconst binary_string =  window.atob(image.split(\"base64,\")[1]);\n\t\t\tconst length = binary_string.length;\n\t\t\tconst bytes = new Uint8Array(length);\n\t\t\tfor (let i = 0; i < length; i++)\n\t\t\t\tbytes[i] = binary_string.charCodeAt(i);\n\t\t\treturn new pdfjs.Image(bytes.buffer);\n\t\t})\n\t\t.finally(function(){\n\t\t\tif(hidden)\n\t\t\t\tdocument.body.removeChild(node);\n\t\t});\n}\n\nexport function getAutowidth(view, options, scheme){\n\tconst prop = options.orientation && options.orientation == \"landscape\" ? \"height\" : \"width\";\n\tlet width;\n\n\tif(scheme){\n\t\twidth = 80; //paddings\n\t\tfor(let i = 0; i<scheme.length; i++)\n\t\t\twidth += scheme[i].width;\n\t}\n\telse if(view.$width)\n\t\twidth = view.$width;\n\telse //'view' can be local settings and we need to compare them with common ones\n\t\twidth = view[prop];\n\n\toptions[prop] = Math.max(options[prop] || 0, width || 0);\n}\n\nfunction addPDFDoc(options){\n\tlet width = options.width||595.296, height = options.height || 841.896;// default A4 size\n\n\tif(options.orientation && options.orientation ===\"landscape\")\n\t\theight = [width, width = height][0];\n\n\treturn new pdfjs.Document({\n\t\tpadding: 40,\n\t\tfont: font[options.fontName],\n\t\tthreshold:256,\n\t\twidth,\n\t\theight\n\t});\n}\n\nfunction addPDFTable(view, doc){\n\tconst scheme = view.scheme;\n\tconst data = view.exportData;\n\tconst options = view.viewOptions;\n\tconst styles = view.styles;\n\n\toptions.header = (isUndefined(options.header) || options.header === true) ? {} : options.header;\n\toptions.footer = (isUndefined(options.footer) || options.footer === true) ? {} : options.footer;\n\toptions.table = options.table || {};\n\n\t//render table\n\tconst h_count = options.header === false ? 0: scheme[0].header.length;\n\tconst f_count = (options.footer === false || !scheme[0].footer) ? 0: scheme[0].footer.length;\n\n\tconst colWidths = [];\n\tfor(let i = 0; i<scheme.length; i++)\n\t\tcolWidths[i] = scheme[i].width;\n\n\tconst tableOps = extend(options.table, {\n\t\tborderWidth: 1,height:20, lineHeight:1.1,\n\t\tborderColor: 0xEEEEEE, backgroundColor: 0xFFFFFF, color:0x666666,\n\t\ttextAlign:\"left\", paddingRight:10, paddingLeft:10,\n\t\theaderRows:h_count, widths: colWidths.length?colWidths:[\"100%\"]\n\t});\n\n\tconst table = doc.table(tableOps);\n\n\t//render table header\n\tif(h_count){\n\t\tconst headerOps = extend(options.header, {\n\t\t\tborderRightColor:0xB0CEE3, borderBottomColor:0xB0CEE3,\n\t\t\tcolor:0x4A4A4A, backgroundColor:0xD2E3EF,\n\t\t\theight:27, lineHeight:1.2\n\t\t});\n\n\t\tfor(let i = 0; i<h_count; i++){\n\t\t\tconst header = table.tr(headerOps);\n\t\t\tfor(let s=0; s<scheme.length; s++){\n\t\t\t\tconst cellStyle = styles ? getStyles(i, s, styles) : {};\n\t\t\t\tsetFont(cellStyle, options);\n\t\t\t\theader.td(scheme[s].header[i].toString(), cellStyle);\n\t\t\t}\n\t\t}\n\t}\n\n\t//render table data\n\tfor(let r=0; r<data.length;r++){\n\t\tlet row = table.tr({});\n\t\tfor(let c=0; c< data[r].length; c++){\n\t\t\tconst cellStyle = styles ? getStyles(r+h_count, c, styles) : {};\n\t\t\tsetFont(cellStyle, options);\n\t\t\trow.td(data[r][c], cellStyle);\n\t\t}\n\t}\n\n\t//render table footer\n\tif(f_count){\n\t\tlet footerOps = extend(options.footer, {\n\t\t\tborderRightColor:0xEEEEEE, borderBottomColor:0xEEEEEE,\n\t\t\tbackgroundColor: 0xFAFAFA, color:0x666666,\n\t\t\theight:27, lineHeight:1.2\n\t\t});\n\n\t\tfor(let i = 0; i<f_count; i++){\n\t\t\tconst beforeCount = h_count + data.length;\n\t\t\tlet footer = table.tr(footerOps);\n\t\t\tfor(let s=0; s<scheme.length; s++){\n\t\t\t\tconst cellStyle = styles ? getStyles(i+beforeCount, s, styles) : {};\n\t\t\t\tsetFont(cellStyle, options);\n\t\t\t\tfooter.td(scheme[s].footer[i].toString(), cellStyle);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction setFont(cellStyle, options){\n\tconst boldFont = font[options.boldFontName];\n\tconst italicFont = font[options.italicFontName];\n\tconst italicBoldFont = font[options.italicBoldFontName];\n\n\tif(cellStyle.bold && boldFont) {\n\t\tif(cellStyle.italic && italicBoldFont)\n\t\t\tcellStyle.font = italicBoldFont;\n\t\telse\n\t\t\tcellStyle.font = boldFont;\n\t}\n\telse if(cellStyle.italic && italicFont)\n\t\tcellStyle.font = italicFont;\n}\n\nfunction addPDFHeader(doc, options){\n\t//doc footer\n\tif (options.docFooter !== false){\n\t\toptions.docFooter = extend(options.docFooter||{}, {\n\t\t\tcolor: 0x666666, textAlign:\"center\"\n\t\t});\n\t\tdoc.footer().text(options.docFooter).append((i18n.dataExport.page||\"Page\")).pageNumber().append(\"  \"+(i18n.dataExport.of||\"of\")+\"  \").pageCount();\n\t}\n\n\tconst horder = { text:0, image:1};\n\n\t//doc header, configurable\n\tif (options.docHeader){\n\t\tif (typeof options.docHeader == \"string\") options.docHeader = { text:options.docHeader };\n\t\textend(options.docHeader, {\n\t\t\tcolor: 0x666666, textAlign:\"right\", order:0\n\t\t});\n\t\thorder.text = options.docHeader.order;\n\t}\n\n\tif (options.docHeaderImage){\n\t\tif(typeof options.docHeaderImage == \"string\") options.docHeaderImage = {url:options.docHeaderImage};\n\t\textend(options.docHeaderImage, {\n\t\t\talign:\"right\", order:1\n\t\t});\n\t\thorder.image = options.docHeaderImage.order;\n\t}\n\n\tif (options.docHeader && horder.image > horder.text)\n\t\tdoc.header({paddingBottom:10}).text(options.docHeader.text, options.docHeader);\n\n\tif (options.docHeaderImage){\n\t\tconst defer = promise.defer();\n\t\tpdfjs.load(options.docHeaderImage.url, function(err, buffer){\n\t\t\tif (!err){\n\t\t\t\tconst img = new pdfjs.Image(buffer);\n\t\t\t\tdoc.header({paddingBottom:10}).image(img, options.docHeaderImage);\n\n\t\t\t\tif(options.docHeader && horder.image < horder.text)\n\t\t\t\t\tdoc.header({paddingBottom:10}).text(options.docHeader.text, options.docHeader);\n\t\t\t}\n\t\t\t//render pdf and show in browser\n\t\t\tdefer.resolve(doc.render());\n\t\t});\n\t\treturn defer;\n\t} else\n\t\treturn promise.resolve(doc.render());\n}\n\nfunction cloneNodeWithStyles(node){\n\tconst clone = node.cloneNode(false);\n\n\tif(node.tagName){\n\t\tconst styles = window.getComputedStyle(node);\n\t\tclone.style.cssText = styles.cssText;\n\t}\n\n\tfor (let i = 0; i < node.childNodes.length; i++)\n\t\tclone.appendChild(cloneNodeWithStyles(node.childNodes[i]));\n\n\treturn clone;\n}","import {errorMessage, getExportScheme, getExportData, getStyles, getFileName} from \"./common\";\n\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {download} from \"../../webix/html\";\nimport {extend, isArray, uid} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\n\nexport const toExcel = function(id, options){\n\toptions = options || {};\n\toptions.export_mode = \"excel\";\n\n\tid = isArray(id)?id:[id];\n\tlet views = [];\n\n\tfor(let i = 0; i<id.length; i++){\n\t\tif(!id[i].id) id[i]  = { id:id[i] }; \n\t\tlet view = $$(id[i].id);\n\t\tconst viewOptions = extend(id[i].options || {}, options);\n\t\tif (view && view.$exportView)\n\t\t\tview = view.$exportView(viewOptions);\n\n\t\tassert(view, errorMessage);\n\n\t\t//$exportView returns array\n\t\tif(isArray(view))\n\t\t\tviews = views.concat(view);\n\t\telse if(view.data && view.data.pull){\n\t\t\tconst images = [];\n\t\t\t//spreadsheet and excelviewer require plain data output first\n\t\t\tconst scheme = getExportScheme(view, viewOptions);\n\t\t\tviews.push({\n\t\t\t\tscheme,\n\t\t\t\texportData: getExportData(view, viewOptions, scheme, images),\n\t\t\t\tspans:(viewOptions.spans ? getSpans(view, viewOptions) : []),\n\t\t\t\tviewOptions,\n\t\t\t\timages\n\t\t\t});\n\t\t}\n\t}\n\tif(options.dataOnly) return views;\n\n\tconst defer = promise.defer(); \n\n\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(function(){\n\t\tif(!views.length) return defer.reject(errorMessage);\n\n\t\tconst wb = { SheetNames:[], Sheets:{}, Workbook:{ WBProps :{}, Names:[], Sheets:[] }};\n\n\t\tlet images = [];\n\t\tfor(let i = 0; i<views.length; i++){\n\t\t\tconst viewOptions = views[i].viewOptions;\n\t\t\tconst scheme = views[i].scheme;\n\t\t\tconst result = views[i].exportData;\n\t\t\tconst spans  = views[i].spans;\n\t\t\tconst ranges =  views[i].ranges || [];\n\t\t\tconst styles = views[i].styles || [];\n\t\t\tconst freeze = views[i].freeze;\n\t\t\tconst sheetSettings = views[i].sheetSettings;\n\t\t\tconst data = getExcelData(result, scheme, spans, styles, freeze, sheetSettings, viewOptions);\n\t\t\tlet sname = (viewOptions.name || \"Data\"+(i+1)).replace(/[*?:[\\]\\\\/]/g,\"\").replace(/&/g, \"&amp;\").substring(0, 31);\n\n\t\t\t//avoid name duplication\n\t\t\tlet k = i;\n\t\t\twhile(wb.SheetNames.indexOf(sname) != -1)\n\t\t\t\tsname = \"Data\"+(++k);\n\n\t\t\tif(views[i].images)\n\t\t\t\timages.push(\n\t\t\t\t\tpromise.all(views[i].images).then(res =>{\n\t\t\t\t\t\tconst regex = /data:image\\/(png|jpg|jpeg);base64,/;\n\t\t\t\t\t\tres = res.filter(image => image);\n\t\t\t\t\t\tdata[\"!images\"] = res.map(image => {\n\t\t\t\t\t\t\tlet type = image.data.match(regex)[1];\n\t\t\t\t\t\t\tif(type == \"jpeg\") type = \"jpg\";\n\t\t\t\t\t\t\timage.position.attrs = { editAs: \"oneCell\" };\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tname: uid()+\".\"+type,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tdata: image.data.replace(regex, \"\"),\n\t\t\t\t\t\t\t\topts: { base64: true },\n\t\t\t\t\t\t\t\tposition: image.position\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\twb.SheetNames.push(sname);\n\t\t\twb.Sheets[sname] = data;\n\t\t\twb.Workbook.Names = wb.Workbook.Names.concat(ranges);\n\t\t\twb.Workbook.Sheets.push({ state: views[i].state || \"visible\" });\n\t\t}\n\n\t\tpromise.all(images).then(()=>{\n\t\t\t/* global XLSX */\n\t\t\tconst xls = XLSX.write(wb, {bookType:\"xlsx\", bookSST:false, type: \"binary\"});\n\t\t\tconst filename =  getFileName(options.filename, \"xlsx\");\n\n\t\t\tconst blob = new Blob([str2array(xls)], { type: \"application/xlsx\" });\n\t\t\tif(options.download !== false)\n\t\t\t\tdownload(blob, filename);\n\t\t\tdefer.resolve(blob);\n\t\t});\n\n\t\treturn defer;\n\t});\n};\n\nfunction str2array(s) {\n\tconst buf = new ArrayBuffer(s.length);\n\tconst view = new Uint8Array(buf);\n\tfor (let i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nconst types = { number:\"n\", date:\"n\", string:\"s\", boolean:\"b\"};\nconst table = \"_table\";\nfunction getExcelData(data, scheme, spans, styles, freeze, sheetSettings, options) {\n\tconst ws = {};\n\tconst range = {s: {c:10000000, r:10000000}, e: {c:0, r:0 }};\n\tfor(let R = 0; R != data.length; ++R) {\n\t\tfor(let C = 0; C != data[R].length; ++C) {\n\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(range.e.c < C) range.e.c = C;\n\n\t\t\tconst cell = {v: data[R][C]};\n\t\t\tif(cell.v === null) continue;\n\t\t\tconst cell_ref = XLSX.utils.encode_cell({c:C,r:R});\n\n\t\t\tconst isFormula = typeof cell.v == \"object\" && cell.v.formula;\n\t\t\tconst stringValue = (isFormula ? cell.v.value : cell.v).toString();\n\n\t\t\tif(styles){\n\t\t\t\tconst cellStyle = getStyles(R, C, styles);\n\t\t\t\tif(cellStyle.format){\n\t\t\t\t\tcell.z = cellStyle.format;\n\t\t\t\t\tdelete cellStyle.format;\n\t\t\t\t}\n\t\t\t\tif(cellStyle.type){\n\t\t\t\t\tcell.t = types[cellStyle.type];\n\t\t\t\t\tdelete cellStyle.type;\n\t\t\t\t}\n\t\t\t\tcell.s = cellStyle;\n\t\t\t}\n\n\t\t\t// set type based on column's config\n\t\t\t// skip headers and formula based cells\n\t\t\tconst header = (options.docHeader?2:0)+scheme[0].header.length;\n\t\t\tif(R>=header && !isFormula){\n\t\t\t\tconst column = scheme[C];\n\t\t\t\tif(column.type && !cell.t) cell.t = (types[column.type] || \"\");\n\t\t\t\tif(column.format && !cell.z) cell.z = column.format;\n\t\t\t}\n\n\t\t\t//prepare formula\n\t\t\tif(isFormula){\n\t\t\t\tif(cell.v.ref)\n\t\t\t\t\tcell.F = cell.v.ref;\n\n\t\t\t\tcell.f = cell.v.formula.substring(1);\n\t\t\t\tcell.v = stringValue;\n\t\t\t}\n\n\t\t\t// set type based on cell's value\n\t\t\tif(options.stubCells && stringValue === \"\")\n\t\t\t\tcell.t = \"z\";\n\t\t\telse if(cell.v instanceof Date){\n\t\t\t\tcell.t = cell.t || \"n\";\n\t\t\t\tcell.z = cell.z || XLSX.SSF[table][14];\n\t\t\t\tcell.v = excelDate(cell.v);\n\t\t\t}\n\t\t\telse if(!cell.t){\n\t\t\t\tif(isFormula)\n\t\t\t\t\tcell.t = isNaN(stringValue) ? \"s\" : \"n\";\n\t\t\t\telse if(typeof cell.v === \"boolean\")\n\t\t\t\t\tcell.t = \"b\";\n\t\t\t\telse if(typeof cell.v === \"number\" || parseFloat(cell.v) == cell.v){\n\t\t\t\t\tcell.v = cell.v*1;\n\t\t\t\t\tcell.t = \"n\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// convert any other object to a string\n\t\t\t\t\tcell.v = stringValue;\n\t\t\t\t\tcell.t = \"s\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tws[cell_ref] = cell;\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws[\"!ref\"] = XLSX.utils.encode_range(range);\n\n\tws[\"!rows\"] = getRowHeights(scheme);\n\tws[\"!cols\"] = getColumnsWidths(scheme);\n\tif(spans.length)\n\t\tws[\"!merges\"] = spans;\n\n\tif(freeze)\n\t\tws[\"!freeze\"] = {\n\t\t\txSplit: freeze.columns,\n\t\t\tySplit: freeze.rows,\n\t\t\ttopLeftCell: `${indexToHeader(freeze.columns+1)}${freeze.rows+1}`,\n\t\t\tstate: \"frozen\",\n\t\t\tactivePane: freeze.rows && freeze.columns ? \"bottomRight\" : (freeze.rows ? \"bottomLeft\" : \"topLeft\")\n\t\t};\n\n\tif(sheetSettings)\n\t\tws[\"!settings\"] = sheetSettings;\n\n\treturn ws;\n}\n\nfunction indexToHeader(index){\n\tconst alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tconst chars = alpha.length;\n\tconst quotient = Math.floor(--index / chars);\n\tif (quotient > 0)\n\t\treturn indexToHeader(quotient) + alpha[index % chars];\n\treturn alpha[index % chars];\n}\n\nfunction getRowHeights(scheme){\n\tconst heights = scheme.heights;\n\tfor(const i in heights)\n\t\theights[i] = {hpx:heights[i], hpt:heights[i]*0.75 };\n\n\tconst hidden = scheme.hiddenRows;\n\tif(hidden)\n\t\tfor(const i in hidden){\n\t\t\tif(!heights[i])\n\t\t\t\theights[i] = {};\n\t\t\theights[i].hidden = 1;\n\t\t}\n\n\treturn heights;\n}\n\nfunction getSpans(view, options){\n\tconst isTable = view.getColumnConfig;\n\tconst pull = view._spans_pull;\n\tlet spans = [];\n\n\tif(isTable){\n\t\tif(options.header!==false)\n\t\t\tspans = getHeaderSpans(view, options, \"header\", spans); \n\n\t\tif(pull){\n\t\t\tconst xc = options.xCorrection || 0;\n\t\t\tconst yc = options.yCorrection || 0;\n\t\t\tfor(const row in pull){\n\t\t\t\t//{ s:{c:1, r:0}, e:{c:3, r:0} }\n\t\t\t\tconst cols = pull[row];\n\t\t\t\tfor(const col in cols){\n\t\t\t\t\tlet colIndex = view.getColumnIndex(col);\n\n\t\t\t\t\tconst rowId = view.getItem(row).id;\n\t\t\t\t\tlet rowIndex = view.getIndexById(rowId);\n\n\t\t\t\t\tif(options.hidden){\n\t\t\t\t\t\tconst hiddenColsOrder = view._hidden_column_order;\n\t\t\t\t\t\tif(hiddenColsOrder.length){\n\t\t\t\t\t\t\tconst colId = view.getColumnConfig(col).id;\n\t\t\t\t\t\t\tcolIndex = hiddenColsOrder.indexOf(colId);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst hiddenRowsOrder = view.data._filter_order;\n\t\t\t\t\t\tif(hiddenRowsOrder && hiddenRowsOrder.length)\n\t\t\t\t\t\t\trowIndex = hiddenRowsOrder.indexOf(rowId);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst sc = colIndex - xc;\n\t\t\t\t\tconst sr = rowIndex - yc;\n\t\t\t\t\tif(sc<0||sr<0) //hidden cols/rows\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tconst ec = sc+cols[col][0]-1;\n\t\t\t\t\tconst er = sr+(cols[col][1]-1);\n\n\t\t\t\t\tspans.push({ s:{c:sc, r:sr}, e:{c:ec, r:er} });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(options.footer!==false)\n\t\t\tspans = getHeaderSpans(view, options, \"footer\", spans);\n\t}\n\n\treturn spans;\n}\n\nfunction getHeaderSpans(view, options, group, spans){\n\tconst columns = view.config.columns;\n\tconst delta = (options.docHeader?2:0)+(group == \"header\" ? 0 :((options.header!==false?view._headers.length:0)+view.count()));\n\n\tfor(let i=0; i<columns.length; i++){\n\t\tconst header = columns[i][group];\n\t\tfor(let h = 0; h<header.length; h++){\n\t\t\tif(header[h] && (header[h].colspan || header[h].rowspan)){\n\t\t\t\tspans.push({\n\t\t\t\t\ts:{ c:i, r:h+delta},\n\t\t\t\t\te:{ c:i+(header[h].colspan||1)-1, r:h+(header[h].rowspan ||1)-1+delta }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn spans;\n}\n\nfunction excelDate(date) {\n\tconst returnDateTime = 25569 + ((date.getTime() - (date.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\n\treturn returnDateTime.toString().substr(0,20);\n}\n\nfunction getColumnsWidths(scheme){\n\tconst wscols = [];\n\tfor (let i = 0; i < scheme.length; i++){\n\t\tconst col = scheme[i];\n\t\twscols.push({\n\t\t\twch: col.width,\n\t\t\thidden: scheme.hiddenCols ? scheme.hiddenCols[ col.id ] : 0\n\t\t});\n\t}\n\n\treturn wscols;\n}","import env from \"../webix/env\";\nimport i18n from \"../webix/i18n\";\n\n\nconst wDate = {\n\tstartOnMonday:false,\n\n\ttoFixed:function(num, ms){\n\t\tif( num<10)\tnum = \"0\"+num;\n\t\tif( ms && num <100 ) num = \"0\"+num;\n\t\treturn num;\n\t},\n\tweekStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tvar shift=date.getDay();\n\t\tif (this.startOnMonday){\n\t\t\tif (shift===0) shift=6;\n\t\t\telse shift--;\n\t\t}\n\t\treturn this.datePart(this.add(date,-1*shift,\"day\"));\n\t},\n\tmonthStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setDate(1);\n\t\treturn this.datePart(date);\n\t},\n\tyearStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setMonth(0);\n\t\treturn this.monthStart(date);\n\t},\n\tdayStart:function(date){\n\t\treturn this.datePart(date, true);\n\t},\n\tdateToStr:function(format,utc,timezone){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date)\n\t\t\t\t\treturn \"\";\n\t\t\t\tif (!date.getMonth)\n\t\t\t\t\tdate = i18n.parseFormatDate(date);\n\n\t\t\t\tvar str = \"\";\n\t\t\t\tvar lastPos = 0;\n\t\t\t\tformat.replace(/%[a-zA-Z]/g,function(s,pos){\n\t\t\t\t\tstr += format.slice(lastPos,pos);\n\t\t\t\t\tvar fn = function(date){\n\t\t\t\t\t\tif( s == \"%d\")  return wDate.toFixed(date.getDate());\n\t\t\t\t\t\tif( s == \"%m\")  return wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\tif( s == \"%j\")  return date.getDate();\n\t\t\t\t\t\tif( s == \"%n\")  return (date.getMonth()+1);\n\t\t\t\t\t\tif( s == \"%y\")  return wDate.toFixed(date.getFullYear()%100);\n\t\t\t\t\t\tif( s == \"%Y\")  return date.getFullYear();\n\t\t\t\t\t\tif( s == \"%D\")  return i18n.calendar.dayShort[date.getDay()];\n\t\t\t\t\t\tif( s == \"%l\")  return i18n.calendar.dayFull[date.getDay()];\n\t\t\t\t\t\tif( s == \"%M\")  return i18n.calendar.monthShort[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%F\")  return i18n.calendar.monthFull[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%h\")  return wDate.toFixed((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%g\")  return ((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%G\")  return date.getHours();\n\t\t\t\t\t\tif( s == \"%H\")  return wDate.toFixed(date.getHours());\n\t\t\t\t\t\tif( s == \"%i\")  return wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\tif( s == \"%a\")  return (date.getHours()>11?i18n.pm[0]:i18n.am[0]);\n\t\t\t\t\t\tif( s == \"%A\")  return (date.getHours()>11?i18n.pm[1]:i18n.am[1]);\n\t\t\t\t\t\tif( s == \"%s\")  return wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\tif( s == \"%S\")\treturn wDate.toFixed(date.getMilliseconds(), true);\n\t\t\t\t\t\tif( s == \"%W\")  return wDate.toFixed(Date.getISOWeek(date));\n\t\t\t\t\t\tif( s == \"%c\"){\n\t\t\t\t\t\t\tvar str = date.getFullYear();\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed(date.getDate());\n\t\t\t\t\t\t\tstr += \"T\";\n\t\t\t\t\t\t\tstr += wDate.toFixed(date.getHours());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\t\tif(timezone){\n\t\t\t\t\t\t\t\tlet offset = new Date().getTimezoneOffset();\n\n\t\t\t\t\t\t\t\tif(!offset)\n\t\t\t\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tconst sign = offset < 0 ? \"+\" : \"-\";\n\t\t\t\t\t\t\t\t\toffset = Math.abs(offset);\n\t\t\t\t\t\t\t\t\tconst hours = Math.floor(offset/60);\n\t\t\t\t\t\t\t\t\tconst minutes = offset%60;\n\n\t\t\t\t\t\t\t\t\tstr += sign + (hours < 10 ? \"0\" : \"\") + hours + \":\" + (minutes < 10 ? \"0\" : \"\") + minutes;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(utc)\n\t\t\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\t\t\treturn str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t};\n\t\t\t\t\tstr += fn(date);\n\t\t\t\t\tlastPos = pos + 2;\n\t\t\t\t});\n\t\t\t\tstr += format.slice(lastPos,format.length);\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t}\n\n\t\tformat=format.replace(/%[a-zA-Z]/g,function(a){\n\t\t\tswitch(a){\n\t\t\t\tcase \"%d\": return \"\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\tcase \"%m\": return \"\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\tcase \"%j\": return \"\\\"+date.getDate()+\\\"\";\n\t\t\t\tcase \"%n\": return \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\tcase \"%y\": return \"\\\"+wDate.toFixed(date.getFullYear()%100)+\\\"\"; \n\t\t\t\tcase \"%Y\": return \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\tcase \"%D\": return \"\\\"+i18n.calendar.dayShort[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%l\": return \"\\\"+i18n.calendar.dayFull[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%M\": return \"\\\"+i18n.calendar.monthShort[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%F\": return \"\\\"+i18n.calendar.monthFull[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%h\": return \"\\\"+wDate.toFixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%g\": return \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%G\": return \"\\\"+date.getHours()+\\\"\";\n\t\t\t\tcase \"%H\": return \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\tcase \"%i\": return \"\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\tcase \"%a\": return \"\\\"+(date.getHours()>11?i18n.pm[0]:i18n.am[0])+\\\"\";\n\t\t\t\tcase \"%A\": return \"\\\"+(date.getHours()>11?i18n.pm[1]:i18n.am[1])+\\\"\";\n\t\t\t\tcase \"%s\": return \"\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\tcase \"%S\": return \"\\\"+wDate.toFixed(date.getMilliseconds(), true)+\\\"\";\n\t\t\t\tcase \"%W\": return \"\\\"+wDate.toFixed(wDate.getISOWeek(date))+\\\"\";\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tvar str = \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\t\tstr += \"T\";\n\t\t\t\t\tstr += \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tif(timezone){\n\t\t\t\t\t\tlet offset = new Date().getTimezoneOffset();\n\n\t\t\t\t\t\tif(!offset)\n\t\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst sign = offset < 0 ? \"+\" : \"-\";\n\t\t\t\t\t\t\toffset = Math.abs(offset);\n\t\t\t\t\t\t\tconst hours = Math.floor(offset/60);\n\t\t\t\t\t\t\tconst minutes = offset%60;\n\n\t\t\t\t\t\t\tstr += sign + (hours < 10 ? \"0\" : \"\") + hours + \":\" + (minutes < 10 ? \"0\" : \"\") + minutes;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(utc)\n\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\treturn str;\n\n\t\t\t\tdefault: return a;\n\t\t\t}\n\t\t});\n\t\tif (utc===true) format=format.replace(/date\\.get/g,\"date.getUTC\");\n\t\tconst temp = new Function(\"date\", \"i18n\", \"wDate\", \"if (!date) return ''; if (!date.getMonth) date=i18n.parseFormatDate(date);  return \\\"\"+format+\"\\\";\");\n\t\treturn function(v){ return temp(v, i18n, wDate); };\n\t},\n\tstrToDate:function(format,utc,timezone){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tvar mask=format.match(/%[a-zA-Z]/g);\n\t\tvar splt=\"var temp=date.split(/[\\\\s\\\\./\\\\-\\\\:\\\\,]+/g); if(!temp.join('')){return ''}\";\n\t\tvar i,t,s;\n\n\t\tif(!i18n.calendar.monthShort_hash){\n\t\t\ts = i18n.calendar.monthShort;\n\t\t\tt = i18n.calendar.monthShort_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\n\t\t\ts = i18n.calendar.monthFull;\n\t\t\tt = i18n.calendar.monthFull_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\t\t}\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date) return \"\";\n\t\t\t\tif (typeof date == \"object\") return date;\n\t\t\t\tvar temp=date.split(/[\\s./\\-:,]+/g);\n\n\t\t\t\tif(!temp.join(\"\"))\n\t\t\t\t\treturn \"\";\n\n\t\t\t\tvar set=[0,0,1,0,0,0,0];\n\t\t\t\tfor (i=0; i<mask.length; i++){\n\t\t\t\t\tvar a = mask[i];\n\t\t\t\t\tif( a ==  \"%y\")\n\t\t\t\t\t\tset[0]=temp[i]*1+(temp[i]>30?1900:2000);\n\t\t\t\t\telse if( a ==  \"%Y\"){\n\t\t\t\t\t\tset[0]=(temp[i]||0)*1; if (set[0]<30) set[0]+=2000;\n\t\t\t\t\t}\n\t\t\t\t\telse if( a == \"%n\" || a == \"%m\")\n\t\t\t\t\t\tset[1]=(temp[i]||1)-1;\n\t\t\t\t\telse if( a ==  \"%M\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthShort_hash[temp[i]]||0;\n\t\t\t\t\telse if( a ==  \"%F\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthFull_hash[temp[i]]||0;\n\t\t\t\t\telse if( a == \"%j\" || a == \"%d\")\n\t\t\t\t\t\tset[2]=temp[i]||1;\n\t\t\t\t\telse if( a == \"%g\" || a == \"%G\" || a == \"%h\" || a == \"%H\")\n\t\t\t\t\t\tset[3]=temp[i]||0;\n\t\t\t\t\telse if( a == \"%a\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[0]?0:12);\n\t\t\t\t\telse if( a == \"%A\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[1]?0:12);\n\t\t\t\t\telse if( a ==  \"%i\")\n\t\t\t\t\t\tset[4]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%s\")\n\t\t\t\t\t\tset[5]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%S\")\n\t\t\t\t\t\tset[6]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%c\"){\n\t\t\t\t\t\tconst reg = /(\\d{4})-?(\\d{2})?-?(\\d{2})?T?(\\d{2})?:?(\\d{2})?:?(\\d{2})?[,|.]?(\\d{3})?(Z|\\+|-)?(\\d{2})?:?(\\d{2})?/;\n\t\t\t\t\t\tconst res = reg.exec(date);\n\t\t\t\t\t\tset[0]= (res[1]||0)*1;\n\t\t\t\t\t\tset[1]= (res[2]||1)-1;\n\t\t\t\t\t\tset[2]= (res[3]||1)*1;\n\t\t\t\t\t\tset[3]= (res[4]||0)*1;\n\t\t\t\t\t\tset[4]= (res[5]||0)*1;\n\t\t\t\t\t\tset[5]= (res[6]||0)*1;\n\t\t\t\t\t\tset[6]= (res[7]||0)*1;\n\n\t\t\t\t\t\tif(timezone && res[8] && res[8] != \"Z\"){\n\t\t\t\t\t\t\tconst sign = res[8] == \"-\" ? -1 : 1;\n\t\t\t\t\t\t\tconst tzDifference = sign * ((res[9]||0)*60 + (res[10]||0)*1);\n\t\t\t\t\t\t\tif(tzDifference)\n\t\t\t\t\t\t\t\tset[4] += tzDifference + new Date().getTimezoneOffset();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(utc)\n\t\t\t\t\treturn new Date(Date.UTC(set[0],set[1],set[2],set[3],set[4],set[5], set[6]));\n\t\t\t\treturn new Date(set[0],set[1],set[2],set[3],set[4],set[5], set[6]);\n\t\t\t};\n\t\t}\n\n\t\tfor (i=0; i<mask.length; i++){\n\t\t\tswitch(mask[i]){\n\t\t\t\tcase \"%j\":\n\t\t\t\tcase \"%d\": splt+=\"set[2]=temp[\"+i+\"]||1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%n\":\n\t\t\t\tcase \"%m\": splt+=\"set[1]=(temp[\"+i+\"]||1)-1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%y\": splt+=\"set[0]=temp[\"+i+\"]*1+(temp[\"+i+\"]>30?1900:2000);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%g\":\n\t\t\t\tcase \"%G\":\n\t\t\t\tcase \"%h\": \n\t\t\t\tcase \"%H\":\n\t\t\t\t\tsplt+=\"set[3]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%i\":\n\t\t\t\t\tsplt+=\"set[4]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%Y\":  splt+=\"set[0]=(temp[\"+i+\"]||0)*1; if (set[0]<30) set[0]+=2000;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%a\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[0]?0:12);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%A\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[1]?0:12);\";\n\t\t\t\t\tbreak;\t\t\t\t\t\n\t\t\t\tcase \"%s\":  splt+=\"set[5]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%S\":  splt+=\"set[6]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%M\":  splt+=\"set[1]=i18n.calendar.monthShort_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%F\":  splt+=\"set[1]=i18n.calendar.monthFull_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tsplt+= `\n\t\t\t\t\t\tconst reg = /(\\\\d{4})-?(\\\\d{2})?-?(\\\\d{2})?T?(\\\\d{2})?:?(\\\\d{2})?:?(\\\\d{2})?[,|.]?(\\\\d{3})?(Z|\\\\+|-)?(\\\\d{2})?:?(\\\\d{2})?/;\n\t\t\t\t\t\tconst res = reg.exec(date);\n\t\t\t\t\t\tset[0]= (res[1]||0)*1;\n\t\t\t\t\t\tset[1]= (res[2]||1)-1;\n\t\t\t\t\t\tset[2]= (res[3]||1)*1;\n\t\t\t\t\t\tset[3]= (res[4]||0)*1;\n\t\t\t\t\t\tset[4]= (res[5]||0)*1;\n\t\t\t\t\t\tset[5]= (res[6]||0)*1;\n\t\t\t\t\t\tset[6]= (res[7]||0)*1;\n\n\t\t\t\t\t\tif(${timezone} && res[8] && res[8] != \"Z\"){\n\t\t\t\t\t\t\tconst sign = res[8] == \"-\" ? -1 : 1;\n\t\t\t\t\t\t\tconst tzDifference = sign * ((res[9]||0)*60 + (res[10]||0)*1);\n\t\t\t\t\t\t\tif(tzDifference)\n\t\t\t\t\t\t\t\tset[4] += tzDifference + new Date().getTimezoneOffset();\n\t\t\t\t\t\t}`;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar code =\"set[0],set[1],set[2],set[3],set[4],set[5],set[6]\";\n\t\tif (utc) code =\" Date.UTC(\"+code+\")\";\n\t\tconst temp = new Function(\"date\", \"i18n\", \"if (!date) return ''; if (typeof date == 'object') return date; var set=[0,0,1,0,0,0,0]; \"+splt+\" return new Date(\"+code+\");\");\n\t\treturn function(v){ return temp(v, i18n ); };\n\t},\n\t\t\n\tgetISOWeek: function(ndate) {\n\t\tif(!ndate) return false;\n\t\tvar nday = ndate.getDay();\n\t\tif (nday === 0) {\n\t\t\tnday = 7;\n\t\t}\n\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\tvar ordinal_date = Math.floor( (first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\tvar weekNumber = 1 + Math.floor( ordinal_date / 7);\t\n\t\treturn weekNumber;\n\t},\n\t\n\tgetUTCISOWeek: function(ndate){\n\t\treturn this.getISOWeek(ndate);\n\t},\n\t_correctDate: function(d,d0,inc,checkFunc){\n\t\tif(!inc)\n\t\t\treturn;\n\t\tvar incorrect = checkFunc(d,d0);\n\t\tif(incorrect){\n\t\t\tvar i = (inc>0?1:-1);\n\n\t\t\twhile(incorrect){\n\t\t\t\td.setHours(d.getHours()+i);\n\t\t\t\tincorrect = checkFunc(d,d0);\n\t\t\t\ti += (inc>0?1:-1);\n\t\t\t}\n\t\t}\n\t},\n\tadd:function(date,inc,mode,copy){\n\t\tif (copy) date = this.copy(date);\n\t\tvar d = wDate.copy(date);\n\t\tswitch(mode){\n\t\t\tcase \"day\":\n\t\t\t\tdate.setDate(date.getDate()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"week\":\n\t\t\t\tdate.setDate(date.getDate()+7*inc);\n\t\t\t\tthis._correctDate(date,d,7*inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tdate.setMonth(date.getMonth()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"quarter\":\n\t\t\t\tdate.setMonth(date.getMonth() + inc * 3);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"year\":\n\t\t\t\tdate.setYear(date.getFullYear()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getFullYear() == d.getFullYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\tdate.setHours(date.getHours()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getHours() == d.getHours() && Date.datePart(d0,true)== Date.datePart(d,true);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"minute\": \tdate.setMinutes(date.getMinutes()+inc); break;\n\t\t\tdefault:\n\t\t\t\twDate.add[mode](date, inc, mode);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn date;\n\t},\n\tdatePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\n\t\t// workaround for non-existent hours\n\t\tvar d = this.copy(date);\n\t\td.setHours(0);\n\t\tif(d.getDate()!=date.getDate()){\n\t\t\tdate.setHours(1);\n\t\t}\n\t\telse{\n\t\t\tdate.setHours(0);\n\t\t}\n\n\t\tdate.setMinutes(0);\n\t\tdate.setSeconds(0);\n\t\tdate.setMilliseconds(0);\n\t\treturn date;\n\t},\n\ttimePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\t\treturn (date.valueOf()/1000 - date.getTimezoneOffset()*60)%86400;\n\t},\n\tcopy:function(date){\n\t\treturn new Date(date.valueOf());\n\t},\n\tequal:function(a,b){\n\t\tif (!a || !b) return false;\n\t\treturn a.valueOf() === b.valueOf();\n\t},\n\tisHoliday:function(day){ \n\t\tday = day.getDay();\n\t\tif (day === 0 || day==6) return \"webix_cal_event\"; \n\t}\n};\n\nexport default wDate;","import i18n from \"../webix/i18n\";\nimport rules from \"../webix/rules\";\nimport template from \"../webix/template\";\n\nconst Number={\n\tgetConfig: function(value){\n\t\tconst config = {\n\t\t\tdecimalSize:0,\n\t\t\tgroupSize:999,\n\t\t\tminusSign:i18n.minusSign,\n\t\t\tminusPosition:i18n.minusPosition,\n\t\t\tprefix:\"\",\n\t\t\tsufix:\"\"\n\t\t};\n\t\tconst parts = value.split(/[0-9].*[0-9]/g);\n\t\tif (parts[0].length)\n\t\t\tconfig.prefix = parts[0];\n\t\tif (parts[1].length)\n\t\t\tconfig.sufix = parts[1];\n\t\tif (config.prefix || config.sufix){\n\t\t\tvalue = value.substr(config.prefix.length, value.length - config.prefix.length - config.sufix.length);\n\t\t}\n\n\t\tconst num = value.indexOf(\"1\");\n\t\tif (num > 0){\n\t\t\tconfig.prefix = value.substr(0, num);\n\t\t\tvalue = value.substr(num);\n\t\t}\n\n\t\tconst dot = value.indexOf(\"0\");\n\t\tif (dot > 0){\n\t\t\tconfig.decimalSize = value.length - dot;\n\t\t\tconfig.decimalDelimiter = value[dot-1];\n\t\t\tvalue = value.substr(0, dot-1);\n\t\t}\n\t\tconst sep = value.match(/[^0-9]/);\n\t\tif (sep){\n\t\t\tconfig.groupSize = value.length - sep.index - 1;\n\t\t\tconfig.groupDelimiter = value[sep.index];\n\t\t}\n\t\treturn config;\n\t},\n\tparse:function(value, config){\n\t\tif (!value || typeof value !== \"string\")\n\t\t\treturn value;\n\n\t\tconfig = config||i18n;\n\n\t\tconst initialValue = value;\n\n\t\tif (config.prefix)\n\t\t\tvalue = value.replace(config.prefix, \"\");\n\n\t\tlet sign = 1;\n\t\tswitch(config.minusPosition){\n\t\t\tcase \"before\":\n\t\t\tcase \"after\":\n\t\t\t\tif(value.indexOf(config.minusSign) != -1){\n\t\t\t\t\tsign = -1;\n\t\t\t\t\tvalue = value.replace(config.minusSign, \"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"parentheses\":\n\t\t\t\tif(value.indexOf(config.minusSign[0]) != -1 && value.indexOf(config.minusSign[1]) != -1){\n\t\t\t\t\tsign = -1;\n\t\t\t\t\tvalue = value.replace(config.minusSign[0], \"\").replace(config.minusSign[1], \"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (config.priceTemplate)\n\t\t\tvalue = value.replace(config.priceTemplate.replace(\"{obj}\", \"\"), \"\");\n\n\t\tif (config.sufix)\n\t\t\tvalue = value.replace(config.sufix, \"\");\n\n\t\tvalue = value.trim();\n\n\t\tlet decimal = \"\";\n\t\tif (config.decimalDelimiter){\n\t\t\tconst ind = value.indexOf(config.decimalDelimiter);\n\t\t\tif (ind > -1){\n\t\t\t\tdecimal = value.substr(ind+1);\n\n\t\t\t\tif(!rules.isNumber(decimal))\n\t\t\t\t\treturn initialValue;\n\n\t\t\t\tconst count = config.decimalOptional ? Infinity : config.decimalSize;\n\t\t\t\tdecimal = decimal.substr(0, Math.min(decimal.length, count));\n\t\t\t\tvalue = value.substr(0, ind);\n\t\t\t}\n\t\t}\n\n\t\tif(config.groupSize){\n\t\t\tconst groups = value.split(config.groupDelimiter);\n\n\t\t\t//validate groups\n\t\t\tfor(let i = 0; i < groups.length; i++){\n\t\t\t\tconst correctSize = (!i && groups[i].length <= config.groupSize) || groups[i].length == config.groupSize;\n\t\t\t\tif(!correctSize || !rules.isNumber(groups[i]))\n\t\t\t\t\treturn initialValue;\n\t\t\t}\n\n\t\t\tvalue = groups.join(\"\");\n\t\t}\n\n\t\tif (!value)\n\t\t\tvalue = \"0\";\n\n\t\tif (decimal)\n\t\t\tvalue += \".\"+decimal;\n\n\t\treturn rules.isNumber(value) ? value * sign : initialValue;\n\t},\n\tformat: function(value, config){ \n\t\tif (value === \"\" || typeof value === \"undefined\") return value;\n\t\t\n\t\tconfig = config||i18n;\n\t\tvalue = parseFloat(value);\n\n\t\tconst sign = value < 0 ? \"-\":\"\";\n\t\tvalue = Math.abs(value);\n\n\t\tif (!config.decimalOptional)\n\t\t\tvalue = value.toFixed(config.decimalSize);\n\n\t\tlet str = value.toString();\n\t\tstr = str.split(\".\");\n\n\t\tlet int_value = \"\";\n\t\tif (config.groupSize){\n\t\t\tconst step = config.groupSize;\n\t\t\tlet i = str[0].length;\n\t\t\tdo {\n\t\t\t\ti -= step;\n\t\t\t\tconst chunk = (i>0)?str[0].substr(i,step):str[0].substr(0,step+i);\n\t\t\t\tint_value = chunk+(int_value?config.groupDelimiter+int_value:\"\");\n\t\t\t} while(i>0);\n\t\t} else\n\t\t\tint_value = str[0];\n\n\t\tif (config.decimalSize || config.decimalOptional)\n\t\t\tstr = int_value + (str[1] ? (config.decimalDelimiter + str[1]) : \"\");\n\t\telse\n\t\t\tstr = int_value;\n\n\t\tif(config.priceTemplate)\n\t\t\tstr = template(config.priceTemplate)(str);\n\n\t\tif(sign){\n\t\t\tswitch(config.minusPosition){\n\t\t\t\tcase \"before\":\n\t\t\t\t\tstr = config.minusSign + str;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\":\n\t\t\t\t\tstr += config.minusSign;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"parentheses\":\n\t\t\t\t\tstr = config.minusSign[0] + str + config.minusSign[1];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(config.prefix)\n\t\t\tstr = config.prefix + str;\n\t\tif(config.sufix)\n\t\t\tstr += config.sufix;\n\n\t\treturn str;\n\t},\n\tnumToStr:function(config){\n\t\treturn function(value){\n\t\t\treturn Number.format(value, config);\n\t\t};\n\t}\n};\n\nexport default Number;","import env from \"../webix/env\";\nimport {stringify} from \"./stringify\";\nimport DataDriver from \"../load/drivers/index\";\n\n\nconst storage = {};\n\nstorage.prefix = function(scope, storage){\n\tscope = scope + \".\";\n\treturn {\n\t\tput:function(name, data){\n\t\t\treturn storage.put(scope+name, data);\n\t\t},\n\t\tget:function(name){\n\t\t\treturn storage.get(scope+name);\n\t\t},\n\t\tremove:function(name){\n\t\t\treturn storage.remove(scope+name);\n\t\t}\n\t};\n};\n\nstorage.local = {\n\tput:function(name, data){\n\t\tif(name && window.JSON && window.localStorage){\n\t\t\twindow.localStorage.setItem(name, stringify(data));\n\t\t}\n\t},\n\tget:function(name){\n\t\tif(name && window.JSON && window.localStorage){\n\t\t\tvar json = window.localStorage.getItem(name);\n\t\t\tif(!json)\n\t\t\t\treturn null;\n\t\t\treturn DataDriver.json.toObject(json);\n\t\t}else\n\t\t\treturn null;\n\t},\n\tremove:function(name){\n\t\tif(name && window.JSON && window.localStorage){\n\t\t\twindow.localStorage.removeItem(name);\n\t\t}\n\t},\n\tclear:function(){\n\t\twindow.localStorage.clear();\n\t}\n};\n\nstorage.session = {\n\tput:function(name, data){\n\t\tif(name && window.JSON && window.sessionStorage){\n\t\t\twindow.sessionStorage.setItem(name, stringify(data));\n\t\t}\n\t},\n\tget:function(name){\n\t\tif(name && window.JSON && window.sessionStorage){\n\t\t\tvar json = window.sessionStorage.getItem(name);\n\t\t\tif(!json)\n\t\t\t\treturn null;\n\t\t\treturn DataDriver.json.toObject(json);\n\t\t}else\n\t\t\treturn null;\n\t},\n\tremove:function(name){\n\t\tif(name && window.JSON && window.sessionStorage){\n\t\t\twindow.sessionStorage.removeItem(name);\n\t\t}\n\t},\n\tclear:function(){\n\t\twindow.sessionStorage.clear();\n\t}\n};\n\nstorage.cookie = {\n\tput:function(name, data, domain, expires ){\n\t\tif(name && window.JSON){\n\t\t\tdocument.cookie = name + \"=\" + escape(stringify(data)) +\n\t\t\t(( expires && (expires instanceof Date)) ? \";expires=\" + expires.toUTCString() : \"\" ) +\n\t\t\t(( domain ) ? \";domain=\" + domain : \"\" ) + \n\t\t\t(( env.https ) ? \";secure\" : \"\");\n\t\t}\n\t},\n\tgetRaw:function(check_name){\n\t\t// first we'll split this cookie up into name/value pairs\n\t\t// note: document.cookie only returns name=value, not the other components\n\t\tvar a_all_cookies = document.cookie.split( \";\" );\n\t\tvar a_temp_cookie = \"\";\n\t\tvar cookie_name = \"\";\n\t\tvar cookie_value = \"\";\n\t\tvar b_cookie_found = false; // set boolean t/f default f\n\n\t\tfor (var i = 0; i < a_all_cookies.length; i++ ){\n\t\t\t// now we'll split apart each name=value pair\n\t\t\ta_temp_cookie = a_all_cookies[i].split( \"=\" );\n\n\t\t\t// and trim left/right whitespace while we're at it\n\t\t\tcookie_name = a_temp_cookie[0].replace(/^\\s+|\\s+$/g, \"\");\n\n\t\t\t// if the extracted name matches passed check_name\n\t\t\tif (cookie_name == check_name ){\n\t\t\t\tb_cookie_found = true;\n\t\t\t\t// we need to handle case where cookie has no value but exists (no = sign, that is):\n\t\t\t\tif ( a_temp_cookie.length > 1 ){\n\t\t\t\t\tcookie_value = unescape( a_temp_cookie[1].replace(/^\\s+|\\s+$/g, \"\") );\n\t\t\t\t}\n\t\t\t\t// note that in cases where cookie is initialized but no value, null is returned\n\t\t\t\treturn cookie_value;\n\t\t\t}\n\t\t\ta_temp_cookie = null;\n\t\t\tcookie_name = \"\";\n\t\t}\n\t\tif ( !b_cookie_found ){\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\t},\n\tget:function(name){\n\t\tif(name && window.JSON){\n\t\t\tvar json = this.getRaw(name);\n\t\t\tif(!json)\n\t\t\t\treturn null;\n\t\t\treturn DataDriver.json.toObject(unescape(json));\n\t\t}else\n\t\t\treturn null;\n\t},\n\tremove:function(name, domain){\n\t\tif(name && this.getRaw(name)) \n\t\t\tdocument.cookie = name + \"=\" + (( domain ) ? \";domain=\" + domain : \"\") + \";expires=Thu, 01-Jan-1970 00:00:01 GMT\";\n\t},\n\tclear:function(domain){\n\t\tvar cookies = document.cookie.split(\";\");\n\t\tfor (var i = 0; i < cookies.length; i++)\n\t\t\tdocument.cookie = /^[^=]+/.exec(cookies[i])[0] + \"=\" + (( domain ) ? \";domain=\" + domain : \"\") + \";expires=Thu, 01-Jan-1970 00:00:01 GMT\";\t\t\n\t}\n};\n\nexport default storage;","import {preventEvent} from \"../webix/html\";\nimport template from \"../webix/template\";\nimport {extend} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport wDate from \"../core/date\";\n\n\nconst datafilter = {\n\ttextWaitDelay:500,\n\t\"summColumn\":{\n\t\tgetValue:function(node){ return node.innerText; },\n\t\tsetValue: function(){},\n\t\trefresh:function(master, node, value){ \n\t\t\tvar result = 0;\n\t\t\tmaster.mapCells(null, value.columnId, null, 1, function(value){\n\t\t\t\tvalue = value*1;\n\t\t\t\tif (!isNaN(value))\n\t\t\t\t\tresult+=value;\n\t\t\t}, true);\n\n\t\t\tif (value.format)\n\t\t\t\tresult = value.format(result);\n\t\t\tif (value.template)\n\t\t\t\tresult = value.template({value:result});\n\n\t\t\tnode.innerHTML = result;\n\t\t},\n\t\ttrackCells:true,\n\t\trender:function(master, config){ \n\t\t\tif (config.template)\n\t\t\t\tconfig.template = template(config.template);\n\t\t\treturn \"\"; \n\t\t}\n\t},\n\t\"masterCheckbox\":{\n\t\tgetValue:function(){},\n\t\tsetValue:function(){},\n\t\tgetHelper:function(node, config){\n\t\t\treturn {\n\t\t\t\tcheck:function(){ config.checked = false; node.onclick(); },\n\t\t\t\tuncheck:function(){ config.checked = true; node.onclick(); },\n\t\t\t\tisChecked:function(){ return config.checked; }\n\t\t\t};\n\t\t},\n\t\trefresh:function(master, node, config){\n\t\t\tnode.onclick = function(){\n\t\t\t\tthis.getElementsByTagName(\"input\")[0].checked = config.checked = !config.checked;\n\t\t\t\tvar column = master.getColumnConfig(config.columnId);\n\t\t\t\tvar checked = config.checked ? column.checkValue : column.uncheckValue;\n\t\t\t\tmaster.data.each(function(obj){\n\t\t\t\t\tobj[config.columnId] = checked;\n\t\t\t\t\tmaster.callEvent(\"onCheck\", [obj.id, config.columnId, checked]);\n\t\t\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"save\"]);\n\t\t\t\t});\n\t\t\t\tmaster.refresh();\n\t\t\t};\n\t\t},\n\t\trender:function(master, config){ \n\t\t\treturn \"<input type='checkbox' \"+(config.checked?\"checked='1'\":\"\")+\">\"; \n\t\t}\n\t},\n\t\"textFilter\":{\n\t\tgetInputNode:function(node){ return node.querySelector(\"input\") || { value: null }; },\n\t\tgetValue:function(node){ return this.getInputNode(node).value;  },\n\t\tsetValue:function(node, value){ this.getInputNode(node).value = value;  },\n\t\trefresh:function(master, node, value){\n\t\t\tnode.component = master._settings.id;\n\t\t\tmaster.registerFilter(node, value, this);\n\t\t\tnode._comp_id = master._settings.id;\n\t\t\tif (value.value && this.getValue(node) != value.value) this.setValue(node, value.value);\n\t\t\tnode.onclick = preventEvent;\n\t\t\t_event(node, \"keydown\", this._on_key_down);\n\t\t},\n\t\trender:function(master, config){\n\t\t\tif (this.init) this.init(config);\n\t\t\tconfig.css = (config.css||\"\") + \" webix_ss_filter\";\n\t\t\treturn \"<input \"+(config.placeholder?(\"placeholder=\\\"\"+config.placeholder+\"\\\" \"):\"\")+\"type='text'>\"; \n\t\t},\n\t\t_on_key_down:function(e){\n\t\t\tvar id = this._comp_id;\n\n\t\t\t//tabbing through filters must not trigger filtering\n\t\t\t//we can improve this functionality by preserving initial filter value\n\t\t\t//and comparing new one with it\n\t\t\tif ((e.which || e.keyCode) == 9) return;\n\n\t\t\tif (this._filter_timer) window.clearTimeout(this._filter_timer);\n\t\t\tthis._filter_timer=window.setTimeout(function(){\n\t\t\t\tvar ui = $$(id);\n\t\t\t\t//ensure that ui is not destroyed yet\n\t\t\t\tif (ui) ui.filterByAll();\n\t\t\t},datafilter.textWaitDelay);\n\t\t}\n\t},\n\t\"selectFilter\":{\n\t\tgetInputNode:function(node){ return node.querySelector(\"select\") || { value: null}; },\n\t\tgetValue:function(node){ return this.getInputNode(node).value;  },\n\t\tsetValue:function(node, value){ this.getInputNode(node).value = value;  },\n\t\trefresh:function(master, node, value){\n\t\t\t//value - config from header { contet: }\n\t\t\tvalue.compare = value.compare || function(a,b){ return a == b; };\n\n\t\t\tnode.component = master._settings.id;\n\t\t\tmaster.registerFilter(node, value, this);\n\n\t\t\tconst data = datafilter._get_data(master, value);\n\t\t\tif (value.emptyOption !== false)\n\t\t\t\tdata.unshift({id:\"\", value:value.emptyOption||\"\"});\n\n\t\t\t//slow in IE\n\t\t\t//http://jsperf.com/select-options-vs-innerhtml\n\n\t\t\tlet select = document.createElement(\"select\");\n\t\t\tfor (let i = 0; i < data.length; i++){\n\t\t\t\tlet option = document.createElement(\"option\");\n\t\t\t\toption.value = data[i].id;\n\t\t\t\toption.text = data[i].value;\n\t\t\t\tselect.add(option);\n\t\t\t}\n\n\t\t\tnode.innerHTML = \"\";\n\t\t\tnode.appendChild(select);\n\n\t\t\tif (value.value) this.setValue(node, value.value);\n\t\t\tnode.onclick = preventEvent;\n\n\t\t\tselect._comp_id = master._settings.id;\n\t\t\t_event(select, \"change\", this._on_change);\n\t\t},\n\t\trender:function(master, config){\n\t\t\tif (this.init) this.init(config);\n\t\t\tconfig.css = (config.css||\"\") + \" webix_ss_filter\";\n\t\t\treturn \"\";\n\t\t},\n\t\t_on_change:function(){ \n\t\t\t$$(this._comp_id).filterByAll();\n\t\t}\n\t},\n\t_get_data:function(master, value){\n\t\tlet data;\n\t\tlet options = value.options;\n\n\t\tif (options){\n\t\t\tdata = master._collectValues.call(options, \"id\", \"value\");\n\t\t} else\n\t\t\tdata = master.collectValues(value.columnId, value.collect);\n\n\t\treturn data;\n\t}\n};\n\ndatafilter.serverFilter = extend({\n\t$server: true,\n\t_on_key_down:function(e){\n\t\tvar id = this._comp_id,\n\t\t\tcode = (e.which || e.keyCode);\n\n\t\t//ignore tab and navigation keys\n\t\tif (code == 9 || ( code >= 33 &&  code <= 40)) return;\n\t\tif (this._filter_timer) window.clearTimeout(this._filter_timer);\n\t\tthis._filter_timer=window.setTimeout(function(){\n\t\t\t$$(id).filterByAll();\n\t\t},datafilter.textWaitDelay);\n\t}\n}, datafilter.textFilter);\n\ndatafilter.serverSelectFilter = extend({\n\t$server: true,\n\t_on_change:function(){\n\t\tvar id = this._comp_id;\n\t\t$$(id).filterByAll();\n\t}\n}, datafilter.selectFilter);\n\ndatafilter.numberFilter = extend({\n\tinit:function(config){\n\t\tconfig.prepare = function(value){\n\t\t\tvar equality = (value.indexOf(\"=\") != -1);\n\t\t\tvar intvalue = this.format(value);\n\t\t\tif (intvalue === \"\") return \"\";\n\n\t\t\tvar compare;\n\t\t\tif (value.indexOf(\">\") != -1){\n\t\t\t\tcompare = this._greater;\n\t\t\t}\n\t\t\telse if (value.indexOf(\"<\") != -1){\n\t\t\t\tcompare = this._lesser;\n\t\t\t}\n\n\t\t\tif (compare && equality) {\n\t\t\t\tconfig.compare = (a,b) => this._equal(a,b) || compare(a,b);\n\t\t\t} else {\n\t\t\t\tconfig.compare = compare || this._equal; \n\t\t\t}\n\n\t\t\treturn intvalue;\n\t\t};\n\t},\n\tformat:function(value){\n\t\treturn value.replace(/[^\\-.0-9]/g,\"\");\n\t},\n\t_greater:function(a,b){ return a*1>b; },\n\t_lesser:function(a,b){ return a!==\"\" && a*1<b; },\n\t_equal:function(a,b){ return a !== \"\" && a*1==b; }\n}, datafilter.textFilter);\n\ndatafilter.dateFilter = extend({\n\tformat:function(value){\n\t\tif (value === \"\") return \"\";\n\t\tvar date = new Date();\n\n\t\tif (value.indexOf(\"today\") != -1){\n\t\t\tdate = wDate.dayStart(date);\n\t\t} else if (value.indexOf(\"now\") == -1){\n\t\t\tvar parts = value.match(/[0-9]+/g);\n\t\t\tif (!parts||!parts.length) return \"\";\n\t\t\tif (parts.length < 3){\n\t\t\t\tparts.reverse();\n\t\t\t\tdate = new Date(parts[0], (parts[1]||1)-1, 1);\n\t\t\t} else\n\t\t\t\tdate = i18n.dateFormatDate(value.replace(/^[>< =]+/,\"\"));\n\t\t}\n\t\treturn date.valueOf();\n\t}\n}, datafilter.numberFilter);\n\nexport default datafilter;","import {ui, $$} from \"./core\";\nimport {create} from \"../webix/html\";\nimport ani from \"../webix/animate\";\n\nexport function animate(obj, parent, config){\n\tvar pobj = $$(parent);\n\tif (pobj){\n\t\tvar aniset = config || { type:\"slide\", direction:\"left\" };\n\t\tvar d = pobj._viewobj.cloneNode(true);\n\t\tvar view = ui(obj, parent);\n\n\t\tview._viewobj.parentNode.appendChild(d);\n\t\tvar line = ani.formLine(\n\t\t\tview._viewobj,\n\t\t\td,\n\t\t\taniset\n\t\t);\n\n\t\taniset.callback = function(){\n\t\t\tani.breakLine(line);\n\t\t};\n\t\tani(line, aniset);\n\n\t\treturn view;\n\t}\n}\n\nexport function animateView(view, stateHandler, config){\n\tview = $$(view);\n\tif (view){\n\t\tconfig = config || { type:\"slide\", direction:\"left\" };\n\n\t\tvar getHTML = function(view){\n\t\t\tvar el = view._viewobj;\n\t\t\tvar css = el.className;\n\t\t\tvar content =el.innerHTML;\n\t\t\treturn \"<div class='\"+css+\"' style='width:\"+el.offsetWidth+\"px;height:\"+el.offsetHeight+\"px;'>\"+content+\"</div>\";\n\t\t};\n\n\t\t// get 'display' state of child nodes\n\t\tvar display = [];\n\t\tfor(let i=0; i<view._viewobj.childNodes.length; i++){\n\t\t\tvar node = view._viewobj.childNodes[i];\n\t\t\tvar value = node.currentStyle ?node.currentStyle.display : getComputedStyle(node, null).display;\n\t\t\tdisplay.push(value||\"\");\n\t\t}\n\t\t// get current html content\n\t\tvar currentState = getHTML(view);\n\n\t\t// apply new state\n\t\tif(typeof stateHandler == \"function\"){\n\t\t\tstateHandler.call(this);\n\t\t}\n\n\t\t// get new html content\n\t\tvar newState = getHTML(view);\n\n\t\t// insert elements into the view\n\t\tvar tempParent = view._viewobj.insertBefore(create(\"DIV\",{\n\t\t\t\"class\" : \"webix_view_animate\",\n\t\t\t\"style\" : \"width:\"+view._viewobj.offsetWidth+\"px;height:\"+view._viewobj.offsetHeight+\"px;\"\n\t\t}, newState+currentState),view._viewobj.firstChild);\n\n\t\t// hide child nodes\n\t\tfor(let i =1; i<view._viewobj.childNodes.length; i++){\n\t\t\tview._viewobj.childNodes[i].style.display = \"none\";\n\t\t}\n\n\t\t// animate inserted elements\n\t\tvar line = ani.formLine(\n\t\t\ttempParent.childNodes[0],\n\t\t\ttempParent.childNodes[1],\n\t\t\tconfig\n\t\t);\n\t\tconfig.callback = function(){\n\t\t\tif(tempParent){\n\t\t\t\tview._viewobj.removeChild(tempParent);\n\t\t\t\ttempParent = null;\n\t\t\t\t// restore 'display' state of child nodes\n\t\t\t\tfor(var i =0; i< view._viewobj.childNodes.length;i++){\n\t\t\t\t\tview._viewobj.childNodes[i].style.display = display[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tani(line, config);\n\n\t\treturn view;\n\t}\n}","/*German (Germany) locale*/\nconst de = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%n.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j. %F %Y\",\n\tfullDateFormat:\"%j. %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"{obj} €\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"],\n\t\tmonthShort:[\"Jan\",\"Feb\",\"Mrz\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],\n\t\tdayShort:[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],\n\t\thours: \"Stunden\",\n\t\tminutes: \"Minuten\",\n\t\tdone:\"Fertig\",\n\t\tclear: \"Entfernen\",\n\t\ttoday: \"Heute\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Seite\",\n\t\tof:\"von\"\n\t},\n\tPDFviewer:{\n\t\tof:\"von\",\n\t\tautomaticZoom:\"Automatisch Zoom\",\n\t\tactualSize:\"Aktuelles Ausmaß\",\n\t\tpageFit:\"Seite Ausmaß\",\n\t\tpageWidth:\"Seite Breite\",\n\t\tpageHeight:\"Seite Höhe\",\n\t\tenterPassword:\"Passwort eingeben\",\n\t\tpasswordError:\"Falsches passwort\"\n\t},\n\taria:{\n\t\tcalendar:\"Kalender\",\n\t\tincreaseValue:\"Wert erhöhen\",\n\t\tdecreaseValue:\"Wert verringern\",\n\t\tnavMonth:[\"Vorheriger Monat\", \"Nächsten Monat\"],\n\t\tnavYear:[\"Vorheriges Jahr\", \"Nächstes Jahr\"],\n\t\tnavDecade:[\"Zurück Jahrzehnt\", \"Als nächstes Jahrzehnt\"],\n\t\tdateFormat:\"%j. %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Stunden: %H\",\n\t\tminuteFormat:\"Minuten: %i\",\n\t\tremoveItem:\"Element entfernen\",\n\t\tpages:[\"Erste Seite\", \"Vorherige Seite\", \"Folgeseite\", \"Letzte Seite\"],\n\t\tpage:\"Seite\",\n\t\theadermenu:\"Titelmenü\",\n\t\topenGroup:\"Öffnen Spaltengruppe \",\n\t\tcloseGroup:\"Schließen Spaltengruppe \",\n\t\tcloseTab:\"Tab schließen\",\n\t\tshowTabs:\"Weitere Tabs\",\n\t\tresetTreeMap:\"Zurück zur ursprünglichen Ansicht\",\n\t\tnavTreeMap:\"Aufleveln\",\n\t\tnextTab:\"Weiter tab\",\n\t\tprevTab:\"Zurück tab\",\n\t\tmultitextSection:\"Element hinzufügen\",\n\t\tmultitextextraSection:\"Element entfernen\",\n\t\tshowChart:\"Chart anzeigen\",\n\t\thideChart:\"Chart verstecken\",\n\t\tresizeChart:\"Chart Größe ändern\"\n\t},\n\trichtext:{\n\t\tunderline: \"Unterstreichen\",\n\t\tbold: \"Fettgedruckt\",\n\t\titalic: \"Kursiv\"\n\t},\n\tcombo:{\n\t\tselect:\"Auswählen\",\n\t\tselectAll:\"Alles auswählen\",\n\t\tunselectAll:\"Alles widerrufen\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Abbrechen\"\n\t},\n\tcomments:{\n\t\tsend: \"Absenden\",\n\t\tconfirmMessage: \"Der Kommentar wird entfernt. Sind Sie sicher?\",\n\t\tedit: \"Redigieren\",\n\t\tremove: \"Löschen\",\n\t\tplaceholder: \"Geben Sie hier ein..\",\n\t\tmoreComments:\"Mehr Kommentare\"\n\t},\n\tfilter:{\n\t\tless: \"weniger\",\n\t\tlessOrEqual: \"weniger oder gleich\",\n\t\tgreater: \"mehr\",\n\t\tgreaterOrEqual: \"größer oder gleich\",\n\t\tcontains: \"enthält\",\n\t\tnotContains: \"nicht enthält\",\n\t\tequal: \"gleich\",\n\t\tnotEqual: \"ungleich\",\n\t\tbeginsWith: \"beginnt mit\",\n\t\tnotBeginsWith: \"nicht beginnt mit\",\n\t\tendsWith: \"endet mit\",\n\t\tnotEndsWith: \"nicht endet mit\",\n\t\tbetween: \"zwischen\",\n\t\tnotBetween: \"nicht zwischen\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Sekunden\"\n\t}\n};\n\nexport default de;","const fr = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} €\",\n\tpriceSettings:null, //use number defaults\n\t\n\tcalendar:{\n\t\tmonthFull:[\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n\t\tmonthShort:[\"Jan\", \"Fév\", \"Mar\", \"Avr\", \"Mai\", \"Juin\", \"Juil\", \"Aoû\", \"Sep\", \"Oct\", \"Nov\", \"Déc\"],\t\n\t\tdayFull:[\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"],\n\t\tdayShort:[\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\n\t\thours: \"Heures\",\n\t\tminutes: \"Minutes\",\n\t\tdone:\"Fini\",\n\t\tclear: \"Effacer\",\n\t\ttoday: \"Aujourd'hui\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Page\",\n\t\tof:\"sur\"\n\t},\n\tPDFviewer:{\n\t\tof:\"sur\",\n\t\tautomaticZoom:\"Zoom automatique\",\n\t\tactualSize:\"Taille actuelle\",\n\t\tpageFit:\"Taille de la page\",\n\t\tpageWidth:\"Largeur de la page\",\n\t\tpageHeight:\"Hauteur de page\",\n\t\tenterPassword:\"Entrez le mot de passe\",\n\t\tpasswordError:\"Mauvais mot de passe\"\n\t},\n\taria:{\n\t\tcalendar:\"Сalendrier\",\n\t\tincreaseValue:\"Augmenter la valeur\",\n\t\tdecreaseValue:\"Diminution de la valeur\",\n\t\tnavMonth:[\"Le mois précédent\", \"Le mois prochain\"],\n\t\tnavYear:[\"Année précédente\", \"L'année prochaine\"],\n\t\tnavDecade:[\"Décennie précédente\", \"Suivant décennie\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Heures: %H\",\n\t\tminuteFormat:\"Minutes: %i\",\n\t\tremoveItem:\"Retirer l'élément\",\n\t\tpages:[\"Première page\", \"Page précédente\", \"Page suivante\", \"Dernière page\"],\n\t\tpage:\"Page\",\n\t\theadermenu:\"Menu de titre\",\n\t\topenGroup:\"Ouvrir groupe de colonnes \",\n\t\tcloseGroup:\"Fermer groupe de colonnes\",\n\t\tcloseTab:\"Fermer tab\",\n\t\tshowTabs:\"Montrer plus tabs\",\n\t\tresetTreeMap:\"Revenir à la vue originale\",\n\t\tnavTreeMap:\"Niveau supérieur\",\n\t\tnextTab:\"Prochain tab\",\n\t\tprevTab:\"Précédent tab\",\n\t\tmultitextSection:\"Ajouter l'élément\",\n\t\tmultitextextraSection:\"Retirer l'élément\",\n\t\tshowChart:\"Montrer chart\",\n\t\thideChart:\"Cacher chart\",\n\t\tresizeChart:\"Redimensionner chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Souligner\",\n\t\tbold: \"Gras\",\n\t\titalic: \"Italique\"\n\t},\n\tcombo:{\n\t\tselect:\"Sélectionner\",\n\t\tselectAll:\"Tout sélectionner\",\n\t\tunselectAll:\"Tout déselectionner\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Annuler\"\n\t},\n\tcomments:{\n\t\tsend: \"Envoyer\",\n\t\tconfirmMessage: \"Le commentaire sera supprimé. Êtes-vous sûr?\",\n\t\tedit: \"Modifier\",\n\t\tremove: \"Effacer\",\n\t\tplaceholder: \"Écrivez ici..\",\n\t\tmoreComments:\"Plus de commentaires\"\n\t},\n\tfilter:{\n\t\tless: \"moins\",\n\t\tlessOrEqual: \"inférieur ou égal\",\n\t\tgreater: \"plus grand\",\n\t\tgreaterOrEqual: \"supérieur ou égal\",\n\t\tcontains: \"contient\",\n\t\tnotContains: \"ne contient\",\n\t\tequal: \"égal\",\n\t\tnotEqual: \"pas égal\",\n\t\tbeginsWith: \"commence par\",\n\t\tnotBeginsWith: \"ne commence par\",\n\t\tendsWith: \"se termine par\",\n\t\tnotEndsWith: \"pas se termine par\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"pas entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"secondes\"\n\t}\n};\n\nexport default fr;","/*Italian (Italy) locale*/\nconst it = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j %F %Y\",\n\tfullDateFormat:\"%j %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"€ {obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"gennaio\",\"febbraio\",\"marzo\",\"aprile\",\"maggio\",\"giugno\",\"luglio\",\"agosto\",\"settembre\",\"ottobre\",\"novembre\",\"dicembre\"],\n\t\tmonthShort:[\"gen\",\"feb\",\"mar\",\"apr\",\"mag\",\"giu\",\"lug\",\"ago\",\"set\",\"ott\",\"nov\",\"dic\"],\n\t\tdayFull:[\"domenica\",\"lunedì\",\"martedì\",\"mercoledì\",\"giovedì\",\"venerdì\",\"sabato\"],\n\t\tdayShort:[\"dom\",\"lun\",\"mar\",\"mer\",\"gio\",\"ven\",\"sab\"],\n\t\thours: \"Orario\",\n\t\tminutes: \"Minuti\",\n\t\tdone:\"Pronto\",\n\t\tclear: \"Pulisci\",\n\t\ttoday: \"Oggi\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Pagina\",\n\t\tof:\"di\"\n\t},\n\tPDFviewer:{\n\t\tof:\"di\",\n\t\tautomaticZoom:\"Zoom automatico\",\n\t\tactualSize:\"Dimensione reale\",\n\t\tpageFit:\"Dimensioni della pagina\",\n\t\tpageWidth:\"Larghezza della pagina\",\n\t\tpageHeight:\"Altezza della pagina\",\n\t\tenterPassword:\"Inserisci la password\",\n\t\tpasswordError:\"Password errata\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendario\",\n\t\tincreaseValue:\"Aumenta il valore\",\n\t\tdecreaseValue:\"Riduci il valore\",\n\t\tnavMonth:[\"Il mese scorso\", \"Il prossimo mese\"],\n\t\tnavYear:[\"L'anno scorso\", \"L'anno prossimo\"],\n\t\tnavDecade:[\"Decennio precedente\", \"Prossimo decennio\"],\n\t\tdateFormat:\"%j %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Orario: %H\",\n\t\tminuteFormat:\"Minuti: %i\",\n\t\tremoveItem:\"Rimuovere l'elemento\",\n\t\tpages:[\"Prima pagina\", \"Pagina precedente\", \"Pagina successiva\", \"Ultima pagina\"],\n\t\tpage:\"Pagina\",\n\t\theadermenu:\"Menu del titolo\",\n\t\topenGroup:\"Aperto gruppo di colonne\",\n\t\tcloseGroup:\"Chiudi gruppo di colonne\",\n\t\tcloseTab:\"Chiudi tab\",\n\t\tshowTabs:\"Mostra più tabs\",\n\t\tresetTreeMap:\"Tornare alla vista originale\",\n\t\tnavTreeMap:\"Livello superiore\",\n\t\tnextTab:\"Tab successivo\",\n\t\tprevTab:\"Tab precedente\",\n\t\tmultitextSection:\"Aggiungi elemento\",\n\t\tmultitextextraSection:\"Rimuovere l'elemento\",\n\t\tshowChart:\"Mostrare grafico\",\n\t\thideChart:\"Nascondere grafico\",\n\t\tresizeChart:\"Ridimensionare grafico\"\n\t},\n\trichtext:{\n\t\tunderline: \"Sottolineare\",\n\t\tbold: \"Grassetto\",\n\t\titalic: \"Corsivo\"\n\t},\n\tcombo:{\n\t\tselect:\"Selezionare\",\n\t\tselectAll:\"Seleziona tutto\",\n\t\tunselectAll:\"Deseleziona tutto\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Annullare\"\n\t},\n\tcomments:{\n\t\tsend: \"Inviare\",\n\t\tconfirmMessage: \"Il commento verrà rimosso. Sei sicuro?\",\n\t\tedit: \"Correggere\",\n\t\tremove: \"Elimina\",\n\t\tplaceholder: \"Digitare qui..\",\n\t\tmoreComments:\"Altri commenti\"\n\t},\n\tfilter:{\n\t\tless: \"meno\",\n\t\tlessOrEqual: \"minore o uguale\",\n\t\tgreater: \"maggiore\",\n\t\tgreaterOrEqual: \"maggiore o uguale\",\n\t\tcontains: \"contiene\",\n\t\tnotContains: \"non contiene\",\n\t\tequal: \"uguale\",\n\t\tnotEqual: \"non uguale\",\n\t\tbeginsWith: \"inizia con\",\n\t\tnotBeginsWith: \"non inizia con\",\n\t\tendsWith: \"finisce con\",\n\t\tnotEndsWith: \"non termina con\",\n\t\tbetween: \"tra\",\n\t\tnotBetween: \"non tra\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"secondi\"\n\t}\n};\n\nexport default it;","const pt = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%d de %F de %Y\",\n\tfullDateFormat:\"%d de %F de %Y %G:%i\",\n\n\tam:null,\n\tpm:null,\n\tprice:\"R$ {obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tfileSize: [\"b\",\"Kb\",\"Mb\",\"Gb\",\"Tb\",\"Pb\",\"Eb\"],\n\tcalendar:{\n\t\tmonthFull:[\"Janeiro\",\"Fevereiro\",\"Março\",\"Abril\",\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\"],\n\t\tmonthShort:[\"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Domingo\",\"Segunda-Feira\",\"Terça-Feira\",\"Quarta-Feira\",\"Quinta-Feira\",\"Sexta-Feira\",\"Sábado\"],\n\t\tdayShort:[\"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"Sáb\"],\n\t\thours: \"Horas\",\n\t\tminutes: \"Minutos\",\n\t\tdone:\"Feito\",\n\t\tclear: \"Limpar\",\n\t\ttoday: \"Hoje\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Página\",\n\t\tof:\"de\"\n\t},\n\tPDFviewer:{\n\t\tof:\"de\",\n\t\tautomaticZoom:\"Zoom automático\",\n\t\tactualSize:\"Tamanho atual\",\n\t\tpageFit:\"Tamanho da página\",\n\t\tpageWidth:\"Largura da página\",\n\t\tpageHeight:\"Altura da página\",\n\t\tenterPassword:\"Digite a senha\",\n\t\tpasswordError:\"Senha incorreta\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendário\",\n\t\tincreaseValue:\"Aumentar o valor\",\n\t\tdecreaseValue:\"Diminuir o valor\",\n\t\tnavMonth:[\"Mês anterior\", \"Próximo mês\"],\n\t\tnavYear:[\"Ano anterior\", \"Próximo ano\"],\n\t\tnavDecade:[\"Década anterior\", \"Próxima década\"],\n\t\tdateFormat:\"%d de %F de %Y\",\n\t\tmonthFormat:\"%F de %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Horas: %G\",\n\t\tminuteFormat:\"Minutos: %i\",\n\t\tremoveItem:\"Remover elemento\",\n\t\tpages:[\"Primeira página\", \"Página anterior\", \"Próxima página\", \"Última página\"],\n\t\tpage:\"Página\",\n\t\theadermenu:\"Menu de títulos\",\n\t\topenGroup:\"Grupo coluna aberta\",\n\t\tcloseGroup:\"Fechar grupo de colunas\",\n\t\tcloseTab:\"Fechar tab\",\n\t\tshowTabs:\"Mostre mais tabs\",\n\t\tresetTreeMap:\"Мoltar à vista original\",\n\t\tnavTreeMap:\"Upar\",\n\t\tnextTab:\"Próximo tab\",\n\t\tprevTab:\"Anterior tab\",\n\t\tmultitextSection:\"Adicionar elemento\",\n\t\tmultitextextraSection:\"Remover elemento\",\n\t\tshowChart:\"Exposição chart\",\n\t\thideChart:\"Esconder chart\",\n\t\tresizeChart:\"Redimensionar chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Sublinhado\",\n\t\tbold: \"Negrito\",\n\t\titalic: \"itálico\"\n\t},\n\tcombo:{\n\t\tselect:\"Selecionar\",\n\t\tselectAll:\"Selecionar tudo\",\n\t\tunselectAll:\"Desmarque todos\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancelar\"\n\t},\n\tcomments:{\n\t\tsend: \"Enviar\",\n\t\tconfirmMessage: \"Comentário será removido. Você tem certeza?\",\n\t\tedit: \"Editar\",\n\t\tremove: \"Excluir\",\n\t\tplaceholder: \"Digite aqui..\",\n\t\tmoreComments:\"Mais comentários\"\n\t},\n\tfilter:{\n\t\tless: \"menos\",\n\t\tlessOrEqual: \"menor ou igual\",\n\t\tgreater: \"maior\",\n\t\tgreaterOrEqual: \"maior ou igual\",\n\t\tcontains: \"contém\",\n\t\tnotContains: \"não contém\",\n\t\tequal: \"igual\",\n\t\tnotEqual: \"não é igual\",\n\t\tbeginsWith: \"começa com\",\n\t\tnotBeginsWith: \"não começa com\",\n\t\tendsWith: \"termina com\",\n\t\tnotEndsWith: \"não termina com\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"não entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"segundos\"\n\t}\n};\n\nexport default pt;","const ru = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%m.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} руб.\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\" \",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\t\n\tcalendar:{\n\t\tmonthFull:[\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"],\n\t\tmonthShort:[\"Янв\", \"Фев\", \"Мар\", \"Апр\", \"Май\", \"Июн\", \"Июл\", \"Авг\", \"Сен\", \"Окт\", \"Ноя\", \"Дек\"],\n\t\tdayFull:[ \"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"],\n\t\tdayShort:[\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n\t\thours: \"Часы\",\n\t\tminutes: \"Минуты\",\n\t\tdone: \"Готово\",\n\t\tclear: \"Очистить\",\n\t\ttoday: \"Сегодня\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Страница\",\n\t\tof:\"из\"\n\t},\n\tPDFviewer:{\n\t\tof:\"из\",\n\t\tautomaticZoom:\"Автоматический зум\",\n\t\tactualSize:\"Настоящий размер\",\n\t\tpageFit:\"Размер страницы\",\n\t\tpageWidth:\"Ширина страницы\",\n\t\tpageHeight:\"Высота страницы\",\n\t\tenterPassword:\"Введите пароль\",\n\t\tpasswordError:\"Неверный пароль\"\n\t},\n\taria:{\n\t\tcalendar:\"Календарь\",\n\t\tincreaseValue:\"Увеличить значение\",\n\t\tdecreaseValue:\"Уменьшить значение\",\n\t\tnavMonth:[\"Предыдущий месяц\", \"Следующий месяц\"],\n\t\tnavYear:[\"Предыдущий год\", \"Следующий год\"],\n\t\tnavDecade:[\"Предыдущие десять лет\", \"Следующие десять лет\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Часы: %H\",\n\t\tminuteFormat:\"Минуты: %i\",\n\t\tremoveItem:\"Удалить элемент\",\n\t\tpages:[\"Первая страница\", \"Предыдущая страница\", \"Следующая страница\", \"Последняя страница\"],\n\t\tpage:\"Страница\",\n\t\theadermenu:\"Меню шапки таблицы\",\n\t\topenGroup:\"Развернуть группу столбцов\",\n\t\tcloseGroup:\"Свернуть группу столбцов\",\n\t\tcloseTab:\"Закрыть вкладку\",\n\t\tshowTabs:\"Показать больше вкладок\",\n\t\tresetTreeMap:\"Вернуться к первоначальному представлению\",\n\t\tnavTreeMap:\"Перейти на уровень выше\",\n\t\tnextTab:\"Следующая вкладка\",\n\t\tprevTab:\"Предыдущая вкладка\",\n\t\tmultitextSection:\"Добавить элемент\",\n\t\tmultitextextraSection:\"Удалить элемент\",\n\t\tshowChart:\"Показать чарт\",\n\t\thideChart:\"Спрятать чарт\",\n\t\tresizeChart:\"Изменить размер чарта\"\n\t},\n\trichtext:{\n\t\tunderline: \"Подчеркивание\",\n\t\tbold: \"Жирный\",\n\t\titalic: \"Курсив\"\n\t},\n\tcombo:{\n\t\tselect:\"Выбрать\",\n\t\tselectAll:\"Выбрать все\",\n\t\tunselectAll:\"Сброс выбора\"\n\t},\n\tmessage:{\n\t\tok:\"ОК\",\n\t\tcancel:\"Отмена\"\n\t},\n\tcomments:{\n\t\tsend: \"Отправить\",\n\t\tconfirmMessage: \"Комментарий будет удален. Вы уверены?\",\n\t\tedit: \"Редактировать\",\n\t\tremove: \"Удалить\",\n\t\tplaceholder: \"Введите текст..\",\n\t\tmoreComments:\"Больше комментариев\"\n\t},\n\tfilter:{\n\t\tless: \"меньше\",\n\t\tlessOrEqual: \"меньше или равно\",\n\t\tgreater: \"больше\",\n\t\tgreaterOrEqual: \"больше или равно\",\n\t\tcontains: \"содержит\",\n\t\tnotContains: \"не содержит\",\n\t\tequal: \"равно\",\n\t\tnotEqual: \"не равно\",\n\t\tbeginsWith: \"начинается с\",\n\t\tnotBeginsWith: \"не начинается с\",\n\t\tendsWith: \"заканчиватся\",\n\t\tnotEndsWith: \"не заканчиватся\",\n\t\tbetween: \"между\",\n\t\tnotBetween: \"не между\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Секунды\"\n\t}\n};\n\nexport default ru;","const be = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%m.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} руб.\",\n\tpriceSettings:{\n\t\tgroupSize:3,\n\t\tgroupDelimiter:\" \",\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:0,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\n\tcalendar:{\n\t\tmonthFull:[\"Студзень\", \"Люты\", \"Сакавік\", \"Красавік\", \"Травень\", \"Чэрвень\", \"Ліпень\", \"Жнівень\", \"Верасень\", \"Кастрычнік\", \"Лістапад\", \"Снежань\"],\n\t\tmonthShort:[\"Студз\", \"Лют\", \"Сак\", \"Крас\", \"Трав\", \"Чэр\", \"Ліп\", \"Жнів\", \"Вер\", \"Каст\", \"Ліст\", \"Снеж\"],\n\t\tdayFull:[ \"Нядзеля\", \"Панядзелак\", \"Аўторак\", \"Серада\", \"Чацвер\", \"Пятніца\", \"Субота\"],\n\t\tdayShort:[\"Нд\", \"Пн\", \"Аўт\", \"Ср\", \"Чцв\", \"Пт\", \"Сб\"],\n\t\thours: \"Гадзіны\",\n\t\tminutes: \"Хвіліны\",\n\t\tdone: \"Гатова\",\n\t\ttoday: \"Cёння\",\n\t\tclear: \"Ачысціць\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Старонка\",\n\t\tof:\"з\"\n\t},\n\tPDFviewer:{\n\t\tof:\"з\",\n\t\tautomaticZoom:\"Аўтаматычны зум\",\n\t\tactualSize:\"Сапраўдны памер\",\n\t\tpageFit:\"Памер старонкі\",\n\t\tpageWidth:\"Шырыня старонкі\",\n\t\tpageHeight:\"Вышыня старонкі\",\n\t\tenterPassword:\"Увядзіце пароль\",\n\t\tpasswordError:\"Няправільны пароль\"\n\t},\n\taria:{\n\t\tcalendar:\"Каляндар\",\n\t\tincreaseValue:\"Павялічыць значэнне\",\n\t\tdecreaseValue:\"Паменшыць значэнне\",\n\t\tnavMonth:[\"Папярэдні месяц\", \"Наступны месяц\"],\n\t\tnavYear:[\"Папярэдні год\", \"Наступны год\"],\n\t\tnavDecade:[\"Папярэднія дзесяць год\", \"Наступныя дзесяць год\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Hours: %h\",\n\t\tminuteFormat:\"Гадзіны: %i\",\n\t\tremoveItem:\"Прыбраць элемент\",\n\t\tpages:[\"Першая старонка\", \"Папярэдняя старонка\", \"Наступная старонка\", \"Апошняя старонка\"],\n\t\tpage:\"Старонка\",\n\t\theadermenu:\"Меню загалоўка\",\n\t\topenGroup:\"Адкрыць групу слупкоў\",\n\t\tcloseGroup:\"Закрыць групу слупкоў\",\n\t\tcloseTab:\"Закрыць укладку\",\n\t\tshowTabs:\"Паказаць больш укладак\",\n\t\tresetTreeMap:\"Вярнуцца да першапачатковага выгляду\",\n\t\tnavTreeMap:\"Падняцца на ўзровень вышэй\",\n\t\tnextTab:\"Наступная ўкладка\",\n\t\tprevTab:\"Папярэдняя ўкладка\",\n\t\tmultitextSection:\"Дадаць элемент\",\n\t\tmultitextextraSection:\"Прыбраць элемент\",\n\t\tshowChart:\"Паказаць графік\",\n\t\thideChart:\"Схаваць графік\",\n\t\tresizeChart:\"Змяніць памер графіка\"\n\t},\n\trichtext:{\n\t\tunderline: \"Падкрэсліванне\",\n\t\tbold: \"Паўтлусты\",\n\t\titalic: \"Курсіў\"\n\t},\n\tcombo:{\n\t\tselect:\"Абраць\",\n\t\tselectAll:\"Абраць усё\",\n\t\tunselectAll:\"Ачысціць ўсе\"\n\t},\n\tmessage:{\n\t\tok:\"ОК\",\n\t\tcancel:\"Адмена\"\n\t},\n\tcomments:{\n\t\tsend: \"Даслаць\",\n\t\tconfirmMessage: \"Каментарый будзе выдалены. Вы ўпэўнены?\",\n\t\tedit: \"Рэдагаваць\",\n\t\tremove: \"Выдаліць\",\n\t\tplaceholder: \"Пішыце тут..\",\n\t\tmoreComments:\"Больш каментарыяў\"\n\t},\n\tfilter:{\n\t\tless: \"менш\",\n\t\tlessOrEqual: \"менш або роўна\",\n\t\tgreater: \"больш\",\n\t\tgreaterOrEqual: \"больш або роўна\",\n\t\tcontains: \"змяшчае\",\n\t\tnotContains: \"не змяшчае\",\n\t\tequal: \"роўныя\",\n\t\tnotEqual: \"не роўныя\",\n\t\tbeginsWith: \"пачынаецца з\",\n\t\tnotBeginsWith: \"не пачынаецца з\",\n\t\tendsWith: \"заканчваецца\",\n\t\tnotEndsWith: \"не сканчаецца\",\n\t\tbetween: \"паміж\",\n\t\tnotBetween: \"не паміж\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Секунды\"\n\t}\n};\n\nexport default be;","import {assert} from \"../webix/debug\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {insertBefore, remove} from \"../webix/html\";\nimport {extend, _power_array, isUndefined, copy} from \"../webix/helpers\";\nimport {_each} from \"../ui/helpers\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\n\nimport state from \"../core/state\";\nimport IdSpace from \"../core/idspace\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport base from \"./baseview\";\n\nconst api = {\n\tname:\"baselayout\",\n\trestore:function(state, factory, configOnly){\n\t\tvar out = this._restore(copy(state), factory);\n\t\tif (configOnly)\n\t\t\treturn out;\n\t\telse\n\t\t\tui((out.cols || out.rows), this);\n\t},\n\t_restore:function(state, factory){\n\t\tif (state.$layout){\n\t\t\tvar sub = state.cols || state.rows;\n\t\t\tfor (var i = 0; i < sub.length; i++) {\n\t\t\t\tsub[i] = this._restore(sub[i], factory);\n\t\t\t}\n\t\t} else {\n\t\t\treturn factory.call(this, state);\n\t\t}\n\n\t\treturn state;\n\t},\n\tserialize:function(serializer){\n\t\tvar out = [];\n\t\tvar childs = this.getChildViews();\n\n\t\tfor (var i=0; i<childs.length; i++){\n\t\t\tvar sub = childs[i];\n\t\t\tif (sub.movePortlet){\n\t\t\t\tvar child = sub.getChildViews();\n\t\t\t\tout.push(serializer.call(this, child[child.length-1]));\n\t\t\t} else if (sub.serialize){\n\t\t\t\t// some kind of layout\n\t\t\t\tout.push(sub.serialize(serializer, true));\n\t\t\t} else {\n\t\t\t\t// leaf view\n\t\t\t\tout.push(serializer.call(this, sub));\n\t\t\t}\n\t\t}\n\n\t\tvar obj = { $layout: true, type: this.config.type };\n\t\tif (this.config.rows)\n\t\t\tobj.rows = out;\n\t\telse\n\t\t\tobj.cols = out;\n\n\t\treturn obj;\n\t},\n\t$init:function(config){\n\t\tthis.$ready.push(this._parse_cells);\n\t\tthis._dataobj  = this._contentobj;\n\t\tthis._layout_sizes = [];\n\t\tthis._responsive = [];\n\t\tthis._padding = { top:0, left:0, right:0, bottom:0 };\n\n\t\tif (config.$topView){\n\t\t\tconfig.borderless = true;\n\t\t\tconfig._inner = { top:true, left:true, bottom:true, right:true };\n\t\t}\n\n\t\tif (config.isolate)\n\t\t\textend(this, IdSpace);\n\t},\n\trows_setter:function(value){\n\t\tthis._vertical_orientation = 1;\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\tcols_setter:function(value){\n\t\tthis._vertical_orientation = 0;\n\t\tthis.$view.style.whiteSpace = \"nowrap\";\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\t_remove:function(view){\n\t\tvar index = _power_array.find.call(this._cells, view);\n\t\tif(this._beforeRemoveView)\n\t\t\tthis._beforeRemoveView(index);\n\t\t_power_array.removeAt.call(this._cells, index);\n\t\tthis._fix_hidden_cells(true);\n\t},\n\t_fix_hidden_cells(resize){\n\t\tthis._hiddencells = 0;\n\t\tfor (let i = 0; i < this._cells.length; i++){\n\t\t\tconst cell = this._cells[i];\n\t\t\tif (cell._settings.hidden || cell.$nospace)\n\t\t\t\tthis._hiddencells++;\n\t\t}\n\n\t\tif (resize)\n\t\t\tthis.resizeChildren(true);\n\t},\n\t_replace:function(new_view,target_id){\n\t\tif (isUndefined(target_id)){\n\t\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\t\tthis._cells[i].destructor();\n\t\t\tthis._collection = new_view;\n\t\t\tthis._parse_cells();\n\t\t} else {\n\t\t\tvar source;\n\t\t\tif (typeof target_id == \"number\"){\n\t\t\t\tif (target_id<0 || target_id > this._cells.length)\n\t\t\t\t\ttarget_id = this._cells.length;\n\t\t\t\t_power_array.insertAt.call(this._cells, new_view, target_id);\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, this._cells[target_id]);\n\t\t\t} else {\n\t\t\t\tsource = $$(target_id);\n\t\t\t\ttarget_id = _power_array.find.call(this._cells, source);\n\t\t\t\tassert(target_id!=-1, \"Attempt to replace the non-existing view\");\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, source);\n\t\t\t\tsource.destructor();\t\n\t\t\t\tthis._cells[target_id] = new_view;\n\t\t\t}\n\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(new_view);\n\t\t}\n\t\tthis._fix_hidden_cells(true);\n\n\t\tvar form = this.elements ? this : this.getFormView();\n\t\tif (form && !this._fill_data) form._recollect_elements();\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\t_fix_vertical_layout:function(cell){\n\t\tcell._viewobj.style.display = \"inline-block\";\n\t\tcell._viewobj.style.verticalAlign = \"top\";\n\t},\n\taddView:function(view, index){\n\t\tif (isUndefined(index))\n\t\t\tindex = this._cells.length;\n\t\tvar top = this.$$ ? this : this.getTopParentView();\n\t\t\n\t\tstate._parent_cell = this;\n\t\tvar newui = (top && top.ui) ? top.ui(view, this, index) : ui(view, this, index);\n\t\tstate._parent_cell = null;\n\n\t\treturn newui._settings.id;\n\t},\n\tremoveView:function(id){\n\t\tvar view;\n\t\tif (typeof id != \"object\")\n\t\t\tview = $$(id) || (this.$$ ? this.$$(id) : null);\n\t\telse\n\t\t\tview = id;\n\n\t\tvar target = _power_array.find.call(this._cells, view);\n\t\tif (target >= 0){\n\t\t\tif (this._beforeRemoveView)\n\t\t\t\tthis._beforeRemoveView(target, view);\n\n\t\t\tvar form = this.elements ? this : this.getFormView();\n\n\t\t\tthis._cells.splice(target, 1);\n\t\t\tif (form)\n\t\t\t\t_each(view, function(sub){\n\t\t\t\t\tif (sub.name)\n\t\t\t\t\t\tdelete form.getCleanValues()[sub.config.name];\n\t\t\t\t}, form, true);\t\t\t\t\n\n\t\t\t\t\n\t\t\tview.destructor();\n\t\t\tthis._fix_hidden_cells(true);\n\t\t\t\n\t\t\tif (form)\n\t\t\t\tform._recollect_elements();\n\t\t} else\n\t\t\tassert(false, \"Attemp to remove not existing view: \"+id);\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\treconstruct:function(){\n\t\tthis._hiddencells = 0;\n\t\tthis._replace(this._collection);\n\t},\n\t_hide:function(obj, settings, silent){\n\t\tif (obj._settings.hidden) return;\n\t\tobj._settings.hidden = true;\n\t\tremove(obj._viewobj);\n\t\tthis._hiddencells++;\n\t\tif (!silent && !state._ui_creation)\n\t\t\tthis.resizeChildren(true);\t\n\t},\n\t_signal_hidden_cells:function(view){\n\t\tif (view.callEvent)\n\t\t\tview.callEvent(\"onViewShow\",[]);\n\t},\n\tresizeChildren:function(){\n\t\tif (state._freeze_resize) return;\n\n\t\tif (this._layout_sizes){\n\t\t\tvar parent = this.getParentView();\n\t\t\tif (parent){\n\t\t\t\tif (parent.resizeChildren)\n\t\t\t\t\treturn parent.resizeChildren();\n\t\t\t\telse\n\t\t\t\t\treturn parent.resize();\n\t\t\t}\n\t\t\t\t\n\t\t\tvar sizes = this.$getSize(0,0);\n\n\t\t\tvar x,y,nx,ny;\n\t\t\tnx = x = this._layout_sizes[0] || 0;\n\t\t\tny = y = this._layout_sizes[1] || 0;\n\n\t\t\t//for auto-fill content, use adjust strategy\n\t\t\tif ((sizes[1]>=100000 || sizes[3] >= 100000) && this._viewobj.parentNode){\n\t\t\t\t//in hidden container adjust doesn't work, so fallback to last known size\n\t\t\t\t//also, ensure that min-size is not violated\n\t\t\t\tnx = x = Math.max(sizes[0], (this._settings.width || this._viewobj.parentNode.offsetWidth || x || 0));\n\t\t\t\tny = y = Math.max(sizes[2], (this._settings.height || this._viewobj.parentNode.offsetHeight || y || 0));\n\t\t\t}\n\t\t\t\n\t\t\tif (!parent){\n\t\t\t\t//minWidth\n\t\t\t\tif (sizes[0]>x) nx = sizes[0];\n\t\t\t\t//minHeight\n\t\t\t\tif (sizes[2]>y) ny = sizes[2];\n\n\t\t\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\t\t\t\t//maxWidth rule\n\t\t\t\tif (!fullscreen && x>sizes[1]) nx = sizes[1];\n\t\t\t\t//maxHeight rule\n\t\t\t\tif (!fullscreen && y>sizes[3]) ny = sizes[3];\n\n\t\t\t\tthis.$setSize(nx,ny);\n\t\t\t} else\n\t\t\t\tthis._set_child_size(x,y);\n\n\t\t\tif (state._responsive_exception){\n\t\t\t\tstate._responsive_exception = false;\n\t\t\t\tthis.resizeChildren();\n\t\t\t}\n\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t},\n\tgetChildViews:function(){\n\t\treturn this._cells;\n\t},\n\tindex:function(obj){\n\t\tif (obj._settings)\n\t\t\tobj = obj._settings.id;\n\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\tif (this._cells[i]._settings.id == obj)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\t_insertBeforeView:function(view, before){\n\t\tif (before){\n\t\t\tif (before._settings.hidden || view === before){\n\t\t\t\t//index of sibling cell, next to which new item will appear\n\t\t\t\tvar index = this.index(before)+1;\n\t\t\t\t//locate nearest visible cell\n\t\t\t\twhile (this._cells[index] && this._cells[index]._settings.hidden) index++;\n\t\t\t\tbefore = this._cells[index] ? this._cells[index]._viewobj : null;\n\t\t\t} else {\n\t\t\t\tbefore = before._viewobj;\n\t\t\t}\n\t\t}\n\t\tinsertBefore(view._viewobj, before, (this._dataobj||this._viewobj));\n\t},\n\t_show:function(obj, settings, silent){\n\t\tif (!obj._settings.hidden) return;\n\t\tthis._insertBeforeView(obj, obj);\n\t\tobj._settings.hidden = false;\n\n\t\tthis._hiddencells--;\n\n\t\tif (!silent){\n\t\t\tthis.resizeChildren(true);\n\t\t\tif (obj.refresh)\n\t\t\t\tobj.refresh();\n\t\t}\n\n\t\tif (obj.callEvent){\n\t\t\tobj.callEvent(\"onViewShow\", []);\n\t\t\t_each(obj, this._signal_hidden_cells);\n\t\t}\n\t},\n\tshowBatch:function(name, mode){\n\t\tvar preserve = typeof mode != \"undefined\";\n\t\tmode = mode !== false;\n\n\t\tif (!preserve){\n\t\t\tif (this._settings.visibleBatch == name ) return;\n\t\t\tthis._settings.visibleBatch = name;\n\t\t} else \n\t\t\tthis._settings.visibleBatch = \"\";\n\n\t\tvar show = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\tif (!this._cells[i]._settings.batch && !this._cells[i]._settings.hidden) \n\t\t\t\tshow.push(this._cells[i]);\n\t\t\telse if (this._cells[i]._settings.batch == name){\n\t\t\t\tif (mode)\n\t\t\t\t\tshow.push(this._cells[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t\t} else if (!preserve)\n\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t}\n\n\t\tfor (let i=0; i < show.length; i++){\n\t\t\tthis._show(show[i], null, true);\n\t\t\tshow[i]._render_hidden_views();\n\t\t}\n\t\t\t\n\t\tthis.resizeChildren(true);\n\t},\n\t_parse_cells:function(collection){\n\t\tthis._cells=[];\n\n\t\tassert(collection,this.name+\" was incorrectly defined. <br><br> You have missed rows|cols|cells|elements collection\"); \n\t\tfor (var i=0; i<collection.length; i++){\n\t\t\tstate._parent_cell = this;\n\t\t\tif (!collection[i]._inner)\n\t\t\t\tcollection[i].borderless = true;\n\n\t\t\tthis._cells[i]=ui._view(collection[i], this);\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(this._cells[i]);\n\t\t\t\n\t\t\tif (this._settings.visibleBatch && this._settings.visibleBatch != this._cells[i]._settings.batch && this._cells[i]._settings.batch){\n\t\t\t\tthis._cells[i]._settings.hidden = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (!this._cells[i]._settings.hidden){\n\t\t\t\t(this._dataobj||this._contentobj).appendChild(this._cells[i]._viewobj);\n\t\t\t}\n\t\t}\n\n\t\tthis._fix_hidden_cells();\n\t\tif (this._parse_cells_ext_end)\n\t\t\tthis._parse_cells_ext_end(collection);\t\n\t},\n\t_fix_container_borders:function(style, inner){\n\t\tif (inner.top) \n\t\t\tstyle.borderTopWidth=\"0px\";\n\t\tif (inner.left) \n\t\t\tstyle.borderLeftWidth=\"0px\";\n\t\tif (inner.right) \n\t\t\tstyle.borderRightWidth=\"0px\";\n\t\tif (inner.bottom) \n\t\t\tstyle.borderBottomWidth=\"0px\";\n\t},\n\t_bubble_size:function(prop, size, vertical){\n\t\tif (this._vertical_orientation != vertical)\n\t\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\t\tthis._cells[i]._settings[prop] = size;\n\t\t\t\tif (this._cells[i]._bubble_size)\n\t\t\t\t\tthis._cells[i]._bubble_size(prop, size, vertical);\n\t\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tif (DEBUG) debug_size_box_start(this, true);\n\t\tvar minWidth = 0; \n\t\tvar maxWidth = 100000;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\t\tif (this._vertical_orientation) maxHeight=0; else maxWidth = 0;\n\t\t\n\t\tvar fixed = 0;\n\t\tvar fixed_count = 0;\n\t\tvar gravity = 0;\n\t\tthis._sizes=[];\n\t\tlet hiddenCount = 0;\n\n\t\tfor (var i=0; i < this._cells.length; i++) {\n\t\t\t//ignore hidden cells\n\t\t\tif(this._cells[i]._settings.hidden){\n\t\t\t\thiddenCount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar sizes = this._sizes[i] = this._cells[i].$getSize(0,0);\n\n\t\t\tif(this._cells[i]._hiddenByCells)\n\t\t\t\thiddenCount++;\n\n\t\t\tif (this._cells[i].$nospace){\n\t\t\t\tfixed_count++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[0]>minWidth) minWidth = sizes[0];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[1]<maxWidth) maxWidth = sizes[1];\n\n\t\t\t\tminHeight += sizes[2];\n\t\t\t\tmaxHeight += sizes[3];\n\n\t\t\t\tif (sizes[2] == sizes[3] && sizes[2] != -1){ fixed+=sizes[2]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t} else {\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[2]>minHeight) minHeight = sizes[2];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[3]<maxHeight) maxHeight = sizes[3];\n\n\t\t\t\tminWidth += sizes[0];\n\t\t\t\tmaxWidth += sizes[1];\n\n\t\t\t\tif (sizes[0] == sizes[1] && sizes[0] != -1){ fixed+=sizes[0]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t}\n\t\t}\n\n\t\tif(hiddenCount == this._cells.length){\n\t\t\tthis._hiddenByCells = true;\n\t\t\tconst pView = this.getParentView();\n\t\t\tif(pView && pView._collection){\n\t\t\t\tif (pView._vertical_orientation){\n\t\t\t\t\tmaxHeight = 0;\n\t\t\t\t\tmaxWidth = 100000;\n\t\t\t\t\tdy = 0;\n\t\t\t\t}else{\n\t\t\t\t\tmaxHeight = 100000;\n\t\t\t\t\tmaxWidth = 0;\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tdelete this._hiddenByCells;\n\n\t\tif (minHeight>maxHeight)\n\t\t\tmaxHeight = minHeight;\n\t\tif (minWidth>maxWidth)\n\t\t\tmaxWidth = minWidth;\n\n\t\tthis._master_size = [fixed, this._cells.length - fixed_count, gravity];\n\t\tthis._desired_size = [minWidth+dx, minHeight+dy];\n\n\t\t//get layout sizes\n\t\tvar self_size = base.api.$getSize.call(this, 0, 0);\n\t\t//use child settings if layout's one was not defined\n\t\tif (self_size[1] >= 100000) self_size[1]=0;\n\t\tif (self_size[3] >= 100000) self_size[3]=0;\n\n\t\tself_size[0] = (self_size[0] || minWidth ) +dx;\n\t\tself_size[1] = Math.max(self_size[0], (self_size[1] || maxWidth ) +dx);\n\t\tself_size[2] = (self_size[2] || minHeight) +dy;\n\t\tself_size[3] = Math.max(self_size[2], (self_size[3] || maxHeight) +dy);\n\n\t\tif (DEBUG) debug_size_box_end(this, self_size);\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tself_size[0] = 0;\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tthis._set_child_size(x,y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size_a:function(sizes, min, max){\n\t\tmin = sizes[min]; max = sizes[max];\n\t\tvar height = min;\n\n\t\tif (min != max){\n\t\t\tvar ps = this._set_size_delta * sizes[4]/this._set_size_gravity;\n\t\t\tif (ps < min){\n\t\t\t\theight = min;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else  if (ps > max){\n\t\t\t\theight = max;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn height;\n\t},\n\t_responsive_hide:function(cell, mode){\n\t\tvar target =  $$(mode);\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.hide();\n\t\t\tcell._responsive_marker = \"hide\";\n\t\t} else{\n\t\t\t//for SideBar in Webix 1.9\n\t\t\tif (!target)\n\t\t\t\ttarget = ui({ view:\"popup\", body:[{}]});\n\n\t\t\tcell._responsive_width = cell._settings.width;\n\t\t\tcell._responsive_height = cell._settings.height;\n\t\t\tcell._responsive_marker = target._settings.id;\n\t\t\tcell._settings.width = 0;\n\t\t\tif (!cell._settings.height)\n\t\t\t\tcell._settings.autoheight = true;\n\n\t\t\tui(cell, target, this._responsive.length);\n\t\t}\n\n\t\tthis._responsive.push(cell);\n\t},\n\t_responsive_show:function(cell){\n\t\tvar target = cell._responsive_marker;\n\t\tcell._responsive_marker = 0;\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.show();\n\t\t} else {\n\t\t\tcell._settings.width = cell._responsive_width;\n\t\t\tcell._settings.height = cell._responsive_height;\n\t\t\tdelete cell._settings.autoheight;\n\n\t\t\tvar index = 0;\n\t\t\twhile (this._cells[index] && this._cells[index]._settings.responsiveCell === false) index++;\n\t\t\tui(cell, this, index);\n\t\t}\n\t\tthis._responsive.pop();\n\t},\n\t_responsive_cells:function(x){\n\t\tstate._responsive_tinkery = true;\n\t\tif (x + this._padding.left + this._padding.right + this._margin * (this._cells.length-1)< this._desired_size[0]){\n\t\t\tvar max = this._cells.length - 1;\n\t\t\tfor (var i = 0; i < max; i++){\n\t\t\t\tlet cell = this._cells[i];\n\t\t\t\tif (!cell._responsive_marker){\n\t\t\t\t\tif (cell._settings.responsiveCell !== false){\n\t\t\t\t\t\tthis._responsive_hide(cell, this._settings.responsive);\n\t\t\t\t\t\tcallEvent(\"onResponsiveHide\", [cell._settings.id]);\n\t\t\t\t\t\tstate._responsive_exception = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmax = this._cells.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else  if (this._responsive.length){\n\t\t\tlet cell = this._responsive[this._responsive.length-1];\n\t\t\tvar dx = cell._responsive_marker == \"hide\" ? 0 : cell._responsive_width;\n\t\t\tvar px = cell.$getSize(dx,0);\n\t\t\tif (px[0] + this._desired_size[0] + this._margin + 20 <= x ){\n\t\t\t\tthis._responsive_show(cell);\n\t\t\t\tcallEvent(\"onResponsiveShow\", [cell._settings.id]);\n\t\t\t\tstate._responsive_exception = true;\n\t\t\t}\n\t\t}\n\n\t\tstate._responsive_tinkery = false;\n\t},\n\t_set_child_size:function(x,y){ \n\t\tstate._child_sizing_active = (state._child_sizing_active||0)+1;\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tthis._responsive_cells(x,y);\n\n\n\t\tthis._set_size_delta = (this._vertical_orientation?y:x) - this._master_size[0];\n\t\tthis._set_size_gravity = this._master_size[2];\n\t\tlet width = x; let height = y;\n\n\t\tvar auto = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\t//ignore hidden cells\n\t\t\tif (this._cells[i]._settings.hidden || !this._sizes[i])\n\t\t\t\tcontinue;\n\n\t\t\tlet sizes = this._sizes[i];\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\theight = this._set_child_size_a(sizes,2,3);\n\t\t\t\tif (height < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t} else {\n\t\t\t\twidth = this._set_child_size_a(sizes,0,1);\n\t\t\t\tif (width < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t}\n\t\t\tthis._cells[i].$setSize(width,height);\n\t\t}\n\n\t\tfor (let i = 0; i < auto.length; i++){\n\t\t\tvar index = auto[i].oldIndex;\n\t\t\tlet sizes = this._sizes[index];\n\t\t\tvar dx = Math.round(this._set_size_delta * sizes[4]/this._set_size_gravity);\n\t\t\tthis._set_size_delta -= dx; this._set_size_gravity -= sizes[4];\n\t\t\tif (this._vertical_orientation)\n\t\t\t\theight = sizes[3] > -1 ? Math.min(dx, sizes[3]) : dx;\n\t\t\telse {\n\t\t\t\twidth = sizes[1] > -1 ? Math.min(dx, sizes[1]) : dx;\n\t\t\t}\n\n\t\t\tauto[i].view.$setSize(width,height);\n\t\t}\n\n\t\tstate._child_sizing_active -= 1;\n\t},\n\t_next:function(obj, mode){\n\t\tvar index = this.index(obj);\n\t\tif (index == -1) return null;\n\t\treturn this._cells[index+mode];\n\t}, \n\t_first:function(){\n\t\treturn this._cells[0];\n\t}\n};\n\nconst view = protoUI(api, EventSystem, base.view);\nexport default { api, view };","import {protoUI} from \"../ui/core\";\n\nimport {extend,bind,toNode,delay} from \"../webix/helpers\";\nimport {ajax} from \"../load/ajax\";\nimport {create} from \"../webix/html\";\nimport {$active} from \"../webix/skin\";\n\n\nimport base from \"./view\";\nimport template from \"../webix/template\";\n\nimport AutoTooltip from \"../core/autotooltip\";\nimport AtomDataLoader from \"../core/atomdataloader\";\nimport AtomRender from \"../core/atomrender\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\nimport Scrollable from \"../core/scrollable\";\n\n\nconst api = {\n\tname:\"template\",\n\t$init:function(config){\n\t\tconst subtype = this._template_types[config.type];\n\t\tif (subtype){\n\t\t\tif (subtype.css && config.css)\n\t\t\t\tthis._viewobj.className += \" \"+subtype.css;\n\t\t\textend(config, subtype);\n\n\t\t\t//will reset borders for \"section\"\n\t\t\tif (config.borderless){\n\t\t\t\tdelete config._inner;\n\t\t\t\tthis._set_inner(config);\n\t\t\t}\n\t\t}\n\n\t\tif (this._dataobj == this._viewobj){\n\t\t\tthis._dataobj = create(\"DIV\");\n\t\t\tthis._dataobj.className = \" webix_template\";\n\t\t\tthis._viewobj.appendChild(this._dataobj);\n\t\t} else \n\t\t\tthis._dataobj.className += \" webix_template\";\n\n\t\tthis.attachEvent(\"onAfterRender\", this._correct_height);\n\t},\n\tsetValues:function(obj, update){\n\t\tthis.data = update?extend(this.data, obj, true):obj;\n\t\tthis.render();\n\t},\n\tgetValues:function(){\n\t\treturn this.data;\n\t},\n\t$skin:function(){\n\t\tthis._template_types.header.height = $active.barHeight - $active.borderWidth*2;\n\t\tthis._template_types.section.height = $active.barHeight;\n\t},\n\t_template_types:{\n\t\t\"header\":{\n\t\t\tcss:\"webix_header\"\n\t\t},\n\t\t\"section\":{\n\t\t\tcss:\"webix_section\",\n\t\t\tborderless:true\n\t\t},\n\t\t\"clean\":{\n\t\t\tcss:\"webix_clean\",\n\t\t\tborderless:true\n\t\t}\n\t},\n\tonClick_setter:function(value){\n\t\tthis.on_click = extend((this.on_click || {}), value, true);\n\n\t\tif (!this._onClick)\n\t\t\textend(this, MouseEvents);\n\n\t\treturn value;\n\t},\n\tdefaults:{\n\t\ttemplate:template.empty\n\t},\n\t_render_me:function(){\n\t\tthis._not_render_me = false;\n\t\tthis._probably_render_me();\n\t\tthis.resize();\n\t},\n\t_probably_render_me:function(){\n\t\tif (!this._not_render_me){\n\t\t\tthis._not_render_me = true;\n\t\t\tthis.render();\n\t\t}\n\t},\n\tsrc_setter:function(value){\n\t\tthis._not_render_me = true;\n\t\t\n\t\tif(!this.callEvent(\"onBeforeLoad\",[])) \n\t\t\treturn \"\";\n\t\tajax(value, bind(function(text){\n\t\t\tthis._settings.template = template(text);\n\t\t\tthis._render_me();\n\t\t\tthis.callEvent(\"onAfterLoad\",[]);\n\t\t}, this));\n\t\treturn value;\n\t},\n\tcontent_setter:function(config){\n\t\tif (config){\n\t\t\tthis._not_render_me = true;\n\t\t\tthis.render = function(){};\n\t\t\tthis._dataobj.appendChild(toNode(config));\n\t\t\tthis._correct_height();\n\t\t}\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t},\n\tsetHTML:function(html){\n\t\tthis._settings.template = function(){ return html; };\n\t\tthis.refresh();\n\t},\n\tsetContent:function(content){\n\t\tthis._dataobj.innerHTML = \"\";\n\t\tthis.content_setter(content);\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this,x,y)){\n\t\t\tthis._probably_render_me();\n\t\t\tif (this._settings.autoheight){\n\t\t\t\tvar top =this.getTopParentView();\n\t\t\t\tclearTimeout(top._template_resize_timer);\n\t\t\t\ttop._template_resize_timer = delay(this.resize, this);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\t$getSize:function(x,y){\n\t\tif (this._settings.autoheight && (!this._settings.type || this._settings.type == \"clean\"))\n\t\t\tthis._settings.height = this._get_auto_height();\n\n\t\treturn base.api.$getSize.call(this,x,y);\n\t},\n\t_correct_height:function(){\n\t\t//we need to force auto height calculation after content change\n\t\t//dropping the last_size flag will ensure that inner logic of $setSize will be processed\n\t\tif (this._settings.autoheight){\n\t\t\tthis._last_size = null;\n\t\t\tthis.resize();\n\t\t}\n\t},\n\t_get_auto_height:function(){\n\t\tlet size = 0;\n\n\t\t// visible and not collapsed\n\t\tif (this.isVisible() && !this.queryView(v => v.config.collapsed, \"parent\")) {\n\t\t\tthis._probably_render_me();\n\n\t\t\tthis._dataobj.style.height = \"auto\";\n\t\t\tsize = this._dataobj.scrollHeight;\n\t\t\tthis._dataobj.style.height = \"\";\n\t\t}\n\t\treturn size;\n\t},\n\t_one_time_scroll:true //scroll will appear only if set directly in config\n};\n\nconst view = protoUI(api, Scrollable, AutoTooltip, AtomDataLoader, AtomRender, EventSystem, base.view);\nexport default { api, view };","import {remove, create} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\n\nimport window from \"../views/window\";\nimport base from \"../views/view\";\n\nimport {attachEvent, detachEvent} from \"../webix/customevents\";\n\n\nconst api = {\n\tname:\"popup\",\n\t$init:function(){\n\t\tthis._settings.head = false;\n\t\tthis.$view.className += \" webix_popup\";\n\t\tconst clickHandler = attachEvent(\"onClick\", (e)=>this._hide(e));\n\t\tthis.attachEvent(\"onDestruct\", function(){ detachEvent(clickHandler); });\n\t\tthis.attachEvent(\"onHide\", this._hide_point);\n\t},\n\t$skin:function(){\n\t\twindow.api.$skin.call(this);\n\n\t\tthis.defaults.padding = $active.popupPadding;\n\t\tthis.defaults.point = !$active.popupNoPoint;\n\t\tthis.defaults.borderless = $active.borderlessPopup;\n\t},\n\tclose:function(){\n\t\tremove(this._point_element);\n\t\twindow.api.close.call(this);\n\t},\n\t$getSize:function(x,y){\n\t\treturn window.api.$getSize.call(this, x+this._settings.padding*2,y+this._settings.padding*2);\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tx = this._content_width-this._settings.padding*2;\n\t\ty = this._content_height-this._settings.padding*2;\n\t\tthis._contentobj.style.padding = this._settings.padding+\"px\";\n\t\tthis._headobj.style.display=\"none\";\n\t\tthis._body_cell.$setSize(x,y);\n\t},\n\t//redefine to preserve inner borders\n\t//_inner_body_set:function(){}, //same as win?\n\t_inner_body_set:function(value){\n\t\tif (typeof value.borderless == \"undefined\")\n\t\t\tvalue.borderless = false;\n\t},\n\thead_setter:function(){\n\t},\n\t_set_point:function(mode, left, top, fixed){\n\t\tthis._hide_point();\n\t\tdocument.body.appendChild(this._point_element = create(\"DIV\",{ \"class\":\"webix_point_\"+mode },\"\"));\n\t\tthis._point_element.style.zIndex = this._viewobj.style.zIndex;\n\t\tthis._point_element.style.position = fixed ? \"fixed\":\"absolute\";\n\n\t\tthis._point_element.style.top = top+\"px\";\n\t\tthis._point_element.style.left = left+\"px\";\n\t},\n\t_hide_point:function(){\n\t\tthis._point_element = remove(this._point_element);\n\t}\n};\n\n\n\nconst view = protoUI(api, window.view);\nexport default {api, view};","import base from \"../views/view\";\nimport AutoTooltip from \"../core/autotooltip\";\nimport EditAbility from \"../core/editability\";\nimport MapCollection from \"../core/mapcollection\";\nimport MouseEvents from \"../core/mouseevents\";\nimport Scrollable from \"../core/scrollable\";\nimport SingleRender from \"../core/singlerender\";\nimport AtomDataLoader from \"../core/atomdataloader\";\nimport EventSystem from \"../core/eventsystem\";\nimport {locate, createCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\nimport {uid, extend, clone, isUndefined} from \"../webix/helpers\";\nimport {addCss, removeCss} from \"../webix/html\";\nimport RenderStack from \"../core/renderstack\";\nimport CodeParser from \"../core/codeparser\";\nimport editors from \"../webix/editors\";\n\nconst api = {\n\tname:\"property\",\n\t$init:function(){\n\t\tthis._contentobj.className+=\" webix_property\";\n\t\tthis._contentobj.setAttribute(\"role\", \"listbox\");\n\t\tthis._destroy_with_me = [];\n\n\t\tthis.attachEvent(\"onAfterEditStart\", function(id){\n\t\t\tvar node = this.getItemNode(id);\n\t\t\taddCss(node, \"webix_focused\");\n\t\t});\n\t\tthis.attachEvent(\"onAfterEditStop\", function(id, editor){\n\t\t\tvar node = this.getItemNode(editor.config.id);\n\t\t\tremoveCss(node, \"webix_focused\");\n\t\t});\n\n\t\tif (!this.types){\n\t\t\tthis.types = { \"default\" : this.type };\n\t\t\tthis.type.name = \"default\";\n\t\t}\n\t\tthis.type = clone(this.type);\n\t},\n\tdefaults:{\n\t\tnameWidth:100,\n\t\teditable:true\n\t},\n\ton_render:{\n\t\tpassword: editors.password.masterFormat,\n\t\tcheckbox:function(value){\n\t\t\treturn \"<input type='checkbox' class='webix_property_check' \"+(value?\"checked\":\"\")+\">\";\n\t\t},\n\t\tcolor:function(value){\n\t\t\tconst margin = (this.type.height - 20) / 2;\n\t\t\treturn \"<div class='webix_property_col_ind' style='margin-top:\"+margin+\"px;background-color:\"+(value||\"#FFFFFF\")+\";'></div>\" + value;\n\t\t}\n\t},\n\ton_edit:{\n\t\tlabel:false\n\t},\n\t_id:/*@attr*/\"webix_f_id\",\n\ton_click:{\n\t\twebix_property_check:function(ev){\n\t\t\tconst id = this.locate(ev);\n\t\t\tconst item = this.getItem(id);\n\t\t\tthis.callEvent(\"onCheck\", [id, item.value = !item.value]);\n\t\t\treturn false;\n\t\t}\n\t},\n\ton_dblclick:{\n\t},\n\tregisterType:function(name, data){\n\t\tif (!isUndefined(data.template))\n\t\t\tthis.on_render[name] = data.template;\n\t\tif (!isUndefined(data.editor))\n\t\t\tthis.on_edit[name] = data.editor;\n\t\tif (!isUndefined(data.click))\n\t\t\tfor (var key in data.click)\n\t\t\t\tthis.on_click[key] = data.click[key];\n\t},\n\telements_setter:function(data){\n\t\tthis._idToLine = {};\n\t\tfor(var i =0; i < data.length; i++){\n\t\t\tvar line = data[i];\n\t\t\tif (line.type == \"multiselect\")\n\t\t\t\tline.optionslist = true;\n\n\t\t\t//line.type \t= \tline.type||\"label\";\n\t\t\tline.id \t=\tline.id||uid();\n\t\t\tline.label \t=\tline.label||\"\";\n\t\t\tline.value \t=\tisUndefined(line.value) ? (line.type == \"checkbox\" ? false : \"\") : line.value;\n\t\t\tthis._idToLine[line.id] = i;\n\t\t\tthis._map_options(data[i]);\n\t\t}\n\t\treturn data;\n\t},\n\tshowItem:function(id){\n\t\tRenderStack.showItem.call(this, id);\n\t},\n\titem_setter:function(value){\n\t\treturn this.type_setter(value);\n\t},\n\ttype_setter:function(value){\n\t\treturn RenderStack.type_setter.call(this, value);\n\t},\n\tlocate:function(){\n\t\treturn locate(arguments[0], this._id);\n\t},\n\tgetItemNode:function(id){\n\t\treturn this._dataobj.childNodes[this._idToLine[id]];\n\t},\n\tgetItem:function(id){\n\t\treturn this._settings.elements[this._idToLine[id]];\n\t},\n\t_get_editor_type:function(id){\n\t\tvar type = this.getItem(id).type;\n\t\tif (type == \"checkbox\") return \"inline-checkbox\";\n\t\tvar alter_type = this.on_edit[type];\n\t\treturn (alter_type === false)?false:(alter_type||type);\n\t},\n\t_get_edit_config:function(id){\n\t\treturn this.getItem(id);\n\t},\n\t_find_cell_next:function(start, check , direction){\n\t\tlet row = this._idToLine[start.id];\n\t\tlet order = this._settings.elements;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\tupdateItem:function(key, data){\n\t\tconst line = this.getItem(key);\n\t\tif (line)\n\t\t\textend(line, data||{}, true);\n\t\tthis.refresh();\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft+this._settings.nameWidth,\n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.firstChild.offsetHeight,\n\t\t\twidth:this._data_width,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_clear:function(){\n\t\tvar lines = this._settings.elements;\n\t\tfor (var i=0; i<lines.length; i++)\n\t\t\tlines[i].value = \"\";\n\t},\n\tclear:function(){\n\t\tthis._clear();\n\t\tthis._props_dataset = {};\n\t\tthis.refresh();\n\t},\n\tsetValues:function(data, update){\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.collapseNames(data, \"\", {}, (v) => isUndefined(this._idToLine[v]));\n\n\t\tif(!update) this._clear();\n\t\tfor(var key in data){\n\t\t\tvar line = this.getItem(key);\n\t\t\tif (line)\n\t\t\t\tline.value = data[key];\n\t\t}\n\n\t\tthis._props_dataset = data;\n\t\tthis.refresh();\n\t},\n\tgetValues:function(){\n\t\tvar data = clone(this._props_dataset||{});\n\t\tfor (var i = 0; i < this._settings.elements.length; i++) {\n\t\t\tvar line = this._settings.elements[i];\n\t\t\tif (line.type != \"label\")\n\t\t\t\tdata[line.id] = line.value;\n\t\t}\n\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.expandNames(data);\n\n\t\treturn data;\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this, x, y)){\n\t\t\tthis._data_width = this._content_width - this._settings.nameWidth;\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx,dy){\n\t\tif (this._settings.autoheight){\n\t\t\tvar count = this._settings.elements.length;\n\t\t\tthis._settings.height = Math.max(this.type.height*count, this._settings.minHeight||0);\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t_toHTML:function(){\n\t\tconst html = [];\n\t\tconst els = this._settings.elements;\n\t\tif (els) {\n\t\t\tconst height = `height:${this.type.height}px;line-height:${this.type.height}px;`;\n\t\t\tfor (let i=0; i<els.length; i++){\n\t\t\t\tconst data = els[i];\n\t\t\t\tif (data.css && typeof data.css == \"object\")\n\t\t\t\t\tdata.css = createCss(data.css);\n\n\t\t\t\tconst pre = \"<div \"+/*@attr*/\"webix_f_id\"+\"=\\\"\"+data.id+\"\\\"\"+(data.type!==\"label\"?\"role=\\\"option\\\" tabindex=\\\"0\\\"\":\"\")+\" class=\\\"webix_property_line \"+(data.css||\"\")+\"\\\">\";\n\t\t\t\tif (data.type == \"label\")\n\t\t\t\t\thtml[i] = pre+\"<div class='webix_property_label_line' style='\"+height+\"'>\"+data.label+\"</div></div>\";\n\t\t\t\telse {\n\t\t\t\t\tconst render = this.on_render[data.type];\n\t\t\t\t\tconst post = \"<div class='webix_property_label' style='\"+height+\"width:\"+this._settings.nameWidth+\"px'>\"+data.label+\"</div><div class='webix_property_value' style='\"+height+\"width:\"+this._data_width+\"px'>\";\n\n\t\t\t\t\tlet content;\n\t\t\t\t\tconst value = data.value;\n\t\t\t\t\tconst options = data.collection || data.options;\n\t\t\t\t\tif(options){\n\t\t\t\t\t\tif (data.format) {\n\t\t\t\t\t\t\tconst item = value ? options.getItem(value) : null;\n\t\t\t\t\t\t\tcontent = data.format(item ? item.value : value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcontent = data.template(data, this.type, value, data);\n\t\t\t\t\t} else if(data.format){\n\t\t\t\t\t\tcontent = data.format(value);\n\t\t\t\t\t} else\n\t\t\t\t\t\tcontent = value;\n\t\t\t\t\tif (render)\n\t\t\t\t\t\tcontent = render.call(this, value, data);\n\t\t\t\t\thtml[i] = pre+post+content+\"</div></div>\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn html.join(\"\");\n\t},\n\ttype:{\n\t\theight:24,\n\t\ttemplateStart:template(\"\"),\n\t\ttemplateEnd:template(\"</div>\")\n\t},\n\t$skin: function(){\n\t\tthis.type.height = $active.propertyItemHeight;\n\t}\n};\n\n\nconst view = protoUI(api, AutoTooltip, EditAbility, MapCollection, MouseEvents, Scrollable, SingleRender, AtomDataLoader, EventSystem, base.view);\nexport default {api, view};","import {index, triggerEvent, preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, copy, toFunctor, isArray} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nimport i18n from \"../webix/i18n\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\nimport DateHelper from \"../core/date\";\nimport KeysNavigation from \"../core/keysnavigation\";\n\n\nconst api = {\n\tname:\"calendar\",\n\n\tdefaults:{\n\t\tdate: DateHelper.datePart(new Date()), //selected date, not selected by default\n\t\tnavigation: true,\n\t\tmonthSelect: true,\n\t\tweekHeader: true,\n\t\tmonthHeader: true,\n\t\tweekNumber: false,\n\t\tskipEmptyWeeks: false,\n\t\tcalendarHeader: \"%F %Y\",\n\t\t//calendarTime: \"%H:%i\",\n\t\tevents:DateHelper.isHoliday,\n\t\tminuteStep: 5,\n\t\ttimeIcon:\"wxi-clock\",\n\t\ticons: false,\n\t\ttimepickerHeight: 30,\n\t\theaderHeight: 30,\n\t\tdayTemplate: function(d){\n\t\t\treturn d.getDate();\n\t\t},\n\t\twidth: 260,\n\t\theight: 250,\n\t\tseparator:\", \"\n\t},\n\n\tdayTemplate_setter: template,\n\tcalendarHeader_setter:DateHelper.dateToStr,\n\tcalendarTime_setter:function(format){\n\t\tthis._calendarTime = format;\n\t\treturn DateHelper.dateToStr(format);\n\t},\n\tdate_setter:function(date){\n\t\tdate = DateHelper.copy( this._string_to_date(date) );\n\t\tdate.setDate(1);\n\t\treturn date;\n\t},\n\tmaxDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\tmaxTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\t_ariaFocus:function(){\n\t\t_event(this.$view, \"mousedown\", () => {\n\t\t\tthis._mouse_time = new Date();\n\t\t});\n\t\t_event(this.$view, \"focus\", e => {\n\t\t\t// in daterange\n\t\t\tif (this._settings.master) return;\n\n\t\t\tconst prev = e.relatedTarget;\n\t\t\tconst css = e.target.className.indexOf(\"webix_cal_day\") !== -1;\n\t\t\tif (prev && (new Date() - this._mouse_time > 100) && css && this.$view.contains(prev)){\n\t\t\t\tconst day = this._locate_day(e.target);\n\t\t\t\tif (!this._selectedDay(day)) this._moveSelection(day);\n\t\t\t}\n\t\t}, { capture: true });\n\t},\n\t$init: function() {\n\t\tthis._viewobj.className += \" webix_calendar\";\n\t\tthis._viewobj.setAttribute(\"role\", \"region\");\n\t\tthis._viewobj.setAttribute(\"aria-label\", i18n.aria.calendar);\n\n\t\t//special dates\n\t\tthis._special_dates = {};\n\t\tthis._selected_days = {};\n\t\tthis._zoom_level = 0;\n\n\t\t//navigation and aria\n\t\tthis._ariaFocus();\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t_onKeyPress:function(code, e){\n\t\tconst target = e.target, role = target.getAttribute(\"role\");\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"log\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\tminuteStep_setter(value){\n\t\treturn Math.max( Math.min(value, 60), this.defaults.minuteStep );\n\t},\n\ttype_setter: function(value){\n\t\tif(value == \"time\"){\n\t\t\tthis._zoom_in = true;\n\t\t\tthis._zoom_level = -1;\n\t\t}\n\t\telse if(value == \"year\"){\n\t\t\tthis._fixed = true;\n\t\t}\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\t//repaint calendar when size changed\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst s = this._settings;\n\t\tif (s.cellHeight && !s.type){\n\t\t\tconst state = this._getDateBoundaries(s.date);\n\t\t\ts.height = s.cellHeight * state._rows + s.headerHeight + (s.weekHeader?$active.calendarWeekHeaderHeight:0) +\n\t\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) + (this._content_padding+$active.borderWidth)*2;\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx,dy);\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tif (this.config.master) return; //in daterange\n\t\tvar start = this.getSelectedDate(true);\n\t\tvar date = DateHelper.copy(start || this.getVisibleDate());\n\t\tthis._moveSelection(date, mode, focus);\n\t},\n\t_moveSelection:function(date, mode, focus){\n\t\tconst css = this._zoom_logic[this._zoom_level]._keyshift(date, mode, this);\n\t\tif (focus !== false)\n\t\t\tthis._restore_focus(css);\n\t},\n\t_restore_focus:function(css, ind){\n\t\tlet sel;\n\t\tif (ind) {\n\t\t\tsel = this._viewobj.querySelector(\".webix_cal_body\");\n\t\t\tsel = sel.childNodes[ind.rind].childNodes[ind.cind + (this._settings.weekNumber?1:0)];\n\t\t} else\n\t\t\tsel = this._viewobj.querySelector(\".\"+css+\"[tabindex='0']\");\n\t\tif (sel) sel.focus();\n\t},\n\t_getDateBoundaries: function(date, reset) {\n\t\t// addition information about rendering event:\n\t\t// how many days from the previous month,\n\t\t// next,\n\t\t// number of weeks to display and so on\n\t\t\n\t\tif (!this._set_date_bounds || reset){\n\t\t\tvar month = date.getMonth();\n\t\t\tvar year = date.getFullYear();\n\n\t\t\tvar next = new Date(year, month+1, 1);\n\t\t\tvar start = DateHelper.weekStart(new Date(year, month, 1));\n\n\t\t\tvar days = Math.round((next.valueOf() - start.valueOf())/(60*1000*60*24));\n\t\t\tvar rows = this._settings.skipEmptyWeeks?Math.ceil(days/7):6;\n\n\t\t\tthis._set_date_bounds = { _month: month, _start:start, _next:next, _rows: rows};\n\t\t}\n\n\t\treturn this._set_date_bounds;\n\t},\n\t$skin:function(){\n\t\tif($active.calendar){\n\t\t\tif( $active.calendar.width)\n\t\t\t\tthis.defaults.width = $active.calendar.width;\n\t\t\tif( $active.calendar.height)\n\t\t\t\tthis.defaults.height = $active.calendar.height;\n\t\t\tif( $active.calendar.headerHeight)\n\t\t\t\tthis.defaults.headerHeight = $active.calendar.headerHeight;\n\t\t\tif( $active.calendar.timepickerHeight)\n\t\t\t\tthis.defaults.timepickerHeight = $active.calendar.timepickerHeight;\n\t\t}\n\t\tthis._content_padding = $active.layoutPadding.form;\n\t},\n\t_getColumnConfigSizes: function(date){ \n\t\tvar bounds = this._getDateBoundaries(date);\n\n\t\tvar s = this._settings;\n\t\tvar _columnsHeight = [];\n\t\tvar _columnsWidth = [];\n\n\t\tvar containerWidth = this._content_width - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar containerHeight = this._content_height - (s.monthHeader?s.headerHeight:0) - (s.weekHeader?$active.calendarWeekHeaderHeight:0) -\n\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar columnsNumber = (s.weekNumber)?8:7;\n\t\tfor(var i=0; i<columnsNumber; i++) {\n\t\t\t_columnsWidth[i] = Math.ceil(containerWidth/(columnsNumber-i));\n\t\t\tcontainerWidth -= _columnsWidth[i];\n\t\t}\n\n\t\tvar rowsNumber = bounds._rows;\n\t\tfor (var k = 0; k < rowsNumber; k++) {\n\t\t\t_columnsHeight[k] = Math.ceil(containerHeight/(rowsNumber-k) );\n\t\t\tcontainerHeight -= _columnsHeight[k];\n\t\t}\n\t\treturn [_columnsWidth, _columnsHeight];\n\t},\n\ticons_setter: function(value){\n\t\tif(!value)\n\t\t\tthis._icons = null;\n\t\telse if(typeof value == \"object\")\n\t\t\tthis._icons = value;\n\t\telse\n\t\t\tthis._icons = this._icons2;\n\t},\n\t_icons: [],\n\t_icons2: [\n\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>\"+i18n.calendar.today+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_today\": function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\tif(!this._settings.timepicker)\n\t\t\t\t\t\tdate = DateHelper.datePart(date);\n\t\t\t\t\tthis.setValue(date, \"user\");\n\t\t\t\t\tthis.callEvent(\"onTodaySet\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>\"+i18n.calendar.clear+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_clear\": function(){\n\t\t\t\t\tthis.setValue(\"\", \"user\");\n\t\t\t\t\tthis.callEvent(\"onDateClear\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\trefresh:function(){ this.render(); },\n\trender: function() {\n\t\t//reset zoom level\n\t\tthis._zoom_level = 0;\n\t\tthis._zoom_size = false;\n\n\t\tvar s = this._settings;\n\n\t\tif (!this.isVisible(s.id)) return;\n\t\tthis._current_time = DateHelper.datePart(new Date());\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tvar date = this.getVisibleDate();\n\n\t\tvar bounds = this._getDateBoundaries(date, true);\n\t\tvar sizes = this._getColumnConfigSizes(date);\n\t\tvar cpad = this._content_padding + \"px\";\n\t\tvar width = sizes[0];\n\t\tvar height = sizes[1];\n\n\t\tvar html = \"\";\n\t\tif (s.monthHeader){\n\t\t\thtml += \"<div class='webix_cal_month' style='margin:0 \"+cpad+\"'><span role='log' aria-live='assertive' aria-atomic='true' class='webix_cal_month_name\"+((!s.monthSelect || !s.navigation)?\" webix_readonly'\":\"' role='button' tabindex='0'\")+\">\"+s.calendarHeader(date)+\"</span>\";\n\t\t\tif (s.navigation)\n\t\t\t\thtml += \"<div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[0]+\"' class='webix_cal_prev_button'></div><div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[1]+\"' class='webix_cal_next_button'></div>\";\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tif(s.weekHeader)\n\t\t\thtml += \"<div class='webix_cal_header' style='margin:0 \"+cpad+\"' aria-hidden='true'>\"+this._week_template(width)+\"</div>\";\n\t\thtml += \"<div class='webix_cal_body' role='grid' style='margin:0 \"+cpad+\"'>\"+this._body_template(width, height, bounds)+\"</div>\";\n\n\t\tif (s.timepicker || this._icons){\n\t\t\thtml += \"<div class='webix_cal_footer' style='margin:0 \"+cpad+\"'>\";\n\t\t\tif(s.timepicker)\n\t\t\t\thtml += this._timepicker_template(date);\n\n\t\t\tif(this._icons)\n\t\t\t\thtml += this._icons_template();\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tthis._contentobj.innerHTML = html;\n\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\n\t\tif(s.type == \"time\"){\n\t\t\tthis._changeZoomLevel(-1,date);\n\t\t}\n\t\telse if(s.type == \"month\"){\n\t\t\tthis._changeZoomLevel(1,date);\n\t\t}\n\t\telse if(s.type == \"year\"){\n\t\t\tthis._changeZoomLevel(2,date);\n\t\t}\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_icons_template: function(date){\n\t\tvar html =\t\"<div class='webix_cal_icons'>\";\n\t\tvar icons = this._icons;\n\n\t\tfor(var i=0; i < icons.length; i++){\n\t\t\tif(icons[i].template){\n\t\t\t\tvar template = (typeof(icons[i].template) == \"function\"?icons[i].template: template(icons[i].template));\n\t\t\t\thtml += template.call(this,date);\n\t\t\t}\n\t\t\tif(icons[i].on_click){\n\t\t\t\textend(this.on_click,icons[i].on_click);\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t},\n\t_timepicker_template:function(date){\n\t\tconst sel = this.getSelectedDate(true);\n\t\tif (sel)\n\t\t\tdate.setFullYear(sel.getFullYear(), sel.getMonth(), sel.getDate());\n\t\tconst timeFormat = this._settings.calendarTime||i18n.timeFormatStr;\n\t\tconst clock = this._settings.timeIcon;\n\t\tlet tpl = \"\";\n\n\t\tif(!this._settings.master)\n\t\t\ttpl = \"<div role='button' tabindex='0' class='webix_cal_time\"+(this._icons?\" webix_cal_time_icons\":\"\")+\"'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(date)+\"</div>\";\n\t\telse{\n\t\t\t//daterange needs two clocks\n\t\t\tconst range_date = copy($$(this._settings.master)._settings.value);\n\t\t\tif(DateHelper.equal(range_date.end, date))\n\t\t\t\trange_date.start = range_date.end;\n\n\t\t\tfor(let i in range_date){\n\t\t\t\ttpl += \"<div role='button' tabindex='0' class='webix_range_time_\"+i+\" webix_cal_time'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(range_date[i])+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn tpl;\n\t},\n\t_week_template: function(widths){\n\t\tvar s = this._settings;\n\t\tvar week_template = \"\";\n\t\tvar correction = 0;\n\n\t\tif(s.weekNumber) {\n\t\t\tcorrection = 1;\n\t\t\tweek_template += \"<div class='webix_cal_week_header' style='width: \"+widths[0]+\"px;' >\"+(s.calendarWeekHeader||\"\")+\"</div>\";\n\t\t}\n\t\t\n\t\tvar k = (DateHelper.startOnMonday)?1:0;\n\t\tfor (var i=0; i<7; i++){ // 7 days total\n\t\t\tvar day_index = (k + i) % 7; // 0 - Sun, 6 - Sat as in Locale.date.day_short\n\t\t\tvar day = i18n.calendar.dayShort[day_index]; // 01, 02 .. 31\n\t\t\tweek_template += \"<div day='\"+day_index+\"' style='width: \"+widths[i+correction]+\"px;' >\"+day+\"</div>\";\n\t\t}\n\t\t\n\t\treturn week_template;\n\t},\n\tblockDates_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_day_css:function(day, bounds){\n\t\tvar css = \"\", isOutside = false;\n\t\tif (DateHelper.equal(day, this._current_time))\n\t\t\tcss += \" webix_cal_today\";\n\t\tif (!this._checkDate(day))\n\t\t\tcss += \" webix_cal_day_disabled\";\n\t\tif (day.getMonth() != bounds._month){\n\t\t\tisOutside = true;\n\t\t\tcss += \" webix_cal_outside\";\n\t\t}\n\t\tif (!isOutside && this._selectedDay(day))\n\t\t\tcss += \" webix_cal_select\";\n\t\tif (this._settings.events)\n\t\t\tcss+=\" \"+(this._settings.events(day, isOutside) || \"\");\n\t\tcss += \" webix_cal_day\";\n\t\treturn css;\n\t},\n\t_body_template: function(widths, heights, bounds){\n\t\tconst s = this._settings;\n\t\tconst start = s.weekNumber ? 1 : 0;\n\t\tlet day = DateHelper.datePart(DateHelper.copy(bounds._start));\n\t\tlet weekNumber = DateHelper.getISOWeek(DateHelper.add(day, 2, \"day\", true));\n\n\t\tlet html = \"\", focusable, sqSize;\n\t\tfor (let y=0; y<heights.length; y++){\n\t\t\thtml += \"<div class='webix_cal_row' role='row' style='height:\"+heights[y]+\"px;line-height:\"+heights[y]+\"px'>\";\n\n\t\t\tif (start){\n\t\t\t\t// recalculate week number for the first week of a year\n\t\t\t\tif(!day.getMonth() && day.getDate()<7)\n\t\t\t\t\tweekNumber =  DateHelper.getISOWeek(DateHelper.add(day,2,\"day\", true));\n\t\t\t\thtml += \"<div class='webix_cal_week_num' aria-hidden='true' style='width:\"+widths[0]+\"px'>\"+weekNumber+\"</div>\";\n\t\t\t}\n\n\t\t\tfor (let x=start; x<widths.length; x++){\n\t\t\t\tconst sel = this._selectedDay(day);\n\t\t\t\tconst css = this._day_css(day, bounds);\n\t\t\t\tlet d = s.dayTemplate.call(this, day);\n\n\t\t\t\tlet alabel = \"\";\n\t\t\t\tif (typeof d == \"object\"){\n\t\t\t\t\talabel = d.aria || alabel;\n\t\t\t\t\td = d.text;\n\t\t\t\t} else\n\t\t\t\t\talabel = DateHelper.dateToStr(i18n.aria.dateFormat)(day);\n\n\t\t\t\tconst isOutside = day.getMonth() != bounds._month;\n\t\t\t\tlet tabindex = sel && !isOutside ? \"0\" : \"-1\";\n\t\t\t\tif (day.getDate() == 1 && !isOutside) tabindex = \"$webix_tabindex\";\n\t\t\t\tif (tabindex == \"0\") focusable = true;\n\n\t\t\t\tsqSize = Math.min(heights[y], widths[x]);\n\t\t\t\thtml += \"<div day='\"+x+\"' role='gridcell' \"+(isOutside?\"aria-hidden='true'\":\"\")+\" aria-label='\"+alabel+\n\t\t\t\t\t\"' tabindex='\"+tabindex+\"' aria-selected='\"+(sel && !isOutside?\"true\":\"false\")+\"' class='\"+css+\"' style='text-align:center; width:\"+widths[x]+\n\t\t\t\t\t\"px'><span aria-hidden='true' class='webix_cal_day_inner' style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+d+\"</span></div>\";\n\t\t\t\tday = DateHelper.add(day, 1, \"day\");\n\n\t\t\t\tif (day.getHours())\n\t\t\t\t\tday = DateHelper.datePart(day);\n\t\t\t}\n\n\t\t\thtml += \"</div>\";\n\t\t\tweekNumber++;\n\t\t}\n\t\treturn html.replace(\"$webix_tabindex\", (focusable || s.master) ? \"-1\" : \"0\");\n\t},\n\t_changeDate:function(dir, step){\n\t\tif(!step) { step = this._zoom_logic[this._zoom_level]._changeStep; }\n\n\t\tconst now = this._settings.date;\n\t\tconst next = DateHelper.add(now, dir*step, \"month\", true);\n\t\tthis._changeDateInternal(now, next, dir);\n\t},\n\t_changeDateInternal:function(now, next, dir){\n\t\tif(this.callEvent(\"onBeforeMonthChange\", [now, next])){\n\t\t\tif (this._zoom_level){\n\t\t\t\tthis._update_zoom_level(next);\n\t\t\t} else {\n\t\t\t\tthis.showCalendar(next);\n\t\t\t\tif (this._settings.monthHeader && this._settings.navigation){\n\t\t\t\t\tconst css = \"webix_cal_\"+(dir>0?\"next\":\"prev\")+\"_button\";\n\t\t\t\t\tthis._restore_focus(css);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.callEvent(\"onAfterMonthChange\", [next, now]);\n\t\t}\n\t},\n\t_zoom_logic:{\n\t\t\"-2\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = this.getSelectedDate(true) || config.date,\n\t\t\t\t\tisBlocked = false;\n\n\t\t\t\tvar minHour = (config.minTime ? config.minTime[0] : 0);\n\t\t\t\tvar maxHour = (config.maxTime ? (config.maxTime[0] + ( config.maxTime[1] ? 1 : 0 )) : 24);\n\n\t\t\t\tvar minMinute = (config.minTime && (date.getHours()==minHour) ? config.minTime[1] : 0);\n\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (date.getHours()==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\tif(this._settings.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setMinutes(i);\n\t\t\t\t\tisBlocked = this._settings.blockTime(d);\n\t\t\t\t}\n\t\t\t\treturn (i < minMinute || i >= maxMinute || isBlocked);\n\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setMinutes(i); },\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getMinutes()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar step = calendar._settings.minuteStep;\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"right\"?step:-step, \"minute\", true);\n\t\t\t\t\tif(date.getHours() === newdate.getHours())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"-1\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = this.getSelectedDate(true) || config.date;\n\n\t\t\t\tvar minHour = (config.minTime? config.minTime[0]:0);\n\t\t\t\tvar maxHour = (config.maxTime? config.maxTime[0]+(config.maxTime[1]?1:0):24);\n\n\t\t\t\tif (i < minHour || i >= maxHour) return true;\n\n\t\t\t\tif(config.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setHours(i);\n\t\t\t\t\t\n\t\t\t\t\tvar minMinute = (config.minTime && (i==minHour) ? config.minTime[1] : 0);\n\t\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (i==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\t\tfor (var j=minMinute; j<maxMinute; j+= config.minuteStep){\n\t\t\t\t\t\td.setMinutes(j);\n\t\t\t\t\t\tif (!config.blockTime(d))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setHours(i); },\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate, inc, step = calendar._settings.minuteStep;\n\t\t\t\t\n\t\t\t\tif(mode === \"bottom\" || mode === \"top\"){\n\t\t\t\t\tdate.setHours(mode===\"bottom\"?23:0);\n\t\t\t\t\tdate.setMinutes(mode===\"bottom\"?55:0);\n\t\t\t\t\tdate.setSeconds(0);\n\t\t\t\t\tdate.setMilliseconds(0);\n\t\t\t\t\tnewdate = date;\n\t\t\t\t}\n\t\t\t\telse if(mode === \"left\" || mode === \"right\"){//minutes\n\n\t\t\t\t\tinc = (mode===\"right\"?step:-step);\n\t\t\t\t\tif(mode === \"left\" && date.getMinutes() < step ) inc = 60-step;\n\t\t\t\t\tif(mode === \"right\" && date.getMinutes() >= (60-step)) inc = step-60;\n\t\t\t\t\tinc -= date.getMinutes()%step;\n\t\t\t\t\tnewdate = calendar._zoom_logic[\"-2\"]._findActive(DateHelper.add(date, inc, \"minute\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === \"up\" || mode === \"down\"){ //hours\n\t\t\t\t\tinc = mode===\"down\"?1:-1;\n\t\t\t\t\tif(mode === \"down\" && date.getHours() === 23) inc = -23;\n\t\t\t\t\tif(mode === \"up\" && date.getHours() === 0) inc = 23;\n\t\t\t\t\tnewdate = this._findActive(DateHelper.add(date, inc, \"hour\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === false)\n\t\t\t\t\tnewdate = this._findActive(date, mode, calendar);\n\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\"+(mode === \"left\" || mode === \"right\"?\"_min\":\"\");\n\t\t\t},\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getHours()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"down\"?1:-1, \"hour\", true);\n\t\t\t\t\tif(date.getDate() === newdate.getDate())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_correctDate: function(date, calendar){\n\t\t\t\tconst time = DateHelper.timePart(date);\n\t\t\t\t\n\t\t\t\tif (date < calendar._settings.minDate) {\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t\tdate.setSeconds(time);\n\t\t\t\t} else if (date > calendar._settings.maxDate) {\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t\tdate.setSeconds(time);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet blocked = calendar._isDateBlocked(date);\n\t\t\t\tif (blocked) {\n\t\t\t\t\tconst d = DateHelper.copy(date);\n\t\t\t\t\twhile (blocked && d.getMonth() == date.getMonth()){\n\t\t\t\t\t\tblocked = calendar._isDateBlocked(d);\n\t\t\t\t\t\tif (blocked)\n\t\t\t\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdate = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn date;\n\t\t\t},\n\t\t},\n\t\t\"0\":{//days\n\t\t\t_changeStep:1,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.getFullYear(), date.getMonth()+1, 0);\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setDate(1));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"day\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?1:-1), \"week\");\n\t\t\t\t\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate)\n\t\t\t\t\tcalendar._selectDate(newdate, false, \"user\");\n\t\t\t\treturn \"webix_cal_day\";\n\t\t\t},\n\t\t\t\n\t\t},\n\t\t\"1\":{\t//months\n\t\t\t_isBlocked: function(i){\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setMonth(i);\n\t\t\t\tlet blocked = this._isDateBlocked(date, 1);\n\n\t\t\t\tvar min = this._settings.minDate,\n\t\t\t\t\tmax = this._settings.maxDate,\n\t\t\t\t\tyear = this._settings.date.getFullYear();\n\n\t\t\t\tif (min && !blocked){\n\t\t\t\t\tvar minYear = min.getFullYear();\n\t\t\t\t\tblocked = year<minYear || (year==minYear && min.getMonth()>i);\n\t\t\t\t}\n\n\t\t\t\tif (max && !blocked){\n\t\t\t\t\tvar maxYear = max.getFullYear();\n\t\t\t\t\tblocked = year>maxYear || (year==maxYear && max.getMonth()<i);\n\t\t\t\t}\n\n\t\t\t\treturn blocked;\n\t\t\t},\n\t\t\t_correctDate: function(date, calendar){\n\t\t\t\tdate = DateHelper.monthStart(date);\n\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\t\t\t\tlet blocked = calendar._isDateBlocked(date);\n\t\t\t\tif(blocked){\n\t\t\t\t\tconst d = DateHelper.copy(date);\n\t\t\t\t\twhile(blocked && d.getMonth() == date.getMonth()){\n\t\t\t\t\t\tblocked = calendar._isDateBlocked(d);\n\t\t\t\t\t\tif(blocked)\n\t\t\t\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdate = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date){ return date.getFullYear(); },\n\t\t\t_getContent:function(i){ return i18n.calendar.monthShort[i]; },\n\t\t\t_setContent:function(next, i){ if(i!=next.getMonth()) next.setDate(1);next.setMonth(i); },\n\t\t\t_changeStep:12,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(11));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(0));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"month\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate)){\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t},\n\t\t\"2\":{\t//years\n\t\t\t_isBlocked: function(i){\n\t\t\t\ti += this._zoom_start_date;\n\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setFullYear(i);\n\n\t\t\t\tconst blocked = this._isDateBlocked(date, 2);\n\t\t\t\tvar min = this._settings.minDate;\n\t\t\t\tvar max = this._settings.maxDate;\n\n\t\t\t\tif (blocked || (min && min.getFullYear() > i) || (max && max.getFullYear() < i))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t_correctDate: function(date,calendar){\n\t\t\t\tdate = DateHelper.yearStart(date);\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\t\t\t\tlet blocked = calendar._isDateBlocked(date);\n\t\t\t\tif(blocked){\n\t\t\t\t\tconst d = DateHelper.copy(date);\n\t\t\t\t\twhile(blocked && d.getFullYear() == date.getFullYear()){\n\t\t\t\t\t\tblocked = calendar._isDateBlocked(d);\n\t\t\t\t\t\tif(blocked)\n\t\t\t\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdate = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date, calendar){\n\t\t\t\tvar start = date.getFullYear();\n\t\t\t\tcalendar._zoom_start_date = start = start - start%10 - 1;\n\t\t\t\treturn start+\" - \"+(start+10 + 1);\n\t\t\t},\n\t\t\t_getContent:function(i, calendar){ return calendar._zoom_start_date+i; },\n\t\t\t_setContent:function(next, i, calendar){ next.setFullYear(calendar._zoom_start_date+i); },\n\t\t\t_changeStep:12*10,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?10:-10), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date+10));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"year\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t}\n\t},\n\t_correctBlockedTime: function(){\n\t\tvar i, isDisabledHour, isDisabledMinutes;\n\t\tisDisabledHour = this._zoom_logic[-1]._isBlocked.call(this,this._settings.date.getHours());\n\t\tif(isDisabledHour){\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tif(!this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setHours(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tisDisabledMinutes = this._zoom_logic[-2]._isBlocked.call(this,this._settings.date.getMinutes());\n\t\tif(isDisabledMinutes){\n\t\t\tfor (i=0; i<60; i+=this._settings.minuteStep){\n\t\t\t\tif(!this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setMinutes(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_update_zoom_level:function(date){\n\t\tvar config, css, height, i, index,  sections, selected, type, width, zlogic, temp, sqSize;\n\t\tvar html = \"\";\n\t\tvar cpad = this._content_padding + \"px\";\n\n\t\tconfig = this._settings;\n\t\tindex = 2 - (config.weekHeader?0:1) - (config.monthHeader?0:1);\n\t\tzlogic = this._zoom_logic[this._zoom_level];\n\t\tsections  = this._contentobj.childNodes;\n\n\t\tif (date)\n\t\t\tthis.define(\"date\", date);\n\t\ttype = config.type;\n\n\t\t//store width and height of draw area\n\t\tif (!this._zoom_size){\n\n\t\t\tthis._reserve_box_height = this._contentobj.offsetHeight - (config.monthHeader||this._zoom_in?config.headerHeight:0) -\n\t\t\t\t(this._content_padding+$active.borderWidth)*2;\n\t\t\tif(type != \"year\" && type != \"month\")\n\t\t\t\tthis._reserve_box_height -= config.timepickerHeight;\n\n\t\t\tthis._reserve_box_width = sections[index].offsetWidth;\n\t\t\tthis._zoom_size = 1;\n\t\t}\n\n\t\t//main section\n\t\tif (this._zoom_in){\n\t\t\t//hours and minutes\n\t\t\theight = this._reserve_box_height/6;\n\t\t\tvar timeColNum = 6;\n\t\t\tvar timeFormat = this._calendarTime||i18n.timeFormat;\n\t\t\tvar enLocale = timeFormat.match(/%([a,A])/);\n\t\t\tif(enLocale)\n\t\t\t\ttimeColNum++;\n\t\t\twidth = parseInt((this._reserve_box_width-3)/timeColNum,10);\n\t\t\tsqSize = Math.min(width,height);\n\n\t\t\thtml += \"<div class='webix_time_header' style='margin:0 \"+cpad+\"'>\"+this._timeHeaderTemplate(width,enLocale)+\"</div>\";\n\t\t\thtml += \"<div  class='webix_cal_body' style='height:\"+this._reserve_box_height+\"px; margin:0 \"+cpad+\";'>\";\n\n\t\t\t// check and change blocked selected time\n\t\t\tthis._correctBlockedTime();\n\n\t\t\thtml += \"<div role='grid' class='webix_hours'><div role='row'>\";\n\t\t\tselected = config.date.getHours();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tcss=\"\";\n\t\t\t\tif(enLocale){\n\t\t\t\t\tif(i%4===0){\n\t\t\t\t\t\tvar label = (!i ? i18n.am[0] : (i==12?i18n.pm[0]:\"\"));\n\t\t\t\t\t\thtml += \"<div class='webix_cal_block_empty\"+css+\"' style='\"+this._getCalSizesString(width,height)+\"clear:both;\"+\"'>\"+label+\"</div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tcss += \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss += \" webix_selected\";\n\n\t\t\t\t\n\t\t\t\ttemp.setHours(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.hourFormat)(temp)+\"' role='gridcell'\"+\n\t\t\t\t\t\" tabindex='\"+(selected==i?\"0\":\"-1\")+\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+(i%4===0&&!enLocale?\"clear:both;\":\"\")+\n\t\t\t\t\t\"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(enLocale?(!i||i==12?12:i%12):i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"<div role='grid' class='webix_minutes'><div role='row'>\";\n\t\t\tselected = config.date.getMinutes();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\n\t\t\tfor (i=0; i<60; i+=config.minuteStep){\n\t\t\t\tcss = \"\";\n\t\t\t\tif(this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\ttemp.setMinutes(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.minuteFormat)(temp)+\"' role='gridcell' tabindex='\"+(selected==i?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\"' class='webix_cal_block webix_cal_block_min\"+css+\"' data-value='\"+i+\"' style='\"+\n\t\t\t\t\tthis._getCalSizesString(width,height)+((i/config.minuteStep)%2===0?\"clear:both;\":\"\")+\"'><span style='display:inline-block; \"+\n\t\t\t\t\tthis._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"</div>\";\n\t\t\thtml += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\tthis._contentobj.innerHTML = html;\n\t\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\t\t} else {\n\t\t\t//years and months\n\n\t\t\t//reset header\n\t\t\tif (config.monthHeader){\n\t\t\t\tconst header = sections[0].childNodes;\n\t\t\t\tconst title = zlogic._getTitle(config.date, this);\n\t\t\t\tif (header[0].innerHTML != title) header[0].innerHTML = title;\n\n\t\t\t\tif (config.navigation){\n\t\t\t\t\tconst labels = i18n.aria[\"nav\"+(this._zoom_level==1?\"Year\":\"Decade\")];\n\t\t\t\t\theader[1].setAttribute(\"aria-label\", labels[0]);\n\t\t\t\t\theader[2].setAttribute(\"aria-label\", labels[1]);\n\t\t\t\t}\n\t\t\t} else\t//needed for \"year\" to set start value\n\t\t\t\tzlogic._getTitle(config.date, this);\n\n\t\t\theight = Math.floor(this._reserve_box_height/3);\n\t\t\twidth = Math.floor(this._reserve_box_width/4);\n\t\t\tsqSize = Math.min(height, width);\n\n\t\t\tselected = (this._zoom_level === 1) ? config.date.getMonth() : config.date.getFullYear() - this._zoom_start_date;\n\t\t\tfor (i=0; i<12; i++){\n\t\t\t\tcss = \"\";\n\t\t\t\tif (zlogic._isBlocked.call(this, i)) {\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected == i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\tvar format = i18n.aria[(this._zoom_level==1?\"month\":\"year\")+\"Format\"];\n\t\t\t\thtml+=\"<div role='gridcell' aria-label='\"+DateHelper.dateToStr(format)(config.date)+\n\t\t\t\t\t\"' tabindex='\"+(css.indexOf(\"selected\")!==-1?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(css.indexOf(\"selected\")!==-1?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+\n                    \"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+zlogic._getContent(i, this)+\"</span></div>\";\n\t\t\t}\n\t\t\tif (config.weekHeader){\n\t\t\t\tsections[index-1].style.display = \"none\";\n\t\t\t\tif (index === 1) sections[index].style.marginTop = cpad;\n\t\t\t}\n\t\t\tsections[index].innerHTML = \"<div role='row'>\" + html + \"</div>\";\n\t\t\tif (type != \"year\" && type != \"month\"){\n\t\t\t\tif(!sections[index+1])\n\t\t\t\t\tthis._contentobj.innerHTML += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\t\telse\n\t\t\t\t\tsections[index+1].innerHTML = this._timeButtonsTemplate();\n\t\t\t} else if (sections[index+1]){\n\t\t\t\tsections[index+1].style.display = \"none\";\n\t\t\t}\n\t\t\tsections[index].style.height = this._reserve_box_height+\"px\";\n\t\t}\n\t},\n\t_getCalSizesString: function(width,height){\n\t\treturn \"width:\"+width+\"px; height:\"+height+\"px; line-height:\"+height+\"px;\";\n\t},\n\t_timeButtonsTemplate: function(){\n\t\treturn \"<input type='button' style='width:100%' class='webix_cal_done' value='\"+i18n.calendar.done+\"'>\";\n\t},\n\t_timeHeaderTemplate: function(width,enLocale){\n\t\tvar w1 = width*(enLocale?5:4);\n\t\tvar w2 = width*2;\n\t\treturn \"<div class='webix_cal_hours' style='width:\"+w1+\"px'>\"+i18n.calendar.hours+\"</div><div class='webix_cal_minutes' style='width:\"+w2+\"px'>\"+i18n.calendar.minutes+\"</div>\";\n\t},\n\t_changeZoomLevel: function(zoom,date){\n\t\tvar oldzoom = this._zoom_level;\n\t\tif(this.callEvent(\"onBeforeZoom\",[zoom, oldzoom])){\n\t\t\tthis._zoom_level = zoom;\n\n\t\t\tif(zoom)\n\t\t\t\tthis._update_zoom_level(date);\n\t\t\telse\n\t\t\t\tthis.showCalendar(date);\n\t\t\tthis.callEvent(\"onAfterZoom\",[zoom, oldzoom]);\n\t\t}\n\t},\n\t_correctDate:function(date){\n\t\tif(this._zoom_logic[this._zoom_level]._correctDate && !this._checkDate(date))\n\t\t\tdate = this._zoom_logic[this._zoom_level]._correctDate(date,this);\n\t\treturn date;\n\t},\n\t_mode_selected:function(target, config){\n\t\tvar next = this._locate_date(target);\n\t\tvar zoom = this._zoom_level-(this._fixed?0:1);\n\n\t\tnext = this._correctDate(next);\n\t\tif(this._checkDate(next)){\n\t\t\tthis._changeZoomLevel(zoom, next);\n\t\t\tvar type = this._settings.type;\n\t\t\tif(type == \"month\" || type == \"year\")\n\t\t\t\tthis._selectDate(next, false, config);\n\t\t}\n\t},\n\t// selects date and redraw calendar\n\t_selectDate: function(date, add, config){\n\t\tif(this.callEvent(\"onBeforeDateSelect\", [date])){\n\t\t\tthis.selectDate(date, true, add, config);\n\t\t\tthis.callEvent(\"onAfterDateSelect\", [date]);\n\t\t}\n\t},\n\t_locate_day:function(target, ind){\n\t\tconst cind = index(target) - (this._settings.weekNumber?1:0);\n\t\tconst rind = index(target.parentNode);\n\t\tif (ind) return { cind, rind };\n\n\t\tconst date = DateHelper.add(this._getDateBoundaries()._start, cind + rind*7, \"day\", true);\n\t\tif (this._settings.timepicker){\n\t\t\tdate.setHours(this._settings.date.getHours());\n\t\t\tdate.setMinutes(this._settings.date.getMinutes());\n\t\t}\n\t\treturn date;\n\t},\n\t_locate_date:function(target){\n\t\tvar value = target.getAttribute(\"data-value\")*1;\n\t\tvar level = (target.className.indexOf(\"webix_cal_block_min\")!=-1?this._zoom_level-1:this._zoom_level);\n\t\tvar next = this.getVisibleDate();\n\n\t\tthis._zoom_logic[level]._setContent(next, value, this);\n\t\treturn next;\n\t},\n\ton_click:{\n\t\twebix_cal_prev_button: function(){\n\t\t\tthis._changeDate(-1);\n\t\t},\n\t\twebix_cal_next_button: function(){\n\t\t\tthis._changeDate(1);\n\t\t},\n\t\twebix_cal_day_disabled: function(){\n\t\t\treturn false;\n\t\t},\n\t\twebix_cal_outside: function(){\n\t\t\tif(!this._settings.navigation)\n\t\t\t\treturn false;\n\t\t},\n\t\twebix_cal_day: function(e, id, target){\n\t\t\tconst date = this._locate_day(target);\n\t\t\tconst ind = this._settings.multiselect ? this._locate_day(target, true) : null;\n\n\t\t\tconst add = this._settings.multiselect === \"touch\"  || (e.ctrlKey || e.metaKey);\n\t\t\tthis._selectDate(date, add, \"user\");\n\n\t\t\tthis._restore_focus(\"webix_cal_day\", ind);\n\t\t},\n\t\twebix_cal_time:function(){\n\t\t\tif(this._zoom_logic[this._zoom_level-1]){\n\t\t\t\tthis._zoom_in = true;\n\t\t\t\tvar zoom = this._zoom_level - 1;\n\t\t\t\tthis._changeZoomLevel(zoom);\n\t\t\t}\n\t\t},\n\t\twebix_range_time_start:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"start\";\n\t\t},\n\t\twebix_range_time_end:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"end\";\n\t\t},\n\t\twebix_cal_done:function(){\n\t\t\tlet date = this.getVisibleDate();\n\t\t\tif (this._zoom_in) {\n\t\t\t\tconst start = this.getSelectedDate(true);\n\t\t\t\tif (start) {\n\t\t\t\t\tstart.setHours(date.getHours());\n\t\t\t\t\tstart.setMinutes(date.getMinutes());\n\t\t\t\t\tdate = start;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdate = this._correctDate(date);\n\t\t\tthis._selectDate(date, false, \"user\");\n\t\t},\n\t\twebix_cal_month_name:function(){\n\t\t\tif (!this._settings.navigation) return;\n\n\t\t\tthis._zoom_in = false;\n\t\t\t//maximum zoom reached\n\t\t\tif (this._zoom_level == 2 || !this._settings.monthSelect) return;\n\n\t\t\tvar zoom = Math.max(this._zoom_level, 0) + 1;\n\t\t\tthis._changeZoomLevel(zoom);\n\t\t},\n\t\twebix_cal_block:function(e, id, trg){\n\t\t\tif (this._zoom_in){\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") !== -1)\n\t\t\t\t\treturn false;\n\n\t\t\t\tconst next = this._locate_date(trg);\n\t\t\t\tthis._update_zoom_level(next);\n\n\t\t\t\tlet css = \"webix_cal_block\";\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_block_min\") !== -1)\n\t\t\t\t\tcss = \"webix_cal_block_min\";\n\t\t\t\tthis._restore_focus(css);\n\t\t\t} else {\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") == -1)\n\t\t\t\t\tthis._mode_selected(trg, \"user\");\n\t\t\t}\n\t\t}\n\t},\n\t_string_to_date: function(date, format){\n\t\tif (!date)\n\t\t\treturn DateHelper.datePart(new Date());\n\n\t\tif (typeof date == \"string\"){\n\t\t\tif (format)\n\t\t\t\tdate = DateHelper.strToDate(format)(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatDate(date);\n\t\t}\n\t\treturn date;\n\t},\n\t_checkDate: function(date){\n\t\tconst blockedDate = this._isDateBlocked(date);\n\t\tconst minDate = this._settings.minDate;\n\t\tconst maxDate = this._settings.maxDate;\n\t\tconst outOfRange = (minDate && date < minDate) || (maxDate && date >= DateHelper.add(maxDate, 1, \"day\", true));\n\t\treturn !blockedDate && !outOfRange;\n\t},\n\t_isDateBlocked: function(date, zoom){\n\t\tconst blockDates = this._settings.blockDates;\n\t\tlet blocked = (blockDates && blockDates.call(this, date));\n\t\tif(blocked && zoom){\n\t\t\tconst d = DateHelper.copy(date);\n\t\t\tconst method = zoom == 1? \"getMonth\" : \"getFullYear\";\n\t\t\td.setDate(1);\n\t\t\twhile(blocked && d[method]() == date[method]()){\n\t\t\t\tblocked = blockDates.call(this, d);\n\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t}\n\t\t}\n\t\treturn blocked;\n\t},\n\t_findActive:function(date, mode){\n\t\tvar dir = (mode === \"top\" || mode === \"left\" || mode === \"pgup\" || mode === \"up\") ? -1 : 1;\n\t\tvar newdate = DateHelper.add(date, dir, \"day\", true);\n\t\tif (this._checkDate(newdate))\n\t\t\treturn newdate;\n\t\telse {\n\t\t\tvar compare;\n\t\t\tif(this._zoom_level === 0) compare = (date.getMonth() === newdate.getMonth());\n\t\t\telse if(this._zoom_level === 1 ) compare = (date.getFullYear() === newdate.getFullYear());\n\t\t\telse if(this._zoom_level === 2) compare = (newdate.getFullYear() > this._zoom_start_date && newdate.getFullYear() < this._zoom_start_date+10);\n\n\t\t\tif(compare)\n\t\t\t\treturn this._findActive(newdate, mode);\n\t\t}\n\t},\n\tshowCalendar: function(date) {\n\t\tthis.define(\"date\", date);\n\t\tthis.render();\n\t\tthis.resize();\n\t},\n\t_selectedDay: function(day){\n\t\treturn day && this._selected_days[day.valueOf()];\n\t},\n\tgetSelectedDate: function(first) {\n\t\tconst result = [];\n\n\t\tconst keys = Object.keys(this._selected_days);\n\t\tconst length = first ? Math.min(1, keys.length) : keys.length;\n\t\tfor (let i=0; i<length; i++)\n\t\t\tresult.push(DateHelper.copy(this._selected_days[keys[i]]));\n\n\t\treturn (this.config.multiselect && !first) ? result : (result[0] || null);\n\t},\n\tgetVisibleDate: function() {\n\t\treturn DateHelper.copy(this._settings.date);\n\t},\n\tsetValue: function(date, config){\n\t\tthis.selectDate(date, true, false, config);\n\t},\n\tgetValue: function(format){\n\t\tlet date = this.getSelectedDate();\n\n\t\tif(isArray(date)){\n\t\t\tdate = date.map(date => this._formatValue(date, format));\n\t\t\tif(this._settings.stringResult)\n\t\t\t\tdate = date.join(this._settings.separator);\n\t\t}\n\t\telse\n\t\t\tdate = this._formatValue(date, format);\n\n\t\treturn date;\n\t},\n\t_formatValue: function(date, format){\n\t\tif (format)\n\t\t\tdate = DateHelper.dateToStr(format)(date);\n\t\telse if(this._settings.stringResult){\n\t\t\tif(this._settings.type == \"time\")\n\t\t\t\tdate = i18n.parseTimeFormatStr(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatStr(date);\n\t\t}\n\t\treturn date;\n\t},\n\tselectDate: function(date, show, add, config){\n\t\tif (!date || !add || !this.config.multiselect)\n\t\t\tthis._selected_days = {};\n\n\t\tif (date){\n\t\t\tif(typeof date == \"string\")\n\t\t\t\tdate = date.split(this._settings.separator);\n\t\t\telse if (!isArray(date)) date = [date];\n\t\t\tfor (let i=0; i<date.length; i++){\n\t\t\t\tconst days = this._string_to_date(date[i]);\n\t\t\t\tconst key = DateHelper.datePart(DateHelper.copy(days)).valueOf();\n\t\t\t\tif (this._selected_days[key] && add)\n\t\t\t\t\tdelete this._selected_days[key];\n\t\t\t\telse\n\t\t\t\t\tthis._selected_days[key] = days;\n\n\t\t\t\tif (!this.config.multiselect)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (date.length && show)\n\t\t\t\tthis.showCalendar(date[0]);\n\t\t}\n\n\t\tif (show !== false)\n\t\t\tthis.render();\n\n\t\tthis.callEvent(\"onChange\",[date,config]);\n\t}, \n\tlocate:function(){ return null; }\n};\n\n\nconst view = protoUI(api, KeysNavigation, MouseEvents, base.view, EventSystem);\nexport default {api, view};","import {locate, addCss, removeCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\n\nimport color from \"../webix/color\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorboard\",\n\tdefaults:{\n\t\ttemplate:(obj) => {\n\t\t\treturn `<div class=\"webix_color_item\" style=\"background-color:${obj.val};\"></div>`;\n\t\t},\n\t\tpalette:null,\n\t\theight:250,\n\t\twidth:260,\n\t\tcols:11,\n\t\trows:10,\n\t\tminLightness:0.15,\n\t\tmaxLightness:1,\n\t\tnavigation:true,\n\t\tgrayScale:true,\n\t\ttype:\"material\" // \"classic\"\n\t},\n\t$init:function(){\n\t\t_event(this._viewobj, \"click\", bind(function(e){\n\n\t\t\t// prevent selection the main item container\n\t\t\tconst node = e.target.parentNode;\n\t\t\tlet value = locate(node, /*@attr*/\"webix_val\");\n\t\t\t// locate can return null in case of drag\n\t\t\tif (value){\n\t\t\t\tconst oldvalue = this._settings.value;\n\t\t\t\tthis.setValue(value, \"user\");\n\n\t\t\t\t//value can be changed via setValue\n\t\t\t\tvalue = this._settings.value;\n\n\t\t\t\tthis.callEvent(\"onItemClick\", [value, e]);\n\t\t\t\tif (value != oldvalue)\n\t\t\t\t\tthis.callEvent(\"onSelect\", [value]);\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.$view.setAttribute(\"role\", \"grid\");\n\t\tthis._viewobj.setAttribute(\"aria-readonly\", \"true\");\n\t},\n\t_get_clear_palette:function(){\n\t\treturn [\n\t\t\t\"#F34336\",\n\t\t\t\"#FF9700\",\n\t\t\t\"#FFEA3B\",\n\t\t\t\"#4CB050\",\n\t\t\t\"#009788\",\n\t\t\t\"#00BCD4\",\n\t\t\t\"#2196F3\",\n\t\t\t\"#3F51B5\",\n\t\t\t\"#673BB7\",\n\t\t\t\"#9C28B1\",\n\t\t\t\"#EA1E63\",\n\t\t];\n\t},\n\t_set_item_focus:function(){\n\t\tif(!this.getValue())\n\t\t\tthis.moveSelection(\"up\");\n\t},\n\t_findIndex:function(value){\n\t\tconst pal = this._settings.palette;\n\t\tvalue = (value || \"\").toUpperCase();\n\t\tfor(let r= 0, rows= pal.length; r < rows; r++)\n\t\t\tfor(let c= 0, cols = pal[r].length; c < cols; c++){\n\t\t\t\tif(pal[r][c].toUpperCase() == value){\n\t\t\t\t\treturn {row:r, col:c};\n\t\t\t\t}\n\t\t\t}\n\t\treturn null;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t_getBox:function(){\n\t\treturn this._viewobj.firstChild;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\t// clear previous\n\t\t\tif (this._activeSelection){\n\t\t\t\tconst oldCell = this._getCell(this._activeSelection);\n\t\t\t\tthis._setSelection(oldCell, false);\n\t\t\t}\n\n\t\t\tconst ind = this._activeSelection = this._findIndex(value);\n\t\t\tif (ind){\n\t\t\t\tconst cell = this._getCell(ind);\n\t\t\t\tthis._setSelection(cell, true);\n\t\t\t}\n\t\t}\n\t},\n\t_getCell(ind){\n\t\treturn this._viewobj.lastChild.childNodes[ind.row].childNodes[ind.col];\n\t},\n\t_setSelection(cell, state){\n\t\tif (state){\n\t\t\tcell.setAttribute(\"tabindex\", \"0\");\n\t\t\tcell.setAttribute(\"aria-selected\", \"true\");\n\t\t\taddCss(cell, \"webix_color_selected\");\n\t\t} else {\n\t\t\tcell.setAttribute(\"tabindex\", \"-1\");\n\t\t\tcell.removeAttribute(\"aria-selected\");\n\t\t\tremoveCss(cell, \"webix_color_selected\");\n\t\t}\n\t},\n\t/* handle colors */\n\t_numToHex:function(n){\n\t\treturn color.toHex(n, 2);\n\t},\n\t_rgbToHex:function(r,g,b){\n\t\treturn \"#\"+this._numToHex( Math.floor(r)) +this._numToHex( Math.floor(g)) + this._numToHex(Math.floor(b));\n\t},\n\t_hslToRgb:function(h, s, l){\n\t\tlet r, g, b;\n\t\tif(!s){\n\t\t\tr = g = b = l; // achromatic\n\t\t}else{\n\t\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tlet p = 2 * l - q;\n\t\t\tr = this._hue2rgb(p, q, h + 1/3);\n\t\t\tg = this._hue2rgb(p, q, h);\n\t\t\tb = this._hue2rgb(p, q, h - 1/3);\n\t\t}\n\n\t\treturn {r:r * 255, g:g * 255, b:b * 255};\n\t},\n\t_hue2rgb:function(p, q, t){\n\t\tif(t < 0) t += 1;\n\t\tif(t > 1) t -= 1;\n\t\tif (t < 1/6)\n\t\t\treturn p + (q - p) * 6 * t; \n\t\telse if (t <= 1/2)\n\t\t\treturn q;\n\t\telse if (t < 2/3) \n\t\t\treturn p + (q - p) * (2/3 - t) * 6;\n\t\telse\n\t\t\treturn p;\n\t},\n\t_lightenRgb:function(rgb, lt){\n\t\t/*\tcolor = color * alpha + background * (1 - alpha); */\n\t\tconst r = rgb[0]*lt + 255*(1-lt);\n\t\tconst g = rgb[1]*lt + 255*(1-lt);\n\t\tconst b = rgb[2]*lt + 255*(1-lt);\n\t\treturn {r, g, b};\n\t},\n\t_getGrayScale:function(colCount){\n\t\tconst gray = [];\n\t\tlet\tval = 255,\n\t\t\tstep = val / colCount;\n\n\t\tfor(let i=0; i < colCount; i++){\n\t\t\tval = Math.round(val > 0 ? val : 0);\n\t\t\tgray.push(this._rgbToHex(val, val, val));\n\t\t\tval -= step;\n\t\t}\n\t\tgray[gray.length - 1] = \"#000000\";\n\t\treturn gray;\n\t},\n\t_initPalette:function(config){\n\t\t/* default palette (material and custom) */\n\t\tconst clearColors = this._get_clear_palette();\t\t\n\t\tconfig.cols = clearColors.length; // always use the same set\n\n\t\tconst colors = [];\n\n\t\tlet colorRows = config.rows - 1; // a row is reserved for clear colors\t\t\n\t\tlet lightStep = 1/config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tconst grayColors = this._getGrayScale(config.cols);\n\t\t\tcolors.push(grayColors.reverse()); // inverted order\n\t\t\tlightStep = 1/colorRows;\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tcolors.push(clearColors);\n\n\t\tfor(let step = 0, lt = config.maxLightness; step < colorRows; step++){\n\t\t\tlt-=lightStep;\n\t\t\tcolorRange = [];\n\t\t\tfor(let col = 0; col < config.cols; col++ ){\n\t\t\t\tconst clearRgb = color.toRgb(clearColors[col]);\n\t\t\t\tconst val = this._lightenRgb(clearRgb, lt);\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t}\n\t\tthis._settings.palette = colors;\n\t},\n\t_initOldPalette:function(config){\n\t\t/* old (classic) palette */\n\t\tconst colors = [];\n\t\tconst colorStep = 1/config.cols;\n\n\t\tlet colorRows = config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tcolors.push(this._getGrayScale(config.cols));\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tlet lightStep = (config.maxLightness - config.minLightness)/colorRows;\n\n\t\tfor(let step = 0, lt = config.minLightness; step < colorRows; step++){\n\t\t\tcolorRange = [];\n\t\t\tfor(let c = 0, col = 0; c < config.cols; c++ ){\n\t\t\t\tconst val = this._hslToRgb(col, 1, lt );\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t\tcol += colorStep;\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t\tlt+=lightStep;\n\t\t}\n\n\t\tthis._settings.palette = colors;\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tlet value = this.getValue(), ind, cell;\n\n\t\tif(value) ind = this._findIndex(value);\n\t\tif(!ind) ind = {row:0, col:0};\n\n\t\tif(ind){\n\t\t\tif(mode == \"up\" || mode == \"down\")\n\t\t\t\tind.row = ind.row + (mode == \"up\"?-1:1);\n\t\t\telse if(mode == \"right\" || mode == \"left\")\n\t\t\t\tind.col = ind.col +(mode == \"right\"?1:-1);\n\t\t\telse if(mode == \"top\" )\n\t\t\t\tind.row = ind.col = 0;\n\t\t\telse if(mode == \"bottom\"){\n\t\t\t\tind.row = this._viewobj.lastChild.querySelectorAll(\".webix_color_row\").length-1;\n\t\t\t\tind.col = this._viewobj.lastChild.childNodes[ind.row].childNodes.length-1;\n\t\t\t}\n\t\t\tind.row = Math.max(ind.row, 0);\n\t\t\tif(ind.row>=0){\n\t\t\t\t// check if this is a last row\n\t\t\t\tconst row = this._viewobj.lastChild.childNodes[ind.row];\n\t\t\t\tif (row) cell = row.childNodes[ind.col];\n\t\t\t}\n\t\t\tif(cell){\n\t\t\t\tvalue = cell.getAttribute(/*@attr*/\"webix_val\");\n\t\t\t\tconst config = (details && details.e instanceof KeyboardEvent) ? \"user\" : \"auto\";\n\t\t\t\tthis.setValue(value, config);\n\t\t\t\tthis.callEvent(\"onSelect\", [this._settings.value]);\n\n\t\t\t\tif(focus !== false){\n\t\t\t\t\tconst sel = this._viewobj.querySelector(\"div[tabindex='0']\");\n\t\t\t\t\tif(sel) sel.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_renderRow:function(row, widths, height){\n\t\tconst data = {width: 0, height:0, val:0};\n\t\tlet rowHtml = \"<div class=\\\"webix_color_row\\\" role=\\\"row\\\">\";\n\n\t\tfor(let cell = 0; cell < row.length; cell++){\n\t\t\tdata.width = widths[cell];\n\t\t\tdata.height = height;\n\t\t\tdata.val = row[cell];\n\t\t\trowHtml += this._renderItem(data);\n\t\t}\n\t\trowHtml += \"</div>\";\n\t\treturn rowHtml;\n\t},\n\t_renderItem:function(obj){\n\t\tconst colorTemplate = template(this._settings.template||\"\");\n\t\treturn `<div role=\"gridcell\" tabindex=\"-1\" aria-label=\"${obj.val}\" style=\"width:${obj.width}px;height:${obj.height}px;\" ${/*@attr*/\"webix_val\"}=\"${obj.val}\">${colorTemplate(obj)}</div>`;\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tconst type = this._settings.type;\n\t\tif(!this._settings.palette){\n\t\t\tif (type === \"classic\")\n\t\t\t\tthis._initOldPalette(this._settings);\n\t\t\telse \n\t\t\t\tthis._initPalette(this._settings);\n\t\t}\n\t\tconst palette = this._settings.palette;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\t\tconst padding = type === \"classic\" ? 0 : $active.colorPadding;\n\t\tconst single = typeof palette[0] == \"object\";\n\t\tconst firstRow = single ? palette[0] : palette;\n\n\t\tconst deltaWidth = padding*2 + padding*(firstRow.length-1);\n\t\tconst deltaHeight = padding*2 + padding*(single ? palette.length-1 : 0);\n\n\t\tlet width = this.$width - deltaWidth,\n\t\t\theight =  this.$height - deltaHeight,\n\t\t\twidths = [];\n\n\t\tlet html = `<div class=\"webix_color_palette ${\"webix_palette_\"+type}\" role=\"rowgroup\">`;\n\t\t\n\t\tfor(let i=0; i < firstRow.length; i++){\n\t\t\twidths[i] = Math.floor(width/(firstRow.length - i));\n\t\t\twidth -= widths[i];\n\t\t}\n\n\t\tif(typeof palette[0] == \"object\"){\n\t\t\tfor(let r=0; r < palette.length; r++){\n\t\t\t\tconst cellHeight = Math.floor(height/(palette.length - r));\n\t\t\t\theight -= cellHeight;\n\t\t\t\tconst row = palette[r];\n\t\t\t\thtml += this._renderRow(row, widths, cellHeight);\n\t\t\t}\n\t\t} else\n\t\t\thtml += this._renderRow(palette, widths, height);\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tif(this._settings.value)\n\t\t\tthis.$setValue(this._settings.value);\n\t\telse\n\t\t\tthis._viewobj.lastChild.childNodes[0].childNodes[0].setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, KeysNavigation, base.view, EventSystem);\nexport default {api, view};","import {pos as getPos, addCss, removeCss, offset, preventEvent} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {$active} from \"../webix/skin\";\nimport i18n from \"../webix/i18n\";\nimport env from \"../webix/env\";\n\nimport color from \"../webix/color\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorselect\",\n\tdefaults:{\n\t\twidth: 260,\n\t\theight: 250,\n\t\tvalue:\"#751FE0\"\n\t},\n\t$init:function(){\n\t\tthis._hValue = this._sValue = this._vValue = 0;\n\n\t\t_event(this.$view, \"keydown\", (e) => this._handle_move_keyboard(e));\n\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\t_event(this._colorBlock, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\"));\n\t\t\t_event(this._colorLine, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\", true));\n\t\t\tif (env.touch) {\n\t\t\t\t_event(this._colorBlock, env.touch.down, (e) => this._handle_dnd(e, \"touch\"));\n\t\t\t\t_event(this._colorLine, env.touch.down, (e) => this._handle_dnd(e, \"touch\", true));\n\t\t\t}\n\t\t\t_event(this._colorOutText, \"change\", () => this.setValue(this._colorOutText.value, \"user\"));\n\t\t\tif (this._settings.button)\n\t\t\t\t_event(this._viewobj.querySelector(\".webix_button\"), \"click\", () => {\n\t\t\t\t\tthis.callEvent(\"onColorSelect\", [this.getValue()]);\n\t\t\t\t});\n\t\t});\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._colorCircle = this._colorLineCircle = this._colorBlock = null;\n\t\t\tthis._colorLine = this._colorOutText = this._colorOutBlock = this._offset = null;\n\t\t});\n\t},\n\t$skin:function(){\n\t\tthis._inpHeight = $active.inputHeight - 2*$active.inputPadding;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\tconst rgb = color.toRgb(value);\n\n\t\t\tif(value !==this._current_value){//set by API\n\t\t\t\tconst hsv = color.rgbToHsv(...rgb);\n\t\t\t\tthis._hValue = hsv[0];\n\t\t\t\tthis._sValue = hsv[1];\n\t\t\t\tthis._vValue = hsv[2];\n\t\t\t}\n\n\t\t\tconst left = (this._hValue*this._offset.width)/359;\n\t\t\tthis._colorLineCircle.style.left = left+\"px\";\n\n\t\t\tconst x = this._sValue*(this._offset.width);\n\t\t\tconst y = Math.abs((this._offset.height)*(this._vValue-1));\n\n\t\t\tthis._colorCircle.style.left = Math.max(Math.min(x, this._offset.width), 0)+\"px\";\n\t\t\tthis._colorCircle.style.top = Math.max(Math.min(y, this._offset.height), 0)+\"px\";\n\n\t\t\tthis._colorCircle.setAttribute(\"aria-valuetext\", value);\n\t\t\tthis._colorLineCircle.setAttribute(\"aria-valuetext\", value);\n\n\t\t\tthis._setOutColors(rgb, value);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t},\n\t_setOutColors:function(rgb, hex){\n\t\tif(!rgb) rgb = color.hsvToRgb(this._hValue, this._sValue, this._vValue);\n\t\tif(!hex) hex = \"#\"+color.rgbToHex(rgb);\n\n\t\tconst bgColor = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorCircle.style.backgroundColor = bgColor;\n\t\tthis._colorOutBlock.style.backgroundColor = bgColor;\n\t\tthis._colorOutText.value = hex.toUpperCase();\n\n\t\tthis._current_value = hex;\n\t},\n\t_setBlockColors:function(){\n\t\tconst rgb = color.hsvToRgb(this._hValue, 1, 1);\n\t\tconst rgbStr = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorLineCircle.style.backgroundColor = rgbStr;\n\t\tthis._colorBlock.style.backgroundColor = rgbStr;\n\t},\n\n\t// dragging to set value\n\t_move_block:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tlet y = pos.y - this._offset.y;\n\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\t\ty = Math.max(Math.min(y, this._offset.height), 0);\n\n\t\tthis._colorCircle.style.left = x+\"px\";\n\t\tthis._colorCircle.style.top = y+\"px\";\n\n\t\tconst pxX = (this._offset.width)/100;\n\t\tconst pxY = (this._offset.height)/100;\n\n\t\tconst s = Math.ceil(x/pxX)/100;\n\t\tconst v = Math.ceil(Math.abs(y/pxY-100))/100;\n\n\t\tthis._sValue = s;\n\t\tthis._vValue = v;\n\n\t\tthis._setOutColors();\n\t},\n\t_move_line:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\n\t\tthis._colorLineCircle.style.left = x+\"px\";\n\n\t\tconst h =  Math.round(x*359/this._offset.width);\n\t\tthis._hValue = Math.max(Math.min(h, 359), 0);\n\n\t\tthis._setOutColors();\n\t\tthis._setBlockColors();\n\t},\n\t_handle_dnd:function(e, pointer, line){\n\t\tthis._offset = offset(this._colorBlock);\n\n\t\tif (line){\n\t\t\taddCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._move_line(e);\n\t\t} else {\n\t\t\taddCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._move_block(e);\n\t\t}\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer, line), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop(line))\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer, line){\n\t\tif (line) this._move_line(e);\n\t\telse this._move_block(e);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_handle_move_stop:function(line){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tthis.setValue(this._current_value, \"user\");\n\n\t\tif (line){\n\t\t\tremoveCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._colorLineCircle.focus();\n\t\t} else {\n\t\t\tremoveCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._colorCircle.focus();\n\t\t}\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_move_block_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc/100, 0), 1);\n\t},\n\t_move_line_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc, 0), 359);\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif(code>32 && code <41){\n\t\t\tconst match =  /webix_color_(\\w*)circle/.exec(e.target.className);\n\t\t\tif(!match) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tif(match[1].length){ //line\n\t\t\t\tif(code === 36) this._hValue = 0;\n\t\t\t\telse if(code === 35) this._hValue = 359;\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\t\t}\n\t\t\t\tthis._setBlockColors();\n\t\t\t} else {\n\t\t\t\tif(code === 36){\n\t\t\t\t\tthis._sValue = 0;\n\t\t\t\t\tthis._vValue = 1;\n\t\t\t\t}\n\t\t\t\telse if(code === 35) \n\t\t\t\t\tthis._sValue = this._vValue = 1;\n\t\t\t\telse if(code === 39 || code === 37){\n\t\t\t\t\tlet inc = code === 39 ? 1: -1;\n\t\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 33 || code === 38) ? 1 : -1;\n\t\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setOutColors();\n\n\t\t\t//paint value, black colors may have a bigger step\n\t\t\tif(this._settings.value == this._current_value)\n\t\t\t\tthis.$setValue(this._current_value);\n\t\t\telse\n\t\t\t\tthis.setValue(this._current_value, \"user\");\n\t\t}\n\t},\n\tmoveSelection:function(mode){\n\t\tif(mode == \"pgup\" || mode == \"pgdown\"){ //line\n\t\t\tlet inc = mode === \"pgup\" ? -1 : 1;\n\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t\telse if(mode !=\"top\" && mode !==\"bottom\"){\n\t\t\tlet inc = (mode == \"up\" || mode == \"right\") ? 1 : -1;\n\t\t\tif(mode == \"down\" || mode == \"up\")\n\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\telse\n\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t}\n\t\tthis._setOutColors();\n\t\tthis.setValue(this._current_value, \"auto\");\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tconst inpWidth = (this.$width - $active.dataPadding*3)/2;\n\t\t//8+14 color line, 3(or 4) data paddings \n\t\tconst bHeight = this.$height - 3*$active.dataPadding - 22 - this._inpHeight - (this._settings.button ? (this._inpHeight+$active.dataPadding) : 0);\n\n\t\tlet html = \"<div class=\\\"webix_color_area\\\">\";\n\t\thtml += `\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_block\" style=\"height:${bHeight}px;\">\n\t\t\t\t<div class=\"webix_color_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_line\">\n\t\t\t\t<div class=\"webix_color_line_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"webix_color_out\">\n\t\t\t\t<div style=\"width:${inpWidth}px\" class=\"webix_color_out_block\"></div>\n\t\t\t\t<input type=\"text\" style=\"width:${inpWidth}px\" class=\"webix_color_out_text\"></input>\n\t\t\t</div>\n\t\t`;\n\n\t\tif(this._settings.button)\n\t\t\thtml += `<div class='webix_secondary'><button class=\"webix_button\">${i18n.combo.select}</button></div>`;\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tthis._collect_vars();\n\t\tthis.$setValue(this._settings.value);\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_collect_vars:function(){\n\t\tthis._colorCircle = this._viewobj.querySelector(\".webix_color_circle\");\n\t\tthis._colorLineCircle = this._viewobj.querySelector(\".webix_color_line_circle\");\n\t\tthis._colorBlock = this._viewobj.querySelector(\".webix_color_block\");\n\t\tthis._colorLine = this._viewobj.querySelector(\".webix_color_line\");\n\t\tthis._colorOutText = this._viewobj.querySelector(\".webix_color_out_text\");\n\t\tthis._colorOutBlock = this._viewobj.querySelector(\".webix_color_out_block\");\n\n\t\tthis._offset = offset(this._colorBlock);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, base.view, EventSystem);\nexport default {api, view};","import {triggerEvent, preventEvent, getTextSize, locate} from \"../webix/html\";\nimport {protoUI, ui} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport baseview from \"../views/baseview\";\nimport base from \"../views/view\";\n\nimport AutoTooltip from \"../core/autotooltip\";\nimport UIManager from \"../core/uimanager\";\nimport EventSystem from \"../core/eventsystem\";\nimport AtomRender from \"../core/atomrender\";\nimport Settings from \"../core/settings\";\n\n\nconst api = {\n\tname:\"button\",\n\ttouchable:true,\n\t$skin:function(){\n\t\tthis.defaults.height = $active.buttonHeight||$active.inputHeight;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tlet text = common.$renderInput(obj, common);\n\t\t\tif (obj.popup)\n\t\t\t\ttext = text.replace(\"<button\", \"<button aria-haspopup='true' aria-expanded='false'\");\n\t\t\tif (obj.badge || obj.badge === 0)\n\t\t\t\ttext = text.replace(\"</button>\", \"<span class='webix_badge'>\"+obj.badge+\"</span></button>\");\n\t\t\treturn \"<div class='webix_el_box' style='width:\"+obj.awidth+\"px; height:\"+obj.aheight+\"px'>\"+text+\"</div>\";\n\t\t},\n\t\tlabel:\"\",\n\t\tvalue:\"\",\n\t\tborderless:true\n\t},\n\t$renderInput:function(obj){\n\t\treturn \"<button type='button' class='webix_button'>\"+(obj.label||obj.value)+\"</button>\";\n\t},\n\t$init:function(config){\n\t\tthis._viewobj.className += \" webix_control webix_el_\"+(this.$cssName||this.name);\n\n\t\tthis._destroy_with_me = [];\n\t\tthis._set_default_css(config);\n\n\t\tthis.data = this._settings;\n\t\tthis._dataobj = this._viewobj;\n\n\t\tthis.$ready.push(function(){ this._calc_size(this.config); });\n\t},\n\thotkey_setter: function(key){\n\t\tvar control = this;\n\t\tthis._addElementHotKey(key, function(view,ev){\n\t\t\tif(control.isVisible()){\n\t\t\t\tvar elem = control.$view.firstChild;\n\t\t\t\ttriggerEvent(elem, \"MouseEvent\", \"click\");\n\t\t\t\tpreventEvent(ev);\n\t\t\t}\n\t\t});\n\t},\n\t_set_default_css: function(config){\n\t\tif (!config.css || !this._get_class(config.css) || (this.defaults.css && !this._get_class(this.defaults.css))){\n\t\t\tthis._viewobj.className += \" webix_secondary\";\n\t\t}\n\t},\n\t_get_class:function(css){\n\t\tif(typeof css == \"string\"){\n\t\t\tconst classes = { webix_danger:1, webix_transparent:1, webix_primary:1 };\n\t\t\tfor(let i in classes){\n\t\t\t\tif(css.indexOf(i)!==-1)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_addElementHotKey: function(key, func, view){\n\t\tvar keyCode = UIManager.addHotKey(key, func, view);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tUIManager.removeHotKey(keyCode, func, view);\n\t\t});\n\t},\n\ttype_setter:function(value){\n\t\tif (this._types[value])\n\t\t\tthis.$renderInput = template(this._types[value]);\n\t\treturn value;\n\t},\n\t_set_inner_size:false,\n\t_types:{\n\t\timage:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'>#label#</button>\",\n\t\timageTop:\"<button type='button' class='webix_button webix_img_btn_top'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'><div class='webix_img_btn_text'>#label#</div></button>\",\n\n\t\ticon:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><span class='webix_icon_btn #icon#' style='max-width:#cheight#px;'></span>#label#</button>\",\n\t\ticonTop:\"<button type='button' class='webix_button webix_img_btn_top' style='width:100%;text-align:center;'><span class='webix_icon #icon#'></span><div class='webix_img_btn_text'>#label#</div></button>\",\n\t},\n\t_findAllInputs: function(){\n\t\tvar result = [];\n\t\tvar tagNames = [\"input\",\"select\",\"textarea\",\"button\"];\n\t\tfor(var i=0; i< tagNames.length; i++){\n\t\t\tvar inputs = this.$view.getElementsByTagName(tagNames[i]);\n\t\t\tfor(var j = 0; j< inputs.length; j++){\n\t\t\t\tresult.push(inputs[j]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tdisable: function(){\n\t\tvar i, node, elem = this._getBox();\n\t\tbaseview.api.disable.apply(this, arguments);\n\t\tif(elem && elem.className.indexOf(\" webix_disabled_box\")== -1){\n\t\t\telem.className += \" webix_disabled_box\";\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].setAttribute(\"disabled\",true);\n\n\t\t\t// richselect and based on it\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && node.tagName.toLowerCase() == \"div\"){\n\t\t\t\tthis._disabledTabIndex = node.getAttribute(\"tabIndex\");\n\t\t\t\tnode.removeAttribute(\"tabIndex\");\n\t\t\t}\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className += \" webix_disabled_top_label\";\n\t\t\t}\n\t\t}\n\t},\n\tenable: function(){\n\t\tbaseview.api.enable.apply(this, arguments);\n\t\tvar node,\n\t\t\telem = this._getBox();\n\t\tif(elem){\n\t\t\telem.className = elem.className.replace(\" webix_disabled_box\",\"\");\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(var i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].removeAttribute(\"disabled\");\n\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && !isUndefined(this._disabledTabIndex))\n\t\t\t\tnode.setAttribute(\"tabIndex\",this._disabledTabIndex);\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className = label.className.replace(\" webix_disabled_top_label\",\"\");\n\t\t\t}\n\t\t}\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (this.$compareValue(oldvalue, value)){\n\t\t\t//controls with post formating, we need to repaint value\n\t\t\tif(this._rendered_input && this._pattern){\n\t\t\t\tvalue = this._pattern(value);\n\t\t\t\tconst input = this.getInputNode();\n\t\t\t\tif(input && !isUndefined(input.value) && input.value != value)\n\t\t\t\t\tthis.$setValue(value);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._settings.value = value;\n\t\tif (this._rendered_input)\n\t\t\tthis.$setValue(value);\n\n\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t},\n\t$compareValue:function(oldvalue, value){ \n\t\tif (typeof value === \"number\") value = value.toString();\n\t\tif (typeof oldvalue === \"number\") oldvalue = oldvalue.toString();\n\t\treturn oldvalue == value;\n\t},\n\t$prepareValue:function(value){ return value === 0 ? \"0\" : (value || \"\").toString(); },\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\t//visual part of setValue\n\t$setValue:function(value){\n\t\tconst node = this.getInputNode();\n\t\tif (node && !this._types[this._settings.type]){\n\t\t\tvalue = this._settings.label || value;\n\t\t\tif (node.tagName==\"BUTTON\") node.innerHTML = value;\n\t\t\telse node.value = value;\n\t\t}\n\t},\n\tgetValue:function(){\n\t\t//if button was rendered - returning actual value\n\t\t//otherwise - returning last set value\n\t\tvar value = this._rendered_input ? this.$getValue() : this._settings.value;\n\t\treturn (typeof value == \"undefined\") ? \"\" : value;\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value||\"\";\t\n\t},\n\tfocus:function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\t\t\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.focus) input.focus();\n\t},\n\tblur:function() {\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.blur) input.blur();\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0]||this._dataobj.getElementsByTagName(\"button\")[0];\n\t},\n\t//get top-level sub-container\n\t_getBox:function(){\n\t\tfor(var i=0;i< this._dataobj.childNodes.length;i++){\n\t\t\tif(this._dataobj.childNodes[i].className.indexOf(\"webix_el_box\")>=0)\n\t\t\t\treturn this._dataobj.childNodes[i];\n\t\t}\n\t\treturn null;\n\t},\n\t_get_tooltip_data:function(t,e){\n\t\tlet node = e.target;\n\t\tlet box = this._getBox();\n\n\t\tconst isTopLabel = this._settings.labelPosition == \"top\" && this._dataobj.firstChild.contains(node);\n\n\t\tif (isTopLabel || box && box.contains(node))\n\t\t\treturn this._settings;\n\t\treturn null;\n\t},\n\t_sqrt_2:Math.sqrt(2),\n\t_calc_size:function(config){\n\t\tconfig = config || this._settings;\n\t\tif (config.autowidth){\n\t\t\tlet width = getTextSize((config.value||config.label || \"\"), \"webixbutton\").width +\n\t\t\t\t(config.badge||config.badge===0 ? getTextSize(config.badge, \"webix_badge\").width * 2 - 32 : 0) +\n\t\t\t\t(config.type === \"icon\" ? 24 : 0) +\n\t\t\t\t(config.type === \"image\" ? config.height-$active.inputPadding : 0);\n\n\t\t\twidth = Math.max(config.minWidth || 0, width);\n\t\t\tconfig.width = Math.min(config.maxWidth || Infinity, width);\n\t\t}\n\t},\n\t_calck_input_size:function(){\n\t\t//use width for both width and inputWidth settings in clever way\n\t\t//in form, we can define width for some element smaller than for siblings\n\t\t//it will use inputWidth to render the desired view\n\t\tthis._input_width = this._settings.inputWidth || \n\t\t\t((this._content_width - this._settings.width > 2)?this._settings.width:0) || this._content_width;\n\t\tthis._input_height = this._settings.inputHeight||this._inputHeight||0;\n\t},\n\tresize: function(){\n\t\tthis._calc_size();\n\t\treturn base.api.resize.apply(this,arguments);\n\t},\n\trender:function(){\n\t\tthis._calck_input_size();\n\t\tthis._settings.awidth  = this._input_width||this._content_width;\n\t\tthis._settings.aheight = this._input_height||this._content_height;\n\n\t\t//image button - image width\n\t\tthis._settings.bheight = this._settings.aheight+2;\n\t\tthis._settings.cheight = this._settings.aheight- 2*$active.inputPadding;\n\t\tthis._settings.dheight = this._settings.cheight - 2; // - borders\n\n\t\tif(AtomRender.render.call(this)){\n\t\t\tthis._rendered_input = true;\n\t\t\tif (this._set_inner_size) this._set_inner_size();\n\t\t\tif (this._settings.align){\n\t\t\t\tvar handle = this._dataobj.firstChild;\n\t\t\t\tif (this._settings.labelPosition == \"top\" && handle.nextSibling)\n\t\t\t\t\thandle = handle.nextSibling;\n\n\t\t\t\tswitch(this._settings.align){\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\thandle.style.cssFloat = \"right\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\thandle.style.display = \"inline-block\";\n\t\t\t\t\t\thandle.parentNode.style.textAlign = \"center\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\thandle.style.marginTop = Math.round((this._content_height-this._input_height)/2)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bottom\": \n\t\t\t\t\t\thandle.style.marginTop = (this._content_height-this._input_height)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\thandle.style.cssFloat = \"left\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tassert(false, \"Unknown align mode: \"+this._settings.align);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$render)\n\t\t\t\tthis.$render(this.data);\n\n\t\t\tif (this._settings.disabled)\n\t\t\t\tthis.disable();\n\n\t\t\tif (this._init_once){\n\t\t\t\tthis._init_once(this.data);\n\t\t\t\tthis._init_once = 0;\n\t\t\t}\n\t\t}\n\t},\n\n\trefresh:function(){ this.render(); },\n\n\ton_click:{\n\t\t_handle_tab_click: function(ev){\n\t\t\tconst id = locate(ev, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClick\", [id, ev])){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t\tthis.callEvent(\"onAfterTabClick\", [id, ev]);\n\t\t\t}\n\t\t},\n\t\twebix_all_segments:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_all_tabs:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_inp_counter_next:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.next(this._settings.step, \"user\");\n\t\t},\n\t\twebix_inp_counter_prev:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.prev(this._settings.step, \"user\");\n\t\t},\n\t\twebix_input_icon:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\twebix_clear_icon:function(){\n\t\t\tif (this.$allowsClear) this.setValue(\"\", \"user\");\n\t\t\treturn false;\n\t\t},\n\t\twebix_inp_checkbox_border: function(e) {\n\t\t\tif (!this._settings.disabled && e.target.tagName != \"DIV\" && !this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_checkbox_label: function() {\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_radio_border: function(e) {\n\t\t\tconst id = locate(e, /*@attr*/\"radio_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t},\n\t\twebix_tab_more_icon: function(ev,obj,node){\n\t\t\tconst popup = this.getPopup();\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tpopup.resize();\n\t\t\t\tpopup.show(node, null, true);\n\t\t\t} else\n\t\t\t\tpopup.hide();\n\t\t},\n\t\twebix_tab_close:function(e){\n\t\t\tconst id = locate(e, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClose\", [id, e]))\n\t\t\t\tthis.removeOption(id);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t//method do not used by button, but  used by other child-views\n\t_check_options:function(opts){\n\t\tassert(!!opts, this.name+\": options not defined\");\n\t\tassert(isArray(opts), this.name+\": options must be an array\");\n\n\t\tfor(var i=0;i<opts.length;i++){\n\t\t\t// asserts need to be removed in final version\t\t\t\n\t\t\tassert(!opts[i].text, \"Please replace .text with .value in control config\");\n\t\t\tassert(!opts[i].label, \"Please replace .label with .value in control config\");\n\n\t\t\tif(typeof opts[i]==\"string\"){\n\t\t\t\topts[i] = {id:opts[i], value:opts[i]};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(isUndefined(opts[i].id))\n\t\t\t\t\topts[i].id = opts[i].value;\n\n\t\t\t\tif(isUndefined(opts[i].value))\n\t\t\t\t\topts[i].value = opts[i].id;\n\t\t\t}\n\t\t}\n\t\treturn opts;\n\t},\n\t_get_div_placeholder: function(obj){\n\t\tvar placeholder = (obj?obj.placeholder:this._settings.placeholder);\n\t\treturn (placeholder?\"<span class='webix_placeholder'>\"+placeholder+\"</span>\":\"\");\n\t},\n\tpopup_setter: function(value){\n\t\tif (typeof value === \"object\" && !value.name){\n\t\t\tconst popup = ui(value);\n\t\t\tvalue = popup._settings.id;\n\t\t\tthis._destroy_with_me.push(popup);\n\t\t}\n\t\treturn value;\n\t}\n};\n\nconst view = protoUI(api, base.view, AutoTooltip, AtomRender, Settings, EventSystem);\nexport default {api, view};","import {protoUI, ui, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray, extend, uid, delay} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {getSelectionRange, setSelectionRange, getTextSize} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport rules from \"../webix/rules\";\nimport button from \"./button\";\nimport base from \"../views/view\";\n\nimport TextPattern from \"../core/textpattern\";\n\nconst api = {\n\tname:\"text\",\n\t$allowsClear:true,\n\t_init_onchange:function(){\n\t\tif (this.$allowsClear){\n\t\t\tconst c = this._settings;\n\t\t\tconst node = this.getInputNode();\n\t\t\t//attach onChange handler only for controls which do not manage blur on their own\n\t\t\t//for example - combo\n\t\t\tif (!this.$onBlur && node)\n\t\t\t\t_event(node, \"change\", () => this._applyChanges(\"user\"));\n\t\t\tif (c.suggest)\n\t\t\t\t$$(c.suggest).linkInput(this);\n\t\t\tif (c.clear && !this.addSection){\n\t\t\t\tthis._clear_icon = this.$view.querySelector(\".webix_input_icon:last-child\");\n\t\t\t\tif (node.tagName == \"INPUT\" || node.tagName == \"SELECT\")\n\t\t\t\t\t_event(node, \"input\", (e) => this._toggleClearIcon(e.target.value));\n\n\t\t\t\tconst text = this.getText ? this.getText() : c.text||c.value;\n\t\t\t\tthis._toggleClearIcon(text);\n\t\t\t}\n\t\t}\n\t},\n\t_applyChanges: function(c){\n\t\tconst value = this.getValue();\n\t\tthis.setValue(value, c);\n\t},\n\t_toggleClearIcon:function(value){\n\t\tconst c = this._settings;\n\t\tif (c.readonly || !c.clear || !this._clear_icon) return;\n\n\t\tif (c.clear == \"hover\" || c.clear == \"replace\"){\n\t\t\tconst css = value ? \"webix_clear_icon \"+(c.clear == \"hover\" ? c.icon : \"wxi-close\") : c.icon;\n\t\t\tthis._clear_icon.className = \"webix_input_icon \" + css;\n\t\t} else {\n\t\t\tconst state = value ? \"\" : \"hidden\";\n\t\t\tif (this._clear_icon.style.visibility !== state)\n\t\t\t\tthis._clear_icon.style.visibility = state;\n\t\t}\n\t},\n\t$skin:function(){\n\t\tbutton.api.$skin.call(this);\n\n\t\tthis.defaults.height = $active.inputHeight;\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t\tthis._inputSpacing = $active.inputSpacing;\n\t\tthis._labelTopHeight = $active.labelTopHeight;\n\t},\n\t$init:function(config){\n\t\tif (config.labelPosition == \"top\" && isUndefined(config.height) && this.defaults.height) // textarea\n\t\t\tconfig.height = this.defaults.height + (config.label?this._labelTopHeight:0);\n\n\t\t// used in clear_setter\n\t\tif (!isUndefined(config.icon))\n\t\t\tthis._settings.icon = config.icon;\n\n\t\tif (this.$onBlur)\n\t\t\tthis.attachEvent(\"onBlur\", function(){\n\t\t\t\tif (this._rendered_input) this.$onBlur();\n\t\t\t});\n\t\tthis.attachEvent(\"onAfterRender\", this._init_onchange);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._clear_icon = null;\n\t\t});\n\t},\n\tclear_setter:function(value){\n\t\tif (value){\n\t\t\tif (!this._settings.icon) value = true;\n\n\t\t\tif (value !== \"hover\" && value !== \"replace\")\n\t\t\t\tvalue = !!value;\n\t\t}\n\t\treturn value;\n\t},\n\t$renderIcon:function(c){\n\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\tconst padding = (height - 18)/2 -1;\n\t\tlet right = this._inputSpacing/2 - 24;\n\t\tlet html = \"\";\n\n\t\tif (c.icon){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon \"+c.icon+\"'></span>\";\n\t\t}\n\n\t\tif (!c.readonly && c.clear === true){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_clear_icon webix_icon_transparent wxi-close'></span>\";\n\t\t}\n\n\t\treturn html;\n\t},\n\trelatedView_setter:function(value){\n\t\tthis.attachEvent(\"onChange\", function(){\n\t\t\tconst value = this.getValue();\n\t\t\tconst mode = this._settings.relatedAction;\n\t\t\tconst viewid = this._settings.relatedView;\n\t\t\tlet view = $$(viewid);\n\t\t\tif (!view){\n\t\t\t\tconst top = this.getTopParentView();\n\t\t\t\tif (top && top.$$)\n\t\t\t\t\tview = top.$$(viewid);\n\t\t\t}\n\n\t\t\tassert(view, \"Invalid relatedView: \"+viewid);\n\n\t\t\tif (mode == \"enable\"){\n\t\t\t\tif (value) view.enable(); else view.disable();\n\t\t\t} else {\n\t\t\t\tif (value) view.show(); else view.hide();\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t},\n\tvalidateEvent_setter:function(value){\n\t\tif (value == \"blur\")\n\t\t\tthis.attachEvent(\"onBlur\", this.validate);\n\n\t\tif (value == \"key\")\n\t\t\tthis.attachEvent(\"onTimedKeyPress\", this.validate);\n\n\t\treturn value;\n\t},\n\tvalidate:function(){\n\t\tlet rule = this._settings.validate;\n\t\tif (!rule && this._settings.required)\n\t\t\trule = rules.isNotEmpty;\n\n\t\tconst form =this.getFormView();\n\t\tconst name = this._settings.name;\n\t\tconst value = this.getValue();\n\t\tconst data = {}; data[name] = value;\n\n\t\tassert(form, \"Validation works only for fields in the form\");\n\t\tassert(name, \"Validation works only for fields with name\");\n\n\t\tif (rule && !form._validate(rule, value, data, name))\n\t\t\treturn false;\n\t\treturn true;\n\t},\n\t_getInvalidText: function(){\n\t\tconst text = this._settings.invalidMessage;\n\t\tif(typeof text == \"function\"){\n\t\t\ttext.call(this);\n\t\t}\n\t\treturn text;\n\t},\n\tbottomLabel_setter: function(text){\n\t\t// this._get_input_width returns 0\n\t\t// use delay to wait for the end of the render\n\t\tdelay(() => {\n\t\t\tif(!this.$destructed)\n\t\t\t\tthis.setBottomText(text);\n\t\t});\n\t},\n\tsetBottomText: function(text){\n\t\tconst config = this._settings;\n\t\tif (!isUndefined(text)){\n\t\t\tif (config.bottomLabel == text) return;\n\t\t\tconfig.bottomLabel = text;\n\t\t}\n\n\t\tlet sel;\n\t\tconst input = this.getInputNode();\n\t\tif (input && !isUndefined(input.value)){\n\t\t\tif (input == document.activeElement) sel = getSelectionRange(input);\n\t\t\t// save input value before rendering\n\t\t\tthis._applyChanges(\"auto\");\n\t\t}\n\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (!message && !config.bottomPadding)\n\t\t\tconfig.inputHeight = 0;\n\n\t\tif (message && (!config.bottomPadding || this._restorePadding)){\n\t\t\tthis._restorePadding = 1;\n\t\t\tconfig.bottomPadding = getTextSize(message, \"webix_inp_bottom_label\", this._get_input_width(config)).height;\n\t\t\tthis._setInputHeight();\n\t\t\tthis.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else if (!message && this._restorePadding){\n\t\t\tconfig.bottomPadding = this._restorePadding = 0;\n\t\t\t//textarea\n\t\t\tif (!config.height) this.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else\n\t\t\tthis.render();\n\n\t\tif (sel)\n\t\t\tsetSelectionRange(this.getInputNode(), sel.start, sel.end);\n\t},\n\t$getSize: function(){\n\t\tconst sizes = base.api.$getSize.apply(this,arguments);\n\t\tconst heightInc = this.config.bottomPadding;\n\t\tif(heightInc){\n\t\t\tsizes[2] += heightInc;\n\t\t\tsizes[3] += heightInc;\n\t\t}\n\t\treturn sizes;\n\t},\n\t$setSize:function(x,y){\n\t\tconst config = this._settings;\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tif (!x || !y) return;\n\n\t\t\tif (config.labelPosition == \"top\")\n\t\t\t\tconfig.labelWidth = 0;\n\t\t\telse if(config.label)\n\t\t\t\tconfig.labelWidth = this._getLabelWidth(config.labelWidth, config.label, config.required);\n\t\t\tthis._setInputHeight();\n\t\t\tthis.render();\n\t\t}\n\t},\n\t_setInputHeight: function(){\n\t\tif(!this.$renderTag){\n\t\t\tconst config = this._settings;\n\t\t\tif (config.labelPosition == \"top\") {\n\t\t\t\t// textarea\n\t\t\t\tif (!config.inputHeight)\n\t\t\t\t\tthis._inputHeight = this._content_height - (config.label ? this._labelTopHeight : 0) - (config.bottomPadding || 0);\n\t\t\t} else if (config.bottomPadding)\n\t\t\t\tconfig.inputHeight = this._content_height - this.config.bottomPadding;\n\t\t}\n\t},\n\t_get_input_width: function(config){\n\t\tconst width = (this._input_width||0) - (config.label?config.labelWidth:0) - this._inputSpacing - (config.iconWidth || 0);\n\n\t\t//prevent js error in IE\n\t\treturn (width < 0)?0:width;\n\t},\n\t_render_div_block:function(obj, common){\n\t\tconst id = \"x\"+uid();\n\t\tconst width = common._get_input_width(obj);\n\t\tconst inputAlign = obj.inputAlign || \"left\";\n\t\tconst height = obj.aheight - 2*$active.inputPadding - 2*$active.borderWidth;\n\t\tconst rightPadding = obj.clear === true ? \"padding-right:51px;\" : \"\";\n\t\tconst text = (obj.text||obj.value||this._get_div_placeholder(obj));\n\t\tconst html = \"<div class='webix_inp_static' role='combobox' aria-label='\"+template.escape(obj.label)+\"' tabindex='0'\"+(obj.readonly?\" aria-readonly='true'\":\"\")+(obj.invalid?\"aria-invalid='true'\":\"\")+\" onclick='' style='line-height:\"+height+\"px;width:\"+width+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'>\"+text+\"</div>\";\n\t\treturn common.$renderInput(obj, html, id);\n\t},\n\t_baseInputHTML:function(tag){\n\t\tlet html = \"<\"+tag+(this._settings.placeholder?\" placeholder='\"+template.escape(this._settings.placeholder)+\"' \":\" \");\n\t\tif (this._settings.readonly)\n\t\t\thtml += \"readonly='true' aria-readonly=''\";\n\t\tif(this._settings.required)\n\t\t\thtml += \"aria-required='true'\";\n\t\tif(this._settings.invalid)\n\t\t\thtml += \"aria-invalid='true'\";\n\n\t\tconst attrs = this._settings.attributes;\n\t\tif (attrs)\n\t\t\tfor(const prop in attrs)\n\t\t\t\thtml += prop+\"='\"+attrs[prop]+\"' \";\n\t\treturn html;\n\t},\n\t$renderLabel: function(config, id){\n\t\tlet label = \"\";\n\n\t\tif (config.label){\n\t\t\tlet top = this._settings.labelPosition == \"top\";\n\t\t\tlet style = `text-align:${config.labelAlign||\"left\"}; line-height:${this._getLabelHeight(top)}px; `;\n\n\t\t\tif (top)\n\t\t\t\tstyle += \"display:block;\";\n\t\t\telse\n\t\t\t\tstyle += config.labelWidth ? `width:${config.labelWidth}px;` : \"display:none;\";\n\n\t\t\tlabel = \"<label style='\"+style+\"' onclick='' for='\"+id+\"' class='webix_inp_\"+(top?\"top_\":\"\")+\"label \"+(config.required?\"webix_required\":\"\")+\"'>\" + (config.label||\"\") + \"</label>\";\n\t\t}\n\t\treturn label;\n\t},\n\t_getLabelHeight:function(top){\n\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : (this._settings.aheight - 2*this._settings.inputPadding);\n\t},\n\t$renderInput: function(config, div_start, id) {\n\t\tconst inputAlign = (config.inputAlign||\"left\");\n\t\tconst top = (config.labelPosition == \"top\");\n\t\tconst inputWidth = this._get_input_width(config);\n\n\t\tid = id||uid();\n\n\t\tconst label = this.$renderLabel(config,id);\n\t\tlet html = \"\";\n\t\tif(div_start){\n\t\t\thtml += div_start;\n\t\t} else {\n\t\t\tconst value =  template.escape(config.text || this._pattern(config.value));\n\t\t\tlet rightPadding = (config.icon || config.clear ? 27 : 0) + (config.icon && config.clear === true ? 24 : 0);\n\t\t\trightPadding = rightPadding && !this.addSection ? \"padding-right:\"+rightPadding+\"px;\" : \"\";\n\n\t\t\thtml += this._baseInputHTML(\"input\")+\"id='\"+id+\"' type='\"+(config.type||this.name)+\"'\"+(config.editable?\" role='combobox'\":\"\")+\n\t\t\t\t\" value='\"+value+\"' style='width:\"+inputWidth+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'\";\n\n\t\t\tconst attrs = config.attributes;\n\t\t\tif (attrs)\n\t\t\t\tfor(let prop in attrs)\n\t\t\t\t\thtml += \" \"+prop+\"='\"+attrs[prop]+\"'\";\n\t\t\thtml += \" />\";\n\t\t}\n\t\thtml += this.$renderIcon ? this.$renderIcon(config) : \"\";\n\n\t\tlet result = \"\";\n\t\t//label position, top or left\n\t\tif (top)\n\t\t\tresult = label+\"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+html+\"</div>\";\n\t\telse\n\t\t\tresult = \"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+label+html+\"</div>\";\n\n\t\t//bottom message text\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (message){\n\t\t\tconst padding = config.awidth - inputWidth - $active.inputPadding;\n\t\t\tresult += \"<div class='webix_inp_bottom_label'\"+(config.invalid?\"role='alert' aria-relevant='all'\":\"\")+\" style='width:\"+(inputWidth||config.awidth)+\"px;margin-left:\"+Math.max(padding, $active.inputPadding)+\"px;'>\"+message+\"</div>\";\n\t\t}\n\n\t\treturn result;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\treturn common.$renderInput(obj);\n\t\t},\n\t\tlabel:\"\",\n\t\tlabelWidth:80\n\t},\n\t_getLabelWidth: function(width, label, required){\n\t\tif(width == \"auto\")\n\t\t\twidth = getTextSize(label, \"webix_inp_label\"+(required ? \" webix_required\" : \"\")).width;\n\t\treturn width ? Math.max(width, $active.dataPadding) : 0;\n\t},\n\ttype_setter:function(value){ return value; },\n\t_set_inner_size:false,\n\t_set_default_css:function(){},\n\t_pattern:function(value){ return value; },\n\t$setValue:function(value){\n\t\tvalue = this._pattern(value);\n\n\t\tif(this.getInputNode())\n\t\t\tthis.getInputNode().value = value;\n\n\t\tthis._toggleClearIcon(value);\n\t},\n\t$getValue:function(){\n\t\treturn this._pattern(this.getInputNode().value, false);\n\t},\n\tsetValueHere:function(v, data, details){\n\t\tif (details && details.symbol){\n\t\t\tconst s = details.symbol;\n\t\t\tlet value = this.getValue();\n\t\t\tlet last = value.substring(details.pos);\n\n\t\t\tvalue = value.substring(0, details.pos);\n\t\t\tvalue = value.substring(0, value.lastIndexOf(s)+s.length) + v;\n\n\t\t\tthis.setValue(value + last, details.config);\n\t\t\tsetSelectionRange(this.getInputNode(), value.length);\n\t\t} else\n\t\t\tthis.setValue(v, details && details.config);\n\t},\n\tsuggest_setter:function(value){\n\t\tif (value){\n\t\t\tassert(value !== true, \"suggest options can't be set as true, data need to be provided instead\");\n\n\t\t\tif (typeof value == \"string\"){\n\t\t\t\tconst attempt = $$(value);\n\t\t\t\tif (attempt) \n\t\t\t\t\treturn $$(value)._settings.id;\n\n\t\t\t\tvalue = { body: { url:value , dataFeed:value }};\n\t\t\t}\n\t\t\telse if (value.getItem)\n\t\t\t\tvalue = { body: { data:value }};\n\t\t\telse if (isArray(value))\n\t\t\t\tvalue = { body: { data: this._check_options(value) }};\n\t\t\telse if (!value.body)\n\t\t\t\tvalue.body = { };\n\n\t\t\textend(value, { view:\"suggest\" });\n\n\t\t\tconst view = ui(value);\n\t\t\tthis._destroy_with_me.push(view);\n\n\t\t\tthis.$ready.push(() => view._settings.master = this._settings.id);\n\t\t\treturn view._settings.id;\n\t\t}\n\t\treturn false;\n\t}\n};\n\nconst view = protoUI(api, TextPattern, button.view);\nexport default {api, view};","import {protoUI, $$} from \"../ui/core\";\nimport {uid} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {preventEvent} from \"../webix/html\";\nimport env from \"../webix/env\";\n\nimport text from \"./text\";\nimport DataCollection from \"../core/datacollection\";\n\nconst api = {\n\tname:\"select\",\n\tdefaults:{\n\t\ttemplate:function(obj,common){\n\t\t\tconst id = \"x\"+uid();\n\t\t\tlet html = common._baseInputHTML(\"select\")+\"id='\"+id+\"' style='width:\"+common._get_input_width(obj)+\"px;'>\";\n\n\t\t\tconst optview = $$(obj.options);\n\t\t\tif (optview && optview.data && optview.data.each){\n\t\t\t\toptview.data.each(function(option){\n\t\t\t\t\thtml+=\"<option\"+((option.id == obj.value)?\" selected='true'\":\"\")+\" value='\"+option.id+\"'>\"+option.value+\"</option>\";\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst options = common._check_options(obj.options);\n\t\t\t\tfor (let i=0; i<options.length; i++)\n\t\t\t\t\thtml+=\"<option\"+((options[i].id == obj.value)?\" selected='true'\":\"\")+\" value='\"+options[i].id+\"'>\"+options[i].value+\"</option>\";\n\t\t\t}\n\t\t\thtml += \"</select>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\t$init:function(){\n\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\tconst input = this.getInputNode();\n\t\t\t_event(input, env.mouse.down, e => this._checkReadOnly(e));\n\t\t\t_event(input, \"keydown\", e => this._checkReadOnly(e, (e.which || e.keyCode) == 9));\n\t\t\tif (env.touch)\n\t\t\t\t_event(input, env.touch.down, e => this._checkReadOnly(e));\n\t\t});\n\t},\n\t_checkReadOnly:function(e, tab){\n\t\tif(!tab && this._settings.readonly)\n\t\t\tpreventEvent(e);\n\t},\n\toptions_setter:function(value){\n\t\tif (value){\n\t\t\tif (typeof value == \"string\"){\n\t\t\t\tthis._loading_data = true;\n\t\t\t\tvalue = new DataCollection({url:value});\n\t\t\t\tvalue.data.attachEvent(\"onStoreLoad\", ()=>{\n\t\t\t\t\tdelete this._loading_data;\n\t\t\t\t\tthis.refresh();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._loading_data ? this._settings.value : text.api.getValue.call(this);\n\t},\n\t$renderIcon:function(){\n\t\treturn \"\";\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"select\")[0];\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {delay, uid} from \"../webix/helpers\";\n\nimport template from \"../webix/template\";\nimport HTMLOptions from \"../core/htmloptions\";\n\nimport button from \"../views/button\";\nimport text from \"../views/text\";\nimport {getTextSize} from \"../webix/html\";\n\nconst api = {\n\tname:\"radio\",\n\tdefaults:{\n\t\ttemplate: function(config,common) {\n\t\t\tconst id = common._radioId();\n\t\t\tlet html = common._optionsTemplate(id);\n\t\t\thtml = \"<div class='webix_el_group' role='radiogroup' style='margin-left:\"+(config.label?config.labelWidth:0)+\"px;'>\"+html+\"</div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t}\n\t},\n\t_radioId: function(){\n\t\treturn \"x\"+uid();\n\t},\n\t_optionsTemplate: function(id){\n\t\tconst config = this._settings;\n\n\t\tconst options = this._filterOptions(config.options);\n\t\tconst active = this._getFirstActive();\n\t\tlet eachid, isChecked, isDisabled, label, tooltip, customRadio, optlabel, rd, input, focusable;\n\t\tlet html = [];\n\n\t\tfor (let i=0; i < options.length; i++) {\n\t\t\teachid = i ? this._radioId() : id;\n\n\t\t\tif  (i && (options[i].newline || config.vertical))\n\t\t\t\thtml.push(\"<div class='webix_line_break'></div>\");\n\n\t\t\tisChecked = (options[i].id == config.value);\n\t\t\tfocusable = isChecked || (!config.value && options[i].id === active);\n\t\t\tisDisabled = !!options[i].disabled;\n\t\t\tlabel = options[i].value || \"\";\n\t\t\ttooltip = config.tooltip ? \" webix_t_id='\"+options[i].id+\"'\" : \"\";\n\n\t\t\tcustomRadio = config.customRadio|| \"\";\n\t\t\tif (customRadio){\n\t\t\t\toptlabel = (i === 0 ? config.label+\" \" : \"\")+label;\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-label=')\\w*(?=')/, \"$1\"+template.escape(optlabel));\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-checked=')\\w*(?=')/, \"$1\"+(isChecked?\"true\":\"false\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(tabindex=')\\w*(?=')/, \"$1\"+(!isDisabled && focusable?\"0\":\"-1\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-invalid=')\\w*(?=')/, \"$1\"+(config.invalid?\"true\":\"false\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(button_id=')\\w*(?=')/, \"$1\"+options[i].id);\n\t\t\t\tif (isDisabled)\n\t\t\t\t\tcustomRadio = customRadio.replace(\"role='radio'\", \"role='radio' webix_disabled='true'\");\n\t\t\t}\n\t\t\trd = this._baseInputHTML(\"input\")+\" name='\"+(config.name || config.id)+\"' type='radio' \"+(isChecked?\"checked='1'\":\"\")+\"tabindex=\"+(!isDisabled && focusable?\"0\":\"-1\")+\n\t\t\t\t\" value='\"+options[i].id+\"' id='\"+eachid+\"'\"+(isDisabled?\" disabled='true'\":\"\")+\" style='\"+(customRadio?\"display:none\":\"\")+\"' />\";\n\t\t\tinput = \"<div \"+/*@attr*/\"radio_id\"+\"='\"+options[i].id+\"' class='webix_inp_radio_border webix_radio_\"+(isChecked?\"1\":\"0\")+\"' role='presentation'>\"+rd+customRadio+\"</div>\";\n\n\t\t\tif (label)\n\t\t\t\tlabel = \"<label for='\"+eachid+\"' class='webix_label_right'>\" + label + \"</label>\";\n\n\t\t\thtml.push(`<div style=\"height:${config.optionHeight}px;\" class=\"webix_radio_option${(isDisabled?\" webix_disabled\":\"\")}\" role=\"presentation\"${tooltip}>${input+label}</div>`);\n\t\t}\n\t\treturn html.join(\"\");\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t\tif (this._last_size && this.$getSize(0,0)[2] != this._last_size[1])\n\t\t\tthis.resize();\n\t},\n\t$getSize:function(dx, dy){\n\t\tthis._check_options(this._settings.options);\n\n\t\tvar size = button.api.$getSize.call(this, dx, dy);\n\t\tif(!this._settings.autoheight){\n\t\t\tvar options = this._filterOptions(this._settings.options);\n\t\t\tif (options){\n\t\t\t\tvar count = this._settings.vertical?0:1;\n\t\t\t\tfor (var i=0; i < options.length; i++)\n\t\t\t\t\tif (this._settings.vertical || options[i].newline)\n\t\t\t\t\t\tcount++;\n\t\t\t\tsize[3] = size[2] = Math.max(size[2], (this._settings.optionHeight||25) * count+this._settings.inputPadding*2+ (this._settings.labelPosition == \"top\"?this._labelTopHeight:0));\n\t\t\t}\n\t\t\tvar heightInc = this.config.bottomPadding;\n\t\t\tif(heightInc){\n\t\t\t\tsize[2] += heightInc;\n\t\t\t\tsize[3] += heightInc;\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t},\n\t_getInputNode: function(){\n\t\treturn this._dataobj.getElementsByTagName(this._settings.customRadio ? \"button\" : \"input\");\n\t},\n\t$setValue:function(value){\n\t\tconst inp = this._dataobj.getElementsByTagName(\"input\");\n\t\tconst active = this._getFirstActive();\n\t\tlet id, option, focusable, parentNode, button;\n\n\t\tfor (let i=0; i < inp.length; i++){\n\t\t\tid = inp[i].parentNode.getAttribute(/*@attr*/\"radio_id\");\n\t\t\toption = this.getOption(id);\n\n\t\t\tinp[i].checked = (id == value);\n\t\t\tinp[i].checked ? inp[i].setAttribute(\"checked\", \"1\") : inp[i].removeAttribute(\"checked\");\n\t\t\tfocusable = option && !option.disabled && (inp[i].checked || (!value && option.id == active));\n\t\t\tinp[i].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\n\t\t\tparentNode = inp[i]?inp[i].parentNode:null;\n\t\t\tif (parentNode){\n\t\t\t\tparentNode.className = parentNode.className.replace(/(webix_radio_)\\d/,\"$1\"+(inp[i].checked?1:0));\n\t\t\t\tif (this._settings.customRadio){\n\t\t\t\t\tbutton = parentNode.getElementsByTagName(\"BUTTON\");\n\t\t\t\t\tif (button[0]){\n\t\t\t\t\t\tbutton[0].setAttribute(\"aria-checked\", inp[i].checked?\"true\":\"false\");\n\t\t\t\t\t\tbutton[0].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\tfocus: function(){ return this._focus(); },\n\tblur: function(){ this._blur(); },\n\tcustomRadio_setter: function(value){\n\t\tif(value === true && $active.customRadio)\n\t\t\tvalue = \"<a role='presentation' onclick='javascript:void(0)'><button type='button' class='webix_custom_radio' \"+/*@attr*/\"button_id='' role='radio' aria-checked='false' aria-label='' aria-invalid='' tabindex=''></button></a>\";\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.customRadio = !!$active.customRadio;\n\t\tif ($active.optionHeight)\n\t\t\tthis.defaults.optionHeight = $active.optionHeight;\n\t},\n\t_set_inner_size: function(){\n\t\tif(this._settings.autoheight){\n\t\t\tlet h = this._getOptionsHeight() + (this._settings.bottomPadding ||0) + 2 * $active.inputPadding;\n\t\t\tif(this._settings.labelPosition == \"top\") h += this._labelTopHeight;\n\t\t\tif(this._last_size[1] != h) {\n\t\t\t\tthis._settings.height = h;\n\t\t\t\tconst topView = this.getTopParentView();\n\t\t\t\tclearTimeout(topView._template_resize_timer);\n\t\t\t\ttopView._template_resize_timer = delay(()=>{\n\t\t\t\t\tif(!this.$destructed)\n\t\t\t\t\t\tthis.resize();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t_getOptionsHeight: function(){\n\t\tconst w = this.$view.querySelector(\".webix_el_group\").offsetWidth;\n\t\treturn getTextSize(\n\t\t\tthis._optionsTemplate(),\n\t\t\t\"webix_el_radio webix_el_group\",\n\t\t\tw\n\t\t).height;\n\t}\n};\n\nconst view = protoUI(api, text.view, HTMLOptions);\nexport default {api, view};","import {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray, isDate} from \"../webix/helpers\";\n\nimport i18n from \"../webix/i18n\";\nimport wDate from \"../core/date\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"datepicker\",\n\t_editable:true,\n\t$init:function(config){\n\t\t// value_setter handling\n\t\tif (config.multiselect) {\n\t\t\tthis._settings.multiselect = config.multiselect;\n\t\t}\n\t\tif (config.type){\n\t\t\tthis._settings.type = config.type;\n\t\t}\n\n\t\tthis.$ready.push(this._init_popup);\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tif(common._settings.type == \"time\"){\n\t\t\t\tcommon._settings.icon = common._settings.timeIcon;\n\t\t\t}\n\t\t\t//temporary remove obj.type [[DIRTY]]\n\t\t\tconst t = obj.type; obj.type = \"\";\n\t\t\tconst res = obj.editable ? common.$renderInput(obj) : common._render_div_block(obj, common);\n\t\t\tobj.type = t;\n\t\t\treturn res;\n\t\t},\n\t\tstringResult:false,\n\t\ttimepicker:false,\n\t\ticon:\"wxi-calendar\",\n\t\ticons: true,\n\t\ttimeIcon: \"wxi-clock\",\n\t\tseparator:\", \"\n\t},\n\t$onBlur:function(){\n\t\tconst text = this.getText();\n\t\tif (this._settings.text == text)\n\t\t\treturn;\n\n\t\tconst value = this._settings.editable ? this.getValue() : this.getPopup().getValue();\n\t\tthis.setValue(value||\"\", \"user\");\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t\tthis.defaults.point = !$active.popupNoPoint;\n\t},\n\tgetPopup: function(){\n\t\treturn $$(this._settings.popup);\n\t},\n\t_init_popup:function(){ \n\t\tconst obj = this._settings;\n\t\tif (obj.suggest)\n\t\t\tobj.popup = obj.suggest;\n\t\telse if (!obj.popup){\n\t\t\tconst timepicker = this._settings.timepicker;\n\t\t\tobj.popup = obj.suggest = this.suggest_setter({\n\t\t\t\ttype: \"calendar\",\n\t\t\t\tpoint: this._settings.point === false ? false : true,\n\t\t\t\tpadding: 0,\n\t\t\t\tbody: {\n\t\t\t\t\theight: 240 + (timepicker || this._settings.icons ? 30 : 0),\n\t\t\t\t\twidth: 250,\n\t\t\t\t\tmultiselect: this._settings.multiselect, \n\t\t\t\t\ttimepicker: timepicker,\n\t\t\t\t\ttype: this._settings.type,\n\t\t\t\t\ticons: this._settings.icons,\n\t\t\t\t\ttimeIcon: this._settings.timeIcon\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._init_once = function(){};\n\t},\n\t$render:function(obj){\n\t\tthis.$setValue(obj.value);\n\t},\n\t$prepareValue:function(value){\n\t\tif (this._settings.multiselect){\n\t\t\tif (typeof value === \"string\")\n\t\t\t\tvalue = value.split(this._settings.separator);\n\t\t\telse if (isDate(value))\n\t\t\t\tvalue = [value];\n\t\t\telse if (!value)\n\t\t\t\tvalue = [];\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\tvalue[i] = this._prepareSingleValue(value[i]);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn this._prepareSingleValue(value);\n\t},\n\t_prepareSingleValue: function(value) {\n\t\tconst type = this._settings.type;\n\t\tconst timeMode = type == \"time\";\n\n\t\t//setValue(\"1980-12-25\")\n\t\tif (!isNaN(parseFloat(value)))\n\t\t\tvalue = \"\"+value;\n\n\t\tif (typeof value == \"string\" && value){\n\t\t\tlet formatDate = null;\n\t\t\tif (this._formatDate)\n\t\t\t\tformatDate = this._formatDate;\n\t\t\telse\n\t\t\t\tformatDate = (timeMode ? i18n.parseTimeFormatDate : i18n.parseFormatDate);\n\t\t\tvalue = formatDate(value);\n\t\t}\n\n\t\tif (value){\n\t\t\t//time mode\n\t\t\tif(timeMode){\n\t\t\t\t//setValue([16,24])\n\t\t\t\tif(isArray(value)){\n\t\t\t\t\tconst time = new Date();\n\t\t\t\t\ttime.setHours(value[0]);\n\t\t\t\t\ttime.setMinutes(value[1]);\n\t\t\t\t\tvalue = time;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//setValue(invalid date)\n\t\t\tif(isNaN(value.getTime()))\n\t\t\t\tvalue = \"\";\n\t\t}\n\n\t\treturn value;\n\t},\n\t_get_visible_text:function(value){\n\t\tif (this._settings.multiselect)\n\t\t\treturn []\n\t\t\t\t.concat(value)\n\t\t\t\t.map(a => this._get_visible_text_single(a))\n\t\t\t\t.join(this.config.separator);\n\t\telse\n\t\t\treturn this._get_visible_text_single(value);\n\t},\n\t_get_visible_text_single:function(value){\n\t\tlet formatStr = this._formatStr;\n\t\tif(!formatStr){\n\t\t\tif(this._settings.type == \"time\")\n\t\t\t\tformatStr = i18n.timeFormatStr;\n\t\t\telse if(this.config.timepicker)\n\t\t\t\tformatStr = i18n.fullDateFormatStr;\n\t\t\telse\n\t\t\t\tformatStr = i18n.dateFormatStr;\n\t\t}\n\t\treturn formatStr(value);\n\t},\n\t_set_visible_text:function(){\n\t\tconst node = this.getInputNode();\n\t\tif(isUndefined(node.value))\n\t\t\tnode.innerHTML = this._settings.text || this._get_div_placeholder();\n\t\telse\n\t\t\tnode.value = this._settings.text || \"\";\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\tif(!oldvalue && !value) return true;\n\t\treturn wDate.equal(oldvalue, value);\n\t},\n\t$setValue:function(value){\n\t\tthis._settings.text = (value?this._get_visible_text(value):\"\");\n\t\tthis._set_visible_text();\n\t\tthis._toggleClearIcon(this._settings.text);\n\t},\n\tformat_setter:function(value){\n\t\tif(value){\n\t\t\tif (typeof value == \"object\"){\n\t\t\t\tthis._formatStr = typeof value.get == \"string\" ? wDate.dateToStr(value.get) : value.get;\n\t\t\t\tthis._formatDate = typeof value.set == \"string\" ? wDate.strToDate(value.set) : value.set;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._formatStr = wDate.dateToStr(value);\n\t\t\t\tthis._formatDate = wDate.strToDate(value);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tthis._formatStr = this._formatDate = null;\n\t\treturn value;\n\t},\n\tgetInputNode: function(){\n\t\treturn this._settings.editable ? this._dataobj.getElementsByTagName(\"input\")[0] : this._dataobj.getElementsByTagName(\"DIV\")[1];\n\t},\n\tgetValue:function(){\n\t\tif (this._settings.multiselect){\n\t\t\tconst value = this._settings.value;\n\t\t\tif (!value) return [];\n\n\t\t\tconst result = []\n\t\t\t\t.concat(value)\n\t\t\t\t.map(a => this._get_value_single(a));\n\n\t\t\tif (this._settings.stringResult)\n\t\t\t\treturn result.join(this._settings.separator);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._get_value_single(this._settings.value);\n\t},\n\t_get_value_single:function(value){\n\t\tconst type = this._settings.type;\n\t\tconst timeMode = type == \"time\";\n\n\t\t//input was not rendered, we need to parse value from setValue method\n\t\tif (!this._rendered_input)\n\t\t\tvalue = this.$prepareValue(value) || null;\n\t\t//rendere and in edit mode\n\t\telse if (this._settings.editable){\n\t\t\tlet formatDate = this._formatDate;\n\t\t\tif (!formatDate){\n\t\t\t\tif(timeMode)\n\t\t\t\t\tformatDate = i18n.timeFormatDate;\n\t\t\t\telse if(this.config.timepicker)\n\t\t\t\t\tformatDate = i18n.fullDateFormatDate;\n\t\t\t\telse\n\t\t\t\t\tformatDate = i18n.dateFormatDate;\n\t\t\t}\n\n\t\t\tconst time = formatDate(this.getInputNode().value);\n\t\t\tif (timeMode && isDate(value) && isDate(time)){\n\t\t\t\tvalue = wDate.copy(value);\n\t\t\t\tvalue.setHours(time.getHours());\n\t\t\t\tvalue.setMinutes(time.getMinutes());\n\t\t\t\tvalue.setSeconds(time.getSeconds());\n\t\t\t\tvalue.setMilliseconds(time.getMilliseconds());\n\t\t\t} else\n\t\t\t\tvalue = time;\n\t\t}\n\n\t\t//return string from getValue\n\t\tif(this._settings.stringResult){\n\t\t\tlet formatStr = i18n.parseFormatStr;\n\t\t\tif(this._formatStr)\n\t\t\t\tformatStr = this._formatStr;\n\t\t\telse if(timeMode)\n\t\t\t\tformatStr = i18n.parseTimeFormatStr;\n\n\t\t\tif(this._settings.multiselect)\n\t\t\t\treturn [].concat(value).map(a => a ? formatStr(a) : \"\");\n\t\t\treturn (value?formatStr(value):\"\");\n\t\t}\n\n\t\treturn value||null;\n\t},\n\tgetText:function(){\n\t\tconst node = this.getInputNode();\n\t\tif (!node) return \"\";\n\t\tif (isUndefined(node.value)){\n\t\t\tif (node.firstChild && node.firstChild.className === \"webix_placeholder\")\n\t\t\t\treturn \"\";\n\t\t\treturn node.innerHTML;\n\t\t}\n\t\treturn node.value;\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport {preventEvent} from \"../webix/html\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"richselect\",\n\tdefaults:{\n\t\ttemplate:function(obj,common){\n\t\t\treturn common._render_div_block(obj, common);\n\t\t},\n\t\tpopupWidth:200,\n\t\ticon: \"wxi-menu-down\"\n\t},\n\t$onBlur:function(){\n\t\tconst text = this.getText();\n\t\tif (this._settings.text == text || (isUndefined(this._settings.text) && !text))\n\t\t\treturn;\n\n\t\tconst suggest = this.getPopup();\n\t\t//handle clicks on suggest items\n\t\tif (suggest.$view.contains(document.activeElement)) \n\t\t\treturn;\n\n\t\tconst newValues = this.config.newValues;\n\t\tconst nodeValue = this.getInputNode().value;\n\t\tconst list = this.getList();\n\n\t\tlet value;\n\t\tif(newValues){\n\t\t\tvalue = list.find(obj => suggest.getItemText(obj.id) == nodeValue, true);\n\t\t\tif(value)\n\t\t\t\tvalue = value.id;\n\t\t\telse if(nodeValue)\n\t\t\t\tvalue = list.add({ value:nodeValue });\n\t\t}\n\t\telse\n\t\t\tvalue = suggest.getSuggestion(nodeValue);\n\n\t\tconst oldvalue = this.getValue();\n\n\t\t//non-empty value that differs from old value and matches filtering rule\n\t\tif (value && value!=oldvalue && !(nodeValue===\"\" && suggest.getItemText(value)!==\"\"))\n\t\t\tthis.setValue(value, \"user\");\n\t\telse if (nodeValue === \"\")\n\t\t\tthis.setValue(\"\", \"user\");\n\t\telse if (this._revertValue)\n\t\t\tthis._revertValue();\n\t},\n\tsuggest_setter:function(value, prop, config){\n\t\treturn this.options_setter(value, prop, config);\n\t},\n\toptions_setter:function(value, prop, config){\n\t\tif (this._settings.suggest) $$(this._settings.suggest).destructor();\n\t\t// optionWidth may not be accessible yet at this point due to how the settings are applied\n\t\tif (!this._settings.optionWidth && (config && config.optionWidth)) this.define(\"optionWidth\", config.optionWidth);\n\n\t\tvalue = this._suggest_config ? this._suggest_config(value, config) : value;\n\n\t\tconst suggest = (this._settings.popup = this._settings.options = this._settings.suggest = text.api.suggest_setter.call(this, value));\n\t\tconst list = $$(suggest).getList();\n\t\tif (list)\n\t\t\tlist.attachEvent(\"onAfterLoad\", () => this._reset_value());\n\n\t\treturn suggest;\n\t},\n\tgetList: function(){\n\t\tvar suggest = $$(this._settings.suggest);\n\t\tassert(suggest, \"Input doesn't have a list\");\n\t\treturn suggest.getList();\n\t},\n\t_reset_value:function(){\n\t\tconst value = this._settings.value;\n\t\tif(value){\n\t\t\t// update value only for unchanged input\n\t\t\tif(this.getInputNode() && (this._settings.text === this.getText() || isUndefined(this._settings.text)))\n\t\t\t\tthis.$setValue(value);\n\t\t\tif(this.getPopup().isVisible())\n\t\t\t\tthis.getPopup()._show_selection();\n\t\t}\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t},\n\t$render:function(obj){\n\t\tthis.$setValue(obj.value);\n\t},\n\tgetInputNode: function(){\n\t\treturn this._dataobj.getElementsByTagName(\"DIV\")[1];\n\t},\n\tgetPopup: function(){\n\t\treturn $$(this._settings.popup);\n\t},\n\tgetText:function(){\n\t\tvar value = this._settings.value,\n\t\t\tnode = this.getInputNode();\n\t\tif(!node)\n\t\t\treturn value?this.getPopup().getItemText(value):\"\";\n\t\tif (isUndefined(node.value)){\n\t\t\tif (node.firstChild && node.firstChild.className === \"webix_placeholder\")\n\t\t\t\treturn \"\";\n\t\t\treturn node.innerHTML;\n\t\t}\n\t\treturn node.value;\n\t},\n\t$prepareValue:function(value){\n\t\tif (value && value.id)\n\t\t\treturn value;\t\t\t//don't convert new items\n\n\t\treturn text.api.$prepareValue.call(this, value);\n\t},\n\t$setValue:function(value){\n\t\tlet text = value;\n\n\t\tconst popup = this.getPopup();\n\t\tif (popup)\n\t\t\ttext = popup.getItemText(value);\n\n\t\tif (value && value.id){ //add new value\n\t\t\tconst list = popup.getList();\n\t\t\tconst exists = list.exists(value.id);\n\n\t\t\t// add new item only when item with such id doesn't exists yet\n\t\t\tif (!exists) list.add(value);\n\n\t\t\ttext = popup.getItemText(value.id);\n\n\t\t\t// in case of dynamic list, we can't add extra items\n\t\t\t// to not interfere with dynamic loading\n\t\t\tif (list._settings.dynamic && !exists)\n\t\t\t\tlist.remove(value.id);\n\n\t\t\tthis._settings.value = this.$prepareValue(value.id);\n\t\t}\n\n\t\tconst node = this.getInputNode();\n\t\tif (isUndefined(node.value))\n\t\t\tnode.innerHTML = text || this._get_div_placeholder();\n\t\telse \n\t\t\tnode.value = text = text.replace(/<[^>]*>/g,\"\");\n\n\t\tthis._settings.text = text;\n\t\tthis._toggleClearIcon(text);\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value||\"\";\n\t},\n\t_ignoreLabelClick:function(ev){\n\t\tif (ev.type) {\n\t\t\tthis.focus();\n\t\t\tpreventEvent(ev);\n\t\t}\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\n\nimport button from \"./button\";\n\n\nconst api = {\n\tname:\"icon\",\n\t$skin:function(){\n\t\tbutton.api.$skin.call(this);\n\n\t\tthis.defaults.height = $active.inputHeight;\n\t\tthis.defaults.width = $active.inputHeight;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, view){\n\t\t\tconst min = Math.min(obj.awidth, obj.aheight);\n\t\t\tconst top = Math.round((view._content_height-obj.aheight)/2);\n\t\t\tconst inner = \"<button type='button' style='height:\"+min+\"px;width:\"+min+\"px;' class='webix_icon_button'>\"+\n\t\t\t\t\"<span class='webix_icon \"+obj.icon+\"'></span></button>\";\n\n\t\t\tconst lineHeight = obj.aheight != min ? obj.aheight : 0;\n\t\t\treturn \"<div class='webix_el_box' style='width:\"+obj.awidth+\"px;height:\"+obj.aheight+\"px;line-height:\"+lineHeight+\n\t\t\t\t\"px;margin-top:\"+top+\"px'>\"+inner+(obj.badge||obj.badge===0 ? \"<span class='webix_badge'>\"+obj.badge+\"</span>\":\"\")+\n\t\t\t\t\"</div>\";\n\t\t}\n\t},\n\t_set_inner_size:false,\n\t_set_default_css:function(){},\n\t$setValue:function(){}\n};\n\nconst view = protoUI(api, button.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {delay, uid} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport text from \"./text\";\nimport {create, remove, addCss, removeCss, preventEvent} from \"../webix/html\";\nimport {$active} from \"../webix/skin\";\nimport env from \"../webix/env\";\n\nconst autoheight = {\n\t$init: function(){\n\t\t_event(this.$view, \"keydown\", (e) => this._checkPageUp(e));\n\t\tthis.$ready.push(function(){\n\t\t\tif(this._settings.autoheight){\n\t\t\t\taddCss(this.$view, \"webix_noscroll\");\n\t\t\t\tif(!this._settings.maxHeight)\n\t\t\t\t\tthis._settings.maxHeight = 100;\n\t\t\t\t_event(this.$view,\"input\", ()=>{\n\t\t\t\t\tthis._sizeToContent(true);\n\t\t\t\t},{capture: true});\n\t\t\t\tthis.attachEvent(\"onAfterRender\", ()=>{\n\t\t\t\t\tthis._sizeToContent();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\t_checkPageUp: function(e){\n\t\t//chrome bug: textarea with typed text is not correctly resized when pushing PageUp/PageDown key\n\t\tconst pageUp = e.key == \"PageUp\";\n\t\tif(env.isChromium && (pageUp || e.key == \"PageDown\")){\n\t\t\tconst input = this.getInputNode();\n\t\t\tconst cursorPos = pageUp ? 0 : input.value.length;\n\t\t\tconst scrollPos = pageUp ? 0 : input.scrollHeight;\n\n\t\t\tpreventEvent(e);\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\n\t\t\tinput.scrollTo(0, scrollPos);\n\t\t}\n\t},\n\t_sizeToContent: function(focus){\n\t\tif(this._skipSizing)\n\t\t\treturn (this._skipSizing = false);\n\t\tconst c = this._settings;\n\t\tlet txt = this.getInputNode();\n\t\tlet height = this._getTextHeight(txt.value, txt.offsetWidth);\n\t\tconst padding = 2*$active.inputPadding + 2*$active.borderWidth;\n\t\tconst labelPadding = c.label && c.labelPosition == \"top\" ? this._labelTopHeight : 0;\n\t\theight = Math.max(height + padding + labelPadding, c.minHeight);\n\t\tif(height > c.maxHeight){\n\t\t\tremoveCss(this.$view, \"webix_noscroll\");\n\t\t\theight = c.maxHeight;\n\t\t}\n\t\telse\n\t\t\taddCss(this.$view, \"webix_noscroll\",true);\n\t\tconst topView = this.getTopParentView();\n\t\tclearTimeout(topView._template_resize_timer);\n\t\ttopView._template_resize_timer = delay(()=>{\n\t\t\tif (c.height != height){\n\t\t\t\tc.height = height;\n\t\t\t\tlet caretPos = txt.selectionEnd;\n\t\t\t\tthis._skipSizing = true;\n\t\t\t\tconst value = text.api.getValue.call(this);\n\t\t\t\tthis.resize();\n\t\t\t\tthis.callEvent(\"onInputResize\",[]);\n\t\t\t\tif(focus){\n\t\t\t\t\ttxt = this.getInputNode();\n\t\t\t\t\t// needed to restore \"\\n\" value after resize\n\t\t\t\t\ttext.api.$setValue.call(this,value);\n\t\t\t\t\ttxt.setSelectionRange(caretPos,caretPos);\n\t\t\t\t\ttxt.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_getTextHeight: function(value, width){\n\t\tconst d = create(\"textarea\",{\"class\":\"webix_textarea_measure\", rows: \"1\"},\"\");\n\t\td.style.cssText = \"height:auto;visibility:hidden; position:absolute; top:0px; left:0px; width:\"+width+\"px;\";\n\t\tdocument.body.appendChild(d);\n\t\td.value = value;\n\t\tconst height = d.scrollHeight;\n\t\tremove(d);\n\t\treturn  height;\n\t},\n\t$setValue: function(value){\n\t\ttext.api.$setValue.call(this,value);\n\t\tif(this._settings.autoheight)\n\t\t\tthis._sizeToContent();\n\t}\n};\n\nconst api = {\n\tname:\"textarea\",\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tvar name = obj.name || obj.id;\n\t\t\tvar id = \"x\"+uid();\n\n\t\t\tvar html = common._baseInputHTML(\"textarea\")+\"style='width:\"+common._get_input_width(obj)+\"px;'\";\n\t\t\thtml +=\" id='\"+id+\"' name='\"+name+\"' class='webix_inp_textarea'>\"+common._pattern(obj.value)+\"</textarea>\";\n\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t},\n\t\tminHeight:60,\n\t},\n\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\t\tthis.defaults.height = 0;\n\t},\n\t_skipSubmit: true,\n\t_getLabelHeight:function(top){\n\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : \"\";\n\t},\n\t$renderIcon:function(){\n\t\treturn \"\";\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"textarea\")[0];\n\t}\n};\n\nconst view = protoUI(api, autoheight, text.view);\nexport default {api, view, autoheight};","import text from \"../views/text\";\nimport {preventEvent, addCss, removeCss, pos as getPos, offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport env from \"../webix/env\";\nimport {uid, bind, isArray, copy} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nconst api = {\n\tname:\"slider\",\n\tdefaults:{\n\t\tmin:0,\n\t\tmax:100,\n\t\tvalue:50,\n\t\tstep:1,\n\t\ttitle:false,\n\t\tmoveTitle:true,\n\t\ttemplate:function(obj, common){\n\t\t\tconst id = common._handle_id = \"x\" +uid();\n\t\t\tlet html = \"\";\n\t\t\tconst title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tconst left = \"<div class='webix_slider_left'>&nbsp;</div>\";\n\t\t\tconst right = \"<div class='webix_slider_right'></div>\";\n\t\t\tconst handle = \"<div class='webix_slider_handle' \"+/*@attr*/\"webix_disable_drag\"+\"='true' role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' aria-valuenow='\"+obj.value+\"' tabindex='0' id='\"+id+\"'>&nbsp;</div>\";\n\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+right+left+handle+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+left+right+handle+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\ttype_setter:function(type){\n\t\tthis._viewobj.className += \" webix_slider_\"+type;\n\t},\n\ttitle_setter:function(value){\n\t\tif (typeof value == \"string\")\n\t\t\treturn template(value);\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(){\n\t\treturn this.$view.querySelector(\".webix_slider_handle\");\n\t},\n\t_set_inner_size:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tconst config = this._settings;\n\n\t\tif(handle){ //view is rendered for sure\n\t\t\tconst size = config.vertical?this._content_height:this._get_input_width(config); //width or height\n\t\t\tlet value = config.value%config.step?(Math.round(config.value/config.step)*config.step):config.value;\n\t\t\tconst max = config.max - config.min;\n\n\t\t\tvalue = this._safeValue(value);\n\t\t\tvalue = config.vertical?(max-(value-config.min)):(value-config.min);\n\n\t\t\t//top or left\n\t\t\tlet corner1 = Math.ceil((size - 2 * this._sliderPadding) * value / max);\n\t\t\t//bottom or right\n\t\t\tlet corner2 = size - 2 * this._sliderPadding - corner1;\n\n\t\t\tconst cornerStr = config.vertical?\"top\":\"left\";\n\t\t\tconst sizeStr = config.vertical?\"height\":\"width\";\n\n\t\t\thandle.style[cornerStr] = this._sliderPadding + corner1 - this._sliderHandleWidth / 2 + \"px\";\n\t\t\thandle.parentNode.style[sizeStr] = size+\"px\";\n\n\t\t\t//1px border\n\t\t\tcorner2 = this._safeValue(corner2, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\t\t\tcorner1 = this._safeValue(corner1, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\n\t\t\t//width for left/top and right/bottom bars\n\t\t\tconst part = handle.previousSibling;\n\t\t\tpart.style[sizeStr] = corner2 + \"px\";\n\t\t\tconst last = part.previousSibling;\n\t\t\tlast.style[sizeStr] = corner1 + \"px\";\n\n\t\t\tthis._set_title(handle, corner1, corner2, cornerStr);\n\t\t}\n\t},\n\t_set_title:function(handle, corner1, corner2, cornerStr){\n\t\tconst config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tconst title = handle.parentNode[config.vertical?\"nextSibling\":\"previousSibling\"];\n\t\t\ttitle.innerHTML = this._settings.title(this._settings, this);\n\n\t\t\tif(this._settings.moveTitle){\n\t\t\t\tlet pos = 0;\n\t\t\t\tif(config.vertical) pos = corner1+2 * this._sliderBorder-this._sliderHandleWidth/2;\n\t\t\t\telse{\n\t\t\t\t\tconst half = title.clientWidth/2;\n\t\t\t\t\tconst pos1 = half>corner1 ? (half-corner1-2*this._sliderBorder): 0;//left/top text is to large\n\t\t\t\t\tconst pos2 = half>corner2 ? (half-corner2-2*this._sliderBorder-this._sliderHandleWidth/2): 0;//right/bottom text is too large\n\t\t\t\t\tpos = this._sliderPadding + corner1 - half + pos1 - pos2;\n\t\t\t\t}\n\t\t\t\ttitle.style[cornerStr] = pos+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_value_now:function(){\n\t\tthis._get_slider_handle().setAttribute(\"aria-valuenow\", this._settings.value);\n\t},\n\t_safeValue: function(value, min, max){\n\t\tmin = min ? min : this._settings.min;\n\t\tmax = max ? max : this._settings.max;\n\t\t\n\t\treturn Math.min(Math.max(value, min), max);\n\t},\n\trefresh:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tif (handle){\n\t\t\tthis._set_value_now();\n\t\t\tif (this._settings.title)\n\t\t\t\thandle.setAttribute(\"aria-label\", this._settings.label+\" \"+this._settings.title(this._settings, this));\n\n\t\t\tthis._set_inner_size();\n\t\t}\n\t},\n\t$setValue:function(){\n\t\tthis.refresh();\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = parseFloat(value);\n\n\t\tif(isNaN(value))\n\t\t\tvalue = this._settings.min;\n\n\t\treturn this._safeValue(value);\n\t},\n\t$init:function(config){\n\t\t_event(this._viewobj, env.mouse.down, e => this._on_mouse_down_start(e, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(this._viewobj, env.touch.down, e => this._on_mouse_down_start(e, \"touch\"));\n\n\t\t_event( this.$view, \"keydown\", bind(this._handle_move_keyboard, this));\n\t\tif (config.vertical){\n\t\t\tconfig.height = config.height || $active.vSliderHeight;\n\t\t\tthis._viewobj.className += \" webix_slider_vertical\";\n\t\t\tthis._sliderPadding = $active.vSliderPadding;\n\t\t}\n\t},\n\t$skin: function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis._sliderHandleWidth = $active.sliderHandleWidth; //8 - width of handle / 2\n\t\tthis._sliderPadding = $active.sliderPadding;//10 - padding of webix_slider_box ( 20 = 10*2 )\n\t\tthis._sliderBorder = $active.sliderBorder;//1px border\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\t\tconst c = this._settings;\n\t\tlet value = c.value;\n\n\t\tif(code>32 && code <41){\n\t\t\tpreventEvent(e);\n\n\t\t\tconst trg = e.target;\n\t\t\tconst match = /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\t\t\tif(match)\n\t\t\t\tvalue = c.value[this._activeIndex];\n\n\t\t\tvalue = value<c.min ? c.min:(value>c.max ? c.max : value);\n\t\t\t\n\t\t\tif(code === 36) value = c.min;\n\t\t\telse if(code === 35) value = c.max;\n\t\t\telse{\n\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\tif(code === 33 || code === 34 || c.step > 1)\n\t\t\t\t\tinc = inc * c.step;\n\t\t\t\tvalue = value*1 + inc;\n\t\t\t}\n\n\t\t\tif(match){\n\t\t\t\tconst other = c.value[this._activeIndex?0:1];\n\t\t\t\tvalue = ((this._activeIndex && value <= other) || (!this._activeIndex && value >= other )) ? other : value;\n\t\t\t}\n\n\t\t\tif(value >= c.min && value <= c.max){\n\t\t\t\tif(match){\n\t\t\t\t\tconst temp =[];\n\t\t\t\t\tfor(let i = 0; i < c.value.length; i++)\n\t\t\t\t\t\ttemp[i] = i === this._activeIndex ? value : c.value[i];\n\t\t\t\t\tvalue = temp;\n\t\t\t\t}\n\t\t\t\tthis.setValue(value, \"user\");\n\t\t\t\tthis._activeIndex = -1;\n\t\t\t}\n\t\t}\n\t},\n\t_on_mouse_down_start:function(e, pointer){\n\t\tconst config = this._settings;\n\t\tif (config.disabled || config.readonly) return;\n\n\t\tconst trg = e.target;\n\t\tif (this._mouse_down_process)\n\t\t\tthis._mouse_down_process(e);\n\n\t\tlet value = config.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._start_value = value;\n\t\tif (trg.className.indexOf(\"webix_slider\") !== -1)\n\t\t\tconfig.value = this._get_value_from_event(e);\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop()),\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_stop:function(){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tlet value = this._settings.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._settings.value = this._start_value;\n\t\tthis.setValue(value, \"user\");\n\n\t\tthis._get_slider_handle(this._activeIndex).focus();\n\t\tthis._activeIndex = -1;\n\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer){\n\t\tthis._settings.value = this._get_value_from_event(e);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onSliderDrag\", []);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_get_value_from_event:function(e){\n\t\tconst ax = this._settings.vertical ? \"y\" : \"x\";\n\t\tconst pos = getPos(e)[ax];\n\t\treturn this._get_value_from_pos(pos);\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tconst config = this._settings;\n\t\tconst max = config.max - config.min;\n\t\tconst ax = config.vertical ? \"y\" : \"x\";\n\n\t\t//top or left depending on slider type\n\t\tconst corner = offset(this._get_slider_handle().parentNode)[ax] + this._sliderPadding;\n\t\t//height or width depending on slider type\n\t\tconst size = (config.vertical?this._content_height:this._get_input_width(config))-2*this._sliderPadding;\n\n\t\tlet newvalue = (size ? (pos-corner) * max / size : 0);\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\t\tnewvalue = Math.round((newvalue + 1*config.min) / config.step) * config.step;\n\t\treturn this._safeValue(newvalue);\n\t},\n\t_init_onchange:function(){} //need not ui.text logic\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};\n","import slider from \"../views/slider\";\nimport {offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {uid, isArray, isUndefined} from \"../webix/helpers\";\n\n\n// #include ui/slider.js\n\nconst api = {\n\tname:\"rangeslider\",\n\t$cssName:\"slider webix_rangeslider\",\n\tdefaults:{\n\t\tseparator: \",\",\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tvalue: [20,80],\n\t\ttemplate:function(obj, common){\n\t\t\tvar id = \"x\" + uid();\n\t\t\tcommon._handle_id = [id+\"_0\",id+\"_1\"];\n\n\t\t\tvar aria = \"role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' tabindex='0'\";\n\t\t\tvar handles = \"<div class='webix_slider_handle webix_slider_handle_0' \"+/*@attr*/\"webix_disable_drag\"+\"='true' id='\"+common._handle_id[0]+\"' \"+aria+\" aria-valuenow='\"+obj.value[0]+\"'>&nbsp;</div>\";\n\t\t\thandles += \"<div class='webix_slider_handle webix_slider_handle_1' \"+/*@attr*/\"webix_disable_drag\"+\"='true' id='\"+common._handle_id[1]+\"' \"+aria+\" aria-valuenow='\"+obj.value[1]+\"'>&nbsp;</div>\";\n\n\t\t\tvar title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-common._sliderPadding-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tif(obj.moveTitle)\n\t\t\t\ttitle = \"<div class='webix_slider_title_box'>\"+(title+title)+\"</div>\";\n\t\t\t\n\t\t\tvar parts = \"<div class='webix_slider_right'>&nbsp;</div><div class='webix_slider_left'></div>\";\n\t\t\tvar html = \"\";\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+parts+handles+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+parts+handles+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\t$prepareValue:function(value){\n\t\tconst min = this._settings.min;\n\n\t\tif(!isArray(value)){\n\t\t\tvalue = (value||\"\").toString().split(this._settings.separator);\n\t\t}\n\n\t\tvalue[0] = parseFloat(value[0]);\n\t\tvalue[0] = isNaN(value[0]) ? min : this._safeValue(value[0]);\n\n\t\tif(value.length < 2)\n\t\t\tvalue[1] = value[0];\n\t\telse{\n\t\t\tvalue[1] = parseFloat(value[1]);\n\t\t\tvalue[1] = isNaN(value[1]) ? value[0] : this._safeValue(value[1]);\n\t\t}\n\t\tif(value[0]>value[1]) [value[0], value[1]] = [value[1], value[0]];\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(index){\n\t\tindex = index && index>=0?index:0;\n\t\treturn this.$view.querySelector(\".webix_slider_handle_\"+(index||0));\n\t},\n\t_get_left_pos: function(size,index){\n\t\tvar config, max, value;\n\n\t\tconfig = this._settings;\n\t\tmax = config.max - config.min;\n\t\tvalue = config.value[index]%config.step?(Math.round(config.value[index]/config.step)*config.step):config.value[index];\n\t\tvalue =  this._safeValue(value);\n\t\treturn Math.ceil((size - this._sliderPadding*2) * (value-config.min) / max);\n\t},\n\t_set_left_pos:function(size, left, vertical){\n\t\tvar pos = this._sliderPadding + left - (this._sliderHandleWidth / 2 *(vertical?-1:1));\n\t\tpos = vertical? size-pos:pos;\n\t\treturn pos+\"px\";\n\t},\n\t_set_value_pos:function(size, left, length, vertical){\n\t\tvar pos = left+this._sliderPadding + 2 * this._sliderBorder;\n\t\tif(vertical) pos = size-pos-length;\n\t\treturn pos + \"px\";\n\t},\n\t_set_inner_size:function(){\n\t\tvar config, handle0, handle1,\n\t\t\tleft0, left1, max, length, parentBox,\n\t\t\tsizeStr, size, cornerStr;\n\n\t\thandle0 =this._get_slider_handle(0);\n\t\thandle1 = this._get_slider_handle(1);\n\t\tconfig = this._settings;\n\n\t\tif(!isArray(config.value)){\n\t\t\tthis.define(\"value\", config.value);\n\t\t}\n\n\t\tif (handle0){\n\t\t\tsizeStr = config.vertical?\"height\":\"width\";\n\t\t\tcornerStr = config.vertical?\"top\":\"left\";\n\t\t\t\n\t\t\tsize = config.vertical?this._content_height:this._get_input_width(config);\n\t\t\tmax = size - this._sliderPadding * 2 - 2 * this._sliderBorder;\n\t\t\t\n\t\t\tleft0 = this._get_left_pos(size, 0);\n\t\t\tleft1 = this._get_left_pos(size, 1);\n\t\t\tlength = left1 - left0;\n\n\t\t\thandle0.style[cornerStr] = this._set_left_pos(size, left0, config.vertical);\n\t\t\thandle1.style[cornerStr] = this._set_left_pos(size, left1, config.vertical);\n\t\t\t\n\t\t\tparentBox = handle0.parentNode;\n\t\t\tparentBox.style[sizeStr] = size+\"px\";\n\t\t\tparentBox.firstChild.style[sizeStr] = max + \"px\";\n\t\t\tparentBox.childNodes[1].style[sizeStr] = length + \"px\";\n\t\t\tparentBox.childNodes[1].style[cornerStr] = this._set_value_pos(size, left0, length, config.vertical);\n\n\t\t\tthis._set_title(handle0, [left0, left1], max, cornerStr);\n\t\t}\n\t},\n\t_title_hidden:0,\n\t_hide_title:function(title, index){\n\t\tif(!isUndefined(this._title_hidden))\n\t\t\ttitle[this._title_hidden].style.visibility = \"visible\";\n\t\tif(!isUndefined(index)){\n\t\t\ttitle[index].style.visibility = \"hidden\";\n\t\t\tthis._title_hidden = index;\n\t\t}\n\t},\n\t_set_title:function(handle0, left, max, cornerStr){\n\t\tvar config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tvar box = handle0.parentNode;\n\t\t\tvar sibling = config.vertical?\"nextSibling\":\"previousSibling\";\n\n\t\t\tif(!config.moveTitle)\n\t\t\t\tbox[sibling].innerHTML = this._settings.title(this._settings, this);\n\t\t\telse{ //two independent titles\n\t\t\t\tvar title = box[sibling].childNodes;\n\t\t\t\tvar pos = [];\n\t\t\t\tfor(let i = 0; i<2; i++)\n\t\t\t\t\tpos.push(this._set_title_n(title[i], config.value[i], left[i], max, cornerStr, i));\n\n\t\t\t\t//correct for overlapping titles\n\t\t\t\tvar diff = config.vertical? (pos[0]-pos[1]-this._sliderHandleWidth) : (pos[1]-pos[0]);\n\t\t\t\tvar sizeStr  = config.vertical?\"clientHeight\":\"clientWidth\";\n\n\t\t\t\t\n\n\t\t\t\tif(title[0][sizeStr]/2+title[1][sizeStr]/2 > diff)\n\t\t\t\t\tthis._hide_title(title, isUndefined(this._activeIndex) ? 0 : (this._activeIndex ? 0 : 1));\n\t\t\t\telse\n\t\t\t\t\tthis._hide_title(title);\n\n\t\t\t\t//set position\n\t\t\t\tfor(let i = 0; i<2; i++)\n\t\t\t\t\ttitle[i].style[cornerStr] = pos[i]+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_title_n:function(title, value, left, max, cornerStr, index){\n\t\ttitle.innerHTML = this._settings.title({value:value}, this);\n\t\tvar half = title.clientWidth/2;\n\t\tvar pos = 0;\n\t\t\n\t\tif(this._settings.vertical)\n\t\t\tpos = max-left-this._sliderHandleWidth/2-(index?this._sliderPadding:0)+2 * this._sliderBorder;\n\t\telse{\n\t\t\tpos = left + this._sliderHandleWidth/2 + 2*this._sliderBorder - half;\n\t\t\tpos = (half>left) ? (half-left+pos): pos;//left/top text is to small\n\t\t\tpos = (index && half+left>max)?(pos-half+(max-left)):pos;//right/bottom text is too large\n\t\t}\n\t\treturn pos;\n\t},\n\t_set_value_now:function(){\n\t\tfor(var i=0; i<2; i++){\n\t\t\tthis._get_slider_handle(i).setAttribute(\"aria-valuenow\", this._settings.value[i]);\n\t\t}\n\t},\n\t_mouse_down_process: function(e){\n\t\tvar trg = e.target;\n\t\tvar match =  /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\n\t\tif(match)\n\t\t\tthis._set_handle_active(this._activeIndex);\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\tvalue = this.$prepareValue(value);\n\t\treturn oldvalue[0] === value[0] && oldvalue[1] === value[1];\n\t},\n\t$getValue:function(){\n\t\tvar value = this._settings.value;\n\t\treturn this._settings.stringResult?value.join(this._settings.separator):value;\n\t},\n\t_set_handle_active: function(index){\n\t\tvar hActive = this._get_slider_handle(index);\n\t\tvar h = this._get_slider_handle(1-index);\n\t\tif(hActive.className.indexOf(\"webix_slider_active\") == -1)\n\t\t\thActive.className += \" webix_slider_active\";\n\t\th.className = h.className.replace(\" webix_slider_active\",\"\");\n\t\thActive.focus();\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tvar config = this._settings;\n\t\tvar value = config.value;\n\t\t//10 - padding of slider box\n\t\tvar max = config.max - config.min;\n\t\tvar ax = config.vertical?\"y\":\"x\";\n\n\t\tvar left = offset(this._get_slider_handle().parentNode)[ax];\n\t\tvar newvalue = Math.ceil((pos-left) * max / (config.vertical?this._content_height:this._get_input_width(config)));\n\t\tnewvalue = Math.round((newvalue + 1*config.min)/config.step) * config.step;\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\n\t\tvar index = null;\n\t\tvar pos0 = offset(this._get_slider_handle(0))[ax];\n\t\tvar pos1 = offset(this._get_slider_handle(1))[ax];\n\n\t\tif(pos0==pos1 && (config.value[0] == config.min || config.value[0] == config.max) ){\n\t\t\tthis._activeIndex = index = (config.value[0] == config.min?1:0);\n\t\t\tthis._set_handle_active(index);\n\t\t}\n\t\telse{\n\t\t\tif(this._activeIndex >=0){\n\t\t\t\tindex = this._activeIndex;\n\t\t\t}else{\n\t\t\t\tif(pos0==pos1){\n\t\t\t\t\tindex = (pos < pos0?0:1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tvar dist0 = Math.abs(pos0-pos);\n\t\t\t\t\tvar dist1 = Math.abs(pos1-pos);\n\t\t\t\t\tindex = dist0<dist1?0:1;\n\t\t\t\t\tthis._activeIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif(index){\n\t\t\tvalue[index] = this._safeValue(newvalue, value[0], config.max);\n\t\t}\n\t\telse{\n\t\t\tvalue[index] = this._safeValue(newvalue, config.min, value[1]);\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\n\nconst view = protoUI(api,  slider.view);\nexport default {api, view};","import { protoUI } from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport layout from \"../views/layout\";\nimport { isUndefined, copy } from \"../webix/helpers\";\nimport wDate from \"../core/date\";\nimport { $active } from \"../webix/skin\";\nimport { getTextSize } from \"../webix/html\";\n\nconst api = {\n\tname:\"timeboard\",\n\tdefaults: {\n\t\twidth: 260,\n\t\thours: true,\n\t\tseconds: false,\n\t\ttwelve: /%([a,A])/.test(i18n.timeFormat)\n\t},\n\n\t$skin:function(){\n\t\tlayout.api.$skin.call(this);\n\n\t\tthis.defaults.margin = $active.layoutMargin.form;\n\t\tthis.defaults.padding = $active.layoutPadding.space;\n\t},\n\n\t$init: function(config) {\n\t\tthis.$view.className += \" webix_timeboard\";\n\n\t\tlet rows = [];\n\t\tconst twelve = !isUndefined(config.twelve) ? config.twelve: this.defaults.twelve;\n\t\tconst hours = !isUndefined(config.hours) ? config.hours : this.defaults.hours;\n\t\tconst seconds = config.seconds || this.defaults.seconds;\n\n\t\tif (isUndefined(config.height)){\n\t\t\tconst nrows = (1 + hours*1 + 1 + seconds*1 + (!!config.button)*1);\n\t\t\tconfig.height = $active.inputHeight * nrows + (config.margin||this.defaults.margin) * (nrows - 1) + (config.padding||this.defaults.padding) * 2;\n\t\t}\n\n\t\trows.push(this._getClock(hours, seconds, twelve));\n\t\trows.push(...this._getSliders(hours, seconds, twelve));\n\t\tif (config.button)\n\t\t\trows.push(this._getDoneButton());\n\n\t\tconfig.rows = [{ \n\t\t\tview:\"form\", \n\t\t\telements:rows, padding:0, borderless:true,\n\t\t\ton:{\n\t\t\t\tonChange:(v,o,c) => this._recollectValues(c)\n\t\t\t}\n\t\t}];\n\n\t\tthis.$ready.push(function(){\n\t\t\tthis._form = this.queryView(\"form\");\n\t\t\tconst value = this._settings.value;\n\t\t\tif(value) this.setValue(value, \"auto\");\n\t\t});\n\t},\n\n\t// accepts strings and Dates\n\tsetValue: function(value, config) {\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif(!wDate.equal(value, oldvalue)) {\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\n\t$prepareValue:function(value){\n\t\tif (typeof value === \"string\")\n\t\t\tvalue = i18n.parseTimeFormatDate(value);\n\t\treturn value || wDate.datePart(new Date());\n\t},\n\n\t$setValue:function(value){\n\t\tconst obj = {};\n\n\t\tobj.minutes = obj.sminutes = value.getMinutes();\n\t\tif (this._settings.hours)\n\t\t\tobj.shours = obj.hours = value.getHours();\n\t\tif (this._settings.seconds)\n\t\t\tobj.sseconds = obj.seconds = value.getSeconds();\n\n\t\tif (this._settings.twelve){\n\t\t\tif (!isUndefined(obj.hours)) {\n\t\t\t\tobj.day_part = obj.hours > 11 ? i18n.pm[1] : i18n.am[1];\n\t\t\t\tobj.hours = !obj.hours || obj.hours == 12 ? 12 : obj.hours % 12;\n\t\t\t\tobj.shours =  obj.hours == 12 ? 0 : obj.hours;\n\t\t\t}\n\t\t}\n\n\t\tthis._form.setValues(obj, false, \"auto\");\n\t},\n\n\t_recollectValues(config){\n\t\tconst values = this.$getValue();\n\t\t\n\t\tconst date = this._settings.value ? wDate.copy(this._settings.value) : new Date();\n\t\tdate.setHours(values.hours || 0);\n\t\tdate.setMinutes(values.minutes);\n\t\tif(this._settings.seconds)\n\t\t\tdate.setSeconds(values.seconds);\n\n\t\tthis.setValue(date, config);\n\t},\n\n\t$getValue:function(){\n\t\tconst values = this._form.getValues();\n\t\tif (this._settings.twelve && this._settings.hours){\n\t\t\tif(values.day_part == i18n.pm[1] && values.hours < 12)\n\t\t\t\tvalues.hours = (values.hours * 1 + 12).toString();\n\t\t\telse if(values.day_part == i18n.am[1] && values.hours == 12)\n\t\t\t\tvalues.hours = 0;\n\t\t}\n\t\treturn values;\n\t},\n\n\tgetValue: function() {\n\t\tif(this._settings.stringResult){\n\t\t\tconst values = this.$getValue();\n\t\t\tconst res = [];\n\t\t\tif(values.hours) res.push(values.hours);\n\t\t\tif(values.minutes) res.push(values.minutes);\n\t\t\tif(values.seconds) res.push(values.seconds);\n\t\t\treturn res.join(\":\");\n\t\t}\n\t\telse\n\t\t\treturn this._settings.value;\n\t},\n\n\t_getClock: function(hours, seconds, twelve) {\n\t\tconst inputs = [\n\t\t\t{}, this._getText(\"minutes\"), {}\n\t\t];\n\n\t\tconst separator = {\n\t\t\tcss: \"webix_colon_template\", template: \":\",\n\t\t\tborderless: true, width: 16\n\t\t};\n\n\t\tif (hours)\n\t\t\tinputs.splice(1, 0, this._getText(\"hours\", twelve), copy(separator));\n\t\tif (seconds)\n\t\t\tinputs.splice(-1, 0, copy(separator), this._getText(\"seconds\"));\n\t\t\n\t\tif (twelve && hours){\n\t\t\tconst am = i18n.am[1];\n\t\t\tconst pm = i18n.pm[1];\n\n\t\t\tconst control = {\n\t\t\t\tview: \"label\",\n\t\t\t\tname: \"day_part\",\n\t\t\t\tcss: \"webix_day_part\",\n\t\t\t\ttemplate:\"<div tabindex='0' role='button' class='webix_el_box' style='width:#awidth#px;height:#aheight#px;line-height:#cheight#px'>#label#</div>\",\n\t\t\t\tinputWidth: 30,\n\t\t\t\ton: {\n\t\t\t\t\tonItemClick:function(){\n\t\t\t\t\t\tthis.setValue(this.getValue() == am ? pm : am, \"user\");\n\t\t\t\t\t},\n\t\t\t\t\tonKeyPress:function(code, e){\n\t\t\t\t\t\tthis._onKeyPress(code, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tinputs.splice(-1, 1, control);\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"clean\",\n\t\t\tcols: inputs\n\t\t};\n\t},\n\n\t_getText: function(name, twelve) {\n\t\tconst max = name === \"hours\" ? (twelve ? 11 : 23) : 59;\n\n\t\treturn {\n\t\t\tview: \"text\",\n\t\t\twidth: getTextSize(\"00\").width + 2*$active.dataPadding + 2*$active.inputPadding,\n\t\t\tname: name,\n\t\t\tformat: {\n\t\t\t\tparse: a => {\n\t\t\t\t\tif (a == 12 && name === \"hours\" && twelve) a = \"00\";\n\t\t\t\t\treturn (a.length > 1) ? a.replace(/^0/, \"\") : a || 0;\n\t\t\t\t},\n\t\t\t\tedit: a => {\n\t\t\t\t\tif (a <= 0 && name === \"hours\" && twelve) a = 12;\n\t\t\t\t\telse if (a < 0) a = 0;\n\t\t\t\t\telse if (a > max) a = max;\n\t\t\t\t\treturn (a + \"\").length === 1 ? \"0\" + a : a + \"\" || \"00\";\n\t\t\t\t}\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tonChange:(nv) => {\n\t\t\t\t\tconst v = (twelve && name === \"hours\" && (!nv || nv == 12) ? 0 : nv) * 1;\n\t\t\t\t\tthis._form.elements[\"s\"+name].setValue(v, \"auto\");\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n\n\t_getSliders: function(hours, seconds, twelve) {\n\t\tconst sliders = [\n\t\t\tthis._getSlider(\"minutes\", i18n.calendar.minutes, 59)\n\t\t];\n\n\t\tif (hours) {\n\t\t\tsliders.unshift(this._getSlider(\n\t\t\t\t\"hours\", \n\t\t\t\ti18n.calendar.hours, twelve ? 11 : 23\n\t\t\t));\n\t\t}\n\t\t\n\t\tif (seconds)\n\t\t\tsliders.push(this._getSlider(\"seconds\", i18n.timeboard.seconds, 59, twelve));\n\n\t\treturn sliders;\n\t},\n\n\t_getSlider: function(name, title, max, twelve) {\n\t\tconst enLocale = name === \"hours\" && twelve;\n\t\t\n\t\tconst config = {\n\t\t\tview: \"slider\",\n\t\t\tname: \"s\" + name,\n\t\t\ttitle: title,\n\t\t\tmoveTitle: false,\n\t\t\tmin: 0, max: max,\n\t\t\ton: {\n\t\t\t\tonChange:(nv) => {\n\t\t\t\t\tthis._form.elements[name].setValue((enLocale ? (!nv || nv == 12 ? 12 : nv%12) : nv) + \"\", \"auto\");\n\t\t\t\t},\n\t\t\t\tonSliderDrag:function(){\n\t\t\t\t\tconst nv = this.getValue();\n\t\t\t\t\tconst form = this.getFormView();\n\t\t\t\t\tform.blockEvent();\n\t\t\t\t\tform.elements[name].setValue((enLocale ? (!nv || nv == 12 ? 12 : nv%12) : nv) + \"\", \"auto\");\n\t\t\t\t\tform.unblockEvent();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn config;\n\t},\n\n\t_getDoneButton: function() {\n\t\treturn { \n\t\t\tview: \"button\",\n\t\t\tvalue: i18n.calendar.done,\n\t\t\tcss: \"webix_primary\",\n\t\t\tclick: () => {\n\t\t\t\tthis.callEvent(\"onTimeSelect\", [ this._settings.value ]);\n\t\t\t} \n\t\t};\n\t}\n};\n\nconst view = protoUI(api, layout.view);\nexport default { api, view };\n","import popup from \"../views/popup\";\nimport UIManager from \"../core/uimanager\";\n\nimport {preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {toFunctor, extend, copy, isUndefined, delay, bind, toNode} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\n\n// #include ui/window.js\n\nconst api = {\n\tname:\"suggest\",\n\tdefaults:{\n\t\tautofocus:false,\n\t\ttype:\"list\",\n\t\tkeyPressTimeout:1,\n\t\tbody:{\n\t\t\tyCount:10,\n\t\t\tautoheight:true,\n\t\t\tbody:true,\n\t\t\tselect:true,\n\t\t\tborderless:true,\n\t\t\tnavigation:true\n\t\t},\n\t\tfilter:function(item,value){\n\t\t\tif (item.value.toString().toLowerCase().indexOf(value.toLowerCase())===0) return true;\n\t\t\treturn false;\n\t\t}\n\t},\n\ttemplate_setter:template,\n\tfilter_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_show_on_key_press:true,\n\t$init:function(obj){\n\t\tvar temp = {};\n\t\textend(temp, copy(this.defaults.body));\n\t\ttemp.view = obj.type || this.defaults.type;\n\n\t\tvar etemp = this._get_extendable_cell(temp);\n\t\tif (obj.body)\n\t\t\textend(etemp, obj.body, true);\n\n\t\tif (obj.data)\n\t\t\tetemp.data = obj.data;\n\t\tif (obj.url)\n\t\t\tetemp.url = obj.url;\n\t\tif (obj.datatype)\n\t\t\tetemp.datatype = obj.datatype;\n\n\t\tif (obj.id)\n\t\t\ttemp.id = temp.id || (obj.id+\"_\"+temp.view);\n\n\t\tobj.body = temp;\n\t\tthis.$ready.push(this._set_on_popup_click);\n\n\t\tthis.attachEvent(\"onShow\", function(){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif (master){\n\t\t\t\t\tconst node = master._getInputDiv ? master._getInputDiv() : master.getInputNode();\n\t\t\t\t\tnode.setAttribute(\"aria-expanded\", \"true\");\n\t\t\t\t}\n\n\t\t\t\t// execute only if there is a master view\n\t\t\t\tthis._show_selection();\n\t\t\t}\n\t\t});\n\t\tthis.attachEvent(\"onHide\", function(){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif (master){\n\t\t\t\t\tconst node = master._getInputDiv ? master._getInputDiv() : master.getInputNode();\n\t\t\t\t\tnode.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._old_text = {};\n\t},\n\t_get_extendable_cell:function(obj){\n\t\treturn obj;\n\t},\n\t_get_details:function(config){\n\t\treturn isUndefined(config) ? null : { config };\n\t},\n\t_set_input_value:function(text){\n\t\tconst trg = this._last_input_target;\n\t\tif(trg.getAttribute(\"contentEditable\") == \"true\" || trg.getAttribute(\"contentEditable\") == \"\")\n\t\t\ttrg.innerText = text;\n\t\telse\n\t\t\ttrg.value = text;\n\t},\n\t_preselectMasterOption:function(data){\n\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\t\tlet node;\n\n\t\tif (this._settings.master){\n\t\t\tconst master = $$(this._settings.master);\n\t\t\tnode = master.getInputNode();\n\n\t\t\tif (node){\n\t\t\t\t// restore last text to allow 'master' view to save new value on blur\n\t\t\t\tconst prev_text = master._settings.text;\n\n\t\t\t\tif (master.options_setter)\n\t\t\t\t\tmaster.$setValue(data.$empty?\"\":data.id);\n\t\t\t\telse if (master.$setValueHere)\n\t\t\t\t\tmaster.$setValueHere(text, data, this._get_details());\n\t\t\t\telse\n\t\t\t\t\tmaster.$setValue(text);\n\n\t\t\t\tmaster._settings.text = prev_text;\n\t\t\t}\n\t\t}\n\t\telse if (this._last_input_target)\n\t\t\tthis._set_input_value(text);\n\n\t\tnode = node || this._last_input_target;\n\t\tif (node)\n\t\t\tnode.focus();\n\t},\n\tsetMasterValue:function(data, refresh, config){\n\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\n\t\tif (this._settings.master){\n\t\t\tconst master = $$(this._settings.master);\n\t\t\tif (refresh && data.id)\n\t\t\t\tmaster.refresh();\n\t\t\telse if (master.options_setter)\n\t\t\t\tmaster.setValue(data.$empty?\"\":data.id, config);\n\t\t\telse if (master.setValueHere)\n\t\t\t\tmaster.setValueHere(text, data, this._get_details(config));\n\t\t\telse\n\t\t\t\tmaster.setValue(text, config);\n\t\t}\n\t\telse if (this._last_input_target)\n\t\t\tthis._set_input_value(text);\n\n\t\tif (!refresh){\n\t\t\tthis.hide();\n\t\t\tif (this._last_input_target)\n\t\t\t\tthis._last_input_target.focus();\n\t\t}\n\t\tthis.callEvent(\"onValueSuggest\", [data, text]);\n\t},\n\tgetMasterValue:function(){\n\t\tif (this._settings.master)\n\t\t\treturn $$(this._settings.master).getValue();\n\t\treturn null;\n\t},\n\tgetItemId:function(text){\n\t\tvar list = this.getList();\n\t\tfor (var key in list.data.pull){\n\t\t\tvar obj = list.getItem(key);\n\t\t\tif (this._settings.filter.call(this, obj, text))\n\t\t\t\treturn obj.id;\n\t\t}\n\t},\n\tgetItemText:function(id){\n\t\tvar item = this.getList().getItem(id);\n\n\t\tif (!item)\n\t\t\treturn this._old_text[id] || \"\";\n\n\t\tif (this._settings.template)\n\t\t\treturn this._settings.template.call(this, item, this.type);\n\n\t\tif (this._settings.textValue)\n\t\t\treturn \"\"+item[this._settings.textValue]+\"\";\n\t\t\n\t\tvar type = this.getList().type;\n\t\tvar text = type.template.call(type, item, type);\n\n\t\treturn (this._old_text[id] = text);\n\t},\n\tgetSuggestion:function(text){\n\t\tvar id,\n\t\t\tlist = this.getList(),\n\t\t\torder = list.data.order;\n\n\t\tif (list.getSelectedId)\n\t\t\tid = list.getSelectedId();\n\n\t\tif (text && order.length && (!id || order.find(id) <0) ){\n\t\t\tid = order[0];\n\t\t\t//ensure that option really does match client-side filtering rules\n\t\t\tif (!list.config.dataFeed && !this.config.filter.call(this, list.data.pull[id], text)) return null;\n\t\t}\n\n\t\t//complex id in datatable\n\t\tif (id){\n\t\t\tif (typeof id == \"object\") id = id+\"\";\n\t\t\tif (list.getItem(id).$empty) return null;\n\t\t}\n\t\treturn id;\n\t},\n\tgetList:function(){\n\t\treturn this._body_cell;\n\t},\n\t_set_on_popup_click:function(){\n\t\tvar list = this.getList();\n\t\tvar type = this._settings.type;\n\n\t\tif (list.count){\n\t\t\tlist.attachEvent(\"onItemClick\", bind(function(item){\n\t\t\t\tthis.setMasterValue(list.getItem(item), false, \"user\");\n\t\t\t}, this));\n\t\t\tlist.data.attachEvent(\"onStoreUpdated\",bind(function(id, obj, mode){\n\t\t\t\tif (mode == \"delete\" && id == this.getMasterValue())\n\t\t\t\t\tthis.setMasterValue({ id:\"\", text:\"\" }, true, \"auto\");\n\t\t\t\telse if (mode == \"update\" && id == this.getMasterValue()){\n\t\t\t\t\tthis.setMasterValue(obj, true, \"auto\");\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tlist.data.attachEvent(\"onAfterFilter\", bind(this._suggest_after_filter, this));\n\t\t\tlist.data.attachEvent(\"onStoreLoad\", bind(this._suggest_after_filter, this));\n\t\t\t\n\t\t\tif (isUndefined(this._settings.fitMaster))\n\t\t\t\tthis._settings.fitMaster = true;\n\t\t} else if (type == \"calendar\"){\n\t\t\tlist.attachEvent(\"onAfterDateSelect\", function(){\n\t\t\t\tthis.getParentView().setMasterValue({ value:list.getSelectedDate() }, list.config.multiselect, \"user\");\n\t\t\t});\n\t\t\tlist.attachEvent(\"onTodaySet\", function(date){\n\t\t\t\tthis.getParentView().setMasterValue({ value: date }, false, \"user\");\n\t\t\t});\n\t\t\tlist.attachEvent(\"onDateClear\", function(date){\n\t\t\t\tthis.getParentView().setMasterValue({ value: date }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"colorboard\"){\n\t\t\tlist.attachEvent(\"onItemClick\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value: value }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"timeboard\"){\n\t\t\tlist.attachEvent(\"onTimeSelect\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value: value }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"colorselect\"){\n\t\t\tlist.attachEvent(\"onColorSelect\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value:value }, false, \"user\");\n\t\t\t});\n\t\t}\n\t},\n\tinput_setter: function(value) {\n\t\tthis.linkInput(value);\n\t\treturn 0;\n\t},\n\tlinkInput: function(input){\n\t\tvar node;\n\t\tif (input.getInputNode){\n\t\t\tnode = input.getInputNode();\n\t\t\tnode.webix_master_id = input._settings.id;\n\t\t\tinput.attachEvent(\"onInputResize\",bind(this._resetPosition, this));\n\t\t} else\n\t\t\tnode = toNode(input);\n\n\t\tif(input != document.body)\n\t\t\t_event(node,\"keydown\",e => {\n\t\t\t\tif (input.config ? (!input.config.readonly) : (!node.getAttribute(\"readonly\")))\n\t\t\t\t\tthis._suggestions(e, node);\n\t\t\t});\n\t\t\n\t\tif(input._getInputDiv)\n\t\t\tnode = input._getInputDiv();\n\t\t\n\t\tnode.setAttribute(\"aria-autocomplete\", \"list\");\n\t\tnode.setAttribute(\"aria-expanded\", \"false\");\n\n\t\tif(node.tagName === \"DIV\"){\n\t\t\tnode.setAttribute(\"aria-live\", \"assertive\");\n\t\t\tnode.setAttribute(\"aria-atomic\", \"true\");\n\t\t}\n\n\t\tthis._non_ui_mode = true;\n\t},\n\t_suggestions: function(e, node){\n\t\t//should be before tab and arrows handlers: IME can call keydown twice\n\t\tif (this._last_delay)\n\t\t\tthis._last_delay = clearTimeout(this._last_delay);\n\n\t\tvar list = this.getList();\n\t\tvar trg = e.target;\n\t\tif((trg == document.body && !this.isVisible()) || trg.className ==\"webix_clipbuffer\")\n\t\t\treturn;\n\n\t\tthis._settings.master = trg.webix_master_id;\n\t\tif(node != document.body)\n\t\t\tthis._last_input_target = trg;\n\n\t\tvar code = e.which || e.keyCode;\n\t\t//shift, ctrl, alt, meta\n\t\tif (code == 16 || code == 17 || code == 18 || code == 91) return;\n\n\t\t//move cursor via arrow\n\t\tif(code > 32  && code < 40 && code != 38) return;\n\n\t\tconst ctrl = e.ctrlKey || e.metaKey;\n\t\tconst [backspace, del, v, x, y, z] = [8, 46, 86, 88, 89, 90].map(v => code == v);\n\t\tif(ctrl && !(backspace || del || v || x || y || z)) return;\n\n\t\tif(backspace || del || (ctrl && x)){\n\t\t\tconst selStart = trg.selectionStart;\n\t\t\tconst selEnd = trg.selectionEnd;\n\n\t\t\tconst backspaceNothing = backspace && selStart == 0 && selStart == selEnd;\n\t\t\tif(!backspaceNothing && !this._delayedBackspace)\n\t\t\t\tthis._delayedBackspace = true;\n\n\t\t\tif(\n\t\t\t\t(backspaceNothing && !this._delayedBackspace) ||\n\t\t\t\t(x && selStart == selEnd) ||\n\t\t\t\t(del && selStart == (trg.value || trg.innerText).length)\n\t\t\t)\n\t\t\t\treturn;\n\t\t}\n\n\t\t// tab - hide popup and do nothing\n\t\tif (code == 9)\n\t\t\treturn this._tab_key(e,list);\n\n\t\t// escape - hide popup\n\t\tif (code == 27)\n\t\t\treturn this._escape_key(e,list);\n\n\t\t// enter\n\t\tif (code == 13)\n\t\t\treturn this.$enterKey(e,list);\n\n\t\t// up/down/right/left are used for navigation\n\t\tif (this._navigate(e) && this.isVisible()){\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst contentEditable = trg.getAttribute(\"contentEditable\") == \"true\" || trg.getAttribute(\"contentEditable\") == \"\";\n\t\tif (isUndefined(trg.value) && !contentEditable) return;\n\n\t\tthis._last_delay = delay(function(){\n\t\t\tdelete this._delayedBackspace;\n\t\t\t//focus moved to the different control, suggest is not necessary\n\t\t\tif (!this._non_ui_mode &&\n\t\t\t\t\tUIManager.getFocus() != $$(this._settings.master)) return;\n\n\t\t\tthis._resolve_popup = true;\n\n\t\t\tconst val = contentEditable ? trg.innerText : trg.value;\n\n\t\t\tif (this._before_filtering)\n\t\t\t\tthis._before_filtering();\n\n\t\t\t// used to prevent showing popup when it was initialized\n\t\t\tif (list.config.dataFeed)\n\t\t\t\tlist.filter(\"value\", val);\n\t\t\telse if (list.filter){\n\t\t\t\tlist.filter(bind(function(item){\n\t\t\t\t\treturn this._settings.filter.call(this,item,val);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t}, this, [], this._settings.keyPressTimeout);\n\t},\n\t_suggest_after_filter:function(){\n\t\tif (!this._resolve_popup) return true;\n\t\tthis._resolve_popup = false;\n\n\t\tvar list = this.getList();\n\n\t\t// filtering is complete\n\t\t// if there are as min 1 variant it must be shown, hidden otherwise\n\t\tif (list.count() > 0){\n\t\t\tthis.adjust();\n\t\t\tif(!this.isVisible())\n\t\t\t\tthis._dont_unfilter = true;\n\t\t\tthis.show(this._last_input_target,null,true);\n\t\t\tthis._dont_unfilter = false;\n\t\t} else if(this._last_input_target){\n\t\t\tthis.hide();\n\t\t\tthis._last_input_target = null;\n\t\t}\n\t},\n\n\tshow:function(node){\n\t\tconst input = (node && (node.tagName == \"INPUT\" || node.tagName == \"TEXTAREA\")) ? node : null;\n\n\t\tif (!this.isVisible() || (input && input != this._last_input_target)){\n\t\t\tvar list = this.getList();\n\t\t\tif (list.filter && !this._dont_unfilter){\n\t\t\t\t// clear gridsuggest filters\n\t\t\t\tif(list.eachColumn){\n\t\t\t\t\tlist.eachColumn(id => {\n\t\t\t\t\t\tconst filter = list.getFilter(id);\n\t\t\t\t\t\tif(filter){\n\t\t\t\t\t\t\tif (filter.setValue) filter.setValue(\"\");\n\t\t\t\t\t\t\telse filter.value = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlist.filter(\"\");\n\t\t\t}\n\n\t\t\tif (this.$customWidth){\n\t\t\t\tthis.$customWidth(node);\n\t\t\t}\n\t\t\telse if (node && node.tagName && this._settings.fitMaster){\n\t\t\t\tthis._settings.width = node.offsetWidth -2 ; //2 - borders\n\t\t\t}\n\n\t\t\tif (list._zoom_level)\n\t\t\t\tlist.render();\n\n\t\t\tthis.adjust();\n\n\t\t\t// needed to return focus\n\t\t\tif (input)\n\t\t\t\tthis._last_input_target = input;\n\t\t}\n\t\tpopup.api.show.apply(this, arguments);\n\t},\n\t_show_selection:function(){\n\t\tconst list = this.getList();\n\t\tlet value = this.getMasterValue();\n\n\t\tif (list.select && list.showItem){\n\t\t\tif (value && list.exists && list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t} else {\n\t\t\t\tlist.unselect();\n\t\t\t\tlist.showItem(list.getFirstId());\n\t\t\t}\n\t\t}\n\t\telse if (list.setValue){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif(master._formatStr)\n\t\t\t\t\tvalue = master._settings.value;\n\t\t\t\telse\n\t\t\t\t\tvalue = master.$prepareValue(value);\n\t\t\t}\n\t\t\tlist.setValue(value, \"auto\");\n\t\t}\n\t},\n\t$enterKey:function(e, list){\n\t\tconst visible = this.isVisible();\n\t\tlet value;\n\t\tlet master;\n\n\t\tif (this._settings.master)\n\t\t\tmaster = $$(this._settings.master);\n\n\t\tif (master && master._editable && master._settings.editable)\n\t\t\tmaster._applyChanges(\"user\");\n\t\telse if (visible){\n\t\t\tif (list.count){\n\t\t\t\tvalue = list.getSelectedId(false, true);\n\t\t\t\tif (list.count() == 1 && list.getFirstId() != value)\n\t\t\t\t\tvalue = list.getFirstId();\n\n\t\t\t\tif (value) value = list.getItem(value);\n\t\t\t} else {\n\t\t\t\tif (list.getSelectedDate) value = list.getSelectedDate();\n\t\t\t\telse if (list.getValue) value = list.getValue();\n\n\t\t\t\tif (value) value = { value: value };\n\t\t\t}\n\t\t\t\n\t\t\tif (value)\n\t\t\t\tthis.setMasterValue(value, false, \"user\");\n\t\t}\n\n\t\tif (visible)\n\t\t\tthis.hide();\n\t\telse if (this._show_on_key_press)\n\t\t\tthis.show(this._last_input_target);\n\t},\n\t_escape_key:function(e){\n\t\tif(this.isVisible())\n\t\t\te.hidesuggest = true;\n\t\treturn this.hide();\n\t},\n\t_tab_key:function(){\n\t\treturn this.hide();\n\t},\n\t/*! suggestions navigation: up/down buttons move selection\n\t *\t@param e\n\t *\t\tevent object\n\t **/\n\t_navigate: function(e) {\n\t\tvar list = this.getList();\n\t\tvar code = e.which || e.keyCode;\n\t\tvar data;\n\n\t\tif( list.moveSelection && code < 41 && code > 32 && !e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey) {\n\t\t\t// down and up arrows\n\t\t\tif (code === 40 || code === 38) {\n\t\t\t\tif (this._show_on_key_press && !this.isVisible())\n\t\t\t\t\tthis.show(this._last_input_target);\n\n\t\t\t\tlet dir = (code === 38) ? \"up\" : \"down\";\n\t\t\t\tlist.moveSelection(dir, false, false);\n\t\t\t}// other arrows\n\t\t\telse {\n\t\t\t\tif(list.count || (!list.count && !list.isVisible()))\n\t\t\t\t\treturn false;\n\n\t\t\t\tlet dir;\n\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\tif(code == 34) dir = \"pgdown\";\n\t\t\t\tif(code == 35) dir = \"bottom\";\n\t\t\t\tif(code == 36) dir = \"top\";\n\t\t\t\tif(code == 37) dir = \"left\";\n\t\t\t\tif(code == 39) dir = \"right\";\n\n\t\t\t\tlist.moveSelection(dir, false, false);\n\t\t\t}\n\n\t\t\tif (list.count)\n\t\t\t\tdata = list.getSelectedItem(false);\n\t\t\telse {\n\t\t\t\tif (list.getSelectedDate) data = list.getSelectedDate();\n\t\t\t\telse if (list.getValue) data = list.getValue();\n\n\t\t\t\tif (data) data = { value: data };\n\t\t\t}\n\n\t\t\tif (data && this.isVisible())\n\t\t\t\tthis._preselectMasterOption(data);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetValue:function(){\n\t\tvar list = this.getList();\n\t\tvar  value = (list.getValue ? list.getValue() : list.getSelectedId()) || \"\";\n\t\tvalue = value.id || value;\n\n\t\t// check empty\n\t\tif(list.getItem){\n\t\t\tvar item = list.getItem(value);\n\t\t\tif(item && item.$empty)\n\t\t\t\treturn \"\";\n\t\t}\n\t\treturn value;\n\t},\n\tsetValue:function(value){\n\t\tconst list = this.getList();\n\t\tif (value){\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t},\n\t_resetPosition: function(){\n\t\tif(!this._settings.hidden && this._settings.master){\n\t\t\tvar master = $$(this._settings.master);\n\t\t\tif(master)\n\t\t\t\tthis.show(master.$view);\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api,  popup.view);\nexport default {api, view};\n","\nimport {protoUI} from \"../ui/core\";\nimport template from \"../views/template\";\n\nprotoUI({ name:\"daterangepicker\", defaults:{\n\ttemplate:\"GPL version doesn't support daterangepicker <br> You need Webix Grid PRO\"\n}}, template.view);","import {addCss, insertBefore, removeCss} from \"../webix/html\";\nimport {protoUI, ui} from \"../ui/core\";\nimport {delay, extend, bind} from \"../webix/helpers\";\nimport animate from \"../webix/animate\";\n\nimport MouseEvents from \"../core/mouseevents\";\nimport SingleRender from \"../core/singlerender\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport base from \"../views/view\";\nimport template from \"../webix/template\";\n\nimport i18n from \"../webix/i18n\";\n\n\ni18n.pager = {\n\tfirst: \"<span class='webix_icon wxi-angle-double-left'></span>\",\n\tlast: \"<span class='webix_icon wxi-angle-double-right'></span>\",\n\tnext: \"<span class='webix_icon wxi-angle-right'></span>\",\n\tprev: \"<span class='webix_icon wxi-angle-left'></span>\"\n};\n\n\nconst api = {\n\tdefaults:{\n\t\tsize:10,\t//items on page\n\t\tpage: 0,\t//current page\n\t\tgroup:5,\n\t\ttemplate:\"{common.pages()}\",\n\t\tmaxWidth:100000,\n\t\theight:30,\n\t\tborderless:true\n\t},\n\tname:\"pager\",\n\ton_click:{\n\t\t//on paging button click\n\t\t\"webix_pager_item\":function(e,id){\n\t\t\tthis.select(id);\n\t\t}\n\t},\n\t$init:function(config){\n\t\tthis.data = this._settings;\n\t\tthis._dataobj = this._viewobj;\n\t\tthis._viewobj.className += \" webix_pager\";\n\n\t\tif(config.master===false||config.master === 0)\n\t\t\tthis.$ready.push(this._remove_master);\n\t},\n\t_remove_master:function(){\n\t\tthis.refresh();\n\t\tthis.$master = { refresh:function(){}, select:function(){} };\n\t},\n\tselect:function(id){\n\t\tif (this.$master && this.$master.name == \"pager\")\n\t\t\treturn this.$master.select(id);\n\n\t\t//id - id of button, number for page buttons\n\t\tswitch(id){\n\t\t\tcase \"next\":\n\t\t\t\tid = this._settings.page+1;\n\t\t\t\tbreak;\n\t\t\tcase \"prev\":\n\t\t\t\tid = this._settings.page-1;\n\t\t\t\tbreak;\n\t\t\tcase \"first\":\n\t\t\t\tid = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"last\":\n\t\t\t\tid = this._settings.limit-1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//use incoming id\n\t\t\t\tbreak;\n\t\t}\n\t\tif (id<0) id=0;\n\t\tif (id>=this.data.limit) id=this.data.limit-1;\n\n\t\tvar old = this.data.page;\n\t\tif (this.callEvent(\"onBeforePageChange\",[id, old])){\n\t\t\tthis.data.page = id*1; //must be int\n\n\t\t\t// dynamic loading:\n\t\t\t// if the current page is larger than the next one (treetable branch is open)\n\t\t\t// avoid extra loading (which depends on the scroll position)\n\t\t\tthis.$master._scrollTop = 0;\n\n\t\t\tif (this.refresh()){\n\t\t\t\tif (!this._settings.animate || !this._animate(old, id*1, this._settings.animate))\n\t\t\t\t\tthis.$master.refresh();\n\t\t\t}\n\t\t\tthis.callEvent(\"onAfterPageChange\",[id]);\t\n\t\t}\n\t},\n\t_id:/*@attr*/\"webix_p_id\",\n\ttemplate_setter:template,\n\ttype:{\n\t\ttemplate:function(a,b){ return a.template.call(this, a,b); },\n\t\t//list of page numbers\n\t\tpages:function(obj){\n\t\t\tvar html=\"\";\n\t\t\t//skip rendering if paging is not fully initialized\n\t\t\tif (obj.page == -1) return \"\";\n\t\t\t//current page taken as center of view, calculate bounds of group\n\t\t\tobj.$min = obj.page-Math.round((obj.group-1)/2);\n\t\t\tobj.$max = obj.$min + obj.group*1 - 1;\n\t\t\tif (obj.$min<0){\n\t\t\t\tobj.$max+=obj.$min*(-1);\n\t\t\t\tobj.$min=0;\n\t\t\t}\n\t\t\tif (obj.$max>=obj.limit){\n\t\t\t\tobj.$min -= Math.min(obj.$min,obj.$max-obj.limit+1);\n\t\t\t\tobj.$max = obj.limit-1;\n\t\t\t}\n\t\t\t//generate HTML code of buttons\n\t\t\tfor (var i=(obj.$min||0); i<=obj.$max; i++)\n\t\t\t\thtml+=this.button({id:i, index:(i+1), selected:(i == obj.page ?\"_selected\":\"\"), label:i18n.aria.page+\" \"+(i+1)});\n\t\t\treturn html;\n\t\t},\n\t\tpage:function(obj){\n\t\t\treturn obj.page+1;\n\t\t},\n\t\t//go-to-first page button\n\t\tfirst:function(){\n\t\t\treturn this.button({ id:\"first\", index:i18n.pager.first, selected:\"\", label:i18n.aria.pages[0]});\n\t\t},\n\t\t//go-to-last page button\n\t\tlast:function(){\n\t\t\treturn this.button({ id:\"last\", index:i18n.pager.last, selected:\"\", label:i18n.aria.pages[3]});\n\t\t},\n\t\t//go-to-prev page button\n\t\tprev:function(){\n\t\t\treturn this.button({ id:\"prev\", index:i18n.pager.prev, selected:\"\", label:i18n.aria.pages[1]});\n\t\t},\n\t\t//go-to-next page button\n\t\tnext:function(){\n\t\t\treturn this.button({ id:\"next\", index:i18n.pager.next, selected:\"\", label:i18n.aria.pages[2]});\n\t\t},\n\t\tbutton:template(\"<button type='button' \"+/*@attr*/\"webix_p_id\"+\"='{obj.id}' class='webix_pager_item{obj.selected}' aria-label='{obj.label}'>{obj.index}</button>\")\n\t},\n\tclone:function(pager){\n\t\tif (!pager.$view){\n\t\t\tpager.view = \"pager\";\n\t\t\tpager = ui(pager);\n\t\t}\n\n\t\tthis._clone = pager;\n\t\tpager.$master = this;\n\t\tthis._refresh_clone();\n\t},\n\trefresh:function(){\n\t\tvar s = this._settings;\n\n\t\t//max page number\n\t\ts.limit = Math.ceil(s.count/s.size) || 1;\n\n\t\tvar newPage = Math.min(s.limit-1, s.page);\n\n\t\tif (newPage != s.page)\n\t\t\treturn this.$master.setPage(newPage);\n\n\t\ts.page = newPage;\n\t\tif (newPage>=0 && (newPage!=s.old_page) || (s.limit != s.old_limit) || (s.old_count != s.count)){\n\t\t\t//refresh self only if current page or total limit was changed\n\t\t\tthis.render();\n\t\t\tthis._refresh_clone();\n\t\t\ts.old_limit = s.limit;\t//save for onchange check in next iteration\n\t\t\ts.old_page = s.page;\n\t\t\ts.old_count = s.count;\n\t\t\treturn true;\n\t\t}\n\t},\n\tapiOnly_setter:function(value){\n\t\treturn (this.$apiOnly=value);\n\t},\n\t_refresh_clone:function(){\n\t\tif (this._clone){\n\t\t\tthis._clone._settings.count = this._settings.count;\n\t\t\tthis._clone._settings.page = this._settings.page;\n\t\t\tthis._clone.refresh();\n\t\t}\n\t},\n\t_animate:function(old, id, config){\n\t\tif (old == id) return false;\n\t\tif (this._pgInAnimation){\n\t\t\tif (this._pgAnimateTimeout)\n\t\t\t\twindow.clearTimeout(this._pgAnimateTimeout);\n\t\t\treturn !!(this._pgAnimateTimeout = delay(this._animate, this,[old, id, config],100));\n\t\t}\n\t\tvar direction = id > old ? \"left\" : \"right\";\n\t\tif (config.direction == \"top\" || config.direction == \"bottom\")\n\t\t\tdirection = id > old ? \"top\" : \"bottom\";\n\t\tif (config.flip)\n\t\t\tdirection = \"\";\n\n\t\t//make copy of existing view\n\t\tvar top = 0;\n\t\tvar snode = this.$master._dataobj;\n\t\tvar isDataTable = !!this.$master._body;\n\n\t\tif (isDataTable){\n\t\t\tsnode = this.$master._body;\n\t\t\ttop = snode.offsetTop;\n\t\t\taddCss(this.$master.$view, \"webix_animation\");\n\t\t}\n\n\t\tvar onode = snode.cloneNode(true);\n\t\tonode.style.width = snode.style.width = \"100%\";\n\t\t\n\t\t//redraw page\n\t\tthis.$master.refresh();\n\t\t//append copy next to original\n\t\tinsertBefore(onode, snode.nextSibling, snode.parentNode);\n\t\tif(isDataTable)\n\t\t\tonode.childNodes[1].scrollLeft = snode.childNodes[1].scrollLeft;\n\n\t\t//animation config\n\t\tvar line;\n\t\tvar base = config !== true ? config : {};\n\t\tvar aniset = extend({\n\t\t\tdirection:direction,\n\t\t\tcallback:bind(function(){\n\t\t\t\taniset.callback = null;\n\t\t\t\tanimate.breakLine(line);\n\t\t\t\tthis._pgInAnimation = false;\n\t\t\t\tif (this.$master._body)\n\t\t\t\t\tremoveCss(this.$master.$view, \"webix_animation\");\n\t\t\t},this),\n\t\t\ttop:top, keepViews: isDataTable\n\t\t}, base);\n\n\t\t//run animation\n\t\tline = animate.formLine(snode, onode, aniset);\n\t\tanimate([ snode, onode ], aniset );\n\t\treturn this._pgInAnimation = true;\n\t}\n};\n\n\nconst view = protoUI(api,  MouseEvents, SingleRender, base.view, EventSystem);\nexport default {api, view};","import list from \"../views/list\";\nimport {triggerEvent, getTextSize} from \"../webix/html\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\nimport {bind, extend} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\n\n\n// #include ui/window.js\n// #include ui/list.js\nconst api = {\n\tname:\"menu\",\n\t_listClassName:\"webix_menu\",\n\t$init:function(config){\n\t\tif (config.autowidth){\n\t\t\tthis._autowidth_submenu = true;\n\t\t\tdelete config.autowidth;\n\t\t}\n\n\t\tthis._init_mouse_events();\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(){\n\t\t\tthis._hide_sub_menu();\n\t\t},this));\n\t\tthis.attachEvent(\"onItemClick\", function(id, e, trg){\n\t\t\tconst item = this.getItem(id);\n\t\t\tif (item){\n\t\t\t\tif (item.$template) return;\n\n\t\t\t\tconst parent = this.getTopMenu();\n\n\t\t\t\tif (!parent.callEvent(\"onMenuItemClick\", [id, e, trg])){\n\t\t\t\t\te.showpopup = parent._settings.id;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this != parent)\n\t\t\t\t\tparent._call_onclick(id,e,trg);\n\n\t\t\t\t//click on group - do not close submenus\n\t\t\t\tif (!this.type._submenu(item) && !parent._show_child_on_click){\n\t\t\t\t\tparent._hide_sub_menu(true);\n\t\t\t\t\tif (parent._hide_on_item_click)\n\t\t\t\t\t\tparent.hide();\n\t\t\t\t} else {\n\t\t\t\t\tconst touch = e.pointerType && e.pointerType !== \"mouse\";\n\t\t\t\t\tif (touch || (this === parent && parent._settings.openAction == \"click\"))\n\t\t\t\t\t\tthis._mouse_move_activation(id, trg);\n\t\t\t\t\t//do not close popups when clicking on menu folder\n\t\t\t\t\te.showpopup = parent._settings.id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.attachEvent(\"onKeyPress\", function(code){\n\t\t\tif(code === 9) this.getTopMenu()._hide_sub_menu();\n\t\t\telse if(code === 13 || code === 32){\n\t\t\t\tvar sel = this.getSelectedId(), node;\n\t\t\t\tif(sel)\n\t\t\t\t\tnode = this.getItemNode(sel);\n\t\t\t\tif(node)\n\t\t\t\t\ttriggerEvent(node, \"MouseEvent\", \"click\");\n\t\t\t}\n\n\t\t});\n\n\t\tthis.data.attachEvent(\"onClearAll\", function(){\n\t\t\tthis._hidden_items = [];\n\t\t});\n\t\tthis.data._hidden_items = [];\n\n\t\tthis._viewobj.setAttribute(\"role\", \"menubar\");\n\n\t\t//component can create new view\n\t\tthis._destroy_with_me = [];\n\t},\n\t_init_mouse_events:function(){\n\t\tthis.attachEvent(\"onMouseMove\", function(id, e, target){\n\t\t\tif (!this._menu_was_activated())\n\t\t\t\treturn;\n\t\t\tthis._mouse_move_activation(id, target);\n\t\t});\n\t\tthis.attachEvent(\"onMouseOut\", function(e){\n\t\t\tif (this._menu_was_activated() && this._settings.openAction == \"click\") return;\n\t\t\tif (!this._child_menu_active && (!e.relatedTarget || !this.$view.contains(e.relatedTarget)))\n\t\t\t\tthis._hide_sub_menu();\n\t\t});\n\t},\n\tsizeToContent:function(){\n\t\tif (this._settings.layout == \"y\"){\n\t\t\tvar texts = [];\n\t\t\tvar isSubmenu = false;\n\t\t\tthis.data.each(function(obj){\n\t\t\t\ttexts.push(this._toHTML(obj));\n\t\t\t\tif(obj.submenu)\n\t\t\t\t\tisSubmenu = true;\n\t\t\t}, this);\n\t\t\t// text width + padding + borders+ arrow\n\t\t\tthis.config.width = getTextSize(texts, this.$view.className).width+8*2+2+(isSubmenu?15:0);\n\t\t\tthis.resize();\n\t\t} else assert(false, \"sizeToContent will work for vertical menu only\");\n\t},\n\tgetTopMenu:function(){\n\t\tvar parent = this;\n\t\twhile (parent._parent_menu)\n\t\t\tparent = $$(parent._parent_menu);\n\t\treturn parent;\n\t},\n\t_auto_height_calc:function(count){\n\t\tif (this._settings.autoheight)\n\t\t\tcount = this.count();\n\t\t\n\t\tvar value = this.count(), height = 0;\n\n\t\tfor (var i=0; i<count; i++){\n\t\t\tvar item = this.data.pull[this.data.order[i]];\n\t\t\tif (item && item.$template == \"Separator\"){\n\t\t\t\theight+=4;\n\t\t\t\tif(!this._settings.autoheight)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse\n\t\t\t\theight+=this.type.height;\n\t\t}\n\n\t\tthis._onoff_scroll(count && count < value, \"y\");\n\t\t\n\t\treturn height;\n\t},\n\ton_mouse_move:{},\n\ttype:{\n\t\t_submenu:function(obj){\n\t\t\treturn obj.submenu || obj.data || obj.item;\n\t\t},\n\t\tcss:\"menu\",\n\t\twidth:\"auto\",\n\t\taria:function(obj, common, marks){\n\t\t\treturn \"role=\\\"menuitem\\\"\"+(marks && marks.webix_selected?\" aria-selected=\\\"true\\\" tabindex=\\\"0\\\"\":\"tabindex=\\\"-1\\\"\")+(common._submenu(obj)?\"aria-haspopup=\\\"true\\\"\":\"\")+\n\t\t\t\t(obj.disabled?\" aria-disabled=\\\"true\\\"  webix_disabled=\\\"true\\\"\":\"\");\n\t\t},\n\t\ttemplateStart:function(obj, common, mark){\n\t\t\tif (obj.$template === \"Separator\" || obj.$template === \"Spacer\"){\n\t\t\t\treturn \"<div \"+/*@attr*/\"webix_l_id\"+\"=\\\"#id#\\\" role=\\\"separator\\\" tabindex=\\\"-1\\\" class=\\\"webix_context_\"+obj.$template.toLowerCase()+\"\\\">\";\n\t\t\t}\n\t\t\tvar link = (obj.href?\" href='\"+obj.href+\"' \":\"\")+(obj.target?\" target='\"+obj.target+\"' \":\"\");\n\t\t\treturn list.api.type.templateStart(obj,common,mark).replace(/^<div/,\"<a \"+link)+((common._submenu(obj) && common.subsign)?\"<div class='webix_submenu_icon'></div>\":\"\");\n\t\t},\n\t\ttemplateEnd: function(obj){\n\t\t\treturn (obj.$template === \"Separator\" || obj.$template === \"Spacer\")?\"</div>\":\"</a>\";\n\t\t},\n\t\ttemplateSeparator:template(\"<div class='sep_line'></div>\"),\n\t\ttemplateSpacer:template(\"<div></div>\")\n\t},\n\tgetMenu: function(id){\n\t\tif (!this.data.pull[id]){\n\t\t\tfor (var subid in this.data.pull){\n\t\t\t\tvar obj = this.getItem(subid);\n\t\t\t\tif (obj.submenu){\n\t\t\t\t\tvar search = this._get_submenu(obj).getMenu(id);\n\t\t\t\t\tif (search) return search;\n\t\t\t\t}\n\t\t\t}\n\t\t} else return this;\n\t},\n\tgetSubMenu:function(id){\n\t\tvar menu = this.getMenu(id);\n\t\tvar obj = menu.getItem(id);\n\t\treturn (obj.submenu?menu._get_submenu(obj):null);\n\t},\n\tgetMenuItem:function(id){\n\t\treturn this.getMenu(id).getItem(id);\n\t},\n\t_get_submenu:function(data){\n\t\tvar sub  = $$(data.submenu);\n\t\tif (!sub){\n\t\t\tdata.submenu = this._create_sub_menu(data);\n\t\t\tsub = $$(data.submenu);\n\t\t}\n\t\treturn sub;\n\t},\n\t_menu_was_activated:function(){\n\t\tvar top = this.getTopMenu();\n\t\tif (top._settings.openAction == \"click\"){\n\t\t\tvar sub = top._open_sub_menu;\n\t\t\tif (sub && $$(sub).isVisible())\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\t_mouse_move_activation:function(id, target){\n\t\tvar data = this.getItem(id);\n\t\tif (!data) return;\n\t\t\n\t\t//clear flag of submenu usage\n\t\tthis._child_menu_active = null;\n\n\t\t//hide previously opened sub-menu\n\t\tif (this._open_sub_menu && data.submenu != this._open_sub_menu)\n\t\t\tthis._hide_sub_menu(true);\n\n\t\t//show submenu\n\t\tif (this.type._submenu(data)&&!this.config.hidden){\n\n\t\t\tvar sub  = this._get_submenu(data);\n\t\t\tif (!this.isItemEnabled(id)) return;\n\n\t\t\tsub.show(target,{ pos:this._settings.subMenuPos });\n\t\t\tsub._parent_menu = this._settings.id;\n\n\t\t\tthis._open_sub_menu = data.submenu;\n\t\t}\n\t},\n\tdisableItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_disabled(id, true);\n\t},\n\tenableItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_disabled(id, false);\n\t},\n\tisItemEnabled:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) return list.api.isItemEnabled.apply(menu, arguments);\n\t},\n\t_set_item_hidden:function(id, state){\n\t\tconst menu = this.data;\n\t\tif (menu._hidden_items[id] != state){\n\t\t\tmenu._hidden_items[id] = state;\n\t\t\tmenu.filter(function(obj){\n\t\t\t\treturn !menu._hidden_items[obj.id];\n\t\t\t});\n\t\t\tthis.resize();\t\t\n\t\t}\n\t},\n\thideMenuItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_hidden(id, true);\n\t},\n\tshowMenuItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_hidden(id, false);\n\t},\n\tshowItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu)\n\t\t\treturn list.api.showItem.call(menu, id);\n\t},\n\t_hide_sub_menu : function(mode){\n\t\tif (this._open_sub_menu){\n\t\t\t//recursive sub-closing\n\t\t\tvar sub = $$(this._open_sub_menu);\n\t\t\tif (sub._hide_sub_menu)\t//custom context may not have submenu\n\t\t\t\tsub._hide_sub_menu(mode);\n\t\t\tif (mode || !sub._show_on_mouse_out){\n\t\t\t\tsub.hide();\n\t\t\t\tthis._open_sub_menu = null;\n\t\t\t}\n\t\t}\n\t},\n\t_create_sub_menu : function(data){\n\t\tvar listConfig = {\n\t\t\tview:\"submenu\",\n\t\t\tdata:this.type._submenu(data)\n\t\t};\n\n\t\tvar settings = this.getTopMenu()._settings.submenuConfig;\n\t\tif (settings)\n\t\t\textend(listConfig, settings, true);\n\n\t\tvar parentData = this.getMenuItem(data.id);\n\t\tif(parentData && parentData.config)\n\t\t\textend(listConfig, parentData.config, true);\n\n\t\tvar menu = ui(listConfig);\n\t\tthis._destroy_with_me.push(menu);\n\t\tmenu._parent_menu = this;\n\t\treturn menu._settings.id;\n\t},\n\t_skip_item:function(id, prev, dir){\n\t\tconst item = this.getItem(id);\n\t\tif (item.$template == \"Separator\" || item.$template == \"Spacer\" || !this.isItemEnabled(id)){\n\t\t\tid = this.getNextId(id, dir) || null;\n\t\t\treturn (id && id != prev)? this._skip_item(id, prev, dir) : prev;\n\t\t}\n\t\treturn id;\n\t},\n\t$skin:function(){\n\t\tlist.api.$skin.call(this);\n\n\t\tthis.type.height = $active.menuHeight;\n\t},\n\tdefaults:{\n\t\tscroll:\"\",\n\t\tlayout:\"x\",\n\t\tmouseEventDelay:100,\n\t\tsubMenuPos:\"bottom\"\n\t}\n};\n\n\nconst view = protoUI(api,  list.view);\nexport default {api, view};","import {extend, bind} from \"../../webix/helpers\";\nimport {assert} from \"../../webix/debug\";\n\n\nconst Mixin = {\n\tfilterByAll:function(){\n\t\t//we need to use dynamic function creating\n\t\tlet server = false;\n\t\tthis.data.silent(function(){\n\t\t\tthis.filter();\n\n\t\t\tlet first = false;\n\t\t\tfor (let key in this._filter_elements){\n\t\t\t\tassert(key, \"empty column id for column with filtering\");\n\t\t\t\tif (!this.isColumnVisible(key)) continue;\n\n\t\t\t\tconst record = this._filter_elements[key];\n\t\t\t\tconst originvalue = record[2].getValue(record[0]);\n\n\t\t\t\t//saving last filter value, for usage in getState\n\t\t\t\tlet inputvalue = originvalue;\n\t\t\t\tif (record[1].prepare)\n\t\t\t\t\tinputvalue = record[1].prepare.call(record[2], inputvalue, record[1], this);\n\n\t\t\t\t//preserve original value\n\t\t\t\trecord[1].value = originvalue;\n\t\t\t\tlet compare = record[1].compare;\n\n\t\t\t\tif (!this.callEvent(\"onBeforeFilter\",[key, inputvalue, record[1]])) continue;\n\t\t\t\tif (record[2].$server || server){ //if one of filters is server side, do not run any client side filters\n\t\t\t\t\tserver = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (inputvalue === \"\") continue;\n\n\t\t\t\t\tif (compare){\n\t\t\t\t\t\tcompare = this._multi_compare(key, compare);\n\t\t\t\t\t\tthis.filter(bind(function(obj, value){\n\t\t\t\t\t\t\tif (!obj) return false;\n\t\t\t\t\t\t\treturn compare(obj[key], value, obj);\n\t\t\t\t\t\t},this), inputvalue, first);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis.filter(key, inputvalue, first);\n\n\t\t\t\t\tfirst = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\n\t\tif (server){\n\t\t\tif (!this._skip_server_op)\n\t\t\t\tthis.loadNext(0, 0, 0, 0, true, true).then(() => this._on_after_filter());\n\t\t\telse this._skip_server_op.filter = true;\n\t\t} else {\n\t\t\tthis.refresh();\n\t\t\tthis.callEvent(\"onAfterFilter\",[]);\n\t\t}\n\t},\n\t_multi_compare: function(key, compare){\n\t\tvar column = this.getColumnConfig(key);\n\t\tvar separator = column ? column.optionslist : null;\n\n\t\t//default mode\n\t\tif (!separator) \n\t\t\treturn compare;\n\n\t\tif(typeof separator != \"string\")\n\t\t\tseparator = \",\";\n\n\t\treturn function(itemValue, inputValue, obj){\n\t\t\tif(!itemValue)\n\t\t\t\treturn false;\n\t\t\tvar ids = itemValue.toString().split(separator);\n\t\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\t\tif (compare(ids[i], inputValue, obj))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t},\n\tfilterMode_setter:function(mode){\n\t\treturn extend(this.data._filterMode, mode, true);\n\t},\n\tgetFilter:function(columnId){\n\t\tconst filter = this._filter_elements[columnId];\n\n\t\tif (filter && filter[2]._get_filter)\n\t\t\treturn filter[2]._get_filter(filter[0]);\n\t\tif (filter && filter[2].getInputNode)\n\t\t\treturn filter[2].getInputNode(filter[0]);\n\t\treturn null;\n\t},\n\tregisterFilter:function(node, config, obj){\n\t\tthis._filter_elements[config.columnId] = [node, config, obj];\n\t},\n\tcollectValues:function(id, mode){\n\t\tlet values;\n\t\tlet obj = this.getColumnConfig(id);\n\t\tlet options = (mode && mode.visible) ? null : obj.collection;\n\n\t\tif (options)\n\t\t\tvalues = this._collectValues.call(options, \"id\", \"value\");\n\t\telse values = this._collectValues(obj.id, obj.id);\n\n\t\tlet result  = { values: values };\n\t\tthis.callEvent(\"onCollectValues\", [id, result]);\n\t\treturn result.values;\n\t},\n\t_collectValues:function(id, value){\n\t\tlet checks = { \"\" : true };\n\t\tlet values = [];\n\n\t\tthis.data.each(function(obj){\n\t\t\tlet lineId = obj ? obj[id] : \"\";\n\n\t\t\t//special handling for 0 values\n\t\t\tif (lineId === 0) lineId = \"0\";\n\t\t\t//convert to string to create a valid ID\n\t\t\tif (typeof lineId == \"object\")\n\t\t\t\tlineId = String(lineId);\n\n\t\t\tif (lineId !== undefined && !checks[lineId]){\n\t\t\t\tchecks[lineId] = true;\n\t\t\t\tvalues.push({ id:lineId, value:obj[value] });\n\t\t\t}\n\t\t}, this, true);\n\n\t\tif (values.length){\n\t\t\tlet type = typeof values[0].value === \"string\" ? \"string\" : \"raw\";\n\t\t\tvalues.sort( this.data.sorting.create({ as:type, by:\"value\", dir:\"asc\" }) );\n\t\t}\n\t\treturn values;\n\t},\n\t_on_after_filter:function(){\n\t\tif (this.editStop) this.editStop();\n\t\tthis.callEvent(\"onAfterFilter\",[]);\n\t}\n};\n\nexport default Mixin;","import {bind, extend, isUndefined} from \"../../webix/helpers\";\nimport {_event} from \"../../webix/htmlevents\";\nimport {assert} from \"../../webix/debug\";\nimport SelectionModel from \"../../core/selectionmodel\";\nimport DragControl from \"../../core/dragcontrol\";\nimport env from \"../../webix/env\";\n\nconst Mixin = {\n\thover_setter:function(value){\n\t\tif (value && !this._hover_initialized){\n\t\t\tthis._enable_mouse_move();\n\t\t\tthis.config.experimental = true;\n\n\t\t\tthis.attachEvent(\"onMouseMoving\", e => {\n\t\t\t\t// do not show hover while dragging\n\t\t\t\tif (DragControl.active) {\n\t\t\t\t\tif (this._last_hover)\n\t\t\t\t\t\tthis._last_hover = this.removeRowCss(this._last_hover, this._settings.hover);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet pos = this.locate(e);\n\t\t\t\t// when we click inner html element, edge calls mousemove with incorrect e.target\n\t\t\t\tif(!pos && env.isEdge && e.relatedTarget)\n\t\t\t\t\tpos = this.locate(e.relatedTarget);\n\n\t\t\t\tconst row = pos ? pos.row : null;\n\t\t\t\tif (this._last_hover != row){\n\t\t\t\t\tif (this._last_hover)\n\t\t\t\t\t\tthis.removeRowCss(this._last_hover, this._settings.hover);\n\n\t\t\t\t\tthis._last_hover = row;\n\t\t\t\t\tif (this._last_hover)\n\t\t\t\t\t\tthis.addRowCss(this._last_hover, this._settings.hover);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_event(this.$view, \"mouseout\", e => {\n\t\t\t\tconst trg = e.target;\n\n\t\t\t\t// inner html elements blinking in case of hover:true\n\t\t\t\t// ie and edge call mouseout when clicking inner html element\n\t\t\t\tif (this._last_hover && document.body.contains(trg)){\n\t\t\t\t\tconst pos = e.relatedTarget ? this.locate(e.relatedTarget) : null;\n\t\t\t\t\tif (!pos){\n\t\t\t\t\t\tthis.removeRowCss(this._last_hover, this._settings.hover);\n\t\t\t\t\t\tthis._last_hover = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._hover_initialized = 1;\n\t\t}\n\t\treturn value;\n\t},\n\tselect_setter:function(value){\n\t\tif (!this.select && value){\n\t\t\textend(this, this._selections._commonselect, true);\n\t\t\tif (value === true)\n\t\t\t\tvalue = \"row\";\n\t\t\telse if (value == \"multiselect\"){\n\t\t\t\tvalue = \"row\";\n\t\t\t\tthis._settings.multiselect = true;\n\t\t\t}\n\t\t\tassert(this._selections[value], \"Unknown selection mode: \"+value);\n\t\t\textend(this, this._selections[value], true);\n\t\t}\n\t\treturn value;\n\t},\n\tgetSelectedId:function(mode){\n\t\treturn  mode?[]:\"\"; //dummy placeholder\n\t},\n\tgetSelectedItem:function(mode){\n\t\treturn SelectionModel.getSelectedItem.call(this, mode);\n\t},\n\t_selections:{\n\t\t//shared methods for all selection models\n\t\t_commonselect:{\n\t\t\t_select_css:\" webix_cell_select\",\n\t\t\t$init:function(){\n\t\t\t\tthis._reinit_selection();\n\n\t\t\t\tthis.on_click.webix_cell = bind(this._click_before_select, this);\n\n\t\t\t\t//temporary stab, actual handlers need to be created\n\t\t\t\tthis._data_cleared = this._data_filtered = function(){\n\t\t\t\t\tthis.unselect();\n\t\t\t\t};\n\n\t\t\t\tthis.data.attachEvent(\"onStoreUpdated\",bind(this._data_updated,this));\n\t\t\t\tthis.data.attachEvent(\"onSyncApply\", bind(this._data_synced, this));\n\t\t\t\tthis.data.attachEvent(\"onClearAll\", bind(this._data_cleared,this));\n\t\t\t\tthis.data.attachEvent(\"onAfterFilter\", bind(this._data_filtered,this));\n\t\t\t\tthis.data.attachEvent(\"onIdChange\", bind(this._id_changed,this));\n\n\t\t\t\tthis.$ready.push(SelectionModel._set_noselect);\n\t\t\t},\n\t\t\t_id_changed:function(oldid, newid){\n\t\t\t\tfor (let i=0; i<this._selected_rows.length; i++)\n\t\t\t\t\tif (this._selected_rows[i] == oldid)\n\t\t\t\t\t\tthis._selected_rows[i] = newid;\n\n\t\t\t\tfor (let i=0; i<this._selected_areas.length; i++){\n\t\t\t\t\tconst item = this._selected_areas[i];\n\t\t\t\t\tif (item.row == oldid){\n\t\t\t\t\t\toldid = this._select_key(item);\n\t\t\t\t\t\titem.row = newid;\n\t\t\t\t\t\tnewid = this._select_key(item);\n\t\t\t\t\t\titem.id = newid;\n\n\t\t\t\t\t\tdelete this._selected_pull[oldid];\n\t\t\t\t\t\tthis._selected_pull[newid] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_data_updated:function(id, obj, type){\n\t\t\t\tif (type == \"delete\") \n\t\t\t\t\tthis.unselect(id);\n\t\t\t},\n\t\t\t_data_synced:function(){\n\t\t\t\tfor (let i = this._selected_areas.length-1; i >=0 ; i--){\n\t\t\t\t\tconst row = this._selected_areas[i].row;\n\t\t\t\t\tif (!this.exists(row)){\n\t\t\t\t\t\tthis._selected_areas.splice(i,1);\n\t\t\t\t\t\tdelete this._selected_pull[row];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_reinit_selection:function(){\n\t\t\t\t//list of selected areas\n\t\t\t\tthis._selected_areas=[];\n\t\t\t\t//key-value hash of selected areas, for fast search\n\t\t\t\tthis._selected_pull={};\n\t\t\t\t//used to track selected cell objects\n\t\t\t\tthis._selected_rows = [];\n\t\t\t},\n\t\t\tisSelected:function(id, column){\n\t\t\t\tlet key;\n\t\t\t\tif (!isUndefined(column))\n\t\t\t\t\tkey = this._select_key({ row:id, column: column});\n\t\t\t\telse \n\t\t\t\t\tkey = typeof id === \"object\"? this._select_key(id) : id;\n\n\t\t\t\treturn this._selected_pull[key];\n\t\t\t},\n\t\t\tgetSelectedId:function(asArray, plain){\n\t\t\t\tlet result;\n\n\t\t\t\t//if multiple selections was created - return array\n\t\t\t\t//in case of single selection, return value or array, when asArray parameter provided\n\t\t\t\tif (this._selected_areas.length > 1 || asArray){\n\t\t\t\t\tresult = [].concat(this._selected_areas);\n\t\t\t\t\tif (plain)\n\t\t\t\t\t\tfor (let i = 0; i < result.length; i++)\n\t\t\t\t\t\t\tresult[i]=result[i].id;\n\t\t\t\t} else {\n\t\t\t\t\tresult = this._selected_areas[0];\n\t\t\t\t\tif (plain && result)\n\t\t\t\t\t\treturn result.id;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t_id_to_string:function(){\n\t\t\t\treturn this.row;\n\t\t\t},\n\t\t\t_select:function(data, preserve){\n\t\t\t\tconst key = this._select_key(data);\n\t\t\t\t//don't allow selection on unnamed columns\n\t\t\t\tif (key === null) return;\n\n\t\t\t\tif (preserve === -1)\n\t\t\t\t\treturn this._unselect(data);\n\n\t\t\t\tdata.id = key;\n\t\t\t\tdata.toString = this._id_to_string;\n\n\t\t\t\tif (!this.callEvent(\"onBeforeSelect\",[data, preserve])) return false;\n\n\t\t\t\t//ignore area, if it was already selected and\n\t\t\t\t// - we are preserving existing selection\n\t\t\t\t// - this is the only selected area\n\t\t\t\t// otherwise we need to clear other selected areas\n\t\t\t\tif (this._selected_pull[key] && (preserve || this._selected_areas.length == 1)) return;\n\n\t\t\t\tif (!preserve)\n\t\t\t\t\tthis._clear_selection();\n\n\t\t\t\tthis._selected_areas.push(data);\n\t\t\t\tthis._selected_pull[key] = true;\n\n\t\t\t\tthis.callEvent(\"onAfterSelect\",[data, preserve]);\n\n\t\t\t\t\n\t\t\t\tthis._finalize_select(this._post_select(data));\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t_clear_selection:function(){\n\t\t\t\tif (!this._selected_areas.length) return false;\n\n\t\t\t\tfor (let i=0; i<this._selected_areas.length; i++){\n\t\t\t\t\tif (!this.callEvent(\"onBeforeUnSelect\", [this._selected_areas[i]])) return false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i=0; i<this._selected_rows.length; i++)\n\t\t\t\t\tthis.data.removeMark(this._selected_rows[i], \"webix_selected\", 0, true);\n\n\t\t\t\tconst cols = this._settings.columns;\n\t\t\t\tif (cols)\n\t\t\t\t\tfor (let i = 0; i < cols.length; i++) {\n\t\t\t\t\t\tcols[i].$selected = null;\n\t\t\t\t\t}\n\n\t\t\t\tconst data = this._selected_areas;\n\t\t\t\tthis._reinit_selection();\n\t\t\t\tfor (let i=0; i<data.length; i++){\n\t\t\t\t\tthis.callEvent(\"onAfterUnSelect\", [data[i]]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tunselectAll:function(){\n\t\t\t\tthis.clearSelection();\n\t\t\t},\n\t\t\tselectAll:function(){\n\t\t\t\tthis.selectRange();\n\t\t\t},\n\t\t\tclearSelection:function(){\n\t\t\t\tif (this._clear_selection()){\n\t\t\t\t\tthis.callEvent(\"onSelectChange\",[]);\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t},\n\t\t\t_unselect:function(data){\n\t\t\t\tconst key = this._select_key(data);\n\t\t\t\tif (!key && this._selected_areas.length){\n\t\t\t\t\tthis.clearSelection();\n\t\t\t\t\tthis.callEvent(\"onSelectChange\", []);\n\t\t\t\t}\n\n\t\t\t\t//ignore area, if it was already selected\n\t\t\t\tif (!this._selected_pull[key]) return;\n\n\t\t\t\tif (!this.callEvent(\"onBeforeUnSelect\",[data])) return false;\n\n\t\t\t\tfor (let i = 0; i < this._selected_areas.length; i++){\n\t\t\t\t\tif (this._selected_areas[i].id == key){\n\t\t\t\t\t\tthis._selected_areas.splice(i,1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdelete this._selected_pull[key];\n\n\t\t\t\tthis.callEvent(\"onAfterUnSelect\",[data]);\n\t\t\t\tthis._finalize_select(0, this._post_unselect(data));\n\t\t\t},\n\t\t\t_add_item_select:function(id){\n\t\t\t\tconst item = this.getItem(id);\n\t\t\t\treturn this.data.addMark(item.id, \"webix_selected\", 0, { $count: 0 }, true);\n\t\t\t},\n\t\t\t_finalize_select:function(id){\n\t\t\t\tif (id)\n\t\t\t\t\tthis._selected_rows.push(id);\n\t\t\t\tif (!this._silent_selection){\n\t\t\t\t\tthis.render();\n\t\t\t\t\tthis.callEvent(\"onSelectChange\",[]);\t\n\t\t\t\t}\n\t\t\t},\n\t\t\t_click_before_select:function(e, id){\n\t\t\t\tconst c = this._settings;\n\t\t\t\tlet preserve = e.ctrlKey || e.metaKey || (c.multiselect === \"touch\");\n\t\t\t\tlet range = e.shiftKey;\n\n\t\t\t\tif (!c.multiselect && c.select != \"multiselect\" && c.select !== \"area\")\n\t\t\t\t\tpreserve = range = false;\n\n\t\t\t\tif (range && this._selected_areas.length){\n\t\t\t\t\tconst last = this._selected_areas[this._selected_areas.length-1];\n\t\t\t\t\tthis._selectRange(id, last);\n\t\t\t\t} else {\n\t\t\t\t\tif (preserve && this._selected_pull[this._select_key(id)])\n\t\t\t\t\t\tthis._unselect(id);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._select({ row: id.row, column:id.column }, preserve);\n\t\t\t\t}\n\n\t\t\t\t// don't change focus when inline editor is active\n\t\t\t\tconst editor = this.getEditor(id);\n\t\t\t\tif (editor && editor.$inline && !editor.getPopup) return;\n\n\t\t\t\t// restore focus\n\t\t\t\tlet node = this.getItemNode(id);\n\t\t\t\tif(node)\n\t\t\t\t\tnode.focus( {preventScroll: true} );\n\t\t\t},\n\t\t\t_mapSelection:function(callback, column, row){\n\t\t\t\tlet cols = this._settings.columns;\n\t\t\t\t//selected columns only\n\t\t\t\tif (column){\n\t\t\t\t\tconst temp = [];\n\t\t\t\t\tfor (let i=0; i<cols.length; i++)\n\t\t\t\t\t\tif (cols[i].$selected)\n\t\t\t\t\t\t\ttemp.push(cols[i]);\n\t\t\t\t\tcols = temp;\n\t\t\t\t}\n\n\t\t\t\tconst rows = this.data.order;\n\t\t\t\tlet row_ind = 0;\n\n\t\t\t\tfor (let i=0; i<rows.length; i++){\n\t\t\t\t\tconst item = this.getItem(rows[i]);\n\t\t\t\t\tif (!item) continue; //dyn loading, row is not available\n\t\t\t\t\tconst selection = this.data.getMark(item.id, \"webix_selected\");\n\t\t\t\t\tif (selection || column){\n\t\t\t\t\t\tlet col_ind = 0;\n\t\t\t\t\t\tfor (let j = 0; j < cols.length; j++){\n\t\t\t\t\t\t\tconst id = cols[j].id;\n\t\t\t\t\t\t\tif (row || column || selection[id]){\n\t\t\t\t\t\t\t\tif (callback)\n\t\t\t\t\t\t\t\t\titem[id] = callback(item[id], rows[i], id, row_ind, col_ind);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn {row:rows[i], column:id};\n\t\t\t\t\t\t\t\tcol_ind++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//use separate row counter, to count only selected rows\n\t\t\t\t\t\trow_ind++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\n\t\trow : {\n\t\t\t_select_css:\" webix_row_select\",\n\t\t\t_select_key:function(data){ return data.row; },\n\t\t\tselect:function(row_id, preserve){\n\t\t\t\t//when we are using id from mouse events\n\t\t\t\tif (row_id) row_id = row_id.toString();\n\n\t\t\t\tassert(this.data.exists(row_id), \"Incorrect id in select command: \"+row_id);\n\t\t\t\tthis._select({ row:row_id }, preserve);\n\t\t\t},\n\t\t\t_post_select:function(data){\n\t\t\t\tthis._add_item_select(data.row).$row = true;\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tunselect:function(row_id){\n\t\t\t\tthis._unselect({row : row_id});\n\t\t\t},\n\t\t\t_post_unselect:function(data){\n\t\t\t\tthis.data.removeMark(data.row, \"webix_selected\", 0, true);\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\treturn this._mapSelection(callback, false, true);\n\t\t\t},\n\t\t\t_selectRange:function(a,b){\n\t\t\t\treturn this.selectRange(a.row, b.row);\n\t\t\t},\n\t\t\tselectRange:function(row_id, end_row_id, preserve){\n\t\t\t\tif (isUndefined(preserve)) preserve = true;\n\n\t\t\t\tlet row_start_ind = row_id ? this.getIndexById(row_id) : 0;\n\t\t\t\tlet row_end_ind = end_row_id ? this.getIndexById(end_row_id) : this.data.order.length-1;\n\n\t\t\t\tif (row_start_ind>row_end_ind){\n\t\t\t\t\tvar temp = row_start_ind;\n\t\t\t\t\trow_start_ind = row_end_ind;\n\t\t\t\t\trow_end_ind = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._silent_selection = true;\n\t\t\t\tfor (let i=row_start_ind; i<=row_end_ind; i++){\n\t\t\t\t\tconst id = this.getIdByIndex(i);\n\t\t\t\t\tif (!id){\n\t\t\t\t\t\tif (row_id)\n\t\t\t\t\t\t\tthis.select(row_id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.select(id, preserve);\n\t\t\t\t}\n\n\t\t\t\tthis._silent_selection = false;\n\t\t\t\tthis._finalize_select();\n\t\t\t}\n\t\t},\n\n\t\tcell:{\n\t\t\t_select_key:function(data){\n\t\t\t\tif (!data.column) return null;\n\t\t\t\treturn data.row+\"_\"+data.column; \n\t\t\t},\n\t\t\tselect:function(row_id, column_id, preserve){\n\t\t\t\tassert(this.data.exists(row_id), \"Incorrect id in select command: \"+row_id);\n\t\t\t\tthis._select({row:row_id, column:column_id}, preserve);\n\t\t\t},\n\t\t\t_post_select:function(data){\n\t\t\t\tvar sel = this._add_item_select(data.row);\n\t\t\t\tsel.$count++;\n\t\t\t\tsel[data.column]=true;\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tunselect:function(row_id, column_id){\n\t\t\t\tthis._unselect({row:row_id, column:column_id});\n\t\t\t},\n\t\t\t_post_unselect:function(data){\n\t\t\t\tvar sel = this._add_item_select(data.row);\n\t\t\t\tsel.$count-- ;\n\t\t\t\tsel[data.column] = false;\n\t\t\t\tif (sel.$count<=0)\n\t\t\t\t\tthis.data.removeMark(data.row, \"webix_selected\", 0, true);\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\treturn this._mapSelection(callback, false, false);\n\t\t\t},\n\t\t\t_selectRange:function(a,b){\n\t\t\t\treturn this.selectRange(a.row, a.column, b.row, b.column);\n\t\t\t},\n\n\t\t\tselectRange:function(row_id, column_id, end_row_id, end_column_id, preserve){\n\t\t\t\tif (isUndefined(preserve)) preserve = true;\n\n\t\t\t\tvar row_start_ind = row_id ? this.getIndexById(row_id) : 0;\n\t\t\t\tvar row_end_ind = end_row_id ? this.getIndexById(end_row_id) : this.data.order.length-1;\n\n\t\t\t\tvar col_start_ind = column_id ? this.getColumnIndex(column_id) : 0;\n\t\t\t\tvar col_end_ind = end_column_id ? this.getColumnIndex(end_column_id) : this._columns.length-1;\n\n\t\t\t\tif (row_start_ind>row_end_ind){\n\t\t\t\t\tlet temp = row_start_ind;\n\t\t\t\t\trow_start_ind = row_end_ind;\n\t\t\t\t\trow_end_ind = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (col_start_ind>col_end_ind){\n\t\t\t\t\tlet temp = col_start_ind;\n\t\t\t\t\tcol_start_ind = col_end_ind;\n\t\t\t\t\tcol_end_ind = temp;\n\t\t\t\t}\n\n\t\t\t\tthis._silent_selection = true;\n\t\t\t\tfor (let i=row_start_ind; i<=row_end_ind; i++)\n\t\t\t\t\tfor (let j=col_start_ind; j<=col_end_ind; j++)\n\t\t\t\t\t\tthis.select(this.getIdByIndex(i), this.columnId(j), preserve);\n\t\t\t\tthis._silent_selection = false;\n\t\t\t\tthis._finalize_select();\n\t\t\t}\n\t\t},\n\n\t\tcolumn:{\n\t\t\t_select_css:\" webix_column_select\",\n\t\t\t_select_key:function(data){ return data.column; },\n\t\t\t_id_to_string:function(){\n\t\t\t\treturn this.column;\n\t\t\t},\n\t\t\t//returns box-like area, with ordered selection cells\n\t\t\tselect:function(column_id, preserve){\n\t\t\t\tthis._select({ column:column_id }, preserve);\n\t\t\t},\n\t\t\t_post_select:function(data){\n\t\t\t\tthis._settings.columns[this.getColumnIndex(data.column)].$selected = true;\n\t\t\t\tif (!this._silent_selection)\n\t\t\t\t\tthis._render_header_and_footer();\n\t\t\t},\n\t\t\tunselect:function(column_id){\n\t\t\t\tthis._unselect({column : column_id});\n\t\t\t},\n\t\t\t_post_unselect:function(data){\n\t\t\t\tthis._settings.columns[this.getColumnIndex(data.column)].$selected = null;\n\t\t\t\tthis._render_header_and_footer();\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\treturn this._mapSelection(callback, true, false);\n\t\t\t},\n\t\t\t_selectRange:function(a,b){\n\t\t\t\treturn this.selectRange(a.column, b.column);\n\t\t\t},\n\t\t\tselectRange:function(column_id, end_column_id, preserve){\n\t\t\t\tif (isUndefined(preserve)) preserve = true;\n\n\t\t\t\tvar column_start_ind = column_id ? this.getColumnIndex(column_id) : 0;\n\t\t\t\tvar column_end_ind = end_column_id ? this.getColumnIndex(end_column_id) : this._columns.length-1;\n\n\t\t\t\tif (column_start_ind>column_end_ind){\n\t\t\t\t\tvar temp = column_start_ind;\n\t\t\t\t\tcolumn_start_ind = column_end_ind;\n\t\t\t\t\tcolumn_end_ind = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._silent_selection = true;\n\t\t\t\tfor (let i=column_start_ind; i<=column_end_ind; i++)\n\t\t\t\t\tthis.select(this.columnId(i), preserve);\n\n\t\t\t\tthis._silent_selection = false;\n\n\t\t\t\tthis._render_header_and_footer();\n\t\t\t\tthis._finalize_select();\n\t\t\t},\n\t\t\t_data_synced:function(){\n\t\t\t\t//do nothing, as columns are not changed\n\t\t\t}\n\t\t},\n\t\tarea: {\n\t\t\t_select_key:function(data){\n\t\t\t\treturn data.row+\"_\"+data.column;\n\t\t\t},\n\t\t\tgetSelectedId: function(asArray){\n\t\t\t\tvar area = this.getSelectArea();\n\t\t\t\tvar result = [];\n\t\t\t\tif(area){\n\t\t\t\t\tif(asArray && ( area.start.row != area.end.row || area.start.column != area.end.column )){\n\t\t\t\t\t\tvar row_start_ind = this.getIndexById(area.start.row);\n\t\t\t\t\t\tvar row_end_ind = this.getIndexById(area.end.row);\n\t\t\t\t\t\t//filtering in process\n\t\t\t\t\t\tif(row_start_ind == -1 || row_end_ind == -1)\n\t\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t\tvar col_start_ind = this.getColumnIndex(area.start.column);\n\t\t\t\t\t\tvar col_end_ind = this.getColumnIndex(area.end.column);\n\n\t\t\t\t\t\tfor (let i=row_start_ind; i<=row_end_ind; i++)\n\t\t\t\t\t\t\tfor (var j=col_start_ind; j<=col_end_ind; j++)\n\t\t\t\t\t\t\t\tresult.push({row:this.getIdByIndex(i), column:this.columnId(j)});\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tresult.push(area.end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn asArray?result:result[0];\n\t\t\t},\n\t\t\tunselect:function(){\n\t\t\t\tthis._unselect();\n\t\t\t},\n\t\t\t_unselect: function() {\n\t\t\t\tthis.removeSelectArea();\n\t\t\t\tthis.callEvent(\"onSelectChange\", []);\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\tvar select  = this.getSelectArea();\n\t\t\t\tif (select){\n\t\t\t\t\tvar sind = this.getColumnIndex(select.start.column);\n\t\t\t\t\tvar eind = this.getColumnIndex(select.end.column);\n\t\t\t\t\tvar srow = this.getIndexById(select.start.row);\n\t\t\t\t\tvar erow = this.getIndexById(select.end.row);\n\n\t\t\t\t\tfor (let i = srow; i <= erow; i++) {\n\t\t\t\t\t\tvar rid = this.data.order[i];\n\t\t\t\t\t\tvar item = this.getItem(rid);\n\t\t\t\t\t\tfor (var j = sind; j <= eind; j++) {\n\t\t\t\t\t\t\tvar cid = this._columns[j].id;\n\t\t\t\t\t\t\tif (callback)\n\t\t\t\t\t\t\t\titem[cid] = callback(item[cid], rid, cid, i-srow, j-sind);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn { row:rid, column:cid };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tselect:function(row_id, column_id, preserve){\n\t\t\t\tassert(this.data.exists(row_id), \"Incorrect id in select command: \"+row_id);\n\t\t\t\tthis._select({row:row_id, column:column_id}, preserve);\n\t\t\t},\n\t\t\t_selectRange:function(id,last){\n\t\t\t\tthis._extendAreaRange(id, last);\n\t\t\t},\n\t\t\t_select: function(cell){\n\t\t\t\t//ctrl-selection is not supported yet, so ignoring the preserve flag\n\t\t\t\tthis.addSelectArea(cell,cell,false);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t_data_synced:function(){\n\t\t\t\tif(this._selected_areas.length)\n\t\t\t\t\tthis.refreshSelectArea();\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Mixin;","import {offset, pos as getPos, preventEvent, remove, removeCss, create, addCss} from \"../../webix/html\";\nimport env from \"../../webix/env\";\nimport {extend, delay} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {_event, event, eventRemove} from \"../../webix/htmlevents\";\nimport AutoScroll from \"../../core/autoscroll\";\n\n\n// #include core/autoscroll.js\nconst Mixin = {\n\tblockselect_setter:function(value){\n\t\tif (value && this._block_sel_flag){\n\t\t\t_event(this._viewobj, env.mouse.down, e => this._bs_down(e, \"mouse\"));\n\t\t\tif (env.touch)\n\t\t\t\tthis.attachEvent(\"onLongTouch\", e => this._bs_down(e, \"touch\"));\n\n\t\t\tthis._block_sel_flag = this._bs_ready = this._bs_progress = false;\n\t\t\tthis.attachEvent(\"onAfterScroll\", this._update_block_selection);\n\t\t\t// auto scroll\n\t\t\textend(this, AutoScroll, true);\n\t\t\tthis.attachEvent(\"onBeforeAutoScroll\",function(){\n\t\t\t\treturn this._bs_progress;\n\t\t\t});\n\t\t}\n\t\treturn value;\n\t},\n\t_block_sel_flag:true,\n\t_childOf:function(e, tag){\n\t\tlet src = e.target;\n\t\twhile (src){\n\t\t\tif (src.getAttribute && src.getAttribute(/*@attr*/\"webixignore\")) return false;\n\t\t\tif (src == tag)\n\t\t\t\treturn true;\n\t\t\tsrc = src.parentNode;\n\t\t}\n\t\treturn false;\n\t},\n\t_bs_down:function(e, pointer){\n\t\t// do not listen to mousedown of subview on master\n\t\tif (this._settings.subview && this != $$(e.target)) return;\n\t\tif (this._childOf(e, this._body)){\n\t\t\t//disable block selection when we have an active editor\n\t\t\tif (e.target && e.target.tagName == \"INPUT\" || this._rs_process) return;\n\n\t\t\tthis._bs_position = offset(this._body);\n\t\t\tconst pos = getPos(e);\n\t\t\tthis._bs_ready = [pos.x - this._bs_position.x, pos.y - this._bs_position.y];\n\n\t\t\tthis._bs_handler_init(e.target, pointer);\n\t\t}\n\t},\n\t_bs_handler_init:function(target, pointer){\n\t\tif (pointer === \"touch\") {\n\t\t\tthis._bs_mm_handler = event(target, env[pointer].move, e => this._bs_move(e, pointer), { passive:false });\n\t\t\tthis._bs_mu_handler = event(target, env[pointer].up, e => this._bs_up(e));\n\t\t} else {\n\t\t\tthis._bs_mm_handler = event(this._viewobj, env[pointer].move, e => this._bs_move(e, pointer));\n\t\t\tthis._bs_mu_handler = event(document, env[pointer].up, e => this._bs_up(e));\n\t\t}\n\t},\n\t_bs_up:function(e){\n\t\tif (this._block_panel){\n\t\t\tthis._bs_select(\"select\", true, e);\n\t\t\tthis._block_panel = remove(this._block_panel);\n\t\t}\n\n\t\tthis._bs_mm_handler = eventRemove(this._bs_mm_handler);\n\t\tthis._bs_mu_handler = eventRemove(this._bs_mu_handler);\n\n\t\tremoveCss(document.body,\"webix_noselect\");\n\t\tthis._bs_ready = this._bs_progress = false;\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t},\n\t_update_block_selection: function(){\n\t\tif (this._bs_progress)\n\t\t\tdelay(this._bs_select, this, [false, false]);\n\t},\n\t_bs_select:function(mode, theend, e){\n\t\tif(!this._bs_ready[2])\n\t\t\tthis._bs_ready[2] = this._locate_cell_xy(this._bs_ready[0],this._bs_ready[1]);\n\t\tconst cell = this._bs_ready[2];\n\t\tconst start = {row: cell.row, column: cell.column},\n\t\t\tend = this._locate_cell_xy(this._bs_progress[0],this._bs_progress[1],true);\n\n\t\tif (!this._bs_do_select && !this.callEvent(\"onBeforeBlockSelect\", [start, end, theend, e]))\n\t\t\treturn;\n\n\t\tif ((!this._bs_do_select || this._bs_do_select(start, end, theend, e) !== false) && (start.row && end.row)){\n\t\t\tif (mode === \"select\"){\n\t\t\t\tthis._clear_selection();\n\t\t\t\tthis._selectRange(start, end);\n\t\t\t} else {\n\t\t\t\tlet startx, starty, endx, endy;\n\n\t\t\t\tif (mode === \"box\"){\n\t\t\t\t\tstartx = Math.min(this._bs_ready[0],this._bs_progress[0]);\n\t\t\t\t\tendx = Math.max(this._bs_ready[0],this._bs_progress[0]);\n\n\t\t\t\t\tstarty = Math.min(this._bs_ready[1],this._bs_progress[1]);\n\t\t\t\t\tendy = Math.max(this._bs_ready[1],this._bs_progress[1]);\n\t\t\t\t} else {\n\t\t\t\t\tconst i0 = this.getIndexById(start.row),\n\t\t\t\t\t\ti1 = this.getIndexById(end.row),\n\t\t\t\t\t\tj0 = this.getColumnIndex(start.column),\n\t\t\t\t\t\tj1 = this.getColumnIndex(end.column);\n\t\t\t\t\tconst sri = Math.min(i0, i1),\n\t\t\t\t\t\teri = Math.max(i0, i1),\n\t\t\t\t\t\tsci = Math.min(j0, j1),\n\t\t\t\t\t\teci = Math.max(j0, j1);\n\t\t\t\t\tconst startPos = this._bs_cell_position(sri, sci, false);\n\t\t\t\t\tconst endPos = this._bs_cell_position(eri, eci, true);\n\n\t\t\t\t\tif(this._settings.prerender){\n\t\t\t\t\t\tstartPos.top -= this._scrollTop;\n\t\t\t\t\t\tendPos.top -= this._scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._settings.topSplit)\n\t\t\t\t\t\tstartPos.top += this._getTopSplitOffset(start);\n\n\t\t\t\t\tstartx = startPos.left;\n\t\t\t\t\tendx = endPos.left;\n\t\t\t\t\tstarty = startPos.top;\n\t\t\t\t\tendy = endPos.top;\n\n\t\t\t\t\tif(e){\n\t\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\t\t\t\tif (!this._touch_scroll || this._settings.prerender)\n\t\t\t\t\t\t\tthis._auto_scroll_delay = delay(this._auto_scroll, this, [getPos(e)], 250);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst style = this._block_panel.style;\n\t\t\t\tstyle.left = startx+\"px\";\n\t\t\t\tstyle.top = starty+\"px\";\n\t\t\t\tstyle.width = (endx-startx)+\"px\";\n\t\t\t\tstyle.height = (endy-starty)+\"px\";\n\t\t\t}\n\t\t}\n\n\t\tif (theend)\n\t\t\tthis.callEvent(\"onAfterBlockSelect\", [start, end]);\n\t},\n\t_bs_cell_position: function(iRow, iCol, isEnd){\n\t\tconst pos = this._cellPosition(this.getIdByIndex(iRow), this.columnId(iCol));\n\t\tconst scroll = this.getScrollState();\n\t\tlet left = pos.left;\n\t\tif (this.config.rightSplit && iCol > (this._columns.length - 1 - this.config.rightSplit)){\n\t\t\tleft += this._left_width + this._center_width;\n\t\t} else if (this.config.leftSplit){\n\t\t\tif (iCol + 1 > this.config.leftSplit){\n\t\t\t\tif(left < scroll.x){\n\t\t\t\t\tpos.width -= scroll.x - left;\n\t\t\t\t\tleft = this._left_width;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tleft += this._left_width - scroll.x;\n\t\t\t}\n\t\t} else left -= scroll.x;\n\n\t\tif(isEnd){\n\t\t\tleft += pos.width;\n\t\t\tpos.top += pos.height;\n\t\t\tif(this.config.rightSplit && iCol < this._columns.length - this.config.rightSplit)\n\t\t\t\tleft = Math.min(left, this._left_width + this._center_width);\n\t\t}\n\t\treturn {left, top: pos.top};\n\t},\n\t_bs_start:function(handleStart){\n\t\tthis._block_panel = create(\"div\", {\"class\":\"webix_block_selection\"},\"\");\n\t\tthis._body.appendChild(this._block_panel);\n\t\tthis.$handleStart = !!handleStart;\n\t},\n\t_bs_move:function(e, pointer){\n\t\tif (this._rs_progress) return;\n\t\tif (this._bs_ready !== false){\n\t\t\tif(!this._bs_progress) addCss(document.body,\"webix_noselect\");\n\n\t\t\tconst pos = getPos(e);\n\t\t\tconst progress = [pos.x - this._bs_position.x, pos.y - this._bs_position.y];\n\n\t\t\t//prevent unnecessary block selection while dbl-clicking\n\t\t\tif (Math.abs(this._bs_ready[0] - progress[0]) < 5 && Math.abs(this._bs_ready[1] - progress[1]) < 5)\n\t\t\t\treturn;\n\n\t\t\tif (this._bs_progress === false)\n\t\t\t\tthis._bs_start();\n\n\t\t\tthis._bs_progress = progress;\n\t\t\tthis._bs_select(this.config.blockselect, false, e);\n\n\t\t\tif (pointer === \"touch\") preventEvent(e);\n\t\t}\n\t},\n\t_locate_cell_xy:function(x, y, isEndPoint){\n\t\tconst handle = isEndPoint && this.$handleStart;\n\t\tconst dir = handle ? this._getHandleMoveDirection(x, y) : null;\n\n\t\tlet inTopSplit = false,\n\t\t\trow = null,\n\t\t\tcolumn = null;\n\n\n\t\tif (this._right_width && x>this._left_width + this._center_width)\n\t\t\tx+= this._x_scroll.getSize()-this._center_width-this._left_width-this._right_width; \n\t\telse if (!this._left_width || x>this._left_width)\n\t\t\tx+= this._x_scroll.getScroll();\n\n\t\tif(this._settings.topSplit && this._render_scroll_top > this._settings.topSplit) {\n\t\t\tconst splitPos = this._cellPosition(this.getIdByIndex(this._settings.topSplit-1), this.columnId(0));\n\t\t\tif(splitPos.top + splitPos.height > y){\n\t\t\t\tinTopSplit = true;\n\t\t\t}\n\t\t}\n\t\tif(!inTopSplit)\n\t\t\ty += this.getScrollState().y;\n\n\t\tif (x<0) x=0;\n\t\tif (y<0) y=0;\n\n\t\tconst cols = this._settings.columns;\n\t\tconst rows = this.data.order;\n\n\t\tlet summ = 0;\n\t\tif(!handle || dir ==\"x\")\n\t\t\tfor (let i=0; i<cols.length; i++){\n\t\t\t\tsumm+=cols[i].width;\n\t\t\t\tif (summ>=x){\n\t\t\t\t\tcolumn = cols[i].id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\tif (!column)\n\t\t\tcolumn = handle?this._bs_ready[5].column:cols[cols.length-1].id;\n\n\t\tsumm = 0;\n\t\tif(!handle || dir==\"y\"){\n\t\t\tconst start = this.data.$min || 0;\n\t\t\tif (this._settings.fixedRowHeight) {\n\t\t\t\trow = rows[start + Math.floor(y / this._settings.rowHeight)];\n\t\t\t} else for (let i = start; i < rows.length; i++) {\n\t\t\t\tsumm += this._getHeightByIndex(i);\n\t\t\t\tif (summ >= y) {\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!row)\n\t\t\trow = handle?this._bs_ready[5].row:rows[rows.length-1];\n\t\treturn {row, column};\n\t},\n\t_getTopSplitOffset: function(cell, area){\n\t\tlet y = 0,\n\t\t\tstartIndex = this.getIndexById(cell.row);\n\n\t\tif(startIndex >= this._settings.topSplit){\n\t\t\tconst startPos = this._cellPosition(this.getIdByIndex(startIndex), cell.column);\n\t\t\tconst splitPos = this._cellPosition(this.getIdByIndex(this._settings.topSplit-1), cell.column);\n\t\t\tif(splitPos.top + splitPos.height > startPos.top)\n\t\t\t\ty = splitPos.top + splitPos.height - ((startPos.top > 0 || !area) ? startPos.top : 0);\n\t\t}\n\n\t\treturn y;\n\t},\n\t_getHandleMoveDirection(x, y){\n\t\tlet dir;\n\t\tconst p0 = [this._bs_ready[0], this._bs_ready[1]];\n\t\tconst p1 = [this._bs_ready[3], this._bs_ready[4]];\n\t\tconst xMax = p1[0]+ this._columns_pull[this._bs_ready[5].column].width;\n\t\tconst yMax = p1[1]+ this._getRowHeight(this._bs_ready[5].row);\n\t\tif(x <= xMax && x >= p0[0]){\n\t\t\tif(y <= yMax && y >= p0[1])\n\t\t\t\tdir = x < p1[0]?\"x\":\"y\";\n\t\t\telse\n\t\t\t\tdir = \"y\";\n\t\t}\n\t\telse{\n\t\t\tconst x0 = x > p1[0]?xMax:p0[0];\n\t\t\tconst y0 = y > p1[1]?yMax:p0[1];\n\t\t\tdir = Math.abs(x - x0) > Math.abs(y - y0)?\"x\":\"y\";\n\t\t\tif(dir == \"y\" && x < p0[0] && y <= yMax && y >= p0[1])\n\t\t\t\tdir = null;\n\t\t}\n\t\treturn dir;\n\t}\n};\n\nexport default Mixin;","import {pos, addCss, denySelect, removeCss, allowSelect, offset, posRelative} from \"../../webix/html\";\nimport {delay} from \"../../webix/helpers\";\nimport {$$, ui} from \"../../ui/core\";\nimport {_event} from \"../../webix/htmlevents\";\n\n//indirect import\nimport \"../resizearea\";\n\nconst Mixin = {\n\tresizeRow_setter:function(value){\n\t\tthis._settings.scrollAlignY = false;\n\t\tthis._settings.fixedRowHeight = false;\n\t\treturn this.resizeColumn_setter(value);\n\t},\n\tresizeColumn_setter:function(value){\n\t\tif (value && this._rs_init_flag){\n\t\t\t_event(this._viewobj, \"mousemove\", e => this._rs_move(e));\n\t\t\t_event(this._viewobj, \"mousedown\", e => this._rs_down(e));\n\t\t\t_event(this._viewobj, \"mouseup\", () => this._rs_up());\n\t\t\tthis._rs_init_flag = false;\n\t\t}\n\t\treturn value;\n\t},\n\t_rs_init_flag:true,\n\t_rs_down:function(e){\n\t\t// do not listen to mousedown of subview on master\n\t\tif (!this._rs_ready || (this._settings.subview && this != $$(e.target))) return;\n\t\tthis._rs_process = [pos(e), this._rs_ready];\n\t\taddCss(document.body,\"webix_noselect\");\n\t\tdenySelect();\n\t},\n\t_rs_up:function(){\n\t\tthis._rs_process = false;\n\t\tremoveCss(document.body,\"webix_noselect\");\n\t\tallowSelect();\n\t},\n\t_rs_start:function(){\n\t\tif (this._rs_progress) return;\n\n\t\tconst [dir, size, node, cell] = this._rs_process[1];\n\t\tlet eventPos = this._rs_process[0];\n\t\tlet start;\n\n\t\tif (dir == \"x\"){\n\t\t\tstart = offset(node).x + size - offset(this._body).x;\n\t\t\teventPos = eventPos.x;\n\t\t} else {\n\t\t\tstart = offset(node).y + size - offset(this._body).y + this._header_height;\n\t\t\teventPos = eventPos.y;\n\t\t}\n\n\t\tthis._rs_progress = [dir, cell, start];\n\t\tconst resize = new ui.resizearea({\n\t\t\tcontainer:this._viewobj,\n\t\t\teventPos,\n\t\t\tstart,\n\t\t\tdir,\n\t\t\tcursor:(dir == \"x\"?\"col\":\"row\")+\"-resize\"\n\t\t});\n\t\tresize.attachEvent(\"onResizeEnd\", pos => this._rs_end(pos));\n\n\t\tthis._rs_ready = false;\n\t},\n\t_rs_end:function(result){\n\t\tif (this._rs_progress){\n\t\t\tconst cell = this._rs_progress[1];\n\t\t\tlet newsize = result - this._rs_progress[2];\n\n\t\t\tif (this._rs_progress[0] == \"x\"){\n\t\t\t\t//in case of right split - different sizing logic applied\n\t\t\t\tif (this._settings.rightSplit && cell.cind >= this._rightSplit){\n\t\t\t\t\tnewsize *= -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst col = this._columns[cell.cind];\n\t\t\t\tconst oldwidth = col.width;\n\n\t\t\t\tdelete col.fillspace;\n\t\t\t\tdelete col.adjust;\n\n\t\t\t\tthis._setColumnWidth(cell.cind, oldwidth + newsize, true, true);\n\t\t\t\tthis._updateColsSizeSettings();\n\t\t\t} else {\n\t\t\t\tconst id = this.getIdByIndex(cell.rind);\n\t\t\t\tconst oldheight = this._getRowHeight(this.getItem(id));\n\t\t\t\tthis.setRowHeight(id, oldheight + newsize);\n\t\t\t}\n\t\t\tthis._rs_up();\n\t\t}\n\t\tthis._rs_progress = null;\n\t},\n\t_rs_move:function(e){\n\t\tif (this._rs_ready && this._rs_process)\n\t\t\treturn this._rs_start();\n\t\tthis._rs_ready = false;\n\n\t\tlet mode = false;\n\t\tlet node = e.target;\n\n\t\tif(this._viewobj.contains(node)){\n\t\t\tconst config = this._settings;\n\t\t\tlet in_body, in_header;\n\n\t\t\twhile (!(node == this._viewobj || in_body || in_header)){\n\t\t\t\t//we can't use node.className because there can be SVG (in SVG it is an SVGAnimatedString object)\n\t\t\t\tconst element_class = node.getAttribute(\"class\")||\"\";\n\t\t\t\tin_body = element_class.indexOf(\"webix_cell\") != -1;\n\t\t\t\tin_header = element_class.indexOf(\"webix_hcell\") != -1;\n\n\t\t\t\tif(!(in_body || in_header))\n\t\t\t\t\tnode = node.parentElement;\n\t\t\t}\n\n\t\t\t//ignore resize in case of drag-n-drop enabled\n\t\t\tif (in_body && config.drag) return this._mark_resize(mode);\n\n\t\t\t\n\t\t\tif (in_body || in_header){\n\t\t\t\tconst pos = posRelative(e);\n\t\t\t\tconst cell = this._locate(node);\n\n\t\t\t\tmode = this._is_column_rs(cell, pos, node, config.resizeColumn, in_body)\n\t\t\t\t\t|| (in_body && this._is_row_rs(cell, pos, node, config.resizeRow));\n\t\t\t}\n\t\t}\n\n\t\t//mark or unmark resizing ready state\n\t\tthis._mark_resize(mode);\n\t},\n\t_is_column_rs:function(cell, pos, node, rColumn, in_body){\n\t\t// if resize is only within the header\n\t\tif (!rColumn || (in_body && rColumn.headerOnly)) return false;\n\n\t\tconst dx = node.offsetWidth;\n\t\trColumn = rColumn.size ? rColumn.size : 3;\n\n\t\tlet col, config;\n\t\tif (pos.x < rColumn){\n\t\t\tif (cell.cind < this._rightSplit)\n\t\t\t\tcell.cind -= (cell.span||1);\n\t\t\tcol = this._columns[cell.cind];\n\t\t\tconfig = [\"x\", 0, node, cell];\n\t\t}\n\t\telse if (dx-pos.x < rColumn+1){\n\t\t\tif (this._settings.rightSplit && cell.cind+1 >= this._rightSplit)\n\t\t\t\tcell.cind++;\n\t\t\tif (!this._settings.rightSplit || cell.cind < this._columns.length){\n\t\t\t\tcol = this._columns[cell.cind];\n\t\t\t\tconfig = [\"x\", dx, node, cell];\n\t\t\t}\n\t\t}\n\n\t\tif (col && col.resize !== false){\n\t\t\tthis._rs_ready = config;\n\t\t\treturn \"col-resize\";\n\t\t}\n\t\treturn false;\n\t},\n\t_is_row_rs:function(cell, pos, node, rRow){\n\t\t// if resize is only within the first column\n\t\tif (!rRow || (rRow.headerOnly && cell.cind > 0)) return false;\n\n\t\t// block selection in progress\n\t\tif (this._bs_progress) return false;\n\n\t\tconst dy = node.offsetHeight;\n\t\trRow = rRow.size ? rRow.size : 3;\n\n\t\tif (pos.y < rRow){\n\t\t\tif (cell.rind > 0){\t\t\t// avoid resize header border\n\t\t\t\tcell.rind--;\n\t\t\t\tthis._rs_ready = [\"y\", 0, node, cell];\n\t\t\t}\n\t\t}\n\t\telse if (dy-pos.y < rRow+1)\n\t\t\tthis._rs_ready = [\"y\", dy, node, cell];\n\n\t\treturn this._rs_ready ? \"row-resize\" : false;\n\t},\n\t_mark_resize:function(mode){\n\t\tif (this._cursor_timer) window.clearTimeout(this._cursor_timer);\n\t\tthis._cursor_timer = delay(this._mark_resize_ready, this, [mode], mode?100:0);\n\t},\n\t_mark_resize_ready:function(mode){\n\t\tif (this._last_cursor_mode != mode){\n\t\t\tthis._last_cursor_mode = mode;\n\t\t\tthis._viewobj.style.cursor = mode || \"\";\n\t\t}\n\t}\n};\n\nexport default Mixin;","import base from \"../views/view\";\n\n//indirectly used views\nimport \"../views/vscroll\";\n\nimport env from \"../webix/env\";\nimport template from \"../webix/template\";\nimport type from \"../webix/type\";\nimport i18n from \"../webix/i18n\";\nimport datafilter from \"../ui/datafilter\";\n\nimport AreaSelect from \"./datatable/areaselect\";\nimport DataState from \"../core/datastate\";\nimport TablePaste from \"../core/tablepaste\";\nimport FilterMixin from \"./datatable/filter\";\nimport SelectionMixin from \"./datatable/selection\";\nimport BlockSelectMixin from \"./datatable/blockselect\";\nimport ResizeMixin from \"./datatable/resize\";\nimport TouchMixin from \"./datatable/touch\";\nimport SizeMixin from \"./datatable/size\";\nimport MathMixin from \"./datatable/math\";\nimport HeaderMenuMixin from \"./datatable/hmenu\";\nimport EditMixin from \"./datatable/edit\";\nimport ColumnsMixin from \"./datatable/columns\";\nimport KeyNavMixin from \"./datatable/keynav\";\nimport DragMixin from \"./datatable/dnd\";\nimport ValidationMixin from \"./datatable/validation\";\nimport PrintMixin from \"./datatable/print\";\nimport ExportMixin from \"./datatable/export\";\nimport SubRowMixin from \"./datatable/subs\";\nimport FreezeRowMixin from \"./datatable/freeze\";\nimport SpansMixin from \"./datatable/spans\";\n\nimport {addStyle, addCss, removeCss, createCss, create, remove, getTextSize, _getClassName, index as getIndex} from \"../webix/html\";\nimport {protoUI, $$, ui} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, uid, bind, delay, toFunctor, isUndefined, isArray, clone, copy} from \"../webix/helpers\";\nimport {debug_size_box} from \"../webix/debug\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nimport TooltipControl from \"../core/tooltipcontrol\";\nimport DataCollection from \"../core/datacollection\";\nimport Number from \"../core/number\";\nimport AutoTooltip from \"../core/autotooltip\";\nimport Group from \"../core/group\";\nimport DataMarks from \"../core/datamarks\";\nimport DataLoader from \"../core/dataloader\";\nimport MapCollection from \"../core/mapcollection\";\nimport Settings from \"../core/settings\";\nimport CustomScroll from \"../core/customscroll\";\nimport Touch from \"../core/touch\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\nimport EditAbility from \"../core/editability\";\nimport PagingAbility from \"../core/pagingability\";\nimport DataMove from \"../core/datamove\";\nimport CustomPrint from \"../core/customprint\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport DragItem from \"../core/dragitem\";\nimport ValidateCollection from \"../core/validatecollection\";\n\nconst api = {\n\tname:\"datatable\",\n\tdefaults:{\n\t\tleftSplit:0,\n\t\trightSplit:0,\n\t\ttopSplit:0,\n\t\tcolumnWidth:100,\n\t\tsort:true,\n\t\tprerender:false,\n\t\tautoheight:false,\n\t\tautowidth:false,\n\t\theader:true,\n\t\tfixedRowHeight:true,\n\t\tscrollAlignY:true,\n\t\tscrollX:true,\n\t\tscrollY:true,\n\t\tdatafetch:50,\n\t\tnavigation:true\n\t},\n\t$skin:function(){\n\t\tthis.defaults.rowHeight = $active.rowHeight;\n\t\tthis.defaults.minRowHeight = $active.rowHeight-6;\n\t\tthis.defaults.headerRowHeight = $active.barHeight - $active.borderWidth*2;\n\t\tthis.defaults.minColumnWidth = $active.dataPadding*2 + $active.borderWidth;\n\t},\n\ton_click:{\n\t\twebix_excel_filter:function(){\n\t\t\treturn false;\n\t\t},\n\t\twebix_richfilter:function(){\n\t\t\treturn false;\n\t\t},\n\t\twebix_table_checkbox:function(e, id){\n\t\t\tid = this.locate(e);\n\n\t\t\tvar item = this.getItem(id.row);\n\t\t\tvar col = this.getColumnConfig(id.column);\n\t\t\tvar trg = e.target;\n\n\t\t\t//read actual value from HTML tag when possible\n\t\t\t//as it can be affected by dbl-clicks\n\t\t\tvar check = (trg.type == \"checkbox\")?trg.checked:(item[id.column] != col.checkValue);\n\t\t\tvar value =  check ? col.checkValue : col.uncheckValue;\n\n\t\t\tvar update = {};\n\t\t\tupdate[id.column] = value;\n\t\t\tthis.updateItem(id.row, update, (this._settings.checkboxRefresh?\"update\":\"save\"));\n\n\t\t\tthis.callEvent(\"onCheck\", [id.row, id.column, value]);\n\t\t\treturn false;\n\t\t},\n\t\twebix_table_radio:function(e){\n\t\t\tvar id = this.locate(e);\n\t\t\t\n\t\t\tvar item = this.getItem(id.row);\n\t\t\tvar col = this.getColumnConfig(id.column);\n\n\t\t\tthis.eachRow(function(rowid){\n\t\t\t\tvar item = this.data.pull[rowid];\n\t\t\t\tif (item && item[id.column] == col.checkValue)\n\t\t\t\t\titem[id.column] = col.uncheckValue;\n\t\t\t});\n\n\t\t\titem[id.column] = col.checkValue;\n\n\t\t\tthis.callEvent(\"onCheck\", [id.row, id.column, true]);\n\t\t\tthis.refresh();\n\t\t\treturn false;\n\t\t}\n\t},\n\ton_dblclick:{\n\t\twebix_table_checkbox: function(){\n\t\t\treturn this.on_click.webix_table_checkbox.apply(this,arguments);\n\t\t}\n\t},\n\ton_context:{\n\t},\n\t$init:function(config){\n\t\tthis.on_click = extend({}, this.on_click);\n\t\tvar html  = \"<div class='webix_ss_header' section='header'><div class='webix_hs_left'></div><div class='webix_hs_center'></div><div class='webix_hs_right'></div></div><div class='webix_ss_body'><div class='webix_ss_left'><div class='webix_ss_center_scroll'></div></div>\";\n\t\thtml += \"<div class='webix_ss_center'><div class='webix_ss_center_scroll' role='rowgroup'></div></div>\";\n\t\thtml += \"<div class='webix_ss_right'><div class='webix_ss_center_scroll'></div></div></div>\";\n\t\thtml += \"<div class='webix_ss_hscroll' role='scrollbar' aria-orientation='horizontal'></div><div class='webix_ss_footer' section='footer'><div class='webix_hs_left'></div><div class='webix_hs_center'></div><div class='webix_hs_right'></div></div><div class='webix_ss_vscroll_header'></div><div class='webix_ss_vscroll' role='scrollbar' aria-orientation='vertical'></div><div class='webix_ss_vscroll_footer'></div>\";\n\n\t\tthis._contentobj.innerHTML = html;\n\t\tthis._top_id = this._contentobj.id = this.name+uid();\n\t\tthis._contentobj.className +=\" webix_dtable\";\n\n\t\tthis._dataobj = this._contentobj;\n\n\t\tthis._header = this._contentobj.firstChild;\n\t\tthis._body = this._header.nextSibling;\n\t\tthis._footer = this._body.nextSibling.nextSibling;\n\n\t\tthis._viewobj.setAttribute(\"role\", \"grid\");\n\t\tif(!config.editable) \n\t\t\tthis._viewobj.setAttribute(\"aria-readonly\", \"true\");\n\n\t\tthis.data.provideApi(this, true);\n\t\tthis.data.attachEvent(\"onParse\", bind(this._call_onparse, this));\n\n\t\tthis.$ready.push(this._first_render);\n\n\t\tthis._columns = [];\n\t\tthis._headers = [];\n\t\tthis._footers = [];\n\t\tthis._rows_cache = [];\n\t\tthis._active_headers = {};\n\t\tthis._filter_elements = {};\n\t\tthis._sort_signs = {};\n\t\tthis._sort_signs_order = [];\n\t\tthis._last_order = [];\n\t\tthis._last_sorted = {};\n\t\tthis._header_height = this._footer_height = 0;\n\n\t\t//component can create new view\n\t\tthis._destroy_with_me = [];\n\n\t\tthis.data.attachEvent(\"onServerConfig\", bind(this._config_table_from_file, this));\n\t\tthis.data.attachEvent(\"onServerOptions\", bind(this._config_options_from_file, this));\n\t\tthis.attachEvent(\"onViewShow\", function(){\n\t\t\tthis._restore_scroll_state();\n\t\t\tthis._refresh_any_header_content();\n\t\t});\n\t\tthis.data.attachEvent(\"onClearAll\", bind(function(soft){\n\t\t\tif (!soft){\n\t\t\t\tthis._scrollLeft = this._scrollTop = 0;\n\t\t\t\tif (this._x_scroll) this._x_scroll.reset();\n\t\t\t\tif (this._y_scroll) this._y_scroll.reset();\n\t\t\t\tthis._setLeftScroll(0);\n\t\t\t}\n\t\t}, this));\n\t\tthis.attachEvent(\"onDestruct\", this._clean_config_struct);\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t\tthis.attachEvent(\"onScrollY\", this._adjust_rows);\n\t\tthis.attachEvent(\"onAfterLoad\", () => {\n\t\t\t// select target row after dyn. data loading (on key navigation)\n\t\t\tif (this._nav_dir && this._sel_ctx) {\n\t\t\t\tif (this._sel_ctx.dir !== this._nav_dir) return; // shifting nav direction mid-load\n\t\t\t\tconst { cell, index, column, mode, details, preserve } = this._sel_ctx;\n\t\t\t\tconst row = this.getIdByIndex(index);\n\t\t\t\tthis._moveSelection(cell, { row, column }, mode, details, preserve);\n\t\t\t\tthis._nav_dir = this._sel_ctx = null;\n\t\t\t}\n\t\t});\n\n\t\tcallEvent(\"onDataTable\", [this, config]);\n\t},\n\tcolumns_setter(value) {\n\t\treturn copy(value, null, true);\n\t},\n\t_render_initial:function(){\n\t\tthis._scrollSizeX = this._scrollSizeY = env.scrollSize;\n\t\tconst hheight = this._settings.headerRowHeight + 1;\n\n\t\taddStyle(\"#\"+this._top_id +\" .webix_cell { height:\"+this._settings.rowHeight+\"px; line-height:\"+(this._settings.rowLineHeight || this._settings.rowHeight)+\"px;\" +(this._settings.fixedRowHeight?\"\":\"white-space:normal;\")+\" }\");\n\t\taddStyle(\"#\"+this._top_id +\" .webix_hcell { height:\"+hheight+\"px; line-height:\"+hheight+\"px;}\");\n\t\tthis._render_initial = function(){};\n\t},\n\t_first_render:function(){\n\t\tthis.data.attachEvent(\"onStoreLoad\", ()=>this._refresh_any_header_content(true));\n\t\tthis.data.attachEvent(\"onSyncApply\", ()=>this._refresh_any_header_content(true));\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(){ return this.render.apply(this, arguments); }, this));\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(this._refresh_tracking_header_content, this));\n\t\tthis.render();\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t},\n\t_delayRender:function(cell){\n\t\tclearTimeout(this._renderDelay);\n\t\tthis._renderDelay = delay((cell)=>{\n\t\t\tthis._renderDelay = 0;\n\t\t\tif(!isUndefined(this._delayedLeftScroll)){\n\t\t\t\tthis._setLeftScroll(this._delayedLeftScroll);\n\t\t\t\tdelete this._delayedLeftScroll;\n\t\t\t}\n\t\t\tthis.render();\n\n\t\t\t//restore focus\n\t\t\tif(!this._settings.clipboard && cell){\n\t\t\t\tconst node = this.getItemNode(cell);\n\t\t\t\tif(node) node.focus();\n\t\t\t}\n\n\t\t\tif (!this._active_load_next) this._nav_dir = this._sel_ctx = null;\n\t\t}, this, [cell]);\n\t},\n\trender:function(id, data, mode){\n\t\t//pure data saving call\n\t\tif (mode == \"save\" || this._renderDelay) return;\n\n\t\tif (!this._columns.length){\n\t\t\tvar cols = this._settings.columns;\n\t\t\tif (!cols || !cols.length) {\n\t\t\t\tif (this._settings.autoConfig && this.data.order.length && !this._hidden_column_order.length){\n\t\t\t\t\tthis._dtable_fully_ready = 0;\n\t\t\t\t\tthis._autoDetectConfig();\n\t\t\t\t} else\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._define_structure();\n\t\t}\n\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn this._render_initial(); //Chrome 34, Custom Font loading bug\n\n\t\tvar fast_mode = this.config.experimental && !this._settings.subview;\n\t\t//replace multiple atomic updates by single big repaint\n\t\tif (id && data != -1 && (mode == \"paint\" || mode == \"update\") && !fast_mode){\n\t\t\tif (this._render_timer)\n\t\t\t\tclearTimeout(this._render_timer);\n\n\t\t\tif (!this._render_timer || this._render_timer_id == id){\n\t\t\t\tthis._render_timer_id = id;\n\t\t\t\tthis._render_timer = delay(function(){\n\t\t\t\t\t//if only one call - repaint single item\n\t\t\t\t\tthis.render(id, -1, mode);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tthis._render_timer_id = null;\n\t\t\t\tthis._render_timer = delay(function(){\n\t\t\t\t\t//if ther was a serie of calls - replace them with single full repaint\n\t\t\t\t\tthis.render();\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (this._render_timer){\n\t\t\tclearTimeout(this._render_timer);\n\t\t\tthis._render_timer = 0;\n\t\t}\n\n\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\n\t\t\tthis._render_initial();\n\t\t\tif (!this._dtable_fully_ready)\n\t\t\t\tthis._apply_headers();\n\n\t\t\tif (this._content_width){\n\t\t\t\tif (fast_mode && (mode == \"paint\" || mode == \"update\") && id)\n\t\t\t\t\tthis._repaint_single_row(id);\n\t\t\t\telse\n\t\t\t\t\tthis._check_rendered_cols(true, true);\n\t\t\t}\n\n\t\t\tif (!id || mode!=\"update\"){\n\t\t\t\tthis._dtable_height = this._get_total_height();\n\t\t\t\tthis._set_split_sizes_y();\n\t\t\t}\n\n\t\t\t//don't depend on hidden rows/rolumns\n\t\t\tthis._viewobj.setAttribute(\"aria-colcount\", Math.max(this._hidden_column_order.length, this._columns.length));\n\t\t\tthis._viewobj.setAttribute(\"aria-rowcount\", this.data.count());\n\n\t\t\tthis.callEvent(\"onAfterRender\",[this.data]);\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetColumns:function(all){\n\t\tconst horder = this._hidden_column_order;\n\t\tif(all && horder.length){\n\t\t\tconst columns = [];\n\t\t\tfor(let i=0; i<horder.length; i++)\n\t\t\t\tcolumns.push(this.getColumnConfig(horder[i]));\n\t\t\treturn columns;\n\t\t} else\n\t\t\treturn [...this._columns];\n\t},\n\tgetColumnConfig:function(id){\n\t\treturn this._columns_pull[id] || this._hidden_column_hash[id];\n\t},\n\t_config_options_from_file:function(colls){\n\t\tfor (var key in colls){\n\t\t\tvar column = this.getColumnConfig(key);\n\t\t\tassert(column, \"Orphan collection: \"+key);\n\t\t\tvar temp = new DataCollection({\n\t\t\t\tdata:colls[key]\n\t\t\t});\n\t\t\tthis._destroy_with_me.push(temp);\n\t\t\tthis._bind_collection(temp, column);\n\t\t}\n\t},\n\t//xml has different configuration structure, fixing\n\t_config_table_from_file:function(config){\n\t\tthis._create_scheme_init();\n\t\tif (config.columns && this._dtable_fully_ready)\n\t\t\tthis.refreshColumns(config.columns);\n\t},\n\t_define_structure:function(){\n\t\tif (this._settings.columns){\n\t\t\tthis._columns_pull = {};\n\t\t\tthis._columns = this._settings.columns;\n\t\t\tthis._rightSplit = this._columns.length - (this.config.rightSplit || 0);\n\n\t\t\tfor(let i = 0; i < this._columns.length; i++)\n\t\t\t\tthis._prepare_single_column(this._columns[i]);\n\n\t\t\tthis._normalize_headers(\"header\", this._headers);\n\t\t\tthis._normalize_headers(\"footer\", this._footers);\n\n\t\t\tthis.callEvent(\"onStructureLoad\",[]);\n\t\t}\n\t},\n\t_prepare_single_column:function(col){\n\t\tthis._columns_pull[col.id] = col;\n\n\t\tif (isUndefined(col.header))\n\t\t\tcol.header = col.id;\n\n\t\tlet format = col.cssFormat;\n\t\tif (format)\n\t\t\tcol.cssFormat = toFunctor(format, this.$scope);\n\n\t\tcol.width = this._correctColumnWidth(col.width||this._settings.columnWidth, col);\n\t\tif (typeof col.format == \"string\") \n\t\t\tcol.format = i18n[col.format]||window[col.format];\n\t\tif (col.numberFormat){\n\t\t\tlet nformat = col.numberFormat;\n\t\t\tif (typeof nformat === \"string\")\n\t\t\t\tcol.numberFormat = nformat = Number.getConfig(nformat);\n\t\t\tcol.format = Number.numToStr(nformat);\n\t\t\tcol.editFormat = col.editFormat || function(val){ return Number.format(val, nformat); };\n\t\t\tcol.editParse = col.editParse || function(val){ return Number.parse(val, nformat); };\n\t\t}\n\n\t\t//default settings for checkboxes and radios\n\t\tif (isUndefined(col.checkValue)) col.checkValue = 1;\n\t\tif (isUndefined(col.uncheckValue)) col.uncheckValue = 0;\n\t\t\n\t\tif (col.css && typeof col.css == \"object\")\n\t\t\tcol.css = createCss(col.css);\n\n\t\tlet rawTemplate = col.template;\n\t\tif (rawTemplate){\n\t\t\tif (typeof rawTemplate == \"string\")\n\t\t\t\trawTemplate = rawTemplate.replace(/#\\$value#/g,\"#\"+col.id+\"#\");\n\t\t\tcol.template = template(rawTemplate);\n\t\t}\n\t},\n\t_define_structure_and_render:function(){\n\t\tthis._apply_headers();\n\t},\n\t_clean_config_struct:function(){ \n\t\t//remove column technical info from the column\n\t\t//it allows to reuse the same config object for new grid\n\t\tfor (var i = 0; i < this._columns.length; i++){\n\t\t\tdelete this._columns[i].attached;\n\t\t\tdelete this._columns[i].node;\n\t\t}\n\t},\n\t_apply_headers:function(){\n\t\tthis._rightSplit = this._columns.length - (this.config.rightSplit || 0);\n\t\tthis._dtable_width = 0;\n\n\t\tfor (let i = 0; i < this._columns.length; i++){\n\t\t\tif (!this._columns[i].node){\n\n\t\t\t\tvar temp = create(\"DIV\");\n\t\t\t\ttemp.style.width = this._columns[i].width + \"px\";\n\t\t\t\tthis._columns[i].node = temp;\n\t\t\t}\n\t\t\tif (i>=this._settings.leftSplit && i<this._rightSplit)\n\t\t\t\tthis._dtable_width += this._columns[i].width;\n\t\t}\n\n\t\tvar marks = [];\n\t\t\n\t\tif (this._settings.rightSplit){\n\t\t\tvar nr = this._columns.length-this._settings.rightSplit;\n\t\t\tmarks[nr]  =\" webix_first\";\n\t\t\tmarks[nr-1]=\" webix_last\";\n\t\t}\n\t\tif (this._settings.leftSplit){\n\t\t\tvar nl = this._settings.leftSplit;\n\t\t\tmarks[nl]  =\" webix_first\";\n\t\t\tmarks[nl-1]=\" webix_last\";\n\t\t}\n\t\tmarks[0]  = (marks[0]||\"\")+\" webix_first webix_select_mark\";\n\t\tvar last_index = this._columns.length-1;\n\t\tmarks[last_index] = (marks[last_index]||\"\")+\" webix_last\";\n\n\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tvar node = this._columns[i].node;\n\t\t\tnode.setAttribute(/*@attr*/\"column\", i);\n\t\t\tnode.className = \"webix_column \"+(this._columns[i].css||\"\")+(marks[i]||\"\");\n\t\t}\n\n\t\tthis._create_scrolls();\t\t\n\n\t\tthis._set_columns_positions();\n\t\tthis._set_split_sizes_x();\n\t\tthis._render_header_and_footer();\n\n\t\tthis._dtable_fully_ready = true;\n\t},\n\t_set_columns_positions:function(){\n\t\tvar left = 0;\n\t\tfor (var i = 0; i < this._columns.length; i++){\n\t\t\tvar column = this._columns[i];\n\t\t\tif (i == this._settings.leftSplit || i == this._rightSplit)\n\t\t\t\tleft = 0;\n\n\t\t\tif (column.node){\n\t\t\t\tcolumn.node.style.left = left+\"px\";\n\t\t\t\tif (this._settings.leftSplit || this._settings.rightSplit){\n\t\t\t\t\tremove(column.node);\n\t\t\t\t\tcolumn.attached = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tleft += column.width;\n\t\t}\n\t},\n\t_render_header_and_footer:function(){\n\t\tif (!this._header_fix_width)\n\t\t\tthis._header_fix_width = 0;\n\n\t\tthis._header_height = this._footer_height = 0;\n\n\t\tif (this._settings.header) {\n\t\t\tthis._refreshHeaderContent(this._header, 0, 1);\n\t\t\tthis._normalize_headers(\"header\", this._headers);\n\t\t\tthis._header_height = this._headers._summ;\n\t\t\tthis._render_header_section(this._header, \"header\", this._headers);\n\t\t}\n\t\tif (this._settings.footer){\n\t\t\tthis._refreshHeaderContent(this._footer, 0, 1);\n\t\t\tthis._normalize_headers(\"footer\", this._footers);\n\t\t\tthis._footer_height = this._footers._summ;\n\t\t\tthis._render_header_section(this._footer, \"footer\", this._footers);\n\t\t}\n\n\t\tthis.refreshHeaderContent(false, false);\n\t\tthis._size_header_footer_fix();\n\n\t\tfor (let i=0; i<this._sort_signs_order.length; i++){\n\t\t\tconst col_id = this._sort_signs_order[i];\n\t\t\tthis._render_single_mark(col_id, this._sort_signs[col_id]);\n\t\t}\n\t},\n\t_getHeaderHeight:function(header, column, ind){\n\t\tvar width = 0;\n\t\tvar colspan = header.colspan || 1;\n\t\tvar css = \"webix_hcell \"+(header.css||\"\");\n\n\t\tif(header.rotate)\n\t\t\tcss += \" webix_measure_rotate\";\n\t\telse\n\t\t\tfor(var i = 0; i<colspan; i++)\n\t\t\t\twidth += this._columns[ind+i] ? this._columns[ind+i].width : this.config.columnWidth;\n\t\t\n\t\tvar size = getTextSize(\n\t\t\t[header.text],\n\t\t\tcss, \n\t\t\twidth\n\t\t);\n\n\t\treturn (header.rotate ? size.width : size.height);\n\t},\n\t_normalize_headers:function(collection, heights){\n\t\tlet rows = 0;\n\n\t\t// clear array of previous values\n\t\theights.length = 0;\n\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tlet data = this._columns[i][collection] || \"\";\n\t\t\tif (!isArray(data)) data = [data];\n\n\t\t\tfor (let j = 0; j < data.length; j++){\n\t\t\t\tif (typeof data[j] != \"object\")\n\t\t\t\t\tdata[j] = { text:data[j] };\n\n\t\t\t\tif (data[j] && data[j].height) heights[j] = Math.max(heights[j]||0, data[j].height);\n\t\t\t\tif (data[j] && data[j].autoheight) heights[j] = Math.max(heights[j]||0, this._getHeaderHeight(data[j], this._columns[i], i));\n\t\t\t\tif (data[j] && data[j].css && typeof data[j].css === \"object\") data[j].css = createCss(data[j].css);\n\t\t\t}\n\t\t\trows = Math.max(rows, data.length);\n\t\t\tthis._columns[i][collection] = data;\n\t\t}\n\n\t\theights._summ = rows;\n\t\tfor (let i = rows-1; i >= 0; i--){\n\t\t\theights[i] = heights[i] || this._settings.headerRowHeight;\n\t\t\theights._summ += heights[i]*1;\n\t\t}\n\n\t\t//set null to cells included in col|row spans\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tconst col = this._columns[i][collection];\n\t\t\tfor (let j=0; j<col.length; j++){\n\t\t\t\tif (col[j] && col[j].rowspan)\n\t\t\t\t\tfor (let z=1; z<col[j].rowspan; z++)\n\t\t\t\t\t\tcol[j+z] = null;\n\t\t\t\tif (col[j] && col[j].colspan)\n\t\t\t\t\tfor (let z=1; z<col[j].colspan; z++)\n\t\t\t\t\t\tthis._columns[i+z][collection][j] = null;\n\t\t\t}\n\t\t}\n\n\t\t//auto-rowspan cells, which has not enough header lines\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tconst data = this._columns[i][collection];\n\t\t\tif (data.length < rows){\n\t\t\t\tconst end = data.length-1;\n\t\t\t\tdata[end].rowspan = rows - data.length + 1;\n\t\t\t\tfor (let j=end+1; j<rows; j++)\n\t\t\t\t\tdata[j] = null;\n\t\t\t}\n\t\t}\n\t\treturn rows;\n\t},\n\t_find_header_content:function(sec, id){\n\t\tconst attr = /*@attr*/\"active_id\";\n\t\treturn sec.querySelector(`DIV[${attr}=\"${id}\"]`);\n\t},\n\tgetHeaderContent:function(id){\n\t\tvar obj = this._find_header_content(this._header, id);\n\t\tif (!obj)\n\t\t\tobj = this._find_header_content(this._footer, id);\n\n\t\tif (obj){\n\t\t\tvar config = this._active_headers[id];\n\t\t\tvar type = datafilter[config.content];\n\n\t\t\tconst base = {\n\t\t\t\ttype: type,\n\t\t\t\tgetValue:function(text){ return type.getValue(obj, text); },\n\t\t\t\tsetValue:function(value){ return type.setValue(obj, value); }\n\t\t\t};\n\n\t\t\tif (type.getHelper) extend(base, type.getHelper(obj, config));\n\t\t\treturn base;\n\t\t}\n\t},\n\t_render_empty_hcell:function(height, css){\n\t\treturn `<div class='${css}' style='height:${height}px;'></div>`;\n\t},\n\t_render_subheader:function(start, end, width, name, heights){\n\t\tif (start == end) return \"\";\n\n\t\tlet spans = \"\";\n\t\tlet html = `<div style=\"background:inherit;width:${width}px;\">`;\n\t\tconst count = this._columns[0][name].length;\n\n\t\tlet left = 0;\n\t\tfor (let i = start; i < end; i++){\n\t\t\tlet top = 0;\n\t\t\tconst width = this._columns[i].width;\n\t\t\tconst abs = i == start ? \"position:static;\" : `position:absolute;top:${top}px;left:${left}px;`;\n\t\t\thtml += `<div class=\"webix_hcolumn\" style=\"${abs}width:${width}px;overflow:hidden;\">`;\n\t\t\tfor (let j = 0; j < count; j++){\n\t\t\t\tconst header = this._columns[i][name][j];\n\t\t\t\tconst cell_height = heights[j];\n\n\t\t\t\tlet hcss = \"webix_hcell\";\n\t\t\t\tif (this._columns[i].$selected) hcss += \" webix_sel_hcell\";\n\t\t\t\tif (i == start) hcss += \" webix_first\";\n\t\t\t\tif (i == end-1) hcss += \" webix_last\";\n\t\t\t\tif (j == count-1) hcss += \" webix_last_row\";\n\n\t\t\t\tif (!header){\n\t\t\t\t\thtml += this._render_empty_hcell(cell_height+1, hcss);\n\t\t\t\t\ttop += cell_height+1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (header.content){\n\t\t\t\t\theader.contentId = header.contentId||uid();\n\t\t\t\t\theader.columnId = this._columns[i].id;\n\t\t\t\t\theader.format = this._columns[i].format;\n\n\t\t\t\t\tassert(datafilter, \"Filtering extension was not included\");\n\t\t\t\t\tassert(datafilter[header.content], \"Unknown content type: \"+header.content);\n\n\t\t\t\t\theader.text = datafilter[header.content].render(this, header);\n\t\t\t\t\tthis._active_headers[header.contentId] = header;\n\t\t\t\t\tthis._has_active_headers = true;\n\t\t\t\t}\n\n\t\t\t\tif (header.css)\t\t// apply unique css after content initialization\n\t\t\t\t\thcss += \" \" + header.css;\n\n\t\t\t\tlet cell = \"<div \"+/*@attr*/\"row\"+\"='\"+j+\"'\"+/*@attr*/\"column\"+\"='\"+(header.colspan?(header.colspan-1+i):i)+\"'\";\n\n\t\t\t\tlet sheight = \"\";\n\t\t\t\tif (header.contentId)\n\t\t\t\t\tcell += \" \"+/*@attr*/\"active_id\"+\"='\"+header.contentId+\"'\";\n\n\t\t\t\tlet isSpan = false;\n\t\t\t\tlet cheight = cell_height;\n\t\t\t\tif ((header.colspan && header.colspan>1) || (header.rowspan && header.rowspan>1)){\n\t\t\t\t\tconst cwidth = this._summ_right(this._columns, i, header.colspan) || width;\n\t\t\t\t\tcheight = this._summ_next(heights, j, header.rowspan);\n\t\t\t\t\tif (cheight <= 0) cheight = cell_height;\n\t\t\t\t\thtml += this._render_empty_hcell(cell_height+1, hcss);\n\n\t\t\t\t\tif (header.colspan && i+header.colspan >= end) hcss += \" webix_last\";\n\t\t\t\t\tif (header.rowspan && j+header.rowspan >= count) hcss += \" webix_last_row\";\n\t\t\t\t\thcss += \" webix_span\"; isSpan = true;\n\t\t\t\t\tsheight = ` colspan='${header.colspan||1}' rowspan='${header.rowspan||1}' style='position:absolute;top:${top}px;left:${left}px;line-height:${cheight+1}px;width:${cwidth}px;height:${cheight+1}px;'`;\n\t\t\t\t}\n\t\t\t\telse if (cell_height != this._settings.headerRowHeight)\n\t\t\t\t\tsheight =` style='line-height:${cell_height+1}px;height:${cell_height+1}px;'`;\n\n\t\t\t\tcell += \" class=\\\"\"+hcss+\"\\\"\";\n\t\t\t\tcell += \" \"+sheight+\">\";\n\n\t\t\t\tlet text = (header.text === \"\") ? \"&nbsp;\" : header.text;\n\t\t\t\tif (header.rotate)\n\t\t\t\t\ttext = \"<div class='webix_rotate' style='width:\"+(cheight-10)+\"px;transform-origin:center \"+(cheight-15)/2+\"px;'>\"+text+\"</div>\";\n\n\t\t\t\tcell += text + \"</div>\";\n\t\t\t\tif (isSpan) spans += cell;\n\t\t\t\telse html += cell;\n\n\t\t\t\ttop += cell_height+1;\n\t\t\t}\n\t\t\tleft += width;\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\treturn html + spans + \"</div>\";\n\t},\n\t_summ_next: function(heights, start, i){\n\t\tvar summ = -1;\n\n\t\ti += start;\n\t\tfor (start; start<i; start++)\n\t\t\tsumm+=heights[start]+1;\n\n\t\treturn summ;\n\t},\n\t_summ_right: function(columns, start, i){\n\t\tvar summ = 0;\n\n\t\ti += start;\n\t\tfor (start; start<i; start++)\n\t\t\tsumm+=columns[start].width;\n\n\t\treturn summ;\n\t},\n\tshowItemByIndex:function(row_ind, column_ind){\n\t\tvar pager = this._settings.pager;\n\t\tif (pager && row_ind >= this._settings.topSplit){\n\t\t\tvar target = Math.floor(row_ind/pager.size);\n\t\t\tif (target != pager.page)\n\t\t\t\t$$(pager.id).select(target);\n\t\t}\n\n\t\t//parameter will be set to -1, to mark that scroll need not to be adjusted\n\t\tvar scroll = this.getScrollState();\n\n\t\tif (row_ind >= this._settings.topSplit || (this._settings.prerender && row_ind != -1)){\n\t\t\tlet state = this._get_y_range();\n\t\t\tif (row_ind < state[0]+1 || row_ind >= state[1]-1 ){\n\t\t\t\t//not visible currently\n\t\t\t\tlet summ = this._getHeightByIndexSumm((pager?this.data.$min:0),row_ind);\n\t\t\t\tlet dataHeight = this._dtable_offset_height+1;\n\t\t\t\tconst itemHeight = this._getHeightByIndex(row_ind);\n\t\t\t\tif (row_ind < state[0]+1){\n\t\t\t\t\t//scroll top - show row at top of screen\n\t\t\t\t\tsumm = Math.max(0, summ) - this._get_top_split_height();\n\n\t\t\t\t\tif (row_ind > 0 && dataHeight)\n\t\t\t\t\t\tsumm -= this._getHeightByIndex(row_ind - 1);\n\t\t\t\t} else if(summ + itemHeight > dataHeight) {\n\t\t\t\t\t//scroll bottom - show row at bottom of screen\n\t\t\t\t\tsumm += itemHeight - dataHeight;\n\t\t\t\t\t//because of row rounding we need to scroll some extra\n\t\t\t\t\tfor (let cur_ind = row_ind; cur_ind>0 && dataHeight>0 ; cur_ind--)\n\t\t\t\t\t\tdataHeight -= this._getHeightByIndex(cur_ind);\n\n\t\t\t\t\tif (row_ind > 0 && dataHeight)\n\t\t\t\t\t\tsumm += this._getHeightByIndex(row_ind + 1);\n\t\t\t\t} else { summ = scroll.y; }\n\n\t\t\t\tscroll.y = summ;\n\t\t\t}\n\t\t}\n\t\tif (column_ind != -1){\n\t\t\t//ignore split columns - they are always visible\n\t\t\tif (column_ind < this._settings.leftSplit || column_ind >= this._rightSplit)\n\t\t\t\treturn this.scrollTo(scroll.x, scroll.y);\n\n\t\t\t//very similar to y-logic above\n\t\t\tlet state = this._get_x_range();\n\t\t\tif (column_ind < state[0]+1 || column_ind >= state[1]-1 ){\n\t\t\t\t//not visible currently\n\t\t\t\tlet summ = 0;\n\t\t\t\tfor (var i=this._settings.leftSplit; i<column_ind; i++)\n\t\t\t\t\tsumm += this._columns[i].width;\n\n\t\t\t\tconst itemWidth = this._columns[column_ind].width;\n\t\t\t\t/*jsl:ignore*/\n\t\t\t\tif (column_ind < state[0]+1){\n\t\t\t\t\t//scroll to left border\n\t\t\t\t} else if(summ + itemWidth > this._center_width){\n\t\t\t\t\t//scroll to right border\n\t\t\t\t\tsumm += itemWidth - this._center_width;\n\t\t\t\t} else{ summ = scroll.x; }\n\n\t\t\t\t/*jsl:end*/\n\t\t\t\tscroll.x = summ;\n\t\t\t}\n\t\t}\n\n\t\tthis.scrollTo(scroll.x, scroll.y);\n\t},\n\tshowCell:function(row, column){\n\t\tif (!column || !row){ \n\t\t\t//if column or row not provided - take from current selection\n\t\t\tvar t=this.getSelectedId(true);\n\t\t\tif (t.length == 1){\n\t\t\t\tcolumn = column || t[0].column;\n\t\t\t\trow = row || t[0].row;\n\t\t\t}\n\t\t}\n\t\t//convert id to index\n\t\tcolumn = column?this.getColumnIndex(column):-1;\n\t\trow = row?this.getIndexById(row):-1;\n\t\tthis.showItemByIndex(row, column);\n\n\t},\n\tscrollTo:function(x,y){\n\t\tif (!this._x_scroll) return;\n\t\tif (this._scrollTo_touch)\n\t\t\treturn this._scrollTo_touch(x,y);\n\n\t\tif (x !== null)\n\t\t\tthis._x_scroll.scrollTo(x);\n\t\tif (y !== null)\n\t\t\tthis._y_scroll.scrollTo(y);\n\t},\n\tgetScrollState:function(){\n\t\tif (this._getScrollState_touch)\n\t\t\treturn this._getScrollState_touch();\n\n\t\tconst diff = this._render_scroll_shift ? 0 : (this._render_scroll_diff||0);\n\t\treturn { x:(this._scrollLeft||0), y:(this._scrollTop+diff) };\n\t},\n\tshowItem:function(id){\n\t\tthis.showItemByIndex(this.getIndexById(id), -1);\n\t},\n\t_render_header_section:function(sec, name, heights){\n\t\tconst header = sec.childNodes;\n\n\t\theader[0].innerHTML = this._render_subheader(0, this._settings.leftSplit, this._left_width, name, heights);\n\t\theader[1].innerHTML = this._render_subheader(this._settings.leftSplit, this._rightSplit, this._dtable_width, name, heights);\n\t\theader[2].innerHTML = this._render_subheader(this._rightSplit, this._columns.length, this._right_width, name, heights);\n\n\t\tconst x = this.getScrollState().x;\n\t\tif (env.touch)\n\t\t\tTouch._set_matrix(header[1].firstChild,-x,0,\"0ms\");\n\t\telse header[1].scrollLeft = x;\n\t\theader[1].onscroll = () => this._scroll_with_header();\n\t},\n\t_scroll_with_header:function(){\n\t\tconst scrollLeft = this._header.childNodes[1].scrollLeft;\n\n\t\tif (this._ignore_after_focus_scroll)\n\t\t\treturn this._ignore_after_focus_scroll = false;\n\n\t\tthis._x_scroll.scrollTo(scrollLeft);\n\n\t\tif (this._touch_scroll){\n\t\t\tif (scrollLeft) this._header.childNodes[1].scrollLeft = 0;\n\t\t\tthis._ignore_after_focus_scroll = scrollLeft;\n\t\t}\n\t},\n\t_refresh_tracking_header_content:function(){\n\t\tthis.refreshHeaderContent(true, true);\n\t},\n\t_refresh_any_header_content:function(loading){\n\t\tthis.refreshHeaderContent(false, true, null, loading);\n\t},\n\t//[DEPRECATE] - v3.0, move to private\n\trefreshHeaderContent:function(trackedOnly, preserve, id, loading){\n\t\tif (this._settings.header){\n\t\t\tif (preserve) this._refreshHeaderContent(this._header, trackedOnly, 1, id, loading);\n\t\t\tthis._refreshHeaderContent(this._header, trackedOnly, 0, id, loading);\n\t\t}\n\t\tif (this._settings.footer){\n\t\t\tif (preserve) this._refreshHeaderContent(this._footer, trackedOnly, 1, id, loading);\n\t\t\tthis._refreshHeaderContent(this._footer, trackedOnly, 0, id, loading);\n\t\t}\n\t},\n\trefreshFilter:function(id){\n\t\tthis.refreshHeaderContent(false, true, id);\n\t},\n\t_refreshHeaderContent:function(sec, cellTrackOnly, getOnly, byId, loading){\n\t\tif (this._has_active_headers && sec){\n\t\t\tconst tag = \"DIV\";\n\t\t\tconst attr = /*@attr*/\"active_id\";\n\t\t\tconst cells = sec.querySelectorAll(`${tag}[${attr}]`);\n\n\t\t\tfor (let i = 0; i < cells.length; i++){\n\t\t\t\tconst activeId = cells[i].getAttribute(/*@attr*/\"active_id\");\n\t\t\t\tif (activeId){\n\t\t\t\t\tconst obj = this._active_headers[activeId];\n\t\t\t\t\tif (byId && byId != obj.columnId) continue;\n\t\t\t\t\t\n\t\t\t\t\tvar content = datafilter[obj.content];\n\t\t\t\t\tif (getOnly){\n\t\t\t\t\t\tif (content.getValue){\n\t\t\t\t\t\t\tobj.value = content.getValue(cells[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!cellTrackOnly || content.trackCells){\n\t\t\t\t\t\tif(!loading || !this.getColumnConfig(obj.columnId).collection)\n\t\t\t\t\t\t\tcontent.refresh(this, cells[i], obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\theaderContent:[],\n\t_set_size_scroll_area:function(obj, height, hdx){\n\t\tif (this._scrollSizeY){\n\t\t\tobj.style.height = Math.max(height,1)-1+\"px\";\n\t\t\tobj.style.width = (this._rightSplit?0:hdx)+this._scrollSizeY-1+\"px\";\n\t\t} else \n\t\t\tobj.style.display = \"none\";\n\t},\n\t_size_header_footer_fix:function(){\n\t\tif (this._settings.header)\n\t\t\tthis._set_size_scroll_area(this._header_scroll, this._header_height, this._header_fix_width);\n\t\tif (this._settings.footer)\n\t\t\tthis._set_size_scroll_area(this._footer_scroll, this._footer_height, this._header_fix_width);\n\t},\n\t_update_scroll:function(){\n\t\tconst hasX = !(this._settings.autowidth || this._settings.scrollX === false);\n\t\tconst hasY = !(this._settings.autoheight || this._settings.scrollY === false);\n\t\tthis._scrollSizeX = hasX ? env.scrollSize : 0;\n\t\tthis._scrollSizeY = hasY ? env.scrollSize : 0;\n\n\t\tif (this._x_scroll){\n\t\t\tthis._x_scroll._settings.scrollSize = this._scrollSizeX;\n\t\t\tthis._x_scroll._settings.scrollVisible = hasX;\n\t\t}\n\t\tif (this._y_scroll){\n\t\t\tthis._y_scroll._settings.scrollSize = this._scrollSizeY;\n\t\t\tthis._y_scroll._settings.scrollVisible = hasY;\n\t\t}\n\t},\n\t_create_scrolls:function(){\n\t\tthis._scrollTop = 0;\n\t\tthis._scrollLeft = 0;\n\n\t\tconst hasX = !(this._settings.autowidth || this._settings.scrollX === false);\n\t\tconst hasY = !(this._settings.autoheight || this._settings.scrollY === false);\n\t\tif (!hasX) this._scrollSizeX = 0;\n\t\tif (!hasY) this._scrollSizeY = 0;\n\n\t\tif (!this._x_scroll){\n\t\t\tthis._x_scroll = ui({\n\t\t\t\tview: \"vscroll\",\n\t\t\t\tcontainer: this._footer.previousSibling,\n\t\t\t\tscrollWidth: this._dtable_width,\n\t\t\t\tscrollSize: this._scrollSizeX,\n\t\t\t\tscrollVisible: hasX\n\t\t\t});\n\n\t\t\t//fix for scroll space on Mac\n\t\t\tif (!this._scrollSizeX && !env.$customScroll)\n\t\t\t\tthis._x_scroll._viewobj.style.position = \"absolute\";\n\n\t\t\tthis._x_scroll.attachEvent(\"onScroll\", bind(this._onscroll_x, this));\n\t\t}\n\n\t\tif (!this._y_scroll){\n\t\t\tthis._header_scroll = this._footer.nextSibling;\n\t\t\tvar vscroll_view = this._header_scroll.nextSibling;\n\t\t\tthis._footer_scroll = vscroll_view.nextSibling;\n\n\t\t\tthis._y_scroll = ui({\n\t\t\t\tview: \"vscroll\",\n\t\t\t\tcontainer: vscroll_view,\n\t\t\t\tscrollHeight: 100,\n\t\t\t\tscroll: \"y\",\n\t\t\t\tscrollSize: this._scrollSizeY,\n\t\t\t\tscrollVisible: hasY\n\t\t\t});\n\n\t\t\tthis._y_scroll.activeArea(this._body);\n\t\t\tthis._x_scroll.activeArea(this._body, true);\n\t\t\tthis._y_scroll.attachEvent(\"onScroll\", bind(this._onscroll_y, this));\n\t\t}\n\n\t\tif (this._content_width)\n\t\t\tthis.callEvent(\"onResize\",[this._content_width, this._content_height]);\n\n\t\tif (env.$customScroll)\n\t\t\tCustomScroll.enable(this);\n\n\t\tthis._create_scrolls = function(){};\n\t},\n\tcolumnId:function(index){\n\t\treturn this._columns[index] && this._columns[index].id;\n\t},\n\tgetColumnIndex:function(id){\n\t\tfor (var i = 0; i < this._columns.length; i++)\n\t\t\tif (this._columns[i].id == id) \n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\t_getNodeBox:function(rid, cid){\n\t\tvar xs=0, xe=0, ye=0, ys=0;\n\t\tvar i; var zone = 0;\n\t\tfor (i = 0; i < this._columns.length; i++){\n\t\t\tif (this._rightSplit == i || this._settings.leftSplit == i){\n\t\t\t\txs=0; zone++;\n\t\t\t}\n\t\t\tif (this._columns[i].id == cid) \n\t\t\t\tbreak;\n\t\t\txs+=this._columns[i].width;\n\t\t}\n\t\txe+=this._columns[i].width;\n\n\t\tfor (i = 0; i < this.data.order.length; i++){\n\t\t\tif (this.data.order[i] ==rid) \n\t\t\t\tbreak;\n\t\t\tys+=this._getHeightByIndex(i);\n\t\t}\n\t\tye+=this._getHeightByIndex(i);\n\t\treturn [xs,xe,ys-this._scrollTop,ye, this._body.childNodes[zone]];\n\t},\n\t_id_to_string:function(){ return this.row; },\n\tlocate:function(node, idOnly){\n\t\tconst tview = $$(node);\n\t\tif (this == tview) {\n\t\t\tnode = node.target || node;\n\t\t} else if (tview && tview.config.container) {\n\t\t\tnode = tview.$view.parentNode;\n\t\t\tif (this !== $$(node)) return null;\n\t\t} else return null;\n\n\t\twhile (node && node.getAttribute){\n\t\t\tif (node === this.$view) break;\n\t\t\t\n\t\t\tlet pos = null;\n\t\t\tconst css = _getClassName(node).toString();\n\t\t\tif (css.indexOf(\"webix_cell\") != -1){\n\t\t\t\tpos = this._locate(node);\n\t\t\t\tif (pos)\n\t\t\t\t\tpos.row = this.data.order[pos.rind];\n\t\t\t}\n\t\t\tif (css.indexOf(\"webix_hcell\") != -1){\n\t\t\t\tpos = this._locate(node);\n\t\t\t\tif (pos){\n\t\t\t\t\tpos.header = true;\n\t\t\t\t\tif (pos.span)\n\t\t\t\t\t\tpos.cind -= pos.span-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (css.indexOf(\"webix_drop_area\") != -1){\n\t\t\t\tpos = this._locate(node);\n\t\t\t\tif (pos)\n\t\t\t\t\tpos.row = pos.rind = \"$webix-drop\";\n\t\t\t}\n\n\t\t\tif (pos){\n\t\t\t\tif (idOnly) return pos.header ? null : pos.row;\n\t\t\t\tpos.column = this._columns[pos.cind].id;\n\t\t\t\tpos.toString = this._id_to_string;\n\t\t\t\treturn pos;\n\t\t\t}\n\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t_locate:function(node){\n\t\tvar cdiv = node.parentNode;\n\t\tif (!cdiv) return null;\n\t\tvar column = (node.getAttribute(/*@attr*/\"column\") || cdiv.getAttribute(/*@attr*/\"column\"))*1;\n\t\tvar rind = node.getAttribute(\"aria-rowindex\")*1;\n\t\tvar row = node.getAttribute(/*@attr*/\"row\") || (rind ? rind-1 : 0);\n\t\tvar span = (node.getAttribute(\"colspan\") || cdiv.getAttribute(\"colspan\"))*1;\n\n\t\treturn { rind:row, cind:column, span: span };\n\t},\n\t_correctScrollSize:function(){\n\t\tvar center = -this._center_width;\n\t\tfor (var i=0; i<this._columns.length; i++)\n\t\t\tcenter += this._columns[i].width;\n\t\tthis._scrollLeft = Math.min(this._scrollLeft, Math.max(0, center));\n\t},\n\t_updateColsSizeSettings:function(silent){\n\t\tif (!this._dtable_fully_ready) return;\n\n\t\tthis._correctScrollSize();\n\t\tthis._set_columns_positions();\n\t\tthis._set_split_sizes_x();\n\t\tthis._render_header_and_footer();\n\t\tthis._set_split_sizes_y();\n\n\t\tif (!silent)\n\t\t\tthis._check_rendered_cols(false, false);\n\t},\n\tsetColumnWidth:function(col, width, skip_update){\n\t\treturn this._setColumnWidth( this.getColumnIndex(col), width, skip_update);\n\t},\n\t_setColumnWidth:function(col, width, skip_update, by_user){\n\t\tif (isNaN(width) || col < 0) return;\n\t\tvar column = this._columns[col];\n\n\t\twidth = this._correctColumnWidth(width, column);\n\n\t\tvar old = column.width;\n\t\tif (old != width){\n\t\t\tif (col>=this._settings.leftSplit && col<this._rightSplit)\n\t\t\t\tthis._dtable_width += width-old;\n\t\t\t\n\t\t\tcolumn.width = width;\n\t\t\tif (column.node) //method can be called from onStructLoad\n\t\t\t\tcolumn.node.style.width = width+\"px\";\n\t\t\telse \n\t\t\t\treturn false;\n\n\t\t\tif(!skip_update)\n\t\t\t\tthis._updateColsSizeSettings();\n\n\t\t\tthis.callEvent(\"onColumnResize\", [column.id, width, old, !!by_user]);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t_correctColumnWidth:function(width, config){\n\t\twidth = Math.max(width, config.minWidth||this._settings.minColumnWidth||0);\n\t\twidth = Math.min(width, config.maxWidth||this._settings.maxColumnWidth||100000);\n\n\t\treturn width;\n\t},\n\t_getRowHeight:function(row){\n\t\treturn (row.$height || this._settings.rowHeight)+(row.$subopen?row.$subHeight:0);\n\t},\n\t_getHeightByIndex:function(index){\n\t\tvar id = this.data.order[index];\n\t\tif (!id) return this._settings.rowHeight;\n\t\treturn this._getRowHeight(this.data.pull[id]);\n\t},\n\t_getHeightByIndexSumm:function(index1, index2){\n\t\tif (this._settings.fixedRowHeight)\n\t\t\treturn Math.max(index2-index1, 0) * this._settings.rowHeight;\n\t\telse {\n\t\t\tvar summ = 0;\n\t\t\tfor (; index1<index2; index1++)\n\t\t\t\tsumm += this._getHeightByIndex(index1);\n\t\t\treturn summ;\n\t\t}\n\t},\n\t_cellPosition:function(row, column, edit){\n\t\tif (row.row){\n\t\t\tcolumn = row.column;\n\t\t\trow = row.row;\n\t\t}\n\n\t\tlet width = this.getColumnConfig(column).width;\n\t\tlet height = this.getItem(row).$height || this._settings.rowHeight;\n\n\t\tif(this.config.spans && edit){\n\t\t\tconst span = this.getSpan(row, column);\n\t\t\tif(span){\n\t\t\t\tconst spanNode = this.getSpanNode({row:span[0], column:span[1]});\n\t\t\t\twidth = spanNode.offsetWidth;\n\t\t\t\theight = spanNode.offsetHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet left = 0;\n\t\tlet parent = 0;\n\n\t\tfor (let index=0; index<this._columns.length; index++){\n\t\t\tif (index == this._settings.leftSplit || index == this._rightSplit)\n\t\t\t\tleft = 0;\n\t\t\tconst leftcolumn = this._columns[index];\n\t\t\tif (leftcolumn.id == column){\n\t\t\t\tconst split_column = index<this._settings.leftSplit ? 0 :( index >= this._rightSplit ? 2 : 1);\n\t\t\t\tparent = this._body.childNodes[split_column].firstChild;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tleft += leftcolumn.width;\n\t\t}\n\n\t\tconst index = this.getIndexById(row);\n\t\tlet top;\n\n\t\tif (index < this._settings.topSplit)\n\t\t\ttop = this._getHeightByIndexSumm(0, index);\n\t\telse {\n\t\t\tconst first = this._render_scroll_top||0;\n\t\t\ttop = this._getHeightByIndexSumm(first, index) + (this._render_scroll_shift||0) + (index >= first ? this._get_top_split_height() : 0);\n\t\t}\n\n\t\treturn { parent, top, left, width, height };\n\t},\n\t_get_top_split_height:function(){\n\t\treturn this._settings.topSplit ? this._getHeightByIndexSumm(0, this._settings.topSplit) : 0;\n\t},\n\t_get_total_height:function(){\n\t\tvar pager  = this._settings.pager;\n\t\tvar start = 0;\n\t\tvar max = this.data.order.length;\n\n\t\tif (pager){\n\t\t\tstart = pager.size * pager.page;\n\t\t\tmax = Math.min(max, start + pager.size);\n\t\t\tif (pager.level){\n\t\t\t\tstart = this.data.$min;\n\t\t\t\tmax = this.data.$max;\n\t\t\t}\n\t\t}\n\n\t\treturn this._getHeightByIndexSumm(start, max);\n\t},\n\tsetRowHeight:function(rowId, height){\n\t\tif (isNaN(height)) return;\n\n\t\theight = Math.max(height, this._settings.minRowHeight||0);\n\t\theight = Math.min(height, this._settings.maxRowHeight||100000);\n\n\t\tvar item = this.getItem(rowId);\n\t\tvar old_height = item.$height||this._settings.rowHeight;\n\n\t\tif (old_height != height){\n\t\t\titem.$height = height;\n\n\t\t\tthis._settings.scrollAlignY = false;\n\t\t\tthis._settings.fixedRowHeight = false;\n\n\t\t\tthis.render();\n\t\t\tthis.callEvent(\"onRowResize\", [rowId, height, old_height]);\n\t\t}\n\t},\n\t_onscroll_y:function(value){\n\t\tvar scrollChange = (this._scrollTop !== value);\n\n\t\tthis._scrollTop = value;\n\t\tif (!this._settings.prerender){\n\t\t\tthis._check_rendered_cols();\n\t\t} else if (env.touch){\n\t\t\tthis._sync_y_scroll(-value, \"0ms\");\n\t\t} else {\n\t\t\tvar conts = this._body.childNodes;\n\t\t\tfor (var i = 0; i < conts.length; i++){\n\t\t\t\tconts[i].scrollTop = value;\n\t\t\t}\n\t\t}\n\n\t\tif (env.$customScroll) CustomScroll._update_scroll(this._body);\n\t\tif (scrollChange){\n\t\t\tthis.callEvent(\"onScrollY\",[]);\n\t\t\tthis.callEvent(\"onAfterScroll\",[]);\n\t\t}\n\t},\n\t_setLeftScroll:function(value){\n\t\tthis._scrollLeft = value;\n\t\tif (env.touch)\n\t\t\treturn this._sync_x_scroll(-value, \"0ms\");\n\n\t\tthis._body.childNodes[1].scrollLeft = value;\n\t\tif (this._settings.header)\n\t\t\tthis._header.childNodes[1].scrollLeft = value;\n\t\tif (this._settings.footer)\n\t\t\tthis._footer.childNodes[1].scrollLeft = value;\n\t},\n\t_onscroll_x:function(value){\n\t\tvar scrollChange = (this._scrollLeft !== value);\n\t\tif (this._renderDelay)\n\t\t\tthis._delayedLeftScroll = value;\n\t\telse\n\t\t\tthis._setLeftScroll(value);\n\n\t\tif (!this._settings.prerender)\n\t\t\tthis._check_rendered_cols(true);\n\n\t\tif (env.$customScroll) CustomScroll._update_scroll(this._body);\n\n\t\tif (scrollChange){\n\t\t\tthis.callEvent(\"onScrollX\",[]);\n\t\t\tthis.callEvent(\"onAfterScroll\",[]);\n\t\t}\n\t},\n\t_get_x_range:function(full){\n\t\tif (full) return [0,this._columns.length];\n\n\t\tvar t = this._scrollLeft;\n\t\t\n\t\tvar xind = this._settings.leftSplit;\n\t\twhile (t>0 && this._columns.length - 1 > xind){\n\t\t\tt-=this._columns[xind].width;\n\t\t\txind++;\n\t\t}\n\t\tvar xend = xind;\n\t\tif (t && xind>0) xind--;\n\n\t\tt+=this._center_width;\n\t\twhile (t>0 && xend<this._rightSplit){\n\t\t\tt-=this._columns[xend].width;\n\t\t\txend++;\n\t\t}\n\n\t\treturn [xind, xend];\n\t},\n\tgetVisibleCount:function(){\n\t\tconst correction = (this._settings.autoheight || this._settings.yCount) ? 1 : 0;\n\t\treturn Math.floor((this._dtable_offset_height + correction) / this.config.rowHeight);\n\t},\n\t//returns info about y-scroll position\n\t_get_y_range:function(full){\n\t\tvar t = this._scrollTop;\n\t\tvar start = 0; \n\t\tvar end = this.count();\n\n\t\t//apply pager, if defined\n\t\tvar pager = this._settings.pager;\n\t\tif (pager){\n\t\t\tstart = pager.page*pager.size;\n\t\t\tend = Math.min(end, start+pager.size);\n\t\t\tif (pager.level){\n\t\t\t\tstart = this.data.$min;\n\t\t\t\tend = this.data.$max;\n\t\t\t}\n\t\t}\n\n\t\tvar xind = start + this._settings.topSplit;\n\t\t//in case of autoheight - request full rendering\n\t\tif (full || this._settings.autoheight)\n\t\t\treturn [xind, end, 0];\n\n\t\tvar rowHeight = this._settings.fixedRowHeight?this._settings.rowHeight:0;\n\t\tif (rowHeight){\n\t\t\tlet dep = Math.ceil(t/rowHeight);\n\t\t\tt -= dep*rowHeight;\n\t\t\txind += dep;\n\t\t} else\n\t\t\twhile (t>0){\n\t\t\t\tt-=this._getHeightByIndex(xind);\n\t\t\t\txind++;\n\t\t\t}\n\n\t\t//how much of the first cell is scrolled out\n\t\tvar xdef = (xind>0 && t)?-(this._getHeightByIndex(xind-1)+t):0;\n\t\tvar xend = xind;\n\t\tif (t) xind--;\n\n\t\tt+=(this._dtable_offset_height||this._content_height) - this._get_top_split_height();\n\n\t\tif (rowHeight){\n\t\t\tlet dep = Math.ceil(t/rowHeight);\n\t\t\tt-=dep*rowHeight;\n\t\t\txend+=dep;\n\t\t} else {\n\t\t\twhile (t>0 && xend<end){\n\t\t\t\tt-=this._getHeightByIndex(xend);\n\t\t\t\txend++;\n\t\t\t}\n\t\t}\n\n\t\tif (xend>end)\n\t\t\txend = end;\n\n\t\treturn [xind, xend, xdef];\n\t},\n\t_repaint_single_row:function(id){\n\t\tvar item = this.getItem(id);\n\t\tvar rowindex = this.getIndexById(id);\n\n\t\tvar state = this._get_y_range(this._settings.prerender === true);\n\t\tvar freeze = this._settings.topSplit;\n\t\tvar freezeCss = \"\";\n\n\t\tif (rowindex >= freeze){\n\t\t\t//row not visible\n\t\t\tif (rowindex < state[0] || rowindex >= state[1]) return;\n\t\t\trowindex -= state[0]-freeze;\n\t\t} else {\n\t\t\tfreezeCss = (rowindex == freeze-1) ? \" webix_topcell webix_last_topcell\" : \" webix_topcell\";\n\t\t}\n\n\t\t//get visible column\n\t\tvar x_range = this._get_x_range();\n\t\tfor (var i=0; i<this._columns.length; i++){\n\t\t\tvar column = this._columns[i];\n\n\t\t\t//column not visible\n\t\t\tif (i < this._rightSplit && i >= this._settings.leftSplit && ( i<x_range[0] || i > x_range[1]))\n\t\t\t\tcolumn._yr0 = -999; //ensure that column will not be reused\n\n\t\t\tif (column.attached && column.node){\n\t\t\t\tvar node =  column.node.childNodes[rowindex];\n\t\t\t\tif (!node) continue;\n\t\t\t\tvar value = this._getValue(item, this._columns[i], 0);\n\n\t\t\t\tnode.innerHTML = value;\n\t\t\t\tnode.className = this._getCss(this._columns[i], value, item, id) + freezeCss;\n\t\t\t}\n\t\t}\n\t},\n\t_check_rendered_cols:function(x_scroll, force){\n\t\tif (!this._columns.length || this._renderDelay) return;\n\n\t\tif (force)\n\t\t\tthis._clearColumnCache();\n\n\t\tvar xr = this._get_x_range(this._settings.prerender);\n\t\tvar yr = this._get_y_range(this._settings.prerender === true);\n\n\t\tif (x_scroll){\n\t\t\tfor (let i=this._settings.leftSplit; i<xr[0]; i++)\n\t\t\t\tthis._hideColumn(i, force);\n\t\t\tfor (let i=xr[1]; i<this._rightSplit; i++)\n\t\t\t\tthis._hideColumn(i, force);\n\t\t}\n\n\t\tthis._render_full_rows = [];\n\n\t\tfor (let i=0; i<this._settings.leftSplit; i++)\n\t\t\tthis._renderColumn(i,yr,force);\n\t\tfor (let i=xr[0]; i<xr[1]; i++)\n\t\t\tthis._renderColumn(i,yr,force, i == xr[0]);\n\t\tfor (let i=this._rightSplit; i<this._columns.length; i++)\n\t\t\tthis._renderColumn(i,yr,force);\n\n\t\tthis._check_and_render_full_rows(yr[0], yr[1], force);\n\t\tthis._check_load_next(yr);\n\t},\n\t_delete_full_rows:function(start, end){\n\t\tthis._rows_cache_start = start;\n\t\tthis._rows_cache_end = end;\n\n\t\tremove(this._rows_cache);\n\t\tthis._rows_cache=[];\n\t},\n\t_adjust_rows:function(){\n\t\tif (this._rows_body && !this._touch_scroll && this._settings.prerender){\n\t\t\tvar state = this.getScrollState();\n\t\t\tthis._rows_body.style.top = \"-\"+(state.y||0) +\"px\";\n\t\t}\n\t},\n\t_check_and_render_full_rows:function(start, end, force){\n\t\tif (this._rows_body)\n\t\t\tthis._rows_body.style.top = this._render_scroll_shift+\"px\";\n\t\t\n\t\tif (!force && start == this._rows_cache_start && end == this._rows_cache_end){\n\t\t\tif(this.config.topSplit){ //don't move split rows\n\t\t\t\tfor (let i=0; i<this._render_full_rows.length; i++){\n\t\t\t\t\tlet row = this._rows_cache[i];\n\t\t\t\t\tif(this._render_full_rows[i].index<this.config.topSplit){\n\t\t\t\t\t\trow.style.top = this._render_full_rows[i].top-this._render_scroll_shift+\"px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._delete_full_rows(start, end);\n\n\t\tif (this._render_full_row_some)\n\t\t\tthis._render_full_row_some = false;\n\t\telse return;\n\n\t\tfor (let i=0; i<this._render_full_rows.length; i++){\n\t\t\tvar info = this._render_full_rows[i];\n\t\t\tvar item = this.getItem(info.id);\n\n\t\t\tvar value;\n\t\t\tif (typeof item.$row == \"function\"){\n\t\t\t\tvalue = item.$row.call(this, item, this.type);\n\t\t\t} else {\n\t\t\t\tvalue = this._getValue(item, this.getColumnConfig(item.$row), i);\n\t\t\t}\n\n\t\t\tlet row = this._rows_cache[i] = create(\"DIV\", null , value);\n\t\t\trow.className = \"webix_cell \"+(item.$sub ? (\"webix_dtable_sub\"+(this._settings.subview?\"view\":\"row\")) : \"webix_dtable_colrow\"+(item.$row?(\" webix_topcell\"+(this.data.getMark(item.id,\"webix_selected\")?\" webix_selected\":\"\")):\"\"));\n\t\t\trow.setAttribute(/*@attr*/\"column\", 0);\n\t\t\trow.setAttribute(/*@attr*/\"row\", info.index);\n\n\t\t\tvar height = (item.$height || this._settings.rowHeight);\n\t\t\tif (item.$subopen)\n\t\t\t\trow.style.height = item.$subHeight+\"px\";\n\t\t\telse \n\t\t\t\trow.style.height = height +\"px\";\n\t\t\trow.style.paddingRight = env.scrollSize+\"px\";\n\n\t\t\tvar topDelta = (this._render_full_rows[i].index<this.config.topSplit) ? -this._render_scroll_shift : 0;\n\t\t\trow.style.top = topDelta + info.top + (item.$subopen ? height-1 : 0) + \"px\";\n\n\t\t\tif (!this._rows_body){\n\t\t\t\tthis._rows_body = create(\"DIV\");\n\t\t\t\tthis._rows_body.style.position = \"relative\";\n\t\t\t\tthis._rows_body.style.top = this._render_scroll_shift + \"px\";\n\t\t\t\tthis._body.appendChild(this._rows_body);\n\n\t\t\t\tthis.attachEvent(\"onSyncScroll\", function(x,y,t){\n\t\t\t\t\tTouch._set_matrix(this._rows_body,0,y,t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._rows_body.appendChild(row);\n\t\t\tif (this._settings.subview)\n\t\t\t\tthis.callEvent(\"onSubViewRender\", [item, row]);\n\t\t}\n\t},\n\t_check_load_next:function(yr){\n\t\tconst paging = this._settings.pager;\n\t\tconst fetch = this._settings.datafetch;\n\t\tlet direction = (!this._last_valid_render_pos || yr[0] >= this._last_valid_render_pos);\n\t\tif (this._nav_dir && this._nav_dir === \"up\") direction = false;\n\n\t\tthis._last_valid_render_pos = yr[0];\n\n\t\tif (this._data_request_flag){\n\t\t\tif (paging && (!fetch || fetch >= paging.size))\n\t\t\t\tif (this._check_rows([0,paging.size*paging.page], Math.max(fetch, paging.size), true)) \n\t\t\t\t\treturn (this._data_request_flag = null);\n\t\t\t\t\t\n\t\t\tthis._run_load_next(this._data_request_flag, direction);\n\t\t\tthis._data_request_flag = null;\n\t\t} else {\n\t\t\tif (this._settings.loadahead)\n\t\t\t\tthis._check_rows(yr, this._settings.loadahead, direction);\n\t\t}\n\t},\n\t_check_rows:function(view, count, dir){\n\t\tvar start = view[1];\n\t\tvar end = start+count;\n\t\tif (!dir){\n\t\t\tstart = view[0]-count;\n\t\t\tend = view[0];\n\t\t}\n\n\t\tif (start<0) start = 0;\n\t\tend = Math.min(end, this.data.order.length-1);\n\n\t\tvar result = false;\t\t\t\n\t\tfor (var i=start; i<end; i++)\n\t\t\tif (!this.data.order[i]){\n\t\t\t\tif (!result)\n\t\t\t\t\tresult = { start:i, count:(end-start) };\n\t\t\t\telse {\n\t\t\t\t\tresult.last = i;\n\t\t\t\t\tresult.count = (i-start);\n\t\t\t\t}\n\t\t\t}\n\t\tif (result){\t\t\t\n\t\t\tthis._run_load_next(result, dir);\n\t\t\treturn true;\n\t\t}\n\t},\n\t_run_load_next:function(conf, direction){\n\t\tconst count = Math.max(conf.count, (this._settings.datafetch || this._settings.loadahead || 0));\n\t\tconst start = direction ? conf.start : (conf.last - count + 1);\n\n\t\tif (this._maybe_loading_already(conf.count, conf.start)) return;\n\t\tthis._active_load_next = this.loadNext(count, start).finally(() => this._active_load_next = null);\n\t},\n\t// necessary for safari only\n\t_preserveScrollTarget: function(columnNode){\n\t\tif (env.isSafari){\n\t\t\tvar i, node, newNode, scroll,\n\t\t\t\tdir = [this._x_scroll, this._y_scroll];\n\n\t\t\tfor(i = 0; i < 2; i++){\n\t\t\t\tscroll = dir[i];\n\t\t\t\tif(scroll && scroll._scroll_trg && scroll._scroll_trg.parentNode == columnNode){\n\t\t\t\t\tnode = scroll._scroll_trg;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(node){\n\t\t\t\tif(this._scrollWheelTrg)\n\t\t\t\t\tremove(this._scrollWheelTrg);\n\t\t\t\tthis._scrollWheelTrg = node;\n\t\t\t\tnewNode  = node.cloneNode(true); // required for _hideColumn\n\t\t\t\tnode.parentNode.insertBefore(newNode, node);\n\t\t\t\tthis._scrollWheelTrg.style.display = \"none\";\n\t\t\t\tthis._body.appendChild(this._scrollWheelTrg);\n\t\t\t}\n\t\t}\n\t},\n\t_hideColumn:function(index){\n\t\tvar col = this._columns[index];\n\n\t\t// preserve target node for Safari wheel event\n\t\tthis._preserveScrollTarget(col.node);\n\t\tremove(col.node);\n\t\tcol.attached = false;\n\t},\n\t_clearColumnCache:function(){\n\t\tfor (var i = 0; i < this._columns.length; i++)\n\t\t\tthis._columns[i]._yr0 = -1;\n\n\t\tif (this._rows_cache.length){\n\t\t\tremove(this._rows_cache);\n\t\t\tthis._rows_cache = [];\n\t\t}\n\t},\n\tgetText:function(row_id, column_id){\n\t\treturn this._getValue(this.getItem(row_id), this.getColumnConfig(column_id), 0);\n\t},\n\tgetCss:function(row_id, column_id){\n\t\tvar item = this.getItem(row_id);\n\t\treturn this._getCss(this.getColumnConfig(column_id), item[column_id], item, row_id);\n\t},\n\t_getCss:function(config, value, item, id){\n\t\tvar css = \"webix_cell\";\n\t\t\t\t\n\t\tif (config.cssFormat){\n\t\t\tvar per_css = config.cssFormat(value, item, id, config.id);\n\t\t\tif (per_css){\n\t\t\t\tif (typeof per_css == \"object\")\n\t\t\t\t\tcss+= \" \"+createCss(per_css);\n\t\t\t\telse\n\t\t\t\t\tcss+=\" \"+per_css;\n\t\t\t}\n\t\t}\n\n\t\tvar row_css = item.$css;\n\t\tif (row_css){\n\t\t\tif (typeof row_css == \"object\")\n\t\t\t\titem.$css = row_css = createCss(row_css);\n\t\t\tcss+=\" \"+row_css;\n\t\t}\n\n\t\tvar mark = this.data._marks[id];\n\t\tif (mark){\n\t\t\tif (mark.$css)\n\t\t\t\tcss+=\" \"+mark.$css;\n\t\t\tif (mark.$cellCss){\n\t\t\t\tvar mark_marker = mark.$cellCss[config.id];\n\t\t\t\tif (mark_marker)\n\t\t\t\t\tcss+=\" \"+mark_marker;\n\t\t\t}\n\t\t}\n\n\t\tif (item.$cellCss){\n\t\t\tvar css_marker = item.$cellCss[config.id];\n\t\t\tif (css_marker){\n\t\t\t\tif (typeof css_marker == \"object\")\n\t\t\t\t\tcss_marker = createCss(css_marker);\n\t\t\t\tcss += \" \"+css_marker;\n\t\t\t}\n\t\t}\n\n\t\t//cell-selection\n\t\tvar selected = this.data.getMark(item.id,\"webix_selected\");\n\t\tif ((selected && (selected.$row || selected[config.id]))||config.$selected) css+=this._select_css;\n\n\t\treturn css;\n\t},\n\t_getValue:function(item, config, i){\n\t\tif (!item)\n\t\t\treturn \"\";\n\n\t\tvar value;\n\n\t\tvalue = item[config.id];\n\t\tif (value === undefined || value === null)\n\t\t\tvalue = \"\";\n\t\tif (config.format)\n\t\t\tvalue = config.format(value);\n\t\tif (config.template)\n\t\t\tvalue = config.template(item, this.type, value, config, i);\n\n\t\treturn value;\n\t},\n\t//we don't use render-stack, but still need a place for common helpers\n\t//so creating a simple \"type\" holder\n\ttype:{\n\t\tcheckbox:function(obj, common, value, config){\n\t\t\tvar checked = (value == config.checkValue) ? \"checked=\\\"true\\\"\" : \"\";\n\t\t\treturn \"<input class='webix_table_checkbox' type='checkbox' \"+checked+\">\";\n\t\t},\n\t\tradio:function(obj, common, value, config){\n\t\t\tvar checked = (value == config.checkValue) ? \"checked=\\\"true\\\"\" : \"\";\n\t\t\treturn \"<input class='webix_table_radio' type='radio' \"+checked+\">\";\n\t\t},\n\t\teditIcon:function(){\n\t\t\treturn \"<span class='webix_icon wxi-pencil'></span>\";\n\t\t},\n\t\ttrashIcon:function(){\n\t\t\treturn \"<span class='webix_icon wxi-trash'></span>\";\n\t\t}\n\t},\n\ttype_setter:function(value){\n\t\tif(!this.types || !this.types[value])\n\t\t\ttype(this, value);\n\t\telse {\n\t\t\tthis.type = clone(this.types[value]);\n\t\t\tif (this.type.css) \n\t\t\t\tthis._contentobj.className+=\" \"+this.type.css;\n\t\t}\n\t\tif (this.type.on_click)\n\t\t\textend(this.on_click, this.type.on_click);\n\n\t\treturn value;\n\t},\n\t_renderColumn:function(index,yr,force, single){\n\t\tvar col = this._columns[index];\n\t\tif (!col.attached){\n\t\t\tvar split_column = index<this._settings.leftSplit ? 0 :( index >= this._rightSplit ? 2 : 1);\n\t\t\tthis._body.childNodes[split_column].firstChild.appendChild(col.node);\n\t\t\tcol.attached = true;\n\t\t\tcol.split = split_column;\n\t\t}\n\n\t\tthis._render_scroll_top = yr[0];\n\t\tthis._render_scroll_shift = 0;\n\t\tthis._render_scroll_diff = yr[2];\n\n\t\t//if columns not aligned during scroll - set correct scroll top value for each column\n\t\tif (this._settings.scrollAlignY){\n\t\t\tif ((yr[1] == this.data.order.length) || (this.data.$pagesize && yr[1] % this.data.$pagesize === 0 )){\n\t\t\t\tcol.node.style.top = (this._render_scroll_shift = yr[2])+\"px\";\n\t\t\t} else if (col._yr2)\n\t\t\t\tcol.node.style.top = \"0px\";\n\t\t} else {\n\t\t\tthis._render_scroll_shift = yr[2];\n\t\t\tcol.node.style.top = yr[2]+\"px\";\n\t\t}\n\n\t\tif (!force  && (col._yr0 == yr[0] && col._yr1 == yr[1]) && (!this._settings.topSplit || col._render_scroll_shift==this._render_scroll_shift)) return 0;\n\n\t\tvar html=\"\";\n\t\tvar config = this._settings.columns[index];\n\t\tvar state = { \n\t\t\trow: this._settings.rowHeight,\n\t\t\ttotal: 0,\n\t\t\tsingle: single\n\t\t};\n\n\t\tfor (let i=0; i<this._settings.topSplit; i++)\n\t\t\thtml += this._render_single_cell(i, config, yr, state, -this._render_scroll_shift, index);\n\t\t// ignore not available rows in top-split area\n\t\tthis._data_request_flag = null;\n\t\t\n\t\tfor (let i = Math.max(yr[0], this._settings.topSplit); i < yr[1]; i++)\n\t\t\thtml += this._render_single_cell(i, config, yr, state, -1, index);\n\n\t\t// preserve target node for Safari wheel event\n\t\tthis._preserveScrollTarget(col.node);\n\n\t\tcol.node.innerHTML = html;\n\t\tcol._yr0=yr[0];\n\t\tcol._yr1=yr[1];\n\t\tcol._yr2=yr[2];\n\t\tcol._render_scroll_shift=this._render_scroll_shift;\n\t\treturn 1;\n\t},\n\t_render_single_cell:function(i, config, yr, state, top, index){\n\t\tvar id = this.data.order[i];\n\t\tvar item = this.data.getItem(id);\n\t\tvar html = \"\";\n\n\t\tif (item){\n\t\t\tvar aria = \" role='gridcell' aria-rowindex='\"+(i+1)+\"' aria-colindex='\"+(this.getColumnIndex(config.id)+1)+\"'\"+\n\t\t\t\t(item.$count || item.$sub?(\" aria-expanded='\"+(item.open || item.$subopen?\"true\":\"false\")+\"'\"):\"\")+\n\t\t\t\t(item.$level?\" aria-level='\"+item.$level+\"'\":\"\");\n\n\t\t\tif (state.single && item.$row){\n\t\t\t\tthis._render_full_row_some = true;\n\t\t\t\tthis._render_full_rows.push({ top:state.total, id:item.id, index:i});\n\t\t\t\tif (!item.$sub){\n\t\t\t\t\tvar rowHeight = (item.$height || state.row);\n\t\t\t\t\tstate.total += rowHeight;\n\t\t\t\t\treturn \"<div\"+aria+\" class='webix_cell' style='height:\"+rowHeight+\"px;'></div>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar value = this._getValue(item, config, i);\n\t\t\tvar css = this._getCss(config, value, item, id);\n\t\t\tvar ariaSelect = \" aria-selected='true' tabindex='0'\";\n\t\t\t\n\t\t\tif(css.indexOf(\"select\") !==-1 ){\n\t\t\t\t//in case of row/column selection - make only first cell focusable\n\t\t\t\tif(css.indexOf(\"row\") !==-1){\n\t\t\t\t\tvar xr = this._get_x_range();\n\t\t\t\t\tif(xr[0] === index) aria += ariaSelect;\n\t\t\t\t}\n\t\t\t\telse if(css.indexOf(\"col\") !==-1){\n\t\t\t\t\tif(i === yr[0]) aria += ariaSelect;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\taria += ariaSelect;\n\t\t\t}\n\t\t\t\n\t\t\tvar isOpen = !!item.$subopen;\n\t\t\tvar margin = isOpen ? \"margin-bottom:\"+item.$subHeight+\"px;\" : \"\";\n\n\t\t\tif (top>=0){\n\t\t\t\tif (top>0) margin+=\"top:\"+top+\"px;'\";\n\t\t\t\tcss = \"webix_topcell \"+css;\n\t\t\t\tif(i == this._settings.topSplit-1)\n\t\t\t\t\tcss = \"webix_last_topcell \"+css;\n\t\t\t}\n\t\t\tif (item.$height){\n\t\t\t\thtml = \"<div\"+aria+\" class='\"+css+\"' style='height:\"+item.$height+\"px;\"+margin+\"'>\"+value+\"</div>\";\n\t\t\t\tstate.total += item.$height - state.row;\n\t\t\t} else {\n\t\t\t\thtml = \"<div\"+aria+\" class='\"+css+\"'\"+(margin?\" style='\"+margin+\"'\":\"\")+\">\"+value+\"</div>\";\n\t\t\t}\n\n\t\t\tif (isOpen)\n\t\t\t\tstate.total += item.$subHeight;\n\n\t\t} else {\n\t\t\thtml = \"<div role='gridcell' class='webix_cell'></div>\";\n\t\t\tif (!this._data_request_flag)\n\t\t\t\tthis._data_request_flag = {start:i, count:yr[1]-i};\n\t\t\tthis._data_request_flag.last = i;\n\t\t}\n\t\tstate.total += state.row;\n\t\treturn html;\n\t},\n\t_set_split_sizes_y:function(){\n\t\tif (!this._columns.length || isNaN(this._content_height*1)) return;\n\t\tif (DEBUG) debug_size_box(this, [\"y-sizing\"], true);\n\n\t\tvar wanted_height = this._dtable_height+(this._scrollSizeX?this._scrollSizeX:0);\n\t\tif ((this._settings.autoheight || this._settings.yCount) && this.resize())\n\t\t\treturn;\n\n\t\tthis._y_scroll.sizeTo(this._content_height, this._header_height, this._footer_height);\n\t\tthis._y_scroll.define(\"scrollHeight\", wanted_height);\n\n\t\tthis._dtable_offset_height =  Math.max(0,this._content_height-this._scrollSizeX-this._header_height-this._footer_height);\n\t\tfor (var i = 0; i < 3; i++){\n\n\t\t\tthis._body.childNodes[i].style.height = this._dtable_offset_height+\"px\";\n\t\t\tif (this._settings.prerender)\n\t\t\t\tthis._body.childNodes[i].firstChild.style.height = this._dtable_height+\"px\";\n\t\t\telse\n\t\t\t\tthis._body.childNodes[i].firstChild.style.height = this._dtable_offset_height+\"px\";\n\t\t}\n\t\t//prevent float overflow, when we have split and very small\n\t\tthis._header.style.height = this._header_height+\"px\";\n\t},\n\t_set_split_sizes_x:function(){\n\t\tif (!this._columns.length) return;\n\n\t\tvar index = 0; \n\t\tthis._left_width = 0;\n\t\tthis._right_width = 0;\n\t\tthis._center_width = 0;\n\n\t\twhile (index<this._settings.leftSplit){\n\t\t\tthis._left_width += this._columns[index].width;\n\t\t\tindex++;\n\t\t}\n\n\t\tindex = this._columns.length-1;\n\t\t\n\t\twhile (index>=this._rightSplit){\n\t\t\tthis._right_width += this._columns[index].width;\n\t\t\tindex--;\n\t\t}\n\n\t\tif (!this._content_width) return; \n\n\t\tif (this._settings.autowidth && this.resize())\n\t\t\treturn;\n\n\t\tthis._center_width = this._content_width - this._right_width - this._left_width - this._scrollSizeY;\n\n\t\tthis._body.childNodes[1].firstChild.style.width = this._dtable_width+\"px\";\n\n\t\tthis._body.childNodes[0].style.width = this._left_width+\"px\";\n\t\tthis._body.childNodes[1].style.width = this._center_width+\"px\";\n\t\tthis._body.childNodes[2].style.width = this._right_width+\"px\";\n\t\tthis._header.childNodes[0].style.width = this._left_width+\"px\";\n\t\tthis._header.childNodes[1].style.width = this._center_width+\"px\";\n\t\tthis._header.childNodes[2].style.width = this._right_width+\"px\";\n\t\tthis._footer.childNodes[0].style.width = this._left_width+\"px\";\n\t\tthis._footer.childNodes[1].style.width = this._center_width+\"px\";\n\t\tthis._footer.childNodes[2].style.width = this._right_width+\"px\";\n\n\t\tvar delta = this._center_width - this._dtable_width;\n\t\tif (delta<0) delta=0; //negative header space has not sense\n\n\t\tif (delta != this._header_fix_width){\n\t\t\tthis._header_fix_width = delta;\n\t\t\tthis._size_header_footer_fix();\n\t\t}\n\n\t\tthis._x_scroll.sizeTo(this._content_width-this._scrollSizeY);\n\t\tthis._x_scroll.define(\"scrollWidth\", this._dtable_width+this._left_width+this._right_width);\n\t},\n\t$getSize:function(dx, dy){\n\t\tif ((this._settings.autoheight || this._settings.yCount) && this._settings.columns){\n\t\t\t//if limit set - use it\n\t\t\tvar desired = ((this._settings.yCount || 0) * this._settings.rowHeight);\n\t\t\t//else try to use actual rendered size\n\t\t\t//if component invisible - this is not valid, so fallback to all rows\n\t\t\tif (!desired) desired =  this.isVisible() ? this._dtable_height : (this.count() * this._settings.rowHeight);\n\t\t\t//add scroll and check minHeight limit\n\t\t\tthis._settings.height = Math.max(desired+(this._scrollSizeX?this._scrollSizeX:0)-1, (this._settings.minHeight||0))+this._header_height+this._footer_height;\n\t\t}\n\t\tif (this._settings.autowidth && this._settings.columns)\n\t\t\tthis._settings.width = Math.max(this._dtable_width+this._left_width+this._right_width+this._scrollSizeY,(this._settings.minWidth||0));\n\n\t\t\n\t\tvar minwidth = this._left_width+this._right_width+this._scrollSizeY;\n\t\tvar sizes = base.api.$getSize.call(this, dx, dy);\n\n\n\t\tsizes[0] = Math.max(sizes[0]||minwidth);\n\t\treturn sizes;\n\t},\n\t_restore_scroll_state:function(){\n\t\tif (this._x_scroll){\n\t\t\tvar state = this.getScrollState();\n\t\t\tthis._x_scroll.config.scrollPos = this._y_scroll.config.scrollPos = -1;\n\t\t\tthis.scrollTo(state.x, state.y);\n\t\t}\n\t},\n\t$setSize:function(){\n\t\tvar oldw = this._content_width;\n\t\tvar oldh = this._content_height;\n\n\t\tif (base.api.$setSize.apply(this, arguments)){\n\t\t\tif (this._dtable_fully_ready){\n\t\t\t\tthis.callEvent(\"onResize\",[this._content_width, this._content_height, oldw, oldh]);\n\t\t\t\tthis._set_split_sizes_x();\n\t\t\t\tthis._set_split_sizes_y();\n\t\t\t}\n\t\t\tthis.render();\n\t\t}\n\t},\n\t_on_header_click:function(column, e){\n\t\tconst col = this.getColumnConfig(column);\n\t\tif (!this._settings.sort || !col.sort) return;\n\n\t\tlet dir = \"asc\";\n\t\tif (this._last_sorted[col.id]) {\n\t\t\tdir = (this._last_sorted[col.id].dir == \"asc\") ? \"desc\" : \"asc\";\n\t\t}\n\t\telse if (this._sort_signs[col.id]) {\n\t\t\tdir = (this._sort_signs[col.id].getAttribute(\"webix_sort_dir\") == \"asc\") ? \"desc\" : \"asc\";\n\t\t}\n\t\tthis._sort(col.id, dir, col.sort, (e.ctrlKey||e.metaKey));\n\t},\n\tmarkSorting:function(column, direction, preserve){\n\t\tdirection = direction || \"asc\";\n\n\t\tif (!preserve){\n\t\t\tthis._sort_signs_order = [];\n\n\t\t\tfor (let i in this._sort_signs)\n\t\t\t\tif (i !== column){\n\t\t\t\t\tconst parent = this._sort_signs[i].parentNode;\n\t\t\t\t\tif (parent){\n\t\t\t\t\t\tparent.removeAttribute(\"aria-sort\");\n\t\t\t\t\t\tparent.removeAttribute(\"tabindex\");\n\t\t\t\t\t}\n\n\t\t\t\t\tremove(this._sort_signs[i]);\n\t\t\t\t\tdelete this._sort_signs[i];\n\t\t\t\t} else {\n\t\t\t\t\tthis._sort_signs_order.push(i);\n\t\t\t\t\tthis._sort_signs[i].firstChild.innerHTML = \"1\";\n\t\t\t\t}\n\t\t}\n\n\t\tif (!column) return;\n\n\t\tif (this._sort_signs[column]){\n\t\t\tthis._sort_signs[column].className = `webix_ss_sort_${direction}`;\n\t\t} else {\n\t\t\tconst sign = create(\"div\", {\n\t\t\t\twebix_sort_dir: direction,\n\t\t\t\tclass: `webix_ss_sort_${direction}`\n\t\t\t}, `<div class=\"webix_ss_sort_num\">${this._sort_signs_order.length + 1}</div>`);\n\n\t\t\tthis._render_single_mark(column, sign, direction);\n\n\t\t\tthis._sort_signs[column] = sign;\n\t\t\tthis._sort_signs_order.push(column);\n\t\t}\n\n\t\tconst first = this._sort_signs[ this._sort_signs_order[0] ];\n\t\tswitch (this._sort_signs_order.length){\n\t\t\tcase 1:\n\t\t\t\taddCss(first, \"webix_ss_sort_single\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tremoveCss(first, \"webix_ss_sort_single\");\n\t\t}\n\t},\n\t_render_single_mark:function(column, sign, direction){\n\t\tdirection = direction || sign.getAttribute(\"webix_sort_dir\");\n\n\t\tconst cell = this._get_header_cell(this.getColumnIndex(column));\n\t\tif (cell){\n\t\t\tif (cell.style.position != \"absolute\")\n\t\t\t\tcell.style.position = \"relative\";\n\t\t\tcell.appendChild(sign);\n\t\t\tcell.setAttribute(\"aria-sort\", direction + \"ending\");\n\t\t\tcell.setAttribute(\"tabindex\", \"0\");\n\t\t}\n\t},\n\tscroll_setter:function(mode){\n\t\tif (typeof mode == \"string\"){\n\t\t\tthis._settings.scrollX = (mode.indexOf(\"x\") != -1);\n\t\t\tthis._settings.scrollY = (mode.indexOf(\"y\") != -1);\n\t\t\treturn mode;\n\t\t} else \n\t\t\treturn (this._settings.scrollX = this._settings.scrollY = mode);\n\t},\n\t_get_header_cell:function(column){\n\t\tconst attr = /*@attr*/\"column\";\n\t\tconst cells = this._header.querySelectorAll(`div[${attr}=\"${column}\"]`);\n\t\tlet maybe = null;\n\n\t\tfor (let i = cells.length-1; i>=0; i--){\n\t\t\tconst c = cells[i];\n\t\t\tconst activeId = c.getAttribute(/*@attr*/\"active_id\");\n\t\t\tif(!activeId || datafilter[ this._active_headers[activeId].content ].$icon){\n\t\t\t\tif(!c.getAttribute(/*@attr*/\"colspan\"))\n\t\t\t\t\treturn c;\n\t\t\t\telse if(!maybe)\n\t\t\t\t\tmaybe = c;\n\t\t\t}\n\t\t}\n\t\treturn maybe;\n\t},\n\t_sort:function(col_id, direction, type, preserve){\n\t\tlet sortSign = true;\n\n\t\tpreserve = this._settings.sort === \"multi\" && preserve;\n\t\tdirection = direction || \"asc\";\n\n\t\tif (!preserve){\n\t\t\tthis._last_order = [];\n\t\t\tthis._last_sorted = {};\n\t\t}\n\n\t\tconst col = this.getColumnConfig(col_id);\n\t\tconst config = { by:col.id, dir:direction, as:col.sort };\n\t\tif (!this._last_sorted[col.id])\n\t\t\tthis._last_order.push(col.id);\n\t\tthis._last_sorted[col.id] = config;\n\n\t\tif (type == \"server\"){\n\t\t\tlet params = [col.id, direction, type];\n\t\t\tif (this._last_order.length > 1)\n\t\t\t\tparams = [ this._last_order.map(id => this._last_sorted[id]) ];\n\n\t\t\tif(this.callEvent(\"onBeforeSort\", params)){\n\t\t\t\tif (!this._skip_server_op)\n\t\t\t\t\tthis.loadNext(0, 0, 0, 0, true, true).then(() => this._on_after_sort(params));\n\t\t\t\telse this._skip_server_op.$params = params;\t\t\t// save last parameters\n\t\t\t}\n\t\t\telse\n\t\t\t\tsortSign = false;\n\t\t} else {\n\t\t\tif (type == \"text\" || type == \"text_locale\")\n\t\t\t\tthis._sort_text(config, col.id, type);\n\n\t\t\tif (this._last_order.length > 1)\n\t\t\t\tsortSign = this.data.sort( this._last_order.map(id => this._last_sorted[id]) );\n\t\t\telse\n\t\t\t\tsortSign = this.data.sort( config );\n\t\t}\n\n\t\tif(sortSign)\n\t\t\tthis.markSorting(col.id, config.dir, preserve);\n\t},\n\t_sort_text: function(config, id, type){\n\t\tconst new_id = `$${type}_${id}`;\n\t\tthis.data.each(obj => obj[new_id] = this.getText(obj.id, id));\n\t\tconfig.as = \"string\" + (type.indexOf(\"locale\") != -1 ? \"_locale\" : \"\");\n\t\tconfig.by = new_id;\n\t},\n\t_on_after_sort:function(params){\n\t\tthis.callEvent(\"onAfterSort\", params);\n\t},\n\t_mouseEventCall: function( css_call, e, id, trg ) {\n\t\tvar functor, i, res;\n\t\tif (css_call.length){\n\t\t\tfor ( i = 0; i < css_call.length; i++) {\n\t\t\t\tfunctor = toFunctor(css_call[i], this.$scope);\n\t\t\t\tres = functor.call(this,e,id,trg);\n\t\t\t\tif (res===false) return false;\n\t\t\t}\n\t\t}\n\t},\n\t//because we using non-standard rendering model, custom logic for mouse detection need to be used\n\t_mouseEvent:function(e,hash,name,pair){\n\t\tvar trg = e.target;\n\t\tif (this._settings.subview && this != $$(trg)) return;\n\n\t\t//define some vars, which will be used below\n\t\tvar css = \"\",\n\t\t\tcss_call = [],\n\t\t\tfound = false,\n\t\t\tid = null, \n\t\t\tres;\n\n\t\t//loop through all parents\n\t\twhile (trg && trg.parentNode && this._viewobj && trg != this._viewobj.parentNode){\n\t\t\tvar trgCss = _getClassName(trg);\n\t\t\tif ((css = trgCss) && hash) {\n\t\t\t\tcss = css.toString().split(\" \");\n\n\t\t\t\tfor (var i = css.length - 1; i >= 0; i--)\n\t\t\t\t\tif (hash[css[i]])\n\t\t\t\t\t\tcss_call.push(hash[css[i]]);\n\t\t\t}\n\n\t\t\tif (trg.parentNode.getAttribute && !id){\n\t\t\t\tvar column = trg.parentNode.getAttribute(/*@attr*/\"column\") || trg.getAttribute(/*@attr*/\"column\");\n\t\t\t\tif (column){ //we need to ignore TD - which is header|footer\n\t\t\t\t\tvar  isBody = this._body.contains(trg);\n\t\t\t\t\t//column already hidden or removed\n\t\t\t\t\tif(!this._columns[column]) return;\n\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif (isBody){\n\t\t\t\t\t\tvar index = trg.parentNode.getAttribute(/*@attr*/\"row\") || trg.getAttribute(/*@attr*/\"row\");\n\t\t\t\t\t\tif (!index){\n\t\t\t\t\t\t\t//click event occurs on column holder, we can't detect cell\n\t\t\t\t\t\t\tif (trg.getAttribute(/*@attr*/\"column\")) return;\n\t\t\t\t\t\t\tindex = getIndex(trg);\n\n\t\t\t\t\t\t\tif (index >= this._settings.topSplit){\n\t\t\t\t\t\t\t\tconst pager = this._settings.pager;\n\t\t\t\t\t\t\t\tif (pager || (!this._settings.prerender && !this._settings.autoheight))\n\t\t\t\t\t\t\t\t\tindex += this._columns[column]._yr0 - this._settings.topSplit;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._item_clicked = id = { row:this.data.order[index], column:this._columns[column].id};\n\t\t\t\t\t\tid.toString = this._id_to_string;\n\t\t\t\t\t} else \n\t\t\t\t\t\tthis._item_clicked = id = { column:this._columns[column].id };\n\n\t\t\t\t\t//some custom css handlers was found\n\t\t\t\t\tres = this._mouseEventCall(css_call, e, id, trg);\n\t\t\t\t\tif (res===false) return;\n\n\t\t\t\t\t//selection removes trg\n\t\t\t\t\tif(isBody && !this._body.contains(trg))\n\t\t\t\t\t\ttrg = this.getItemNode(id);\n\n\t\t\t\t\t//call inner handler\n\t\t\t\t\tif (isBody){\n\t\t\t\t\t\tif(this.callEvent(\"on\"+name,[id,e,trg])&&pair){\n\t\t\t\t\t\t\tthis.callEvent(\"on\"+pair,[id,e,trg]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (name == \"ItemClick\"){\n\t\t\t\t\t\tvar isHeader = this._header.contains(trg);\n\t\t\t\t\t\tif (isHeader && this.callEvent(\"onHeaderClick\", [id, e, trg]))\n\t\t\t\t\t\t\tthis._on_header_click(id.column, e);\n\t\t\t\t\t}\n\t\t\t\t\tcss_call = [];\n\t\t\t\t} \n\t\t\t}\n\n\t\t\ttrg=trg.parentNode;\n\t\t}\n\t\tthis._mouseEventCall(css_call, e, id, this.$view);\n\t\treturn found;\t//returns true if item was located and event was triggered\n\t},\n\t_get_tooltip_data:function(t,e){\n\t\tlet id = this.locate(e);\n\t\tif (!id) return null;\n\n\t\tlet tooltip = TooltipControl._tooltip;\n\t\tlet data;\n\n\t\tif (id.header){\n\t\t\tlet node = e.target;\n\t\t\tlet section = node;\n\t\t\tlet pos;\n\t\t\tlet rind = -1;\n\n\t\t\twhile (section && !pos){\n\t\t\t\tsection = section.parentNode;\n\t\t\t\tpos = section.getAttribute(\"section\");\n\t\t\t}\n\n\t\t\twhile (node && rind < 0){\n\t\t\t\tlet row = node.getAttribute(\"row\");\n\t\t\t\tif(row)\n\t\t\t\t\trind = row;\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\n\t\t\tlet config = this._columns[id.cind][pos][rind];\n\t\t\tif (config.tooltip)\n\t\t\t\ttooltip.type.template = template(config.tooltip === true ? \"#text#\" : config.tooltip);\n\t\t\telse return null;\n\n\t\t\tdata = config;\n\t\t} else {\n\t\t\tlet config = tooltip.type.column = this.getColumnConfig(id.column);\n\n\t\t\t//empty tooltip - ignoring\n\t\t\tif (!config.tooltip && config.tooltip !== undefined)\n\t\t\t\treturn null;\n\n\t\t\tif (config.tooltip === true || (!config.tooltip && isUndefined(this._settings.tooltip.template))){\n\t\t\t\tdata = this.getText(id.row, id.column).toString();\n\t\t\t} else if (config.tooltip){\n\t\t\t\tlet area = e.target.getAttribute(\"webix_area\");\n\n\t\t\t\tif (area){\n\t\t\t\t\ttooltip.type.template = function(obj,common){\n\t\t\t\t\t\tvar values = obj[config.id];\n\t\t\t\t\t\treturn template(config.tooltip).call(this,obj,common,values[area],area);\n\t\t\t\t\t};\n\t\t\t\t} else tooltip.type.template = template(config.tooltip);\n\t\t\t} else tooltip.type.template = template(this._settings.tooltip.template);\n\t\t}\n\n\t\treturn (data !== undefined) ? data : this.getItem(id.row);\n\t},\n\t$tooltipOut:function(){\n\t\tTooltipControl._hide_tooltip();\n\t\tdelete TooltipControl._tooltip.type.column;\n\t\treturn null;\n\t},\n\tshowOverlay:function(message){\n\t\tif (!this._datatable_overlay){\n\t\t\tvar t = create(\"DIV\", { \"class\":\"webix_overlay\" }, \"\");\n\t\t\tthis._body.appendChild(t);\n\t\t\tthis._datatable_overlay = t;\n\t\t}\n\t\tthis._datatable_overlay.innerHTML = message;\n\t},\n\thideOverlay:function(){\n\t\tif (this._datatable_overlay){\n\t\t\tremove(this._datatable_overlay);\n\t\t\tthis._datatable_overlay = null;\n\t\t}\n\t},\n\tmapCells: function(startrow, startcol, numrows, numcols, callback, getOnly) {\n\t\tif (startrow === null && this.data.order.length > 0) startrow = this.data.order[0];\n\t\tif (startcol === null) startcol = this.columnId(0);\n\t\tif (numrows === null) numrows = this.data.order.length;\n\t\tif (numcols === null) numcols = this._settings.columns.length;\n\n\t\tif (!this.exists(startrow)) return;\n\t\tstartrow = this.getIndexById(startrow);\n\t\tstartcol = this.getColumnIndex(startcol);\n\t\tif (startcol === null) return;\n\n\t\tfor (var i = 0; i < numrows && (startrow + i) < this.data.order.length; i++) {\n\t\t\tvar row_ind = startrow + i;\n\t\t\tvar row_id = this.data.order[row_ind];\n\t\t\tif(row_id){ //dyn loading\n\t\t\t\tvar item = this.getItem(row_id);\n\t\t\t\tfor (var j = 0; j < numcols && (startcol + j) < this._settings.columns.length; j++) {\n\t\t\t\t\tvar col_ind = startcol + j;\n\t\t\t\t\tvar col_id = this.columnId(col_ind);\n\t\t\t\t\tvar result = callback(item[col_id], row_id, col_id, i, j);\n\t\t\t\t\tif (!getOnly)\n\t\t\t\t\t\titem[col_id] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_call_onparse: function(driver, data){\n\t\tif (!this._settings.columns && driver.getConfig)\n\t\t\tthis.define(\"columns\", driver.getConfig(data));\n\t},\n\t_autoDetectConfig:function(){\n\t\tvar test = this.getItem(this.getFirstId());\n\t\tvar res = this._settings.columns = [];\n\t\tfor (var key in test)\n\t\t\tif (key != \"id\" && key[0] != \"$\")\n\t\t\t\tres.push({ id:key, header:key[0].toUpperCase()+key.substr(1), sort:\"string\", editor:\"text\" });\n\t\tif (res.length)\n\t\t\tres[0].fillspace = true;\n\t\tif (typeof this._settings.select == \"undefined\")\n\t\t\tthis.define(\"select\", \"row\");\n\t}\n};\n\n// #include ui/datatable/datatable_filter.js\n// #include ui/datatable/datatable_selection.js\n// #include ui/datatable/datatable_blockselect.js\n// #include ui/datatable/datatable_resize.js\n// #include ui/datatable/datatable_paging.js\n// #include ui/datatable/datatable_clipboard.js\n// #include ui/datatable/datatable_state.js\n// #include ui/datatable/datatable_touch.js\n// #include ui/datatable/datatable_size.js\n// #include ui/datatable/datatable_math.js\n// #include ui/datatable/datatable_edit.js\n// #include ui/datatable/datatable_columns.js\n// #include ui/datatable/datatable_keynav.js\n\n// #include ui/datatable/datatable_dnd.js\n// #include ui/datatable/datatable_validation.js\n\n// #include ui/datatable/datatable_sparklines.js\n\n// #include ui/datatable/datatable_print.js\n// #include ui/datatable/datatable_export.js\n\n\nconst view = protoUI(\n\tapi,\n\tAreaSelect, DataState, TablePaste,\tDataMove,\n\tEditAbility, KeysNavigation, PagingAbility,\n\tCustomPrint, PrintMixin,\n\tValidateCollection, ValidationMixin,\n\tExportMixin, DragItem, DragMixin,\n\tKeyNavMixin, ColumnsMixin, EditMixin, MathMixin, HeaderMenuMixin,\n\tSizeMixin, TouchMixin, ResizeMixin, SubRowMixin,\n\tBlockSelectMixin, SelectionMixin, FilterMixin, FreezeRowMixin, SpansMixin,\n\t\n\tAutoTooltip, Group, DataMarks, DataLoader,  MouseEvents, MapCollection, base.view, EventSystem, Settings );\n\nexport default {api, view};\n","import {create} from \"../../webix/html\";\nimport {isUndefined, copy} from \"../../webix/helpers\";\n\n\nconst Mixin = {\n\t_prePrint:function(options, htmlOnly){\n\t\tif(options.scroll && !htmlOnly) return true;\n\n\t\toptions.header = isUndefined(options.header)?(this.config.header?true:false):options.header;\n\t\toptions.footer = isUndefined(options.footer)?(this.config.footer?true:false):options.footer;\n\t\toptions.xCorrection = options.xCorrection || 0; //spreadsheet\n\t},\n\t_findIndex:function(arr, func){\n\t\tvar result = -1;\n\t\tfor(var i =0; result<0 && i < arr.length; i++){\n\t\t\tif(func(arr[i]))\n\t\t\t\tresult = i;\n\t\t}\n\t\treturn result;\n\t},\n\t_getTableHeader:function(base, columns, group){\n\n\t\tvar spans = {}, start = 0;\n\n\t\tbase.forEach((tableArray, tid)=>{\n\t\t\tvar row = tableArray[0], headerArray = [], length = row.length;\n\n\t\t\trow.forEach((cell, cid)=>{\n\t\t\t\tvar column = columns[cid+start];\n\n\t\t\t\tfor(var h  = 0; h < column[group].length; h++){\n\t\t\t\t\tvar header = column[group][h];\n\n\t\t\t\t\tif(!header && !(spans[tid] && spans[tid][h])) continue;\n\t\t\t\t\t\n\t\t\t\t\theader = copy(header || {text:\"\"});\n\t\t\t\t\t\n\t\t\t\t\tif(spans[tid] && spans[tid][h] && cid ===0){\n\t\t\t\t\t\theader.colspan = spans[tid][h];\n\t\t\t\t\t\tspans[tid][h] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(header.colspan){\n\t\t\t\t\t\tvar colspan = Math.min(header.colspan, (length-cid));\n\t\t\t\t\t\tspans[tid+1] = spans[tid+1] || {};\n\t\t\t\t\t\tspans[tid+1][h] = header.colspan-colspan;\n\t\t\t\t\t\theader.colspan = colspan;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hcell = {\n\t\t\t\t\t\ttxt: header.rotate ? this.getHeaderNode(column.id, h).innerHTML:\n\t\t\t\t\t\t\t(header.text || (header.contentId?this.getHeaderContent(header.contentId).getValue():\"\")),\n\t\t\t\t\t\tclassName:\"webix_hcell \"+\"webix_\"+group+\"_cell \"+(header.css || \"\"),\n\t\t\t\t\t\tstyle:{\n\t\t\t\t\t\t\theight:(header.height || this.config.headerRowHeight)+\"px\",\n\t\t\t\t\t\t\twidth:header.colspan?\"auto\":column.width + \"px\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tspan:(header.colspan || header.rowspan) ? {colspan:header.colspan || 1, rowspan:header.rowspan || 1}:null\n\t\t\t\t\t};\n\t\t\t\t\theaderArray[h] = headerArray[h] || [];\n\t\t\t\t\theaderArray[h][cid] = hcell;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\theaderArray.forEach(row => {\n\t\t\t\tconst headers = row.filter(v => v);\n\t\t\t\tconst rowspan = headers[0] && headers[0].span && headers[0].span.rowspan;\n\t\t\t\tif(rowspan){\n\t\t\t\t\tconst rowSpanHeaders = headers.filter(v => v.span && v.span.rowspan && v.span.rowspan == rowspan);\n\t\t\t\t\tconst sameRowSpans = rowSpanHeaders.length == headers.length;\n\t\t\t\t\tif(sameRowSpans)\n\t\t\t\t\t\trow = row.map(header => {\n\t\t\t\t\t\t\theader.style.height = header.style.height.replace(\"px\", \"\")*rowspan + \"px\";\n\t\t\t\t\t\t\theader.span.rowspan = 1;\n\t\t\t\t\t\t\treturn header;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(group ==\"header\")\n\t\t\t\tbase[tid] = headerArray.concat(tableArray);\n\t\t\telse\n\t\t\t\tbase[tid] = tableArray.concat(headerArray);\n\t\t\tstart+=length;\n\t\t});\n\n\t\treturn base;\n\t},\n\t_getTableArray:function (options, base, start){\n\t\tvar columns = this.config.columns;\n\t\tvar sel = this.getSelectedId(true);\n\t\tvar maxWidth = options.fit == \"page\" ? Infinity : this._getPageWidth(options);\n\n\t\tvar rightRestriction = 0;\n\t\tvar bottomRestriction = 0;\n\t\tvar tableArray = [];\n\t\tvar newTableStart = 0;\n\t\tvar widths = [];\n\n\t\tstart = start || (0 + options.xCorrection);\n\t\tbase = base || [];\n\n\t\tconst spans = this._spans_pull;\n\t\tconst readySpans = {};\n\n\t\tif(spans)\n\t\t\tfor (let row in spans)\n\t\t\t\tfor (let column in spans[row]) {\n\t\t\t\t\tconst span = spans[row][column];\n\n\t\t\t\t\tconst hiddenRowOrder = this.data._filter_order;\n\t\t\t\t\tconst hiddenColumnOrder = this._hidden_column_order;\n\t\t\t\t\tconst startRowIndex = hiddenRowOrder ? hiddenRowOrder.find(row) : this.getIndexById(row);\n\t\t\t\t\tconst startColIndex = hiddenColumnOrder.length ? hiddenColumnOrder.find(column) : this.getColumnIndex(column);\n\n\t\t\t\t\tconst printSpan = {rowspan: 0, colspan: 0, css: span[5]||\"\"};\n\t\t\t\t\tlet firstVisibleRow = true;\n\n\t\t\t\t\tfor(let r = startRowIndex; r < startRowIndex+span[1]; r++)\n\t\t\t\t\t\tif(this.getIdByIndex(r)){\n\t\t\t\t\t\t\tprintSpan.rowspan++;\n\t\t\t\t\t\t\tfor(let c = startColIndex; c < startColIndex+span[0]; c++){\n\t\t\t\t\t\t\t\tif(this.columnId(c)){\n\t\t\t\t\t\t\t\t\tif(firstVisibleRow)\n\t\t\t\t\t\t\t\t\t\tprintSpan.colspan++;\n\n\t\t\t\t\t\t\t\t\tif(!readySpans[r])\n\t\t\t\t\t\t\t\t\t\treadySpans[r] = {};\n\n\t\t\t\t\t\t\t\t\tif(printSpan.$ready)\n\t\t\t\t\t\t\t\t\t\treadySpans[r][c] = {$inspan:true};\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\treadySpans[r][c] = printSpan;\n\t\t\t\t\t\t\t\t\t\tprintSpan.$ready = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfirstVisibleRow = false;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\tthis.eachRow(row => {\n\t\t\tvar width = 0;\n\t\t\tvar rowItem = this.getItem(row);\n\t\t\tvar rowIndex = this.getIndexById(row);\n\n\t\t\tvar colrow = [];\n\t\t\tvar datarow = false;\n\n\t\t\tfor(var c=start; c<columns.length; c++){\n\t\t\t\tvar column = columns[c].id;\n\t\t\t\tvar colIndex = this.getColumnIndex(column)-start;\n\n\t\t\t\tif(columns[c]){\n\t\t\t\t\twidth += columns[c].width;\n\t\t\t\t\tif(rowIndex === 0)\n\t\t\t\t\t\twidths.push(columns[c].width);\n\n\t\t\t\t\tif(width > maxWidth && c > start){ // 'c>start' ensures that a single long column will have to fit the page\n\t\t\t\t\t\tnewTableStart = c; break; }\n\n\t\t\t\t\tif(options.data !== \"selection\" || (options.data == \"selection\" && this._findIndex(sel, function(obj){\n\t\t\t\t\t\treturn obj.column == column && obj.row == row;\n\t\t\t\t\t})!==-1)){\n\t\t\t\t\t\tlet span;\n\n\t\t\t\t\t\tif(spans && readySpans[rowIndex] && readySpans[rowIndex][colIndex+start]){\n\t\t\t\t\t\t\tspan = readySpans[rowIndex][colIndex+start];\n\n\t\t\t\t\t\t\tif(span.$inspan){\n\t\t\t\t\t\t\t\tcolrow.push(span);\n\t\t\t\t\t\t\t\trightRestriction = Math.max(colIndex+1, rightRestriction);\n\t\t\t\t\t\t\t\tbottomRestriction = Math.max(rowIndex+1, bottomRestriction);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet txt = this.getText(row, column);\n\t\t\t\t\t\tif(txt === 0) txt += \"\";\n\n\t\t\t\t\t\tconst className = this.getCss(row, column)+\" \"+(columns[c].css || \"\")+(span ? \" webix_dtable_span \"+span.css : \"\");\n\n\t\t\t\t\t\tconst style  = {\n\t\t\t\t\t\t\theight:span && span.rowspan > 1 ? \"auto\": ((rowItem.$height || this.config.rowHeight) + \"px\"),\n\t\t\t\t\t\t\twidth: span && span.colspan > 1 ? \"auto\": columns[c].width + \"px\"\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tcolrow.push({ txt, className, style, span });\n\n\t\t\t\t\t\tif (txt) {\n\t\t\t\t\t\t\trightRestriction = Math.max(colIndex+1, rightRestriction);\n\t\t\t\t\t\t\tbottomRestriction = Math.max(rowIndex+1, bottomRestriction);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdatarow = datarow || !!txt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!options.skiprows || datarow)\n\t\t\t\ttableArray.push(colrow);\n\t\t});\n\n\t\tif(bottomRestriction && rightRestriction){\n\t\t\tif(options.trim){\n\t\t\t\ttableArray.length = bottomRestriction;\n\t\t\t\ttableArray = tableArray.map(function(item){\n\t\t\t\t\tfor(var i = item.length-1; i>=0; i--){\n\t\t\t\t\t\tif(item[i].span && item[i].span.colspan){\n\t\t\t\t\t\t\titem[i].span.colspan = Math.min(item[i].span.colspan, item.length-i);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\titem.length = rightRestriction;\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t}\n\t\t\tbase.push(tableArray);\n\t\t}\n\n\t\tif(newTableStart) \n\t\t\tthis._getTableArray(options, base, newTableStart);\n\t\telse{\n\t\t\t//keep this order as logic relies on the first data row\n\t\t\tif(options.footer)\n\t\t\t\tbase = this._getTableHeader(base, columns, \"footer\");\n\t\t\tif(options.header)\n\t\t\t\tbase = this._getTableHeader(base, columns, \"header\");\n\n\t\t\tif(options.fit == \"page\") \n\t\t\t\tthis._correctWidth(base, widths, rightRestriction, options);\n\t\t}\n\n\t\treturn base;\n\t},\n\t//a single grid tries to fit to page size - set column width to auto\n\t_correctWidth:function(base, widths, rightRestriction, options){\n\t\tif(rightRestriction && options.trim)\n\t\t\twidths.length = rightRestriction;\n\n\t\tlet rwidth = 0;\n\t\tfor(let i = 0; i < widths.length; i++)\n\t\t\trwidth += widths[i];\n\n\t\tif(rwidth > this._getPageWidth(options))\n\t\t\tif(base[0])\n\t\t\t\tbase[0].forEach((item) => {\n\t\t\t\t\tfor(let i = 0; i < item.length; i++){\n\t\t\t\t\t\tif(item[i] && item[i].style && item[i].style.width)\n\t\t\t\t\t\t\titem[i].style.width = \"auto\";\n\t\t\t\t\t}\n\t\t\t\t});\n\t},\n\t_getTableHTML:function(tableData, options){\n\t\tconst container = create(\"div\");\n\t\tconst sCount = this.config.topSplit || 0;\n\t\tconst hCount = options.header ? this.config.columns[0].header.length : 0;\n\t\tconst fCount = options.footer ? this.config.columns[0].footer.length : 0;\n\n\t\t//rows are not repeated on every page if header > 6\n\t\tconst topSplitIndex = hCount + sCount;\n\t\tconst headerCount = topSplitIndex > 6 ? hCount : topSplitIndex;\n\n\t\ttableData.forEach((table, i)=>{\n\t\t\tconst tableHTML = create(\n\t\t\t\t\"table\",\n\t\t\t\t{\n\t\t\t\t\tclass: \"webix_table_print \"+this.$view.className+(options.borderless?\" borderless\":\"\"),\n\t\t\t\t\tstyle: \"border-collapse:collapse\",\n\t\t\t\t\tid: this.$view.getAttribute(\"id\")\n\t\t\t\t},\n\t\t\t\t\"<thead></thead><tbody></tbody><tfoot></tfoot>\"\n\t\t\t);\n\t\t\tcontainer.appendChild(tableHTML);\n\t\t\tconst [header, body, footer] = tableHTML.children;\n\n\t\t\ttable.forEach((row, rowIndex)=>{\n\t\t\t\tconst tr = create(\"tr\");\n\n\t\t\t\trow.forEach(cell => {\n\t\t\t\t\tif(!cell.$inspan){\n\t\t\t\t\t\tconst td = create(\"td\", {class: cell.className}, cell.txt);\n\n\t\t\t\t\t\tfor(let key in cell.style)\n\t\t\t\t\t\t\ttd.style[key] = cell.style[key];\n\n\t\t\t\t\t\tif(cell.span){\n\t\t\t\t\t\t\ttd.colSpan = cell.span.colspan;\n\t\t\t\t\t\t\ttd.rowSpan = cell.span.rowspan;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttr.appendChild(td);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(sCount && rowIndex + 1 == topSplitIndex)\n\t\t\t\t\ttr.className = \"webix_print_top_split\";\n\n\t\t\t\tif(rowIndex < headerCount)\n\t\t\t\t\theader.appendChild(tr);\n\t\t\t\telse if(table.length - fCount > rowIndex)\n\t\t\t\t\tbody.appendChild(tr);\n\t\t\t\telse\n\t\t\t\t\tfooter.appendChild(tr);\n\t\t\t});\n\n\t\t\tif(i+1 < tableData.length){\n\t\t\t\tconst br = create(\"DIV\", {class: \"webix_print_pagebreak\"});\n\t\t\t\tcontainer.appendChild(br);\n\t\t\t}\n\t\t});\n\n\t\treturn container;\n\t}\n};\n\nexport default Mixin;","import color from \"../../webix/color\";\nimport {toExcel, toPDF} from \"../../webix/export\";\nimport {create, remove} from \"../../webix/html\";\nimport {extend, isUndefined, copy} from \"../../webix/helpers\";\n\nconst Mixin = {\n\t$exportView: function(options){\n\t\tif (this.isBranchOpen) //treetable\n\t\t\textend(options, { filterHTML: true });\n\n\t\tconst mode = options.export_mode;\n\n\t\tif ((mode != \"pdf\" && mode != \"excel\") || options.dataOnly || !(options.styles || options.freeze))\n\t\t\treturn this;\n\t\telse { //excel export with styles\n\t\t\toptions.dataOnly = true;\n\t\t\toptions.heights = isUndefined(options.heights) ? \"all\": options.heights;\n\n\t\t\tconst data = mode == \"pdf\" ? toPDF(this, options) : toExcel(this, options);\n\n\t\t\tif(options.styles)\n\t\t\t\tdata[0].styles = this._getExportStyles(options);\n\n\t\t\tdelete options.dataOnly;\n \n\t\t\tif(mode == \"excel\" && options.freeze){\n\t\t\t\tconst columns = this._hidden_split[0] || this.config.leftSplit;\n\t\t\t\tconst rows = this.config.topSplit;\n\t\t\t\tif(columns || rows)\n\t\t\t\t\tdata[0].freeze = {\n\t\t\t\t\t\trows: rows - (data[0].viewOptions.yCorrection || 0),\n\t\t\t\t\t\tcolumns: columns - (data[0].viewOptions.xCorrection || 0)\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\t},\n\t_getExportStyles: function(options){\n\t\tconst type = options.export_mode;\n\t\tconst columns = this.config.columns;\n\t\tlet styles = [];\n\t\t\n\t\tif (!this._style_hash)\n\t\t\tthis._style_hash = {};\n\n\t\tif (!this._style_hash[type])\n\t\t\tthis._style_hash[type] = {};\n\n\t\tif (options.docHeader && type == \"excel\")\n\t\t\tstyles = [{ 0:this._getExportDocStyle(options.docHeader.css, type)}, { 0:{}}];\n\t\tif (options.header!==false)\n\t\t\tstyles = this._getExportHStyles(options, \"header\", styles, type);\n\n\t\tthis.data.each(function(obj){\n\t\t\tif(options.filter && !options.filter(obj))\n\t\t\t\treturn false;\n\t\t\tconst row = {};\n\t\t\tfor (let i = 0; i < columns.length; i++){\n\t\t\t\tconst cellCss = this.getCss(obj.id, columns[i].id);\n\t\t\t\tconst columnCss = columns[i].node.className;\n\t\t\t\tlet spanCss = \"\";\n\t\t\t\tlet span = null;\n\t\t\t\tlet node = null;\n\n\t\t\t\tif (this._spans_pull && (span = this.getSpan(obj.id, columns[i].id))){\n\t\t\t\t\tnode  = this.getSpanNode({row:span[0], column:span[1]});\n\t\t\t\t\tspanCss = \"webix_dtable_span \"+(span[5] || \"\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tnode = this.getItemNode({row:obj.id, column:columns[i].id});\n\n\t\t\t\tif (!node){\n\t\t\t\t\tnode = create(\"div\", {\n\t\t\t\t\t\t\"class\":cellCss, style:\"visibility:hidden\"\n\t\t\t\t\t});\n\t\t\t\t\tlet cnode = columns[i].node;\n\t\t\t\t\tif (!columns[i].attached){\n\t\t\t\t\t\tcnode = create(\"div\", {\n\t\t\t\t\t\t\t\"class\":columnCss, style:\"visibility:hidden\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._body.appendChild(cnode);\n\t\t\t\t\t}\n\t\t\t\t\tcnode.appendChild(node);\n\t\t\t\t}\n\t\t\t\trow[i] = this._getExportCellStyle(node, [cellCss, columnCss, spanCss].join(\":\"), type);\n\t\t\t}\n\t\t\tstyles[styles.length] = row;\n\t\t}, this);\n\n\t\tif (options.footer !== false && this.config.footer)\n\t\t\tstyles = this._getExportHStyles(options, \"footer\", styles, type);\n\t\tif (options.docFooter && type == \"excel\")\n\t\t\tstyles = styles.concat([{0:{}}, { 0:this._getExportDocStyle(options.docFooter.css, type)}]);\n\n\t\treturn styles;\n\t},\n\t_getExportHStyles: function(options, group, styles, type){\n\t\tconst columns = this.config.columns;\n\t\tconst hs = [];//spans\n\n\t\tfor (let h = 0; h < columns[0][group].length; h++){\n\t\t\tconst hrow = {};\n\t\t\tfor (let i = 0; i < columns.length; i++){\n\t\t\t\tconst header = columns[i][group][h];\n\t\t\t\t//ToDo:make sure it is rendered and attached\n\t\t\t\tif (header){ //can be null\n\t\t\t\t\tconst cid = header.colspan ? columns[i+header.colspan-1].id : columns[i].id;\n\t\t\t\t\tconst node = (group == \"header\" ? this.getHeaderNode(cid, h) : this.getFooterNode(cid, h));\n\t\t\t\t\tif (node){\n\t\t\t\t\t\tconst name = [node.className, (header.css||\"\"), group];\n\t\t\t\t\t\throw[i] = this._getExportCellStyle(node, name.join(\":\"), type);\n\n\t\t\t\t\t\tif (header.colspan || header.rowspan){\n\t\t\t\t\t\t\t//add border only to the last cell of the rowspan/colspan\n\t\t\t\t\t\t\tconst styles = copy(hrow[i]);\n\n\t\t\t\t\t\t\tif(header.rowspan > 1)\n\t\t\t\t\t\t\t\tthis._clearBorder(type, \"bottom\", hrow[i]);\n\t\t\t\t\t\t\tif(header.colspan > 1)\n\t\t\t\t\t\t\t\tthis._clearBorder(type, \"right\", hrow[i]);\n\n\t\t\t\t\t\t\ths.push([h, i, {colspan:header.colspan-1 || 0, rowspan:header.rowspan-1||0}, styles]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor (let s = 0; s < hs.length; s++){\n\t\t\t\t\t\tconst st = hs[s][2], hsc = hs[s][1], hsr = hs[s][0];\n\t\t\t\t\t\tif (hsc + st.colspan >= i && hsr + st.rowspan >= h){\n\t\t\t\t\t\t\t//add border only to the last cell of the rowspan/colspan\n\t\t\t\t\t\t\tconst styles = copy(hs[s][3]);\n\t\t\t\t\t\t\tif(hsr + st.rowspan != h)\n\t\t\t\t\t\t\t\tthis._clearBorder(type, \"bottom\", styles);\n\t\t\t\t\t\t\tif(hsc + st.colspan != i)\n\t\t\t\t\t\t\t\tthis._clearBorder(type, \"right\", styles);\n\t\t\t\t\t\t\throw[i] = styles;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tstyles[styles.length] = hrow;\n\t\t}\n\t\treturn styles;\n\t},\n\t_clearBorder(type, pos, obj){\n\t\tif(type == \"pdf\")\n\t\t\tobj[\"border\" + pos[0].toUpperCase() + pos.substring(1) + \"Color\"] = obj.backgroundColor;\n\t\telse\n\t\t\tdelete obj.border[pos];\n\t},\n\t_getBorderColor: function(styles, defaultColor, type){\n\t\treturn styles[`border-${type}-width`] == \"0px\" ? null : color.rgbToHex(styles[`border-${type}-color`]) || defaultColor;\n\t},\n\t_getExportCellStyle: function(node, name, type){\n\t\tif (this._style_hash[type][name]) \n\t\t\treturn this._style_hash[type][name];\n\t\telse {\n\t\t\tconst cellStyle = this._getRules(node);\n\n\t\t\tconst bg = color.rgbToHex(cellStyle[\"background-color\"]) || \"FFFFFF\";\n\t\t\tconst common = {\n\t\t\t\tbackgroundColor: bg,\n\t\t\t\tfontSize: cellStyle[\"font-size\"].replace(\"px\", \"\")*0.75, //px to pt conversion\n\t\t\t\tbold: cellStyle[\"font-weight\"] != \"normal\" && cellStyle[\"font-weight\"] != 400,\n\t\t\t\titalic: cellStyle[\"font-style\"] == \"italic\",\n\t\t\t\tunderline: cellStyle[\"text-decoration-line\"].indexOf(\"underline\") != -1,\n\t\t\t\tstrikethrough: cellStyle[\"text-decoration-line\"].indexOf(\"line-through\") != -1,\n\t\t\t\tcolor: color.rgbToHex(cellStyle[\"color\"]),\n\t\t\t\ttextAlign: cellStyle[\"text-align\"],\n\t\t\t\twhiteSpace: cellStyle[\"white-space\"] == \"normal\",\n\t\t\t\tborderRightColor: this._getBorderColor(cellStyle, bg, \"right\"),\n\t\t\t\tborderLeftColor: this._getBorderColor(cellStyle, bg, \"left\"),\n\t\t\t\tborderBottomColor: this._getBorderColor(cellStyle, bg, \"bottom\"),\n\t\t\t\tborderTopColor: this._getBorderColor(cellStyle, bg, \"top\"),\n\t\t\t};\n\n\t\t\tconst rules = type == \"pdf\" ? common : this._getExcelCellRules(cellStyle, node, common);\n\n\t\t\tthis._style_hash[type][name] = rules;\n\t\t\treturn rules;\n\t\t}\n\t},\n\t_getExportDocStyle: function(css, type){\n\t\tcss = extend(css||{}, {visibility:\"hidden\", \"white-space\":\"nowrap\", \"text-align\":\"left\"});\n\t\tlet cssStr = \"\";\n\t\tfor (let i in css) cssStr += (i+\":\"+css[i]+\";\");\n\n\t\tconst node = create(\"div\", {style:cssStr});\n\t\tthis._body.appendChild(node);\n\t\tconst style = this._getExportCellStyle(node, cssStr, type);\n\t\tremove(node);\n\n\t\treturn style;\n\t},\n\t_getExcelCellRules: function(cellStyle, node, common){\n\t\tconst textRotation = node.firstChild && node.firstChild.className && node.firstChild.className.indexOf(\"webix_rotate\") !== -1;\n\n\t\treturn {\n\t\t\tfont: {\n\t\t\t\tname: cellStyle[\"font-family\"].replace(/,.*$/, \"\"), // cut off fallback font;\n\t\t\t\tsz: common.fontSize,\n\t\t\t\tcolor: {rgb: common.color},\n\t\t\t\tbold: common.bold,\n\t\t\t\tunderline: common.underline,\n\t\t\t\titalic: common.italic,\n\t\t\t\tstrike: common.strikethrough\n\t\t\t},\n\t\t\talignment: {\n\t\t\t\thorizontal: common.textAlign,\n\t\t\t\tvertical: cellStyle[\"height\"] == cellStyle[\"line-height\"] ? \"center\" : \"top\",\n\t\t\t\twrapText: common.wrapText,\n\t\t\t\ttextRotation: textRotation ? 90 : null\n\t\t\t},\n\t\t\tfill: {\n\t\t\t\tfgColor:{rgb:common.backgroundColor}\n\t\t\t},\n\t\t\tborder: {\n\t\t\t\tright: common.borderRightColor ? {style:\"thin\", color:{rgb:common.borderRightColor}} : null,\n\t\t\t\tbottom: common.borderBottomColor ? {style:\"thin\", color:{rgb:common.borderBottomColor}} : null,\n\t\t\t\tleft: common.borderLeftColor ? {style:\"thin\", color:{rgb:common.borderLeftColor}} : null,\n\t\t\t\ttop: common.borderTopColor ? {style:\"thin\", color:{rgb:common.borderTopColor}} : null\n\t\t\t}\n\t\t};\n\t},\n\t_getRules: function(node){\n\t\tlet style = {};\n\t\tif (window.getComputedStyle)\n\t\t\tstyle = window.getComputedStyle(node);\n\t\telse\n\t\t\tstyle = node.currentStyle;\n\t\treturn style;\n\t}\n};\n\nexport default Mixin;","import {posRelative, pos as getPos, offset, remove, removeCss, addCss} from \"../../webix/html\";\nimport {isArray, bind, extend, delay} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport DragItem from \"../../core/dragitem\";\nimport DragControl from \"../../core/dragcontrol\";\nimport AutoScroll from \"../../core/autoscroll\";\n\nconst DragOrder = {\n\t_set_drop_area:function(target){\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tlet column = this._columns[i];\n\t\t\tlet node = this.getItemNode({ row:target, cind:i});\n\t\t\tif (node){\n\t\t\t\tnode.parentNode.insertBefore(DragControl._dropHTML[i], node);\n\t\t\t} else column.node.appendChild(DragControl._dropHTML[i]);\n\t\t}\n\t},\n\t_init_drop_area:function(){\n\t\tlet dropArea = [];\n\t\tlet count = this._columns.length;\n\t\tlet node = document.createElement(\"div\");\n\n\t\tnode.className = \"webix_drop_area\";\n\t\tnode.style.height = this._settings.rowHeight + \"px\";\n\t\tnode.innerHTML = this.$dropHTML();\n\n\t\tfor (let i=0; i<count; i++)\n\t\t\tdropArea.push(node.cloneNode(true));\n\n\t\treturn dropArea;\n\t}\n};\n\nconst Mixin = {\n\tdrag_setter:function(value){\n\t\t// disable drag-n-drop for frozen rows\n\t\tthis.attachEvent(\"onBeforeDrag\", function(context){\n\t\t\treturn this._checkDragTopSplit(context.source);\n\t\t});\n\t\tthis.attachEvent(\"onBeforeDragIn\", function(context){\n\t\t\tlet result = this._checkDragTopSplit(context.target);\n\n\t\t\tif (!result && DragControl._dropHTML){\n\t\t\t\tremove(DragControl._dropHTML);\n\t\t\t\tthis._marked_item_id = DragControl._dropHTML = null;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\n\t\tDragItem.drag_setter.call(this,value);\n\t\tif (value == \"order\" || value == \"move\")\n\t\t\textend(this, DragOrder, true);\n\n\t\treturn value;\n\t},\n\t_add_css:function(source, css, mark){\n\t\tlet context = DragControl._drag_context;\n\n\t\tif (!this._settings.prerender && !mark)\n\t\t\tsource = [context.start];\n\n\t\tfor (let i=0; i<source.length; i++){\n\t\t\tfor (let j=0; j<this._columns.length; j++){\n\t\t\t\tlet node = this.getItemNode({ row:source[i], cind:j});\n\t\t\t\tif (node)\n\t\t\t\t\taddCss(node, css);\n\t\t\t}\n\t\t\tthis.data.addMark(source[i], css, 1, 1, true);\n\t\t}\n\t},\n\t_remove_css:function(source, css, mark){\n\t\tlet context = DragControl._drag_context;\n\n\t\tif (!this._settings.prerender && !mark)\n\t\t\tsource = [context.start];\n\n\t\tfor (let i=0; i<source.length; i++){\n\t\t\tfor (let j=0; j<this._columns.length; j++){\n\t\t\t\tlet node = this.getItemNode({ row:source[i], cind:j});\n\t\t\t\tif (node)\n\t\t\t\t\tremoveCss(node, css);\n\t\t\t}\n\t\t\tthis.data.removeMark(source[i], css, 1, true);\n\t\t}\n\t},\n\t_checkDragTopSplit: function(ids){\n\t\tvar i, index,\n\t\t\tfrozen = false;\n\t\tif(this._settings.topSplit && ids){\n\t\t\tif(!isArray(ids))\n\t\t\t\tids = [ids];\n\t\t\tfor(i=0; !frozen && i< ids.length;i++ ){\n\t\t\t\tindex = this.getIndexById(ids[i]);\n\t\t\t\tfrozen = index >= 0 && index < this._settings.topSplit;\n\t\t\t}\n\t\t}\n\t\treturn !frozen;\n\t},\n\t_toHTML:function(obj){\n\t\tvar width = this._content_width - this._scrollSizeY;\n\t\tvar html=\"<div class='webix_dd_drag' style='width:\"+width+\"px;'>\";\n\t\tvar cols = this._settings.columns;\n\t\tfor (var i=0; i<cols.length; i++){\n\t\t\tvar value = this._getValue(obj, cols[i]);\n\t\t\thtml += \"<div style='width:\"+cols[i].width+\"px;'>\"+value+\"</div>\";\n\t\t}\n\t\treturn html+\"</div>\";\n\t},\n\tgetHeaderNode:function(column_id, row_index){\n\t\treturn this._getHeaderNode(column_id, row_index, this._header);\n\t},\n\tgetFooterNode:function(column_id, row_index){\n\t\treturn this._getHeaderNode(column_id, row_index, this._footer);\n\t},\n\t_getHeaderNode:function(column_id, row_index, group){\n\t\tif(this.isColumnVisible(column_id)){\n\t\t\tvar ind = this.getColumnIndex(column_id);\n\t\t\tvar hind = this._settings.leftSplit > ind ? 0 : (this._rightSplit <=ind ? 2 :1 );\n\t\t\trow_index = row_index || 0;\n\n\t\t\tconst groupNode = group.childNodes[hind];\n\n\t\t\tconst row = /*@attr*/\"column\";\n\t\t\tconst column = /*@attr*/\"row\";\n\t\t\treturn groupNode.querySelector(`div[${row}=\"${ind}\"][${column}=\"${row_index}\"]`);\n\t\t}\n\t\treturn null;\n\t},\n\tgetItemNode:function(id){\n\t\tif (id && !id.header){\n\t\t\tconst row = id.row || id;\n\t\t\tconst rowindex = (typeof id.rind === \"number\") ? id.rind : this.getIndexById(row);\n\t\t\tconst state = this._get_y_range();\n\t\t\tconst minRow = state[0]-this._settings.topSplit;\n\t\t\t//row not visible\n\t\t\tif (rowindex < minRow && rowindex > state[1]) return;\n\n\t\t\t//get visible column\n\t\t\tconst x_range = this._get_x_range();\n\t\t\tlet colindex = this._settings.leftSplit ? 0 : x_range[0];\n\t\t\tconst specific = (typeof id.cind === \"number\");\n\t\t\tif (id.column || specific){\n\t\t\t\tcolindex = specific ? id.cind : this.getColumnIndex(id.column);\n\t\t\t\t//column not visible\n\t\t\t\tif (colindex < this._rightSplit && colindex >= this._settings.leftSplit && (colindex<x_range[0] || colindex > x_range[1]))\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst column = this._settings.columns[colindex];\n\n\t\t\tif (column && column.attached && column.node){\n\t\t\t\tif (row === \"$webix-drop\")\n\t\t\t\t\treturn DragControl._dropHTML[colindex];\n\n\t\t\t\tlet nodeIndex = (rowindex<this._settings.topSplit || this._settings.prerender)?rowindex:(rowindex-minRow);\n\t\t\t\tconst nodes = column.node.childNodes;\n\t\t\t\tconst length = Math.min(nodes.length, nodeIndex+1);\n\n\t\t\t\tfor (let i=0; i<length; i++)\n\t\t\t\t\tif (nodes[i].className === \"webix_drop_area\")\n\t\t\t\t\t\tnodeIndex++;\n\n\t\t\t\treturn nodes[nodeIndex];\n\t\t\t}\n\t\t}\n\t},\n\t_isDraggable:function(e){\n\t\tvar nodeName = e.target.nodeName;\n\t\treturn nodeName != \"INPUT\" && nodeName != \"TEXTAREA\";\n\t},\n\t_getColumnDragText: function(id, rind){\n\t\tconst header = this.getColumnConfig(id).header;\n\t\tlet text = header[rind]? header[rind].text : null;\n\t\tfor (let i = 0; !text && i < header.length; i++)\n\t\t\tif (header[i] && header[i].text)\n\t\t\t\ttext = header[i].text;\n\t\treturn text || \"&nbsp;\";\n\t},\n\tdragColumn_setter:function(value){\n\t\tvar control; //will be defined below\n\t\tif (value == \"order\"){\n\t\t\tcontrol = {\n\t\t\t\t$drag:bind(function(s,e,pointer){\n\t\t\t\t\tif (!this._isDraggable(e) || this._rs_process) return false;\n\n\t\t\t\t\tvar id = this.locate(e);\n\t\t\t\t\tif (!id || !this.callEvent(\"onBeforeColumnDrag\", [id.column, e])) return false;\n\n\t\t\t\t\tDragControl._drag_context = { from:control, start:id, custom:\"column_dnd\" };\n\t\t\t\t\tvar column = this.getColumnConfig(id.column);\n\n\t\t\t\t\tif (pointer === \"touch\") {\n\t\t\t\t\t\tconst hnode = this.getHeaderNode(id.column, id.rind);\n\t\t\t\t\t\tthis._relative_column_drag = { x: getPos(e).x - offset(hnode).x };\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._relative_column_drag = posRelative(e);\n\t\t\t\t\tthis._limit_column_drag = column.width;\n\n\t\t\t\t\tthis._auto_scroll_force = true;\n\t\t\t\t\treturn \"<div class='webix_dd_drag_column' style='width:\"+column.width+\"px'>\"+this._getColumnDragText(id.column, id.rind)+\"</div>\";\n\t\t\t\t}, this),\n\t\t\t\t$dragPos:bind(function(pos, e, node){\n\t\t\t\t\tvar context = DragControl.getContext();\n\t\t\t\t\tvar box = offset(this.$view);\n\t\t\t\t\tnode.style.display = \"none\";\n\n\t\t\t\t\tvar html = document.elementFromPoint(pos.x, box.y + (this._settings.headerRowHeight/2));\n\t\t\t\t\tvar id = html ? this.locate(html) : null;\n\t\t\t\t\tvar start = context.start.column;\n\n\t\t\t\t\tif (id && id.column != start && (!this._column_dnd_temp_block || id.column != this._last_sort_dnd_node )){\n\t\t\t\t\t\t//ignore normal dnd , and dnd from other components\n\t\t\t\t\t\tif (context.custom == \"column_dnd\" && $$(html) == this){\n\n\t\t\t\t\t\t\tif (!this.callEvent(\"onBeforeColumnDropOrder\",[start, id.column,e])) return;\n\n\t\t\t\t\t\t\tvar start_index = this.getColumnIndex(start);\n\t\t\t\t\t\t\tvar end_index = this.getColumnIndex(id.column);\n\n\t\t\t\t\t\t\t//on touch devices we need to preserve drag-start element till the end of dnd\n\t\t\t\t\t\t\tif(e.touches){\n\t\t\t\t\t\t\t\tthis._dragTarget = e.target;\n\t\t\t\t\t\t\t\tthis._dragTarget.style.display = \"none\";\n\t\t\t\t\t\t\t\tthis.$view.parentNode.appendChild(this._dragTarget);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._moveColumn(start, end_index+(start_index<end_index?1:0), context.start.rind);\n\t\t\t\t\t\t\tthis._last_sort_dnd_node = id.column;\n\t\t\t\t\t\t\tthis._column_dnd_temp_block = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} if (id && id.column == start){\n\t\t\t\t\t\t//flag prevent flickering just after column move\n\t\t\t\t\t\tthis._column_dnd_temp_block = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.style.display = \"block\";\n\n\t\t\t\t\tpos.x = pos.x - this._relative_column_drag.x;\n\t\t\t\t\tpos.y = box.y;\n\n\t\t\t\t\tif (pos.x < box.x)\n\t\t\t\t\t\tpos.x = box.x; \n\t\t\t\t\telse {\n\t\t\t\t\t\tvar max = box.x + this.$view.offsetWidth - this._scrollSizeY-this._limit_column_drag;\n\t\t\t\t\t\tif (pos.x > max)\n\t\t\t\t\t\t\tpos.x = max;\n\t\t\t\t\t}\n\t\t\t\t\tDragControl._skip = true;\n\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t\t\t\tif (this._settings.dragscroll !== false)\n\t\t\t\t\t\tthis._auto_scroll_delay = delay((pos) => this._auto_scroll_column(pos), this, [getPos(e)], 250);\n\t\t\t\t}, this),\n\t\t\t\t$dragDestroy:bind(function(a, node){\n\t\t\t\t\tthis._auto_scroll_force = null;\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\t\t\tremove(node);\n\n\t\t\t\t\t//clean dnd source element\n\t\t\t\t\tif(this._dragTarget)\n\t\t\t\t\t\tremove(this._dragTarget);\n\t\t\t\t\tvar id = DragControl.getContext().start;\n\t\t\t\t\tthis.callEvent(\"onAfterColumnDropOrder\",[id.column, this._last_sort_dnd_node, a]);\n\t\t\t\t}, this),\n\t\t\t\t$drop: function(){}\n\t\t\t};\n\t\t} else if (value) {\n\t\t\tcontrol = {\n\t\t\t\t_inner_drag_only:true,\n\t\t\t\t$drag:bind(function(s,e){\n\t\t\t\t\tif(!this._isDraggable(e) || this._rs_process) return false;\n\t\t\t\t\tvar id = this.locate(e);\n\n\t\t\t\t\tif (!id || !this.callEvent(\"onBeforeColumnDrag\", [id.column, e])) return false;\n\t\t\t\t\tDragControl._drag_context = { from:control, start:id, custom:\"column_dnd\" };\n\n\t\t\t\t\tthis._auto_scroll_force = true;\n\t\t\t\t\treturn \"<div class='webix_dd_drag_column'>\"+this._getColumnDragText(id.column,  id.rind)+\"</div>\";\n\t\t\t\t}, this),\n\t\t\t\t$drop:bind(function(s,t,e){\n\t\t\t\t\tvar target = e;\n\t\t\t\t\t//on touch devices event doesn't point to the actual drop target\n\t\t\t\t\tif(e.touches && this._drag_column_last)\n\t\t\t\t\t\ttarget = this._drag_column_last;\n\n\t\t\t\t\tvar id = this.locate(target);\n\t\t\t\t\tif (!id) return false;\n\t\t\t\t\tconst start = DragControl.getContext().start;\n\t\t\t\t\tconst startId = start.column;\n\t\t\t\t\tif (startId != id.column){\n\t\t\t\t\t\tif (!this.callEvent(\"onBeforeColumnDrop\",[startId, id.column ,e])) return;\n\t\t\t\t\t\tvar start_index = this.getColumnIndex(startId);\n\t\t\t\t\t\tvar end_index = this.getColumnIndex(id.column);\n\n\t\t\t\t\t\tthis._moveColumn(startId, end_index+(start_index<end_index?1:0), start.rind);\n\t\t\t\t\t\tthis.callEvent(\"onAfterColumnDrop\",[startId, id.column, e]);\n\t\t\t\t\t}\n\t\t\t\t}, this),\n\t\t\t\t$dragIn:bind(function(s,t,e){\n\t\t\t\t\tvar context = DragControl.getContext();\n\t\t\t\t\t//ignore normal dnd , and dnd from other components\n\t\t\t\t\t\n\t\t\t\t\tif (context.custom != \"column_dnd\" || context.from != control) return false;\n\n\t\t\t\t\tvar target = e.target;\n\t\t\t\t\twhile ((target.className||\"\").indexOf(\"webix_hcell\") == -1){\n\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t\tif (!target) return;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t\t\t\tif (this._settings.dragscroll !== false)\n\t\t\t\t\t\tthis._auto_scroll_delay = delay((pos) => this._auto_scroll_column(pos), this, [getPos(e)], 250);\n\n\t\t\t\t\tif (target != this._drag_column_last){\t//new target\n\t\t\t\t\t\tif (this._drag_column_last)\n\t\t\t\t\t\t\tremoveCss(this._drag_column_last, \"webix_dd_over_column\");\n\t\t\t\t\t\taddCss(target, \"webix_dd_over_column\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (this._drag_column_last = target);\n\t\t\t\t}, this),\n\t\t\t\t$dragDestroy:bind(function(a,h){\n\t\t\t\t\tthis._auto_scroll_force = null;\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t\t\t\tif (this._drag_column_last)\n\t\t\t\t\t\tremoveCss(this._drag_column_last, \"webix_dd_over_column\");\n\t\t\t\t\tremove(h);\n\t\t\t\t}, this)\n\t\t\t};\n\t\t}\n\n\t\tif (value){\n\t\t\tDragControl.addDrag(this._header, control);\n\t\t\tDragControl.addDrop(this._header, control, true);\n\t\t\tthis.attachEvent(\"onDestruct\", () => DragControl.unlink(control));\n\n\t\t\tif (!this._auto_scroll)\n\t\t\t\textend(this, AutoScroll, true);\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\nexport default Mixin;","import {bind, extend} from \"../../webix/helpers\";\nimport {addCss, removeCss} from \"../../webix/html\";\nimport {assert} from \"../../webix/debug\";\n\n\n// #include core/keynav.js\n\nconst Mixin = {\n\t$init:function(config){\n\t\tthis.attachEvent(\"onAfterScroll\", this._set_focusable_item);\n\t\tthis.attachEvent(\"onFocus\", function(){\n\t\t\taddCss(this.$view, \"webix_dtable_focused\");\n\t\t});\n\t\tthis.attachEvent(\"onBlur\", function(){\n\t\t\tremoveCss(this.$view,\"webix_dtable_focused\");\n\t\t});\n\t\t//open selected node in tree-like tables\n\t\tif(config.select != \"column\" && (this.open || this._subViewStorage))\n\t\t\tthis.attachEvent(\"onEnter\", function(){\n\t\t\t\tlet sel = this.getSelectedId(true);\n\t\t\t\tif(sel.length == 1 && !(this.getEditor && this.getEditor())){\n\t\t\t\t\tconst node = this.getItemNode(sel[0]);\n\t\t\t\t\tsel = sel[0].row;\n\t\t\t\t\tif(this.config.select == \"row\" || (node.querySelector(\".webix_tree_open\") || node.querySelector(\".webix_tree_close\"))){\n\t\t\t\t\t\tif(this.isBranchOpen(sel)) this.close(sel);\n\t\t\t\t\t\telse this.open(sel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t},\n\t_set_focusable_item:function(){\n\t\tvar sel = this._getVisibleSelection();\n\t\tif(!sel){\n\t\t\tvar node =  this._dataobj.querySelector(\".webix_cell\");\n\t\t\tif(node)\n\t\t\t\tnode.setAttribute(\"tabindex\", \"0\");\n\t\t}\n\t},\n\t_getVisibleSelection:function(){\n\t\tconst sel = this.getSelectedId(true);\n\t\tfor(let i = 0; i<sel.length; i++){\n\t\t\tif(sel[i].column && this.isColumnVisible(sel[i].column))\n\t\t\t\treturn this.getItemNode(sel[i]);\n\t\t}\n\t\treturn null;\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tif(this._settings.disabled) return;\n\t\tdetails = details || {};\n\n\t\t//get existing selection as array\n\t\tvar t = this.getSelectedId(true);\n\t\tvar index = t.length-1;\n\t\tvar preserve = this._settings.multiselect || this._settings.areaselect ? details.shift : false;\n\n\t\t//change defaults in case of multiselection\n\t\tif(t.length>1 && this._settings.select !==\"cell\"){\n\t\t\tt = t.sort(bind(function(a, b){\n\t\t\t\tif(this.getIndexById(a.row)>this.getIndexById(b.row) || this.getColumnIndex(a.column)>this.getColumnIndex(b.column)) return 1;\n\t\t\t\telse return -1;\n\t\t\t}, this));\n\t\t\tif (mode == \"up\" || mode == \"left\" || mode ==\"top\" || mode ==\"pgup\")\n\t\t\t\tindex = 0;\n\t\t}\n\t\t\n\t\tif (index < 0 && this.count()){ //no selection\n\t\t\tif (mode == \"down\" || mode == \"right\") mode = \"top\";\n\t\t\telse if (mode == \"up\" || mode == \"left\") mode = \"bottom\";\n\t\t\telse return;\n\t\t\tindex = 0;\n\t\t\tt =  [{ row:1, column:1 }];\n\t\t}\n\n\t\tif (index>=0){\n\t\t\tvar row = t[index].row;\n\t\t\tvar column = t[index].column;\n\n\t\t\t//delay render for smooth navigation\n\t\t\tconst cell = {};\n\t\t\tthis._delayRender(focus !== false ? cell : false);\n\n\t\t\tif (mode == \"top\" || mode == \"bottom\") {\n\t\t\t\tif (row) {\n\t\t\t\t\t// first/last row setting\n\t\t\t\t\tif (mode == \"top\")\n\t\t\t\t\t\trow = this.data.getFirstId();\n\t\t\t\t\telse if (mode == \"bottom\")\n\t\t\t\t\t\trow = this.data.getLastId();\n\t\t\t\t}\n\t\t\t\tif (column) {\n\t\t\t\t\t// first/last column setting\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tif (mode == \"bottom\")\n\t\t\t\t\t\tindex = this.config.columns.length - 1;\n\t\t\t\t\tcolumn = this.columnId(index);\n\t\t\t\t}\n\t\t\t}else if (t.length == 1 && details.ctrl && !details.shift && (mode == \"up\" || mode== \"down\"|| mode == \"left\" || mode== \"right\")) {\n\t\t\t\tconst res = this._getNextCtrlSelection(t[0], mode);\n\t\t\t\trow = res.row;\n\t\t\t\tcolumn = res.column;\n\t\t\t} else if (mode == \"up\" || mode== \"down\" || mode == \"pgup\" || mode == \"pgdown\"){\n\t\t\t\tif (row){\n\t\t\t\t\t//it seems row's can be seleted\n\t\t\t\t\tlet index = this.getIndexById(row);\n\t\t\t\t\tlet step = 1;\n\t\t\t\t\tif(mode == \"pgup\" || mode == \"pgdown\")\n\t\t\t\t\t\tstep = this._pager ? this._pager.config.size : this.getVisibleCount();\n\n\t\t\t\t\t//get new selection row\n\t\t\t\t\tif (mode == \"up\" || mode == \"pgup\") {\n\t\t\t\t\t\tindex -= step;\n\t\t\t\t\t\tthis._nav_dir = \"up\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (mode == \"down\" || mode == \"pgdown\") {\n\t\t\t\t\t\tindex += step;\n\t\t\t\t\t\tthis._nav_dir = \"down\";\n\t\t\t\t\t} \n\t\t\t\t\t//check that we in valid row range\n\t\t\t\t\tif (index <0) index=0;\n\t\t\t\t\tif (index >=this.data.order.length) index=this.data.order.length-1;\n\t\t\t\t\tdetails.step = step;\n\t\t\t\t\trow = this.getIdByIndex(index);\n\t\t\t\t\t\n\t\t\t\t\t// row is not visible yet (paging and/or dynamic loading)\n\t\t\t\t\tif (!row) {\n\t\t\t\t\t\tthis.showItemByIndex(index);\n\t\t\t\t\t\tthis._sel_ctx = { cell, index, column, mode, details, preserve, dir: this._nav_dir };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (mode == \"right\" || mode == \"left\"){\n\t\t\t\tif (column && this.config.select != \"row\"){\n\t\t\t\t\t//it seems column's can be selected\n\t\t\t\t\tlet index = this.getColumnIndex(column);\n\t\t\t\t\t//get new selected column\n\t\t\t\t\tif (mode == \"right\") index++;\n\t\t\t\t\telse if (mode == \"left\") index--;\n\t\t\t\t\t//check that result column index is in valid range\n\t\t\t\t\tif (index<0) index = 0;\n\t\t\t\t\tif (index>=this.config.columns.length) index = this.config.columns.length-1;\n\n\t\t\t\t\tcolumn = this.columnId(index);\n\t\t\t\t} else if ((this.open || this._subViewStorage) && mode == \"right\"){\n\t\t\t\t\treturn this.open ? this.open(row) : this.openSub(row);\n\t\t\t\t} else if ((this.close || this._subViewStorage) && mode == \"left\"){\n\t\t\t\t\treturn this.close ? this.close(row) : this.closeSub(row);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tassert(false, \"Not supported selection moving mode\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._moveSelection(cell, { row, column }, mode, details, preserve);\n\t\t}\n\n\t\treturn false;\n\t},\n\t_moveSelection(cell, pos, mode, details, preserve) {\n\t\tconst { row, column } = pos;\n\t\tif (row){\n\t\t\tcell.row = row;\n\t\t\tcell.column = column;\n\t\t\tthis.callEvent(\"onMoveSelection\", [cell, mode, details]);\n\t\t\tthis.showCell(cell.row, cell.column);\n\n\t\t\tif(!this.select){ //switch on cell or row selection by default\n\t\t\t\textend(this, this._selections._commonselect, true);\n\t\t\t\tthis._settings.select = (this.open || this._subViewStorage?\"row\":\"cell\");\n\t\t\t\textend(this, this._selections[this._settings.select], true);\n\t\t\t}\n\n\t\t\tif(preserve && this._settings.select == \"area\"){\n\t\t\t\tvar last = this._selected_areas[this._selected_areas.length-1];\n\t\t\t\tthis._extendAreaRange(cell, last, mode, details);\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis._select(cell, preserve);\t\t\t\n\t\t}\n\t},\n\t_getNextCtrlSelection: function(cell, mode){\n\t\tconst {row, column} = cell,\n\t\t\tdir = (mode == \"up\" || mode == \"left\")?-1:1,\n\t\t\tisRowArr = (mode == \"up\" || mode == \"down\"),\n\t\t\tarr = isRowArr ? this.data.order : this._columns.map(c => c.id),\n\t\t\tid = isRowArr ? row : column;\n\n\t\tlet i = isRowArr ? this.getIndexById(row) : this.getColumnIndex(column);\n\t\tconst last = dir > 0 ? arr.length - 1 : 0;\n\n\t\tlet emptyId, prevId, next;\n\n\t\twhile(!next && arr[i]){\n\t\t\tconst iId = arr[i];\n\t\t\tlet r = isRowArr ? iId : row;\n\t\t\tlet c = isRowArr ? column : iId;\n\t\t\tlet value = this.$getExportValue? this.$getExportValue(r, c,  {}): this.getItem(r)[c];\n\t\t\tif(iId != id && emptyId && value)\n\t\t\t\tnext = iId;\n\t\t\telse if(!value){\n\t\t\t\tif(prevId && prevId != id)\n\t\t\t\t\tnext = prevId;\n\t\t\t\temptyId = iId;\n\t\t\t}\n\t\t\tif(i == last && !next)\n\t\t\t\tnext = iId;\n\t\t\tprevId = value ? iId : null;\n\t\t\ti += dir;\n\t\t}\n\t\treturn isRowArr ? {row: next, column} : {row, column: next};\n\t}\n};\n\n\nexport default Mixin;\n","import {_to_array, _power_array, isUndefined, copy} from \"../../webix/helpers\";\nimport {assert} from \"../../webix/debug\";\n\nconst Mixin = {\n\t$init:function(){\n\t\tthis._clear_hidden_state();\t\n\t\tthis.attachEvent(\"onStructureLoad\", this._hideInitialColumns);\n\t},\n\t_clear_hidden_state:function(){\n\t\tthis._hidden_column_hash = {};\n\t\tthis._hidden_column_order = _to_array();\n\t\tthis._hidden_split = [0,0,0];\n\t},\n\t_hideInitialColumns:function(){\n\t\tconst cols = this._columns;\n\t\tfor (let i=0; i<cols.length; i++){\n\t\t\tif(cols[i].header) this._getInitialSpans(cols, cols[i].header);\n\t\t\tif(cols[i].footer) this._getInitialSpans(cols, cols[i].footer);\n\t\t}\n\n\t\tfor (let i=cols.length-1; i>=0; i--){\n\t\t\tif (cols[i].hidden)\n\t\t\t\tthis.hideColumn(cols[i].id, {}, true, true);\n\t\t\telse if (cols[i].batch && this.config.visibleBatch && cols[i].batch!=this.config.visibleBatch){\n\t\t\t\tthis.hideColumn(cols[i].id, {}, true, true);\n\t\t\t}\n\t\t}\n\t},\n\t_getInitialSpans:function(cols, elements){\n\t\tfor (let i=0; i<elements.length; i++){\n\t\t\tconst line = elements[i];\n\t\t\tif (line && line.colspan && !line.$colspan)\n\t\t\t\tline.$colspan = line.colspan;\n\t\t}\n\t},\n\tmoveColumn:function(id, index){\n\t\tthis._moveColumn(id, index);\n\t},\n\t_moveColumn: function(id, index, hrIndex){\n\t\tconst cindex = this.getColumnIndex(id);\n\t\tif (cindex == index || cindex == -1) return false; //already in place\n\t\tlet cols;\n\t\tif(!isUndefined(hrIndex)){\n\t\t\tif(!this._check_source_span(cindex, index, hrIndex))\n\t\t\t\treturn false;\n\t\t\tcols = this._get_span_columns(cindex, hrIndex, index);\n\t\t\tindex += this._get_target_span_shift(cindex, index);\n\t\t\tif(cols){\n\t\t\t\tfor(let i = 0; i < cols.length; i++){\n\t\t\t\t\tconst inc = cindex > index?i:0;\n\t\t\t\t\tconst sId = cols[i];\n\t\t\t\t\tif(this.getColumnIndex(sId) < 0 && i > 0){\n\t\t\t\t\t\tthis._moveHiddenSpanColumn(sId, cols[0], i);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._changeColumnIndex(cols[i], index + inc, hrIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!cols)\n\t\t\tthis._changeColumnIndex(id, index, hrIndex);\n\t\tthis._refresh_columns();\n\t},\n\t_changeColumnIndex: function(id, index, hrIndex){\n\t\tlet cindex = this.getColumnIndex(id);\n\t\tconst horder = this._hidden_column_order;\n\t\tconst columns = this._settings.columns;\n\n\t\tlet hindex;\n\t\t// handle colspan in another header line\n\t\tconst header = columns[cindex].header;\n\t\tif(!isUndefined(hrIndex) && header && header[hrIndex]){\n\t\t\tconst sourceSpan = header[hrIndex].colspan || 1;\n\t\t\tlet batchChanged = false;\n\t\t\tfor(let i = 0; i < header.length; i++){\n\t\t\t\tif(i != hrIndex && header[i] && header[i].colspan){\n\t\t\t\t\tconst hI = header[i];\n\t\t\t\t\tconst span = hI.colspan;\n\t\t\t\t\tif(span > sourceSpan){\n\t\t\t\t\t\tconst nextCol = columns[cindex + sourceSpan];\n\t\t\t\t\t\tif(nextCol.batch && !columns[cindex].batch){\n\t\t\t\t\t\t\tbatchChanged = true;\n\t\t\t\t\t\t\tcolumns[cindex].batch = nextCol.batch;\n\t\t\t\t\t\t\tdelete nextCol.batch;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextCol.header[i] = hI;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// drop to column with colspan settings\n\t\t\tconst tIndex = index == columns.length? index-1: index;\n\n\t\t\tconst tHeader = columns[tIndex].header;\n\t\t\tfor(let i = 0; i < tHeader.length; i++){\n\t\t\t\tconst span = tHeader[i] ? tHeader[i].colspan:1;\n\t\t\t\tif(i != hrIndex && span > 1 && cindex > tIndex && cindex <  tIndex + span){\n\t\t\t\t\tif(!batchChanged && columns[cindex].batch && !columns[tIndex].batch){\n\t\t\t\t\t\tcolumns[tIndex].batch = columns[cindex].batch;\n\t\t\t\t\t\tdelete columns[cindex].batch;\n\t\t\t\t\t}\n\t\t\t\t\theader[i] = tHeader[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// remove from the previous place\n\t\tconst col = columns.splice(cindex, 1)[0];\n\n\t\tif (horder.length){\n\t\t\thindex = horder.find(id);\n\t\t\thorder.removeAt(hindex);\n\t\t}\n\t\tthis._updateSplit(cindex, hindex, -1);\n\n\t\t// paste into new\n\t\tconst nindex = index - (index>cindex ? 1 : 0);\n\t\t_power_array.insertAt.call(columns, col, nindex);\n\n\t\tlet pos;\n\t\tif (horder.length){\n\t\t\tpos = 0;\n\t\t\tconst prev = columns[nindex-1];\n\t\t\tif(prev && prev.id){\n\t\t\t\tlet pId = prev.id;\n\t\t\t\tpos = this._getHiddenColumnIndex(pId);\n\t\t\t\tdo{\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tpId = horder[pos];\n\t\t\t\t} while (this.getColumnIndex(pId) < 0 && pos < horder.length);\n\t\t\t}\n\t\t\thorder.insertAt(col.id, pos);\n\t\t}\n\t\tthis._updateSplit(nindex, pos, 1);\n\t},\n\t_moveHiddenSpanColumn: function(id, prevId, inc){\n\t\tconst horder = this._hidden_column_order;\n\t\t// remove from the previous place\n\t\tlet hindex = this._getHiddenColumnIndex(id);\n\t\thorder.removeAt(hindex);\n\t\tthis._updateSplit(-1, hindex, -1);\n\t\t// paste into new\n\t\tconst index = this._getHiddenColumnIndex(prevId) + inc;\n\t\thorder.insertAt(id, index);\n\t\tthis._updateSplit(-1, index, 1);\n\t},\n\t_check_source_span: function(indexFrom, indexTo, hrIndex){\n\t\tif(indexTo > indexFrom)\n\t\t\tindexTo--;\n\t\tconst fromSpan = (this._columns[indexFrom].header[hrIndex].colspan || 1) - 1;\n\t\tfor(let i =0; i< this._columns.length; i++){\n\t\t\tconst header = this._columns[i].header;\n\t\t\tfor (let j = 0; j < header.length; j++){\n\t\t\t\tif(i != indexFrom || j != hrIndex){\n\t\t\t\t\tconst span = header[j] && header[j].colspan || 1;\n\t\t\t\t\tconst i1 = i + span - 1;\n\t\t\t\t\tif(span > 1 && i <= indexFrom && i1 >= (indexFrom + fromSpan) && (i > indexTo || i1 < indexTo))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\t_get_target_span_shift: function(indexFrom, indexTo){\n\t\tfor(let i =0; i< this._columns.length; i++){\n\t\t\tconst header = this._columns[i].header;\n\t\t\tfor (let j = 0; j < header.length; j++){\n\t\t\t\tif(i != indexFrom){\n\t\t\t\t\tconst span = header[j] && header[j].colspan;\n\t\t\t\t\tif(span){\n\t\t\t\t\t\tconst i1 = i + span - 1;\n\t\t\t\t\t\tif(i < indexTo && i1 >= indexTo && (i > indexFrom || i1 < indexFrom)){\n\t\t\t\t\t\t\tlet newIndexTo = indexFrom > indexTo?i:i1+1;\n\t\t\t\t\t\t\treturn newIndexTo - indexTo;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\t_get_span_columns: function(cIndex, hrIndex){\n\t\tlet columns, h = this._columns[cIndex].header;\n\t\tlet span = h[hrIndex].colspan || 1;\n\n\t\tfor(let i = 0; i < h.length; i++){\n\t\t\tif(h[i] && h[i].$colspan && h[i].$colspan > h[i].colspan)\n\t\t\t\tspan = Math.max(span, h[i].$colspan);\n\t\t}\n\n\t\tif(span > 1){\n\t\t\tconst id = this.columnId(cIndex);\n\t\t\tcolumns = [id];\n\t\t\tconst hIndex = this._getHiddenColumnIndex(id);\n\t\t\tfor( let i = hIndex+1; i < hIndex + span; i++)\n\t\t\t\tcolumns.push(this._getHiddenColumnId(i));\n\t\t}\n\t\treturn columns;\n\t},\n\t_init_horder:function(horder, cols){\n\t\tif (!horder.length){\n\t\t\tfor (let i=0; i<cols.length; i++)\n\t\t\t\thorder[i] = cols[i].id;\n\t\t\tthis._hidden_split = [this._settings.leftSplit, this._rightSplit, this._settings.rightSplit];\n\t\t}\n\t},\n\tisColumnVisible:function(id){\n\t\treturn !this._hidden_column_hash[id];\n\t},\n\thideColumn:function(id, opts, silent, mode){\n\t\tconst cols = this._settings.columns;\n\t\tconst horder = this._hidden_column_order;\n\t\tconst hhash = this._hidden_column_hash;\n\t\tlet column, span = 1;\n\t\topts = opts || {};\n\n\t\tif (mode!==false){\n\t\t\tconst index = this.getColumnIndex(id);\n\t\t\tassert(index != -1, \"hideColumn: invalid ID or already hidden\");\n\n\t\t\t//in case of second call to hide the same column, command will be ignored\n\t\t\tif (index == -1 || !this.callEvent(\"onBeforeColumnHide\", [id])) return;\n\n\t\t\tthis._init_horder(horder, cols);\n\t\t\t\n\t\t\tif (opts.spans){\n\t\t\t\tconst header = cols[index].header;\n\n\t\t\t\tfor (let i=0; i<header.length; i++){\n\t\t\t\t\tif (header[i])\n\t\t\t\t\t\tspan = Math.max(span, (header[i].colspan || 1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fixSplit(index, span, -1);\n\n\t\t\tfor (let i=index+span-1; i>=index; i--){\n\t\t\t\tthis._hideColumn(index);\n\t\t\t\tcolumn  = cols.splice(index, 1)[0];\n\t\t\t\thhash[column.id] = column;\n\t\t\t\tcolumn._yr0 = -1;\n\t\t\t\tcolumn.hidden = true;\n\t\t\t\tdelete this._columns_pull[column.id];\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onAfterColumnHide\", [id]);\n\t\t} else {\n\t\t\tcolumn = hhash[id];\n\t\t\tassert(column, \"showColumn: invalid ID or already visible\");\n\n\t\t\t//in case of second show command for already visible column - ignoring\n\t\t\tif(!column || !this.callEvent(\"onBeforeColumnShow\", [id])) return;\n\n\t\t\tlet prev = null;\n\t\t\tlet hindex = 0;\n\t\t\tfor (let i=0; i<horder.length; i++){\n\t\t\t\tif (horder[i] == id){\n\t\t\t\t\thindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!hhash[horder[i]])\n\t\t\t\t\tprev = horder[i];\n\t\t\t}\n\n\t\t\tif(opts.spans){\n\t\t\t\tlet header = column.header;\n\t\t\t\tfor(let i = 0; i<header.length; i++){\n\t\t\t\t\tif(header[i]){\n\t\t\t\t\t\theader[i].colspan = header[i].$colspan || header[i].colspan;\n\t\t\t\t\t\tspan = Math.max(span, (header[i].colspan || 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst index = prev ? this.getColumnIndex(prev)+1 : 0;\n\t\t\tfor (let i=hindex+span-1; i>=hindex; i--){\n\t\t\t\tconst col = hhash[horder[i]];\n\t\t\t\tif (col){ //can be already shown by another action\n\t\t\t\t\t_power_array.insertAt.call(cols, col, index);\n\t\t\t\t\tdelete col.hidden;\n\t\t\t\t\tdelete hhash[col.id];\n\t\t\t\t\tthis._columns_pull[col.id] = col;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tspan--;\n\t\t\t}\n\n\t\t\tthis._fixSplit(hindex, span, 1, true);\n\t\t\tthis.callEvent(\"onAfterColumnShow\", [id]);\n\t\t}\n\n\t\tif(column.header) this._fixColspansHidden(column, mode !== false ? 0 : 1, \"header\");\n\t\tif(column.footer) this._fixColspansHidden(column, mode !== false ? 0 : 1, \"footer\");\n\n\t\tif (horder.length === cols.length)\n\t\t\tthis._clear_hidden_state();\n\n\t\tif (!silent)\n\t\t\tthis._refresh_columns();\n\t},\n\tshowColumn:function(id, opts, silent){\n\t\treturn this.hideColumn(id, opts, silent, false);\n\t},\n\t_fixSplit:function(index, span, op, hidden){\n\t\tconst [lSplit, rSplit] = hidden ? this._hidden_split : [this._settings.leftSplit, this._rightSplit];\n\n\t\tif (index < lSplit)\n\t\t\tthis._settings.leftSplit += op*span;\n\t\tif (index >= rSplit)\n\t\t\tthis._settings.rightSplit += op*span;\n\t\telse\n\t\t\tthis._rightSplit += op*span;\n\t},\n\t_updateSplit:function(index, hindex, op){\n\t\tif (index >= 0){\n\t\t\tif (index < this._settings.leftSplit)\n\t\t\t\tthis._settings.leftSplit += op;\n\t\t\tif (this._settings.rightSplit && index >= this._rightSplit)\n\t\t\t\tthis._settings.rightSplit += op;\n\t\t\telse\n\t\t\t\tthis._rightSplit += op;\n\t\t}\n\n\t\tconst horder = this._hidden_column_order;\n\t\tif (horder.length && hindex >= 0){\n\t\t\tif (hindex < this._hidden_split[0])\n\t\t\t\tthis._hidden_split[0] += op;\n\t\t\tif (this._hidden_split[2] && hindex >= this._hidden_split[1])\n\t\t\t\tthis._hidden_split[2] += op;\n\t\t\telse\n\t\t\t\tthis._hidden_split[1] += op;\n\t\t}\n\t},\n\t_fixColspansHidden:function(config, mod, elName){\n\t\tfor (let i=config[elName].length - 1; i >= 0; i--) {\n\t\t\tvar ind = this._hidden_column_order;\n\t\t\tvar spanSource, isHidden = false, spanSize = 0;\n\n\t\t\tfor (let j = 0; j < ind.length; j++) {\n\t\t\t\tlet colConfig = this.getColumnConfig(ind[j]);\n\t\t\t\tlet el = colConfig[elName][i];\n\t\t\t\tif (!this.isColumnVisible(ind[j])){\n\t\t\t\t\t//hidden column\n\t\t\t\t\tif (el && el.$colspan && spanSize <= 0){\n\t\t\t\t\t\t//start of colspan in hidden\n\t\t\t\t\t\tspanSize = el.colspan = el.$colspan;\n\t\t\t\t\t\tisHidden = spanSource = el;\n\t\t\t\t\t}\n\t\t\t\t\tif (spanSource && spanSize > 0){\n\t\t\t\t\t\t//hidden column in colspan, decrease colspan size\n\t\t\t\t\t\tspanSource.colspan--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//visible column\n\t\t\t\t\tif (isHidden && spanSize > 0 && spanSource && spanSource.colspan > 0){\n\t\t\t\t\t\t//bit start of colspan is hidden\n\t\t\t\t\t\tel = colConfig[elName][i] = spanSource;\n\t\t\t\t\t\tspanSource = el;\n\t\t\t\t\t} else if (el && el.$colspan && spanSize <= 0){\n\t\t\t\t\t\t//visible start of colspan\n\t\t\t\t\t\tspanSize = el.colspan = el.$colspan;\n\t\t\t\t\t\tspanSource = el;\n\t\t\t\t\t}\n\t\t\t\t\tisHidden = null;\n\t\t\t\t}\n\t\t\t\tspanSize--;\n\t\t\t}\n\t\t}\n\t},\n\trefreshColumns:function(columns){\n\t\tif (columns) columns = copy(columns, null, true);\n\t\tconst columnsUpdated = (this._columns.length !== 0 && this._settings.columns !== this._columns) || !!columns;\n\n\t\tthis._dtable_column_refresh = true;\n\n\t\tif (columnsUpdated) {\n\t\t\tif (this._destroy_with_me.length) {\n\t\t\t\tthis._destroy_with_me = this._destroy_with_me.filter(view => {\n\t\t\t\t\t// remove filters/collections from the previous column config, don't touch other views\n\t\t\t\t\tif (view.config.id === this._settings.headermenu || \n\t\t\t\t\t\t(this._subViewStorage && this._subViewStorage[view.config.id])) return true;\n\t\t\t\t\tview.destructor();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._clear_hidden_state();\n\t\t\tthis._active_headers = {};\n\t\t\tthis._filter_elements = {};\n\t\t\tthis._collection_handlers = {};\n\t\t\tthis._has_active_headers = false;\n\t\t}\n\n\t\tthis._columns_pull = {};\n\t\t//clear rendered data\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tvar col = this._columns[i];\n\t\t\tthis._columns_pull[col.id] = col;\n\t\t\tcol.attached = col.node = null;\n\t\t}\n\t\tfor (let i=0; i<3; i++){\n\t\t\tthis._header.childNodes[i].innerHTML = \"\";\n\t\t\tthis._footer.childNodes[i].innerHTML = \"\";\n\t\t\tthis._body.childNodes[i].firstChild.innerHTML = \"\";\n\t\t}\n\n\t\t//render new structure\n\t\tthis._columns = this._settings.columns = (columns || this._settings.columns);\n\t\tthis._rightSplit = this._columns.length - (this._settings.rightSplit || 0);\n\n\t\tthis._dtable_fully_ready = 0;\n\t\tthis._define_structure();\n\t\tthis._update_scroll();\n\n\t\tthis.callEvent(\"onStructureUpdate\");\n\t\tthis.render();\n\n\t\t// apply new filters in case the columns were updated\n\t\tif (columnsUpdated) this.filterByAll();\n\n\t\tthis._dtable_column_refresh = false;\n\t},\n\t_refresh_columns:function(){\n\t\tthis._dtable_fully_ready = 0;\n\t\tthis.callEvent(\"onStructureUpdate\");\n\t\t\n\t\tthis._apply_headers();\n\t\tthis.render();\n\t},\n\tshowColumnBatch:function(batch, mode, silent){\n\t\tconst preserve = !isUndefined(mode);\n\t\tmode = mode !== false;\n\n\t\tconst sub = [];\n\t\tthis.eachColumn(function(id, col){\n\t\t\tif (col.batch){\n\t\t\t\tlet hidden = this._hidden_column_hash[col.id];\n\t\t\t\tif (!mode) hidden = !hidden;\n\n\t\t\t\tif(col.batch == batch && hidden)\n\t\t\t\t\tthis.hideColumn(col.id, { spans:true }, true,!mode);\n\t\t\t\telse if(!preserve && col.batch!=batch && !hidden)\n\t\t\t\t\tthis.hideColumn(col.id, { spans:true }, true, mode);\n\t\t\t}\n\n\t\t\tif (preserve && mode){\n\t\t\t\tconst header = col.header;\n\t\t\t\tfor (let i=0; i<header.length; i++)\n\t\t\t\t\tif (header[i] && header[i].batch && header[i].closed)\n\t\t\t\t\t\tsub.push(header[i].batch);\n\t\t\t}\n\t\t}, true);\n\n\t\t// hide closed batches\n\t\tfor (let i=0; i<sub.length; i++)\n\t\t\tif (sub[i] != batch) this.showColumnBatch(sub[i], false, true);\n\n\t\tif (!silent)\n\t\t\tthis._refresh_columns();\n\t},\n\t_getHiddenColumnIndex: function(id){\n\t\tif(this._hidden_column_order.length){\n\t\t\tfor (var i = 0; i < this._hidden_column_order.length; i++)\n\t\t\t\tif (this._hidden_column_order[i] == id)\n\t\t\t\t\treturn i;\n\t\t\treturn -1;\n\t\t}\n\t\treturn this.getColumnIndex(id);\n\t},\n\t_getHiddenColumnId: function(index){\n\t\treturn this._hidden_column_order.length?this._hidden_column_order[index]:this.columnId(index);\n\t}\n};\n\nexport default Mixin;","import {isUndefined} from \"../../webix/helpers\";\nimport {_event} from \"../../webix/htmlevents\";\nimport EditAbility from \"../../core/editability\";\n\n\n// #include core/drag.js\n// #include core/edit.js\n// #include ui/inputs.js\n\nconst Mixin = {\n\n\t/////////////////////////\n\t//    edit start       //\n\t/////////////////////////\n\t_get_editor_type:function(id){\n\t\treturn this.getColumnConfig(id.column).editor;\n\t},\n\tgetEditor:function(row, column){\n\t\tif (!row)\n\t\t\treturn this._last_editor;\n\n\t\tif (arguments.length == 1){\n\t\t\tcolumn = row.column;\n\t\t\trow = row.row; \n\t\t}\n\t\t\n\t\treturn ((this._editors[row]||{})[column]);\n\t},\n\t_for_each_editor:function(handler){\n\t\tfor (var row in this._editors){\n\t\t\tvar row_editors = this._editors[row];\n\t\t\tfor (var column in row_editors)\n\t\t\t\tif (column!=\"$count\")\n\t\t\t\t\thandler.call(this, row_editors[column]);\n\t\t}\n\t},\n\t_init_editor:function(id, type, show){\n\t\tvar row = id.row;\n\t\tvar column  = id.column;\n\t\tvar col_settings = type.config = this.getColumnConfig(column);\n\t\t//show it over cell\n\t\tif (show !== false)\n\t\t\tthis.showCell(row, column);\n\n\t\tvar node = type.render();\n\n\t\tif (type.$inline)\n\t\t\tnode = this._locateInput(id);\n\t\ttype.node = node;\n\n\t\tvar item = this.getItem(row);\n\t\tvar format = col_settings.editFormat;\n\n\t\tvar value;\n\t\tif (this._settings.editMath)\n\t\t\tvalue = item[\"$\"+column];\n\t\tvalue = value || item[column];\n\n\t\tif (isUndefined(value))\n\t\t\tvalue=\"\";\n\n\t\ttype.setValue(format?format(value):value, item);\n\t\ttype.value = item[column];\n\t\tthis._addEditor(id, type);\n\n\t\tif(type.getPopup){\n\t\t\tconst popup = type.getPopup();\n\t\t\tpopup.attachEvent(\"onHide\", function(){\n\t\t\t\tif(this._edit_active) this.show();\n\t\t\t});\n\t\t\tpopup._editorMaster = this._settings.id;\n\t\t}\n\n\t\tif (!type.$inline)\n\t\t\ttype._editor_pos = this._sizeToCell(id, node, true);\n\t\t\n\n\t\tif (type.afterRender)\n\t\t\ttype.afterRender();\n\t\t\n\t\tif (this._settings.liveValidation){\n\t\t\t_event(type.node, \"keyup\", this._bind_live_validation(id, this));\n\t\t\tthis.validateEditor(id);\n\t\t}\n\n\t\treturn node;\n\t},\n\t_bind_live_validation:function(id, that){\n\t\treturn function(){\n\t\t\tthat.validateEditor(id);\n\t\t};\n\t},\n\t_get_new_value:function(editor){\n\t\tvar parser = this.getColumnConfig(editor.column).editParse;\n\t\tvar new_value = editor.getValue();\n\t\treturn parser?parser(new_value):new_value;\n\t},\n\t_set_new_value:function(editor, new_value, copy){\n\t\tvar item = copy ? {} : this.getItem(editor.row);\n\t\titem[editor.column] = new_value;\n\n\t\tif (this._settings.editMath)\n\t\t\titem[\"$\"+editor.column] = null;\n\n\t\treturn item;\n\t},\n\t//register editor in collection\n\t_addEditor:function(id, type){\n\t\tvar row_editors = this._editors[id.row]=this._editors[id.row]||{};\n\n\t\trow_editors.$count = (row_editors.$count||0)+1;\n\n\t\ttype.row = id.row; type.column = id.column;\n\t\tthis._last_editor = row_editors[id.column] = type;\n\n\t\tthis._in_edit_mode++;\n\t\tthis._last_editor_scroll = this.getScrollState();\n\t},\n\t_removeEditor:function(editor){\n\t\tif (this._last_editor == editor)\n\t\t\tthis._last_editor = 0;\n\t\t\n\t\tif (editor.destroy)\n\t\t\teditor.destroy();\n\t\t\n\t\tvar row = this._editors[editor.row];\n\t\tdelete row[editor.column];\n\t\trow.$count -- ;\n\t\tif (!row.$count)\n\t\t\tdelete this._editors[editor.row];\n\t\tthis._in_edit_mode--;\n\t},\n\t_changeEditorId:function(oldid, newid)\t{\n\t\tvar editor = this._editors[oldid];\n\t\tif (editor){\n\t\t\tthis._editors[newid] = editor;\n\t\t\tdelete this._editors[oldid];\n\t\t\tfor (var key in editor)\n\t\t\t\tif (key != \"$count\")\n\t\t\t\t\teditor[key].row = newid;\n\t\t}\n\t},\n\t//get html cell by combined id\n\t_locate_cell:function(id){\n\t\tvar area, i, index, j, node, span,\n\t\t\tconfig = this.getColumnConfig(id.column),\n\t\t\tcell = 0;\n\n\t\tif (config && config.node && config.attached){\n\t\t\tindex = this.getIndexById(id.row);\n\t\t\tif(this._spans_pull){\n\t\t\t\tspan = this.getSpan(id.row,id.column);\n\t\t\t\tif(span){\n\t\t\t\t\tfor (i=0; i<3; i++){\n\t\t\t\t\t\tarea = this._spans_areas[i];\n\t\t\t\t\t\tfor(j=0; !cell && j < area.childNodes.length; j++){\n\t\t\t\t\t\t\tnode = area.childNodes[j];\n\t\t\t\t\t\t\tif(node.getAttribute(/*@attr*/\"row\") == index && node.getAttribute(/*@attr*/\"column\") == this.getColumnIndex(id.column))\n\t\t\t\t\t\t\t\tcell = node;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!cell && index >= (config._yr0-this._settings.topSplit) && index< config._yr1)\n\t\t\t\tcell = config.node.childNodes[index-config._yr0+this._settings.topSplit];\n\t\t}\n\t\treturn cell;\n\t},\n\n\t\n\t/////////////////////////\n\t//    public methods   //\n\t/////////////////////////\n\teditCell:function(row, column, preserve, show){\n\t\tcolumn = column || this._settings.columns[0].id;\n\t\treturn EditAbility.edit.call(this, {row:row, column:column}, preserve, show);\n\t},\n\teditRow:function(id){\n\t\tif (id && id.row)\n\t\t\tid = id.row;\n\n\t\tvar next = false;\n\t\tthis.eachColumn(function(column){\n\t\t\tthis.edit({ row:id, column:column}, next, !next);\n\t\t\tnext = true;\n\t\t});\n\t},\n\teditColumn:function(id){\n\t\tif (id && id.column)\n\t\t\tid = id.column;\n\n\t\tvar next = false;\n\t\tthis.eachRow(function(row){\n\t\t\tthis.edit({row:row, column:id}, next, !next);\n\t\t\tnext = true;\n\t\t});\n\t},\n\teachRow:function(handler, all){\n\t\tvar order = this.data.order;\n\t\tif (all) \n\t\t\torder = this.data._filter_order || order;\n\n\t\tfor (let i=0; i<order.length; i++)\n\t\t\thandler.call(this, order[i]);\n\t},\n\teachColumn:function(handler, all){\n\t\tconst hidden = this._hidden_column_order;\n\t\tif(all && hidden.length){\n\t\t\tfor(let i = 0; i < hidden.length; i++){\n\t\t\t\tconst column = this.getColumnConfig( hidden[i] );\n\t\t\t\thandler.call(this, column.id, column);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconst columns = [].concat(this._columns);\n\t\t\tfor (let i = 0; i < columns.length; i++){\n\t\t\t\tconst column = columns[i];\n\t\t\t\thandler.call(this, column.id, column);\n\t\t\t}\n\t\t}\n\t},\n\n\n\t////////////////////\n\t//    edit next   //\n\t////////////////////\n\t_after_edit_next:function(editor_next){\n\t\tif (this.getSelectedId){\t//select related cell when possible\n\t\t\tvar sel = this.getSelectedId(true);\n\t\t\tif (sel.length == 1){\n\t\t\t\tthis._select(editor_next);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t_custom_tab_handler:function(tab, e){\n\t\tif (this._settings.editable && !this._in_edit_mode){\n\t\t\t//if we have focus in some custom input inside of datatable\n\t\t\tif (e.target && e.target.tagName == \"INPUT\") return true;\n\n\t\t\t//init editor related to a single selected row/column/cell\n\t\t\tvar selection = this.getSelectedId(true);\n\t\t\tif (selection.length == 1){\n\t\t\t\tvar sel =  selection[0];\n\n\t\t\t\tif(this._settings.select == \"row\"){\n\t\t\t\t\tlet index = e.shiftKey? 0 : this._settings.columns.length-1;\n\t\t\t\t\tsel.column = this._settings.columns[index].id;\n\t\t\t\t\tif(this._item_clicked && (this._item_clicked.row == sel.row))\n\t\t\t\t\t\tsel.column = this._item_clicked.column;\n\t\t\t\t\tthis._item_clicked = null;\n\t\t\t\t}\n\n\t\t\t\tthis.editNext(tab, sel);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\t_find_cell_next:function(start, check, direction){\n\t\tconst row = this.getIndexById(start.row);\n\t\tlet column = this.getColumnIndex(start.column);\n\t\tconst order = this.data.order;\n\t\tconst cols = this._columns;\n\n\t\tif (direction){\n\t\t\tfor (let i=row; i<order.length; i++){\n\t\t\t\tfor (let j=column+1; j<cols.length; j++){\n\t\t\t\t\tconst id = { row:order[i], column:cols[j].id };\n\t\t\t\t\tif (check.call(this, id) && (!this._checkCellMerge || !this._checkCellMerge(start, id))){\n\t\t\t\t\t\tid.toString = this._id_to_string;\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcolumn = -1;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row; i>=0; i--){\n\t\t\t\tfor (let j=column-1; j>=0; j--){\n\t\t\t\t\tconst id = { row:order[i], column:cols[j].id };\n\t\t\t\t\tif (check.call(this, id)){\n\t\t\t\t\t\tid.toString = this._id_to_string;\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcolumn = cols.length;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/////////////////////////////\n\t//    scroll correction    //\n\t/////////////////////////////\n\t_correct_after_focus_y:function(){\n\t\tif (this._in_edit_mode){\n\t\t\tconst { scrollTop } = this._body.childNodes[1].firstChild;\n\n\t\t\tif (scrollTop) {\n\t\t\t\tthis._y_scroll.scrollTo(this.getScrollState().y + scrollTop);\n\t\t\t\tthis._body.childNodes[1].firstChild.scrollTop = 0;\n\t\t\t}\n\t\t}\n\t},\n\t_correct_after_focus:function(){\n\t\tif (this._in_edit_mode){\n\t\t\tconst { scrollTop, scrollLeft } = this._body.childNodes[1];\n\n\t\t\tif (this._ignore_after_focus_scroll)\n\t\t\t\treturn this._ignore_after_focus_scroll = false;\n\n\t\t\tif (this._settings.prerender) this._y_scroll.scrollTo(scrollTop);\n\t\t\tthis._x_scroll.scrollTo(scrollLeft);\n\n\t\t\tif (this._touch_scroll){\n\t\t\t\tif (scrollTop) this._body.childNodes[1].scrollTop = 0;\n\t\t\t\tif (scrollLeft) this._body.childNodes[1].scrollLeft = 0;\n\t\t\t\tthis._ignore_after_focus_scroll = (scrollTop || scrollLeft);\n\t\t\t}\n\t\t}\n\t},\n\t_component_specific_edit_init:function(){\n\t\tthis.attachEvent(\"onScrollY\", this._update_editor_y_pos);\n\t\tthis.attachEvent(\"onScrollX\", this._update_editor_y_pos);\n\t\tthis.attachEvent(\"onScrollY\", this._refocus_inline_editor);\n\t\tthis.attachEvent(\"onColumnResize\", function(){ this.editStop(); });\n\t\tthis.attachEvent(\"onAfterFilter\", function(){ this.editStop(); });\n\t\tthis.attachEvent(\"onRowResize\", function(){ this.editStop(); });\n\t\tthis.attachEvent(\"onAfterScroll\", function(){ if(this._settings.topSplit) this.editStop(); });\n\t\tthis._body.childNodes[1].onscroll = () => this._correct_after_focus();\n\t\tif (!this._settings.prerender)\n\t\t\tthis._body.childNodes[1].firstChild.onscroll = () => this._correct_after_focus_y();\n\t},\n\t_update_editor_y_pos:function(){\n\t\tif (this._in_edit_mode){\n\t\t\tvar old  = this._last_editor_scroll;\n\t\t\tthis._last_editor_scroll = this.getScrollState();\n\n\t\t\tvar diff = this._last_editor_scroll.y - old.y;\n\t\t\tthis._for_each_editor(function(editor){\n\n\t\t\t\tif (editor.getPopup){\n\t\t\t\t\tconst node = this.getItemNode(editor);\n\t\t\t\t\tlet isHidden = false;\n\n\t\t\t\t\tif(this._settings.prerender){\n\t\t\t\t\t\tconst pos = editor._editor_pos;\n\t\t\t\t\t\tlet ydiff = pos.top - this._scrollTop;\n\t\t\t\t\t\tlet xdiff = pos.left - this._scrollLeft;\n\n\t\t\t\t\t\tisHidden = (ydiff < 0 || ydiff+pos.height > this._dtable_offset_height || \n\t\t\t\t\t\t\txdiff < 0 || xdiff+pos.width > this.$width - this._scrollSizeX);\n\t\t\t\t\t}\n\t\t\t\t\tif(!node || isHidden)\n\t\t\t\t\t\teditor.getPopup().show({ x:-10000, y:-10000 });\n\t\t\t\t\telse\n\t\t\t\t\t\teditor.getPopup().show(node);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (!this._settings.prerender && !editor.linkInput && !editor.$inline){\n\t\t\t\t\teditor.node.top -= diff;\n\t\t\t\t\teditor.node.style.top = editor.node.top + \"px\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n};\n\nexport default Mixin;","import template from \"../../webix/template\";\nimport env from \"../../webix/env\";\nimport {assert} from \"../../webix/debug\";\nimport {bind, exec} from \"../../webix/helpers\";\n\n\nconst Mixin = {\n\n\tmath_setter:function(value){\n\t\tif (value)\n\t\t\tthis._math_init();\n\t\treturn value;\n\t},\n\n\t_math_pref: \"$\",\n\n\t_math_init: function() {\n\t\tif(env.strict) return;\n\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(this._parse_row_math, this));\n\t\tthis.data.attachEvent(\"onStoreLoad\", bind(this._parse_math, this));\n\t\tthis.attachEvent(\"onStructureLoad\", this._parse_math);\n\t},\n\t_parse_row_math:function(id, obj, action){\n\t\tif (!id || action==\"paint\") return;\n\t\t\n\t\tif (action == \"delete\"){\n\t\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\t\tthis._remove_old_triggers(obj,  this._columns[i].id);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (action == \"add\")\n\t\t\t\tthis._exprs_by_columns(obj);\n\n\t\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\t\tthis._math_recalc = {};\n\t\t\t\tthis._parse_cell_math(id, this._columns[i].id);\n\t\t\t}\n\t\t\tthis._math_recalc = {};\n\t\t}\n\t},\n\t_parse_cell_math: function(row, col) {\n\t\tvar item = this.getItem(row);\n\t\tvar value;\n\n\t\t// use previosly saved formula if available\n\t\tvalue = item[this._math_pref + col] || item[col];\n\n\t\tif (value && value.length > 0 && value.toString().substr(0, 1) === \"=\") {\n\t\t\t// calculate math value\n\t\t\titem[this._math_pref + col] = value;\n\t\t\titem[col] = this._calculate(value, row, col);\n\t\t\t//this.updateItem(item);\n\t\t} else {\n\t\t\t// just a string\n\t\t\tif (typeof(item[this._math_pref + col]) !== \"undefined\")\n\t\t\t\tdelete item[this._math_pref + col];\n\t\t\t// remove triggers if they were setted earlier\n\t\t\tthis._remove_old_triggers(item, col);\n\t\t}\n\t\t// recalculate depending cells\n\t\tif (typeof(item.depends) !== \"undefined\" && typeof(item.depends[col]) !== \"undefined\") {\n\t\t\tfor (var i in item.depends[col]) {\n\t\t\t\tvar name = item.depends[col][i][0] + \"__\" + item.depends[col][i][1];\n\t\t\t\tif (typeof(this._math_recalc[name]) === \"undefined\") {\n\t\t\t\t\tthis._math_recalc[name] = true;\n\t\t\t\t\tthis._parse_cell_math(item.depends[col][i][0], item.depends[col][i][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_set_original_value: function(row, col) {\n\t\tvar item = this.getItem(row);\n\t\tif (typeof(item[this._math_pref + col]) !== \"undefined\")\n\t\t\titem[col] = item[this._math_pref + col];\n\t},\n\n\t_parse_math: function(){\n\t\tif (!this._columns || !this.count()) return;\n\t\t\n\t\tthis._exprs_by_columns();\n\n\t\tfor (var j = 0; j < this._columns.length; j++){\n\t\t\tvar col = this.columnId(j);\n\t\t\tthis.data.each(function(obj){\n\t\t\t\tthis._math_recalc = {};\n\t\t\t\tthis._parse_cell_math(obj.id, col);\n\t\t\t}, this);\n\t\t}\n\n\t\tthis._math_recalc = {};\n\t},\n\n\t_exprs_by_columns: function(row) {\n\t\tfor (var i = 0; i < this._columns.length; i++){\n\t\t\tif (this._columns[i].math) {\n\t\t\t\tvar col = this.columnId(i);\n\t\t\t\tvar math = \"=\" + this._columns[i].math;\n\t\t\t\tmath = math.replace(/\\$c/g, \"#$c#\");\n\t\t\t\tif (row){\n\t\t\t\t\trow[col] = this._parse_relative_expr(math, row.id, col);\n\t\t\t\t\tdelete row[this._math_pref+col];\n\t\t\t\t\tthis._remove_old_triggers(row, col);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.data.each(function(obj){\n\t\t\t\t\t\tobj[col] = this._parse_relative_expr(math, obj.id, col);\n\t\t\t\t\t\tdelete obj[this._math_pref+col];\n\t\t\t\t\t\tthis._remove_old_triggers(obj, col);\n\t\t\t\t\t}, this);\n\t\t\t}\n\t\t}\n\t},\n\n\t_parse_relative_expr: function(expr, row, col) {\n\t\treturn (template(expr))({ \"$r\": row, \"$c\": col });\n\t},\n\n\t_get_calc_value: function(row, col) {\n\t\tvar item;\n\n\t\tif (this.exists(row))\n\t\t\titem = this.getItem(row);\n\t\telse\n\t\t\treturn \"#out_of_range\";\n\n\t\tvar value = item[this._math_pref + col] || item[col] || 0;\n\t\tvalue = value.toString();\n\t\tif (value.substring(0, 1) !== \"=\")\n\t\t\t// it's a string\n\t\t\treturn value;\n\t\telse {\n\t\t\t// TODO: check if value shouldn't be recalculated\n\t\t\t// and return value calculated earlier\n\n\t\t\t// calculate math expr value right now\n\t\t\tif (typeof(item[this._math_pref + col]) === \"undefined\")\n\t\t\t\titem[this._math_pref + col] = item[col];\n\t\t\titem[col] = this._calculate(value, row, col, true);\n\t\t\treturn item[col];\n\t\t}\n\t},\n\n\t_calculate: function(value, row, col, _inner_call) {\n\t\t// add coord in math trace to detect self-references\n\t\tif (_inner_call === true) {\n\t\t\tif (this._in_math_trace(row, col))\n\t\t\t\treturn \"#selfreference\";\n\t\t} else\n\t\t\tthis._start_math_trace();\n\t\tthis._to_math_trace(row, col);\n\n\t\tvar item = this.getItem(row);\n\t\tvalue = value.substring(1);\n\n\t\t// get operations list\n\t\tvar operations = this._get_operations(value);\n\t\tvar triggers = this._get_refs(value, row);\n\n\t\tif (operations) {\n\t\t\tvalue = this._replace_refs(value, triggers);\n\t\t\tvalue = this._parse_args(value, operations);\n\t\t} else {\n\t\t\tvalue = this._replace_refs(value, triggers, true);\n\t\t}\n\n\t\tvar exc = this._math_exception(value);\n\t\tif (exc !== false)\n\t\t\treturn exc;\n\n\t\t// remove from coord from trace when calculations were finished - it's important!\n\t\tthis._from_math_trace(row, col);\n\n\t\t// process triggers to know which cells should be recalculated when one was changed\n\t\tthis._remove_old_triggers(item, col);\n\t\tfor (var i = 0; i < triggers.length; i++) {\n\t\t\tthis._add_trigger([row, col], triggers[i]);\n\t\t}\n\t\texc = this._math_exception(value);\n\t\tif (exc !== false)\n\t\t\treturn exc;\n\n\t\t// there aren't any operations here. returns number or value of another cell\n\t\tif (!value) return value;\n\n\t\t// process mathematical expression and getting final result\n\t\tvalue = this._compute(value.replace(/\\$r/g, item.id));\n\t\texc = this._math_exception(value);\n\t\tif (exc !== false)\n\t\t\treturn exc;\n\t\treturn value;\n\t},\n\n\t_get_operations: function(value) {\n\t\t// gettings operations list (+-*/)\n\t\tvar splitter = /(\\+|-|\\*|\\/)/g;\n\t\tvar operations = value.replace(/\\[[^)]*?\\]/g,\"\").match(splitter);\n\t\treturn operations;\n\t},\n\n\t/*! gets list of referencies in formula\n\t **/\n\t_get_refs: function(value, id) {\n\t\tvar reg = /\\[([^\\]]+),([^\\]]+)\\]/g;\n\t\tvar cells = value.match(reg);\n\t\tif (cells === null) cells = [];\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tvar tmp = cell;\n\t\t\tcell = cell.substr(1, cell.length - 2);\n\t\t\tcell = cell.split(\",\");\n\t\t\tcell[0] = this._trim(cell[0]);\n\t\t\tcell[1] = this._trim(cell[1]);\n\t\t\tif (cell[0].substr(0, 1) === \":\")\n\t\t\t\tcell[0] = this.getIdByIndex(cell[0].substr(1));\n\t\t\tif (cell[0] === \"$r\")\n\t\t\t\tcell[0] = id;\n\t\t\tif (cell[1].substr(0, 1) === \":\")\n\t\t\t\tcell[1] = this.columnId(cell[1].substr(1));\n\t\t\tcell[2] = tmp;\n\t\t\tcells[i] = cell;\n\t\t}\n\n\t\treturn cells;\n\t},\n\n\t// replace given list of references by their values\n\t_replace_refs: function(value, cells, clean) {\n\t\tvar dell = \"(\", delr = \")\";\n\t\tif (clean) dell = delr = \"\";\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tvar cell_value = this._get_calc_value(cell[0], cell[1]);\n\t\t\tif (isNaN(cell_value))\n\t\t\t\tcell_value = \"\\\"\"+cell_value+\"\\\"\";\n\t\t\tvalue = value.replace(cell[2], dell + cell_value + delr);\n\t\t}\n\t\treturn value;\n\t},\n\n\t_parse_args: function(value, operations) {\n\t\tvar args = [];\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tvar op = operations[i];\n\t\t\tvar temp = this._split_by(value, op);\n\t\t\targs.push(temp[0]);\n\t\t\tvalue = temp[1];\n\t\t}\n\t\targs.push(value);\n\n\t\t//var reg = /^(-?\\d|\\.|\\(|\\))+$/;\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tvar arg = this._trim(args[i]);\n\t\t\t//\tif (reg.test(arg) === false)\n\t\t\t//\t\treturn ''; //error\n\t\t\targs[i] = arg;\n\t\t}\n\n\t\tvar expr = \"\";\n\t\tfor (let i = 0; i < args.length - 1; i++) {\n\t\t\texpr += args[i] + operations[i];\n\t\t}\n\t\texpr += args[args.length - 1];\n\t\treturn expr;\n\t},\n\n\t_compute: function(expr) {\n\t\tvar result;\n\t\ttry {\n\t\t\tresult = exec(expr);\n\t\t} catch(ex) {\n\t\t\tassert(false,\"Math error in datatable<br>\"+expr);\n\t\t\tresult = \"\";\n\t\t}\n\t\treturn result.toString();\n\t},\n\n\t_split_by: function(value, splitter) {\n\t\tvar pos = value.indexOf(splitter);\n\t\tvar before = value.substr(0, pos);\n\t\tvar after = value.substr(pos + 1);\n\t\treturn [before, after];\n\t},\n\n\t_trim: function(value) {\n\t\tvalue = value.replace(/^ */g, \"\");\n\t\tvalue = value.replace(/ *$/g, \"\");\n\t\treturn value;\n\t},\n\n\t_start_math_trace: function() {\n\t\tthis._math_trace = [];\n\t},\n\t_to_math_trace: function(row, col) {\n\t\tthis._math_trace[row + \"__\" + col] = true;\n\t},\n\t_from_math_trace: function(row, col) {\n\t\tif (typeof(this._math_trace[row + \"__\" + col]) !== \"undefined\")\n\t\t\tdelete this._math_trace[row + \"__\" + col];\n\t},\n\t_in_math_trace: function(row, col) {\n\t\tif (typeof(this._math_trace[row + \"__\" + col]) !== \"undefined\")\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t},\n\n\t_add_trigger: function(depends, from) {\n\t\tvar item = this.getItem(from[0]);\n\t\tif (typeof(item.depends) === \"undefined\")\n\t\t\titem.depends = {};\n\t\tif (typeof(item.depends[from[1]]) === \"undefined\")\n\t\t\titem.depends[from[1]] = {};\n\t\titem.depends[from[1]][depends[0] + \"__\" + depends[1]] = depends;\n\n\t\titem = this.getItem(depends[0]);\n\t\tif (typeof(item.triggers) === \"undefined\")\n\t\t\titem.triggers = {};\n\t\tif (typeof(item.triggers[depends[1]]) === \"undefined\")\n\t\t\titem.triggers[depends[1]] = {};\n\t\titem.triggers[depends[1]][from[0] + \"__\" + from[1]] = from;\n\t},\n\n\t_remove_old_triggers: function(item, col) {\n\t\tif (!item) return;\n\t\tif (typeof(item.triggers) === \"undefined\") return;\n\t\tfor (var i in item.triggers[col]) {\n\t\t\tvar depend = item.triggers[col][i];\n\t\t\tvar row = this.getItem(depend[0]);\n\t\t\tif (row)\n\t\t\t\tdelete row.depends[depend[1]][item.id + \"__\" + col];\n\t\t}\n\t},\n\n\t// check if exception syntax exists and returns exception text or false\n\t_math_exception: function(value) {\n\t\tvar reg = /#\\w+/;\n\t\tvar match = value.match(reg);\n\t\tif (match !== null && match.length > 0)\n\t\t\treturn match[0];\n\t\treturn false;\n\t}\n\n};\n\nexport default Mixin;","import env from \"../../webix/env\";\nimport Touch from \"../../core/touch\";\nimport {extend, delay} from \"../../webix/helpers\";\nimport {attachEvent} from \"../../webix/customevents\";\n\n\nattachEvent(\"onDataTable\", function(table, config){\n\tif (env.touch){\n\t\tTouch.$init();\n\t\tconfig.scrollSize = 0;\n\n\t\t// needed to show datatable scroll\n\t\tif (Touch._disabled) Touch.limit();\n\n\t\ttable.$ready.push(table.$touch);\n\t}\n});\n\nconst Mixin = {\n\t$touch:function(){\n\t\tvar config = this._settings;\n\t\tconfig.scrollAlignY = false;\n\n\t\textend(this, (config.prerender===true) ? this._touchNative : this._touch);\n\t\t\n\t\tvar scrollMode = \"\";\n\t\tif (!config.autowidth && config.scrollX !== false)\n\t\t\tscrollMode += \"x\";\n\t\tif (!config.autoheight && config.scrollY !== false)\n\t\t\tscrollMode += \"y\";\n\t\tthis._body.setAttribute(\"touch_scroll\", scrollMode);\n\t\t\n\t\tTouch._init_scroll_node(this._body.childNodes[1].firstChild);\n\t\tthis._sync_scroll(0, 0, \"0ms\");\n\t},\n\n\t$hasYScroll(){\n\t\treturn this._dtable_height - this._dtable_offset_height > 2;\n\t},\n\n\t_touchNative:{\n\t\t_touch_scroll: true,\n\t\t_scrollTo_touch:function(x,y){\n\t\t\t// limit scroll\n\t\t\tconst sizes = Touch._get_sizes(this._body.childNodes[1].firstChild);\n\t\t\tx = Math.max(0, Math.min(x, sizes.dx - sizes.px));\n\t\t\ty = Math.max(0, Math.min(y, sizes.dy - sizes.py));\n\n\t\t\t// no delay, important for autoscroll\n\t\t\tthis.callEvent(\"onAfterScroll\", [{ e: -x, f: -y}]);\n\t\t},\n\t\t_getScrollState_touch:function(){\n\t\t\tvar temp = Touch._get_matrix(this._body.childNodes[1].firstChild);\n\t\t\treturn { x: -temp.e, y: -temp.f };\n\t\t},\n\t\t$init:function(){\n\t\t\tthis.attachEvent(\"onBeforeScroll\", function(){\n\t\t\t\tTouch._scroll_node = this._body.childNodes[1].firstChild;\n\t\t\t\tTouch._scroll_stat = Touch._get_sizes(Touch._scroll_node);\n\t\t\t\tTouch._scroll_master = this;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onTouchEnd\", function(){\n\t\t\t\tTouch._scroll_master = null;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onAfterScroll\", function(result){\n\t\t\t\t//onAfterScroll may be triggered by some non-touch related logic\n\t\t\t\tif (!result) return;\n\n\t\t\t\tthis._scrollLeft = -result.e;\n\t\t\t\tthis._scrollTop = -result.f;\n\n\t\t\t\tthis._sync_scroll(result.e, result.f, \"0ms\");\n\t\t\t});\n\t\t},\n\t},\n\n\t_touch:{\n\t\t_touch_scroll: true,\n\t\t_scrollTo_touch:function(x,y){\n\t\t\tdelay(function(){\n\t\t\t\tthis.callEvent(\"onAfterScroll\", [{ e: -x, f: -y}]);\n\t\t\t}, this);\n\t\t},\n\t\t$scroll:{\n\t\t\tgravity: 0,\n\t\t\telastic: false\n\t\t},\n\t\t$init:function(){\n\t\t\t//if the result column's width < container's width,\n\t\t\tthis.attachEvent(\"onAfterColumnHide\", function(){\n\t\t\t\tthis._scrollTo_touch(0, 0);\n\t\t\t});\n\t\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\t\tif (this._x_scroll && this._settings.scrollX)\n\t\t\t\t\tthis._x_scroll._fixSize();\n\t\t\t\tif (this._y_scroll && this._settings.scrollY)\n\t\t\t\t\tthis._y_scroll._fixSize();\n\t\t\t});\n\t\t\tthis.attachEvent(\"onBeforeScroll\", function(){\n\t\t\t\tTouch._scroll_node = this._body.childNodes[1].firstChild;\n\t\t\t\tTouch._scroll_stat = Touch._get_sizes(Touch._scroll_node);\n\t\t\t\tTouch._scroll_stat.dy = this._dtable_height;\n\t\t\t\tTouch._scroll_master = this;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onTouchEnd\", function(){\n\t\t\t\tTouch._scroll_master = null;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onAfterScroll\", function(result){\n\t\t\t\t//onAfterScroll may be triggered by some non-touch related logic\n\t\t\t\tif (!result) return;\n\n\t\t\t\tthis._scrollTop = 0;\n\t\t\t\tthis._scrollLeft = 0;\n\t\t\t\tthis._sync_scroll(0, 0, \"0ms\");\n\n\t\t\t\tthis._scrollLeft = -result.e;\n\t\t\t\tthis._scrollTop = -result.f;\n\n\t\t\t\tthis._correctScrollSize();\n\t\t\t\tthis.render();\n\n\t\t\t\tif (this._x_scroll){\n\t\t\t\t\tthis._x_scroll._settings.scrollPos = -1;\n\t\t\t\t\tthis._x_scroll.scrollTo(this._scrollLeft);\n\t\t\t\t\tthis.callEvent(\"onScrollX\",[]);\n\t\t\t\t}\n\t\t\t\tif (this._y_scroll){\n\t\t\t\t\tthis._y_scroll._settings.scrollPos = -1;\n\t\t\t\t\tthis._y_scroll.scrollTo(this._scrollTop);\n\t\t\t\t\tthis.callEvent(\"onScrollY\",[]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_sync_scroll:function(x,y,t){\n\t\tconst diff = this._settings.prerender ? 0 : this._scrollTop;\n\t\ty += diff;\n\n\t\tTouch._set_matrix(this._body.childNodes[1].firstChild, x, y, t);\n\t\tif (this._settings.leftSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[0].firstChild,0,y,t);\n\t\tif (this._settings.rightSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[2].firstChild,0,y,t);\n\t\tif (this._settings.header)\n\t\t\tTouch._set_matrix(this._header.childNodes[1].firstChild,x,0,t);\n\t\tif (this._settings.footer)\n\t\t\tTouch._set_matrix(this._footer.childNodes[1].firstChild,x,0,t);\n\n\t\tconst smooth = (t !== \"0ms\");\n\t\tif (this._x_scroll) this._x_scroll._sync(-x, smooth);\n\t\tif (this._y_scroll) this._y_scroll._sync(-y + diff, smooth);\n\n\t\tthis.callEvent(\"onSyncScroll\", [x,y,t]);\n\t},\n\n\t_sync_y_scroll:function(y,t){\n\t\tconst x = -this.getScrollState().x;\n\t\tTouch._set_matrix(this._body.childNodes[1].firstChild, x, y, t);\n\t\tif (this._settings.leftSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[0].firstChild, 0, y, t);\n\t\tif (this._settings.rightSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[2].firstChild, 0, y, t);\n\n\t\tthis.callEvent(\"onSyncScroll\", [x,y,t]);\n\t},\n\n\t_sync_x_scroll:function(x,t){\n\t\tconst y = this._settings.prerender ? -this.getScrollState().y : 0;\n\n\t\tTouch._set_matrix(this._body.childNodes[1].firstChild, x, y, t);\n\t\tif (this._settings.header)\n\t\t\tTouch._set_matrix(this._header.childNodes[1].firstChild,x,0,t);\n\t\tif (this._settings.footer)\n\t\t\tTouch._set_matrix(this._footer.childNodes[1].firstChild,x,0,t);\n\n\t\tthis.callEvent(\"onSyncScroll\", [x,y,t]);\n\t},\n\n\t_sync_pos:function(matrix){\n\t\tif (!this._settings.prerender)\n\t\t\tmatrix.f -= this._scrollTop;\n\t}\n};\n\nexport default Mixin;","import {addCss, addStyle, removeCss, removeStyle, remove, insertBefore, create} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\n\n\nenv.printPPI = 96;\nenv.printMargin = 0.75*env.printPPI;\n\n//inches, real size is value*ppi\nenv.printSizes = [\n\t{ id:\"a3\", preset:\"A3\", width: 11.7, height: 16.5 },\n\t{ id:\"a4\", preset:\"A4\", width: 8.27, height: 11.7 },\n\t{ id: \"letter\", preset:\"letter\", width: 8.5, height:11 }\n];\n\nvar fits = { page:true, data:true};\nvar modes = { portrait:true, landscape:true, auto:true };\n\nconst print = function(id, options){\n\tlet view = $$(id);\n\tif (view && view.$printView)\n\t\tview = view.$printView();\n\n\tassert(view, \"non-existing view for printing\");\n\tif(!view) return;\n\n\tif(view.callEvent)\n\t\tview.callEvent(\"onBeforePrint\", [options]);\n\n\toptions = _checkOptions(options);\n\t_beforePrint(options);\n\n\t//try widget's custom logic first, sometimes it may deny\n\tlet customPrint;\n\tif(view.$customPrint){\n\t\tcustomPrint = view.$customPrint(options);\n\t\tif(customPrint){\n\t\t\tif(customPrint.then)\n\t\t\t\treturn customPrint.then(()=>_afterPrint(options));\n\t\t\t_print(view, options);\n\t\t}\n\t}\n\telse\n\t\t_print(view, options);\n\n\t_afterPrint(options);\n};\n\n/*processing print options*/\nfunction _checkOptions(options){\n\toptions = options || {};\n\n\toptions.paper = options.paper || \"a4\";\n\toptions.size = env.printSizes.find(size => size.id == options.paper);\n\tif(!options.size){\n\t\toptions.size = env.printSizes[0];\n\t\toptions.paper = options.size.id;\n\t}\n\n\toptions.mode = modes[options.mode] ? options.mode : \"portrait\";\n\toptions.fit = fits[options.fit] ? options.fit: \"page\";\n\toptions.scroll = options.scroll || false;\n\n\toptions.margin = (options.margin || options.margin === 0) ? options.margin : {};\n\n\tconst margin = isNaN(options.margin*1) ? env.printMargin : options.margin;\n\toptions.margin = {\n\t\ttop:(options.margin.top || options.margin.top === 0) ? options.margin.top: margin, \n\t\tbottom:(options.margin.bottom || options.margin.bottom === 0) ? options.margin.bottom: margin, \n\t\tright:(options.margin.right || options.margin.right === 0) ? options.margin.right: margin, \n\t\tleft:(options.margin.left || options.margin.left === 0) ? options.margin.left: margin\n\t};\n\n\treturn options;\n}\n\n/*preparing printing environment*/\nfunction _beforePrint(options){\n\taddCss(document.body,\"webix_print\");\n\n\tif(options.docHeader) _getHeaderFooter(\"Header\", options);\n\tif(options.docFooter) _getHeaderFooter(\"Footer\", options);\n\n\t/* static print styles are located at 'css/print.less'*/\n\n\tconst size = options.size;\n\tconst pageSize =\n\t\tsize.preset ?\n\t\t\tsize.preset + \" \" + options.mode :\n\t\t\toptions.mode == \"portrait\" ? `${size.width}in ${size.height}in` : `${size.height}in ${size.width}in`;\n\n\tconst cssString = \"@media print { \"+\n\t\t\"@page{ size:\"+pageSize+\";\"+\n\t\t\t\"margin-top:\"+options.margin.top+\"px;margin-bottom:\"+options.margin.bottom+\n\t\t\t\"px;margin-right:\"+options.margin.right+\"px;margin-left:\"+options.margin.left+\n\t\t\"px;}\"+\n\t\"}\";\n\n\taddStyle(cssString, \"print\");\n}\n\n/*cleaning environment*/\nfunction _afterPrint(options){\n\tremoveCss(document.body, \"webix_print\");\n\tremoveStyle(\"print\");\n\n\tif(options.docHeader) remove(options.docHeader);\n\tif(options.docFooter) remove(options.docFooter);\n}\n\n/*common print actions */\nfunction _print(view, options){\n\tvar doc = view.$view.cloneNode(true);\n\n\t//copy data from all canvases\n\tvar canvases = view.$view.getElementsByTagName(\"canvas\");\n\tif(canvases.length)\n\t\tfor(var i = canvases.length-1; i >=0; i--){\n\t\t\tvar destCtx = doc.getElementsByTagName(\"canvas\")[i].getContext(\"2d\");\n\t\t\tdestCtx.drawImage(canvases[i], 0, 0);\n\t\t}\n\n\tinsertBefore(doc, options.docFooter, document.body);\n\n\taddCss(doc,\"webix_ui_print\");\n\tif(!options.scroll && ((view._dataobj && view.data && view.data.pull) || view.getBody))\n\t\taddCss(doc, \"webix_print_noscroll\");\n\n\twindow.print();\n\n\tremove(doc);\n}\n/*custom header nad footer*/\nfunction _getHeaderFooter(group, options){\n\tvar header =  create(\"div\", { \n\t\t\"class\":\"webix_view webix_print_\"+group.toLowerCase(),\n\t\t\"style\":\"height:0px;visibility:hidden;\"\n\t}, options[\"doc\"+group]);\n\n\tif(group ===\"Header\")\n\t\tinsertBefore(header, document.body.firstChild);\n\telse\n\t\tdocument.body.appendChild(header);\n\n\toptions[\"doc\"+group] = header;\n}\n\nexport default print;","import i18n from \"../webix/i18n\";\nimport rules from \"../webix/rules\";\nimport template from \"../webix/template\";\n\nimport {toNode, isUndefined} from \"../webix/helpers\";\nimport { event } from \"../webix/htmlevents\";\nimport {define} from \"../services\";\nimport Promise from \"../thirdparty/promiz\";\nimport {_uid} from \"../ui/helpers\";\nimport {create, addCss, removeCss, preventEvent} from \"../webix/html\";\n\nfunction callback(config, result){\n\t// prompt\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tif (result === false){\n\t\t\tconfig._promise.reject();\n\t\t} else {\n\t\t\tconst inputBox = config._box.querySelector(\".webix_popup_input\");\n\t\t\tconst input = inputBox.querySelector(\"input\");\n\t\t\tif (config.input.required && !input.value){\n\t\t\t\tconfig.input.invalid = true;\n\t\t\t\taddCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tresult = input.value || \"\";\n\t\t\t\tconfig._promise.resolve(result);\n\t\t\t}\n\t\t}\t\n\t}\n\n\t(config.type.indexOf(\"confirm\") != -1 && result === false) ? config._promise.reject() : config._promise.resolve(result);\n\n\tconst usercall = config.callback;\n\tif (usercall)\n\t\tusercall(result, config.details);\n\n\tmodalbox.hide(config.id);\n}\nfunction modal_key(e){\n\tconst order = modalbox.order;\n\tconst count = order.length;\n\tconst source = e.target;\n\n\tif (count > 0 && message.keyboard){\n\t\tconst code = e.which || e.keyCode;\n\t\tif(code != 13 && code != 32 && code != 27)\n\t\t\treturn;\n\n\t\tlet activeBox;\n\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tconst box = modalbox.pull[ order[i] ];\n\n\t\t\tif(box._box != source && box._box.contains(source) && code == 32) // ignore space inside input\n\t\t\t\treturn;\n\n\t\t\tif(box.container && box.container.contains(source)){\n\t\t\t\tactiveBox = box;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(!activeBox)\n\t\t\tactiveBox = modalbox.pull[ order[order.length-1] ];\n\n\t\tif (code == 13 || code == 32)\n\t\t\tcallback(activeBox, true);\n\t\telse if (code == 27)\n\t\t\tcallback(activeBox, false);\n\n\t\tpreventEvent(e);\n\t\treturn !(e.cancelBubble = true);\n\t}\n}\n\nevent(document, \"keydown\", modal_key, { capture: true });\n\t\nfunction modality(mode, container){\n\tvar node = container || document.body;\n\tvar cover;\n\tif(isUndefined(node.modality)){\n\t\tcover = create(\"DIV\", {\n\t\t\t\"class\":\"webix_modal_cover\",\n\t\t\tstyle:\"position:\"+(container ? \"absolute\" : \"fixed\")+\";\"\n\t\t});\n\t\tcover.onkeydown = modal_key;\n\n\t\tif(container){\n\t\t\tvar position = window.getComputedStyle(container).position;\n\t\t\tif(position != \"fixed\" && position != \"absolute\" && position != \"sticky\" && position != \"relative\")\n\t\t\t\tnode.style.position = \"relative\";\n\t\t}\n\t\tnode.appendChild(cover);\n\t\tnode.modality = 1;\n\t}\n\telse\n\t\tmode ? node.modality ++ : node.modality --;\n\n\t//trigger visibility only if necessary\n\tif((mode && node.modality === 1) || node.modality === 0){\n\t\tcover = cover || Array.prototype.slice.call(node.querySelectorAll(\".webix_modal_cover\")).filter(el => el.parentNode == node)[0];\n\n\t\tif(cover){\n\t\t\tif(!node.modality){\n\t\t\t\tcover.style.display = \"none\";\n\t\t\t\tremoveCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t\telse if(node.modality == 1){\n\t\t\t\tcover.style.display = \"inline-block\";\n\t\t\t\taddCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t}\n\t}\n\treturn cover;\n}\n\nfunction button(text, result, className){\n\treturn \"<div role='button' tabindex='0' aria-label='\"+text+\"' class='webix_popup_button\"+(className?(\" \"+className):\"\")+\"' result='\"+result+\"' ><div>\"+text+\"</div></div>\";\n}\n\nfunction input(config){\n\treturn \"<div tabindex='0' class='webix_popup_input webix_el_text\"+(config.required?\" webix_required\":\"\")+\"'><input value='\"+template.escape(config.value || \"\")+\"' placeholder='\"+template.escape(config.placeholder || \"\")+\"'></input></div>\";\n}\n\nfunction info(text){\n\tif (!t.area){\n\t\tt.area = document.createElement(\"DIV\");\n\t\tt.area.className = \"webix_message_area\";\n\t\tt.area.style[t.position]=\"5px\";\n\t\t\n\t\tdocument.body.appendChild(t.area);\n\t}\n\tt.area.setAttribute(\"role\", \"alert\");\n\tt.area.setAttribute(\"aria-atomic\", true);\n\tt.hide(text.id);\n\tvar message = document.createElement(\"DIV\");\n\tmessage.innerHTML = \"<div>\"+text.text+\"</div>\";\n\tmessage.className = \"webix_message webix_\" + text.type;\n\tmessage.onclick = function(){\n\t\tif (text) t.hide(text.id);\n\t\ttext = null;\n\t};\n\n\tif (t.position == \"bottom\" && t.area.firstChild)\n\t\tt.area.insertBefore(message,t.area.firstChild);\n\telse\n\t\tt.area.appendChild(message);\n\t\n\tif (text.expire > 0)\n\t\tt.timers[text.id]=window.setTimeout(function(){\n\t\t\tt.hide(text.id);\n\t\t}, text.expire);\n\n\t//styling for animation\n\tmessage.style.height = message.offsetHeight-2+\"px\";\n\n\tt.pull[text.id] = message;\n\tmessage = null;\n\n\treturn text.id;\n}\nfunction _boxStructure(config, ok, cancel, hasInput){\n\tvar box = document.createElement(\"DIV\");\n\tvar css = config.css ? \" \"+config.css : \"\";\n\tbox.className = \"webix_modal_box webix_\"+config.type+css;\n\tbox.setAttribute(\"webixbox\", 1);\n\tbox.setAttribute(\"role\", \"alertdialog\");\n\tbox.setAttribute(\"aria-label\", config.title || \"\");\n\tbox.setAttribute(\"tabindex\", \"0\");\n\n\tvar inner = \"\";\n\tif (config.width)\n\t\tbox.style.width = config.width+(rules.isNumber(config.width)?\"px\":\"\");\n\tif (config.height)\n\t\tbox.style.height = config.height+(rules.isNumber(config.height)?\"px\":\"\");\n\tif (config.title)\n\t\tinner += \"<div class=\\\"webix_popup_title\\\">\"+config.title+\"</div>\";\n\tinner += \"<div class=\\\"webix_popup_text\"+(hasInput?\" webix_popup_label\":\"\")+\"\\\"><span>\"+(config.content?\"\":(config.text || \"\"))+\"</span></div>\";\n\tinner += \"<div  class=\\\"webix_popup_controls\\\">\";\n\tif (hasInput)\n\t\tinner += input(config.input);\n\tif (cancel)\n\t\tinner += button(config.cancel || i18n.message.cancel, false);\n\tif (ok)\n\t\tinner += button(config.ok || i18n.message.ok, true,\"confirm\");\n\tif (config.buttons && !ok && !cancel){\n\t\tfor (var i=0; i<config.buttons.length; i++)\n\t\t\tinner += button(config.buttons[i],i);\n\t}\n\tinner += \"</div>\";\n\tbox.innerHTML = inner;\n\n\tif (config.content){\n\t\tvar node = config.content;\n\t\tif (typeof node == \"string\") \n\t\t\tnode = document.getElementById(node);\n\t\tif (node.style.display == \"none\")\n\t\t\tnode.style.display = \"\";\n\t\tbox.childNodes[config.title?1:0].appendChild(node);\n\t}\n\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tconst inputBox = box.querySelector(\".webix_popup_input\");\n\t\tconst input = inputBox.querySelector(\"input\");\n\t\tinput.oninput = function(){\n\t\t\tif (config.input.invalid){\n\t\t\t\tremoveCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\tconfig.input.invalid = false;\n\t\t\t}\n\t\t};\n\t}\n\n\tbox.onclick = function(e){\n\t\tvar source = e.target;\n\t\tif (!source.className) source = source.parentNode;\n\t\tif (source.className.indexOf(\"webix_popup_button\")!=-1){\n\t\t\tlet result = source.getAttribute(\"result\");\n\t\t\tresult = (result == \"true\")||(result == \"false\"?false:result);\n\t\t\tcallback(config, result);\n\t\t}\n\t\te.cancelBubble = true;\n\t};\n\tconfig._box = box;\n\treturn box;\n}\n\nmodalbox.pull = {};\nmodalbox.order = [];\n\nfunction _createBox(config, ok, cancel, hasInput){\n\tconst box = config.tagName ? config : _boxStructure(config, ok, cancel, hasInput);\n\tconst container = config.container;\n\n\tconst containerWidth = container ? container.offsetWidth : (window.innerWidth||document.documentElement.offsetWidth);\n\tconst containerHeight = container ? container.offsetHeight : (window.innerHeight||document.documentElement.offsetHeight);\n\tconst containerLeft = container ? container.scrollLeft : 0;\n\tconst containerTop = container ? container.scrollTop : 0;\n\n\tif(config.container)\n\t\tbox.style.position = \"absolute\";\n\n\ttoNode((config.container || document.body).appendChild(box));\n\tconst cover = modality(true, config.container);\n\n\tconst x = config.left||Math.abs(containerLeft+Math.floor((containerWidth - box.offsetWidth)/2));\n\tconst y = config.top||Math.abs(containerTop+Math.floor((containerHeight - box.offsetHeight)/2));\n\tif (config.position == \"top\")\n\t\tbox.style.top = \"-3px\";\n\telse{\n\t\tbox.style.top = y+\"px\";\n\t\tif(cover){\n\t\t\tcover.style.top = containerTop+\"px\";\n\t\t\tcover.style.left = containerLeft+\"px\";\n\t\t}\n\t}\n\tbox.style.left = x+\"px\";\n\t//necessary for IE only\n\tbox.onkeydown = modal_key;\n\n\tif(hasInput)\n\t\tbox.querySelector(\".webix_popup_input input\").focus();\n\telse\n\t\tbox.focus();\n\n\tif (!config.id)\n\t\tconfig.id = _uid(\"modalbox\");\n\telse if(modalbox.pull[config.id]){\n\t\tmodalbox.hide(config.id);\n\t}\n\n\tmodalbox.order.push(config.id);\n\tmodalbox.pull[config.id] = config;\n\n\tconfig._promise = Promise.defer();\n\treturn config._promise;\n}\n\nfunction alertPopup(config){\n\treturn _createBox(config, true);\n}\nfunction confirmPopup(config){\n\treturn _createBox(config, true, true);\n}\nfunction boxPopup(config){\n\treturn _createBox(config);\n}\nfunction promptPopup(config){\n\treturn _createBox(config, true, true, true);\n}\nfunction box_params(text, type, callback){\n\tif (typeof text != \"object\"){\n\t\tif (typeof type == \"function\"){\n\t\t\tcallback = type;\n\t\t\ttype = \"\";\n\t\t}\n\t\ttext = {text:text, type:type, callback:callback };\n\t}\n\treturn text;\n}\nfunction params(text, type, expire, id){\n\tif (typeof text != \"object\")\n\t\ttext = {text:text, type:type, expire:expire, id:id};\n\ttext.id = text.id||_uid(\"message\");\n\ttext.expire = text.expire||t.expire;\n\treturn text;\n}\nexport function alert(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn alertPopup(text);\n}\nexport function confirm(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"confirm\";\n\treturn confirmPopup(text);\n}\n\nexport function modalbox(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn boxPopup(text);\n}\n\nexport function prompt(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"prompt\";\n\ttext.input = text.input || {};\n\treturn promptPopup(text);\n}\n\nmodalbox.hide = function(id){\n\tif(id && modalbox.pull[id]){\n\t\tvar node = modalbox.pull[id]._box;\n\t\tif(node){\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodalbox.order.splice(modalbox.order.indexOf(id), 1);\n\t\t\tmodality(false, modalbox.pull[id].container);\n\t\t\tdelete modalbox.pull[id];\n\t\t}\n\t}\n};\n\nmodalbox.hideAll = function(){\n\tfor (var id in modalbox.pull){\n\t\tthis.hide(id);\n\t}\n};\n\nexport function message(text, type, expire, id){ //eslint-disable-line\n\ttext = params.apply(this, arguments);\n\ttext.type = text.type||\"info\";\n\n\tvar subtype = text.type.split(\"-\")[0];\n\tswitch (subtype){\n\t\tcase \"alert\":\n\t\t\treturn alertPopup(text);\n\t\tcase \"confirm\":\n\t\t\treturn confirmPopup(text);\n\t\tcase \"modalbox\":\n\t\t\treturn boxPopup(text);\n\t\tcase \"prompt\":\n\t\t\treturn promptPopup(text);\n\t\tdefault:\n\t\t\treturn info(text);\n\t}\n}\n\nvar t = message;\nt.expire = 4000;\nt.keyboard = true;\nt.position = \"top\";\nt.pull = {};\nt.timers = {};\n\nt.hideAll = function(){\n\tfor (var key in t.pull)\n\t\tt.hide(key);\n};\nt.hide = function(id){\n\tvar obj = t.pull[id];\n\tif (obj && obj.parentNode){\n\t\twindow.setTimeout(function(){\n\t\t\tobj.parentNode.removeChild(obj);\n\t\t\tobj = null;\n\t\t},2000);\n\t\t//styling for animation\n\t\tobj.style.height = 0;\n\t\tobj.className+=\" hidden\";\n\t\tt.area.removeAttribute(\"role\");\n\t\t\n\t\tif(t.timers[id])\n\t\t\twindow.clearTimeout(t.timers[id]);\n\t\tdelete t.pull[id];\n\t}\n};\n\n//override circualr dependencies\ndefine(\"message\", message);\nexport default modalbox;","import {callEvent} from \"./customevents\";\n\nexport function editStop(){\n\tcallEvent(\"onEditEnd\", []);\n}\n","import {create} from \"../webix/html\";\n\n/*submits values*/\nexport default function send(url, values, method, target){\n\tvar form = create(\"FORM\",{\n\t\t\"target\":(target||\"_self\"),\n\t\t\"action\":url,\n\t\t\"method\":(method||\"POST\")\n\t},\"\");\n\tfor (var k in values) {\n\t\tvar field = create(\"INPUT\",{\"type\":\"hidden\",\"name\": k,\"value\": values[k]},\"\");\n\t\tform.appendChild(field);\n\t}\n\tform.style.display = \"none\";\n\tdocument.body.appendChild(form);\n\tform.submit();\n\tdocument.body.removeChild(form);\n}"],"names":["v","d","resolve","getInfo","x","responseText","getValue","agent","brands","find","options","rows","s","r","yCorrection","e","lastIndex","this","defaults","config","head","child","getParentView","extend","height","maxHeight","value","next","style","left","layoutMargin","env","translate","result","DragControl","_clean_dom_after_drag","point","_borders","_settings","_inner","j","data","tindex","order","length","driver","_sync_events","url","feed","call","arguments","$inline","importData","editor","_editors","view","_formath","UIManager","addHotKey","clearTimeout","repeat","refresh","i","sel","eventRadius","paddingX","renderer","definePath","class","input","scheme","hiddenCols","fontURL","cdn","fontName","type","doc","text","buf","ArrayBuffer","i18n","calendar","dayFull","set","decimalSize","dot","name","getRaw","node","onclick","aniset","callback","greaterOrEqual","decreaseValue","showTabs","greater","_point_element","position","fixed","state","_getDateBoundaries","DateHelper","equal","mode","css","selected","setValue","mouse","down","html","label","className","webix_inp_radio_border","common","_baseInputHTML","timeMode","_suggest_config","title","handle","setAttribute","_set_inner_size","values","_form","getValues","filter","template","last","getSelectedId","_select_key","document","body","oldheight","_getRowHeight","_contentobj","innerHTML","sCount","topSplit","hsr","st","rowspan","h","_clearBorder","nodes","moveSelection","pos","_getHiddenColumnIndex","header","_ignore_after_focus_scroll","Math","min","box_params","apply","alertPopup","confirmPopup","promptPopup","callEvent","method","target","k","form","create","action","field","appendChild","display","submit","removeChild"],"mappings":";;;;;;;;AAgHE,OAAIA,EACIC,EAAEC;AC1EXC,QAAQ;AC8HW,OAAOC,EAAEC;ACpFtB,SAASC;AC3Dd,EACAC,GAAMC,OAAOC;ACoGP,CAACC,EAAQC,MAA0B,GAAjBC,EAAEC,EAAEC,GAAkBC,EAAEF,EAAEC,GAAaJ,EAAQC;AC5FtEK;ACmB4D;ACmQhCC,KAAKC;AChQ9B;;ACuGwB,EACpBC,EAAOC,KAEP;AC4EPC,EAAQA,EAAMC;;AClKR,EAENC;AC6JCX,EAAEY,QAAUZ,EAAEa,WAAa;ACxNxB,EACK,GAELC;ACsDLC,EAAKC,MAAMC,KAAK;AC1CjBC,aAAa;ADgKiD,eAAfC,EAAIC,UAA0B,MAAM;AE6EhFC,EAAS;ACzGXC,EAAYC;;ACuDRC,EAAQ;AA0RNC,EAAWpB,KAAKqB,EAAUC;ACza1B,IAAIC,EAAI,EAAGA,EAAIC;ACNJC,EAASzB,KAAKwB,KAAKE,MAAMC,OAAS;AC8HlD,IAAK;AClHwB3B,KAAK4B;AAsVnC5B,KAAK6B,GAAe;AAmXiE;ACnoBjF,GAA+D7B,KAAKwB,KAAKM,IACrE9B,KAAKwB,KAAKO,KAAKC;ACtHT,SAATvB,GAA6B,QAATA,GACvBH;AC8DmC2B;ACRrCC,QAAQ,CAAA;EA6QSV,KAAKW;AChLtB,IAAIC,EAASpC,KAAKqC;AClIb,IAEAC;ECkK4EC;;AC1EhFC,EAAUC;CC9ET,OAFAC;ACvBgB,CAAA,IAAXC,GACH3C,KAAK4C;ACmGN;ACwEG,IAAIC,EAAIC,EAAInB,OAAS,EAAQ,GAALkB,EAAQA,CAAC;ACzMxCE,YAAa;ACuFP5D,EAAIa,KAAKE,OAAO8C;ACjEsBC,EAASC;ACVnDC,QAAS;AC4BLC;ACpCJ;ACqIKC,EAAOC;AC7CD7D,EAAQ8D,SAASzC,EAAI0C,IAAM,WAAW/D,EAAQgE,SAAS;AAuEzD,UAARC,GACFC,EAAIC;AC9DL,IAAMC,EAAM,IAAIC;CCrDK,OAAOC,EAAKC,SAASC;AAqLeC;ACjNvDhE,EAAOiE,YAAc1D,EAAMkB,OAASyC;AC8FlCC,GAAQrE,KAAKsE;ACpF4BC,EAAKC;ACvBjDC,EAAOC,SAAW;ACwFlBC,eAAgB;AC7DhBC,cAAc;AC6DdD,eAAgB;ACpChBE,SAAS;AClBTD,cAAc;ACoDdE,QAAS;ACmNqB;AC1Q9B,OAAO9E,KAAKwB;;ACIZxB,KAAK+E,GAAepE,MAAMqE,SAAWC,EAAQ,QAAQ;CC2ElD,OAAOvD;ACKHwD,EAAQlF,KAAKmF;AAqNXtC,KAHLuC,EAAWC;AAiNsB,SAATC,GAA4B,UAATA,EAAiB,OAAO;AA4RlE,EACFC,GAAO,0BAEAC,GAAa3C;AAkLM;ACn5B9B4C,SAAS;AC7EiB3E,EAAI4E,MAAMC;AAmP/BC,EAAO;AChJRC,EAAMC,WAAa;AAwOtBC,uBAAwB;ACrNlB1B,EAAOrE,KAAKqB,EAAUgD;AA8MH,OAAO5D;AC/U3BmF,EAAOI,EAAOC;ACuCkC;ACmDrD,IACMC,EAAmB,QADZlG,KAAKqB,EAAUqC;AC3C5BjD,EAAQT,KAAKmG,GAAkBnG,KAAKmG;AC5CvB;AC6CI;ACgDZnG,KAAKqB,EAAU+E,OAClBC,EAAOC;AClCVC,GAAgB;AC+Bf,IAAMC,EAASxG,KAAKyG,GAAMC;ACgDrB1G,KAAKqB,EAAUsF,OAAO3E;AAsQNhC;AC7ZtB4G,SAAS;ACYTC,KAAM;ACwCC/D,EAAM9C,KAAK8G;;AChDhB9G,KAAK2G;ACgMiB;AA+StBI,GAAY;ACtUkBC,SAASC;AC9FhCC,EAAYlH,KAAKmH;AC8DzBnH,KAAKoH,GAAYC,UAFjBzB;;;;;;;;;AC8GM0B,EAAStH,KAAKE,OAAOqH,UAAY;AC1H/BC,EAAMC,EAAGC,SAAWC,GACtB3H,KAAK4H;CC0BmB,oBAAvBC;ACjHRC,cAAc;AC6EXC,EAAM/H,KAAKgI;CAmUNC;ACtIFjI,KAAKkI;ACzDC;ACjNMC,KAAKC;ACUQ;QC0PzB,WACN,IAAIxE,EAAOyE,GAAWC,MAAMtI,KAAMiC,SAAvB,EAEX,OADA2B,EAAKF,KAAOE,EAAKF,MAAQ,QAClB6E,GAAW3E,CAAD,CACjB,YACM,WACN,IAAIA,EAAOyE,GAAWC,MAAMtI,KAAMiC,SAAvB,EAEX,OADA2B,EAAKF,KAAOE,EAAKF,MAAQ,UAClB8E,GAAa5E,CAAD,CACnB,yBAQM,WACN,IAAIA,EAAOyE,GAAWC,MAAMtI,KAAMiC,SAAvB,EAGX,OAFA2B,EAAKF,KAAOE,EAAKF,MAAQ,SACzBE,EAAKR,MAAQQ,EAAKR,OAAS,GACpBqF,GAAY7E,CAAD,CAClB,qCCrUA8E,EAAU,YAAa,EAAd,CACT,iGCDc,SAAc5G,EAAK0E,EAAQmC,EAAQC,GACjD,IAKSC,EALLC,EAAOC,EAAO,OAAO,CACxBH,OAAUA,GAAQ,QAClBI,OAASlH,EACT6G,OAAUA,GAAQ,QACjB,EAJe,EAKjB,IAASE,KAAKrC,EAAQ,CACrB,IAAIyC,EAAQF,EAAO,QAAQ,CAACrF,KAAO,SAASW,KAAQwE,EAAEpI,MAAS+F,EAAOqC,IAAI,EAAxD,EAClBC,EAAKI,YAAYD,CAAjB,EAEDH,EAAKnI,MAAMwI,QAAU,OACrBnC,SAASC,KAAKiC,YAAYJ,CAA1B,EACAA,EAAKM,SACLpC,SAASC,KAAKoC,YAAYP,CAA1B,CACA"}
{"version":3,"file":"grid.min.js","sources":["../sources/thirdparty/promiz.js","../sources/core/eventsystem.js","../sources/load/ajax.js","../sources/load/drivers/excel.js","../sources/core/atomdataloader.js","../sources/core/autoscroll.js","../sources/ui/core.js","../sources/webix/message.js","../sources/webix/fullscreen.js","../sources/core/uimanager.js","../sources/core/recordbind.js","../sources/views/baseview.js","../sources/core/canvas.js","../sources/css/skins/flat/config.js","../sources/css/skins/dark/config.js","../sources/core/touch.js","../sources/core/dragcontrol.js","../sources/views/window.js","../sources/webix/clipbuffer.js","../sources/core/customprint.js","../sources/load/dataprocessor.js","../sources/core/datastore.js","../sources/core/dataloader.js","../sources/core/datastate.js","../sources/core/dragitem.js","../sources/core/undo.js","../sources/webix/editors.js","../sources/core/editability.js","../sources/core/groupstore.js","../sources/core/htmloptions.js","../sources/core/keysnavigation.js","../sources/core/mapcollection.js","../sources/core/navigationbuttons.js","../sources/core/renderstack.js","../sources/core/selectionmodel.js","../sources/core/sparklines/svg.js","../sources/core/sparklines/bar.js","../sources/core/sparklines/spline.js","../sources/core/tablepaste.js","../sources/core/validatecollection.js","../sources/core/virtualrenderstack.js","../sources/webix/export/common.js","../sources/webix/export/newExcelFunctions.js","../sources/webix/export/toexcel.js","../sources/i18n/en.js","../sources/core/date.js","../sources/webix/locale.js","../sources/load/remote.js","../sources/ui/datafilter.js","../sources/i18n/de.js","../sources/i18n/es.js","../sources/i18n/it.js","../sources/i18n/pt.js","../sources/i18n/zh.js","../sources/i18n/be.js","../sources/views/baselayout.js","../sources/views/layout.js","../sources/views/property.js","../sources/views/calendar.js","../sources/views/colorboard.js","../sources/views/colorselect.js","../sources/views/button.js","../sources/views/text.js","../sources/core/textpattern.js","../sources/views/radio.js","../sources/views/colorpicker.js","../sources/views/counter.js","../sources/views/segmented.js","../sources/views/slider.js","../sources/views/rangeslider.js","../sources/views/suggest.js","../sources/views/mentionsuggest.js","../sources/views/list.js","../sources/views/pager.js","../sources/views/menu.js","../sources/views/vscroll.js","../sources/views/datatable/selection.js","../sources/views/datatable/blockselect.js","../sources/views/datatable/resize.js","../sources/views/datatable/print.js","../sources/views/datatable/dnd.js","../sources/views/datatable/columns.js","../sources/views/datatable/edit.js","../sources/views/datatable/math.js","../sources/views/datatable/size.js","../sources/views/datatable/touch.js","../sources/webix/filters.js","../sources/webix/consts.js","../sources/webix/helpers.js","../sources/webix/customevents.js","../sources/webix/export/topng.js","../sources/webix/export/tocsv.js","../sources/webix/api.js","../sources/load/send.js"],"sourcesContent":["var global = window;\n\nvar queueId = 1;\nvar queue = {};\nvar isRunningTask = false;\n\nif (!global.setImmediate && global.addEventListener)\n\tglobal.addEventListener(\"message\", function (e) {\n\t\tif (e.source == global){\n\t\t\tif (isRunningTask)\n\t\t\t\tnextTick(queue[e.data]);\n\t\t\telse {\n\t\t\t\tisRunningTask = true;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof queue[e.data] === \"function\")\n\t\t\t\t\t\tqueue[e.data]();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-line\n\t\t\t\t}\n\n\t\t\t\tdelete queue[e.data];\n\t\t\t\tisRunningTask = false;\n\t\t\t}\n\t\t}\n\t});\n\nfunction nextTick(fn) {\n\tif (global.setImmediate) global.setImmediate(fn);\n\t// if inside of web worker\n\telse if (global.importScripts || !global.addEventListener) setTimeout(fn);\n\telse {\n\t\tqueueId++;\n\t\tqueue[queueId] = fn;\n\t\tglobal.postMessage(queueId, \"*\");\n\t}\n}\n\nDeferred.resolve = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (value instanceof Deferred)\n\t\treturn value;\n\n\treturn new Deferred(function (resolve) {\n\t\tresolve(value);\n\t});\n};\n\nDeferred.reject = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\treturn new Deferred(function (resolve, reject) {\n\t\treject(value);\n\t});\n};\n\nDeferred.all = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\n\t\tarr.map(function (v, i) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tarr[i] = r;\n\t\t\t\t\tdone();\n\t\t\t\t\treturn r;\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred.race = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tif (arr.length == 0)\n\t\treturn new Deferred();\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\t\tarr.map(function (v) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tdone(null, r);\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred._d = 1;\n\n\n/**\n * @constructor\n */\nfunction Deferred(resolver) {\n\t\"use strict\";\n\tif (typeof resolver != \"function\" && resolver != undefined)\n\t\tthrow TypeError();\n\t\t\n\tif (typeof this != \"object\" || (this && this.then))\n\t\tthrow TypeError();\n\n\t// states\n\t// 0: pending\n\t// 1: resolving\n\t// 2: rejecting\n\t// 3: resolved\n\t// 4: rejected\n\tvar self = this,\n\t\tstate = 0,\n\t\tval = 0,\n\t\tnext = [],\n\t\tfn, er;\n\n\tself[\"promise\"] = self;\n\n\tself[\"resolve\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 1;\n\n\t\t\tnextTick(fire);\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"reject\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 2;\n\n\t\t\tnextTick(fire);\n\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"_d\"] = 1;\n\n\tself[\"then\"] = function (_fn, _er) {\n\t\tif (!(this._d == 1))\n\t\t\tthrow TypeError();\n\n\t\tvar d = new Deferred();\n\n\t\td.fn = _fn;\n\t\td.er = _er;\n\t\tif (state == 3) {\n\t\t\td.resolve(val);\n\t\t}\n\t\telse if (state == 4) {\n\t\t\td.reject(val);\n\t\t}\n\t\telse {\n\t\t\tnext.push(d);\n\t\t}\n\n\t\treturn d;\n\t};\n\n\tself[\"finally\"] = function(_handler){\n\t\tvar _value;\n\t\tconst handler = function(value){\n\t\t\t_value = value;\n\t\t\treturn _handler();\n\t\t};\n\t\t\n\t\tconst value = function(){\n\t\t\tconst d = new Deferred();\n\t\t\tif(state == 4)\n\t\t\t\treturn d.reject(_value);\n\t\t\telse\n\t\t\t\treturn d.resolve(_value);\n\t\t};\n\n\t\treturn self.then(handler, handler).then(value, value);\n\t};\n\n\tself[\"catch\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\t//compatibility with old version of promiz lib\n\tself[\"fail\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\tvar finish = function (type) {\n\t\tstate = type || 4;\n\t\tfor (var i=0; i<next.length; i++){\n\t\t\tvar p = next[i];\n\t\t\tstate == 3 && p.resolve(val) || p.reject(val);\n\t\t}\n\t};\n\n\ttry {\n\t\tif (typeof resolver == \"function\")\n\t\t\tresolver(self[\"resolve\"], self[\"reject\"]);\n\t} catch (e) {\n\t\tself[\"reject\"](e);\n\t}\n\n\treturn self;\n\n\t// ref : reference to 'then' function\n\t// cb, ec, cn : successCallback, failureCallback, notThennableCallback\n\tfunction thennable (ref, cb, ec, cn) {\n\t\t// Promises can be rejected with other promises, which should pass through\n\t\tif (state == 2) {\n\t\t\treturn cn();\n\t\t}\n\t\tif ((typeof val == \"object\" || typeof val == \"function\") && typeof ref == \"function\") {\n\t\t\ttry {\n\n\t\t\t\t// cnt protects against abuse calls from spec checker\n\t\t\t\tvar cnt = 0;\n\t\t\t\tref.call(val, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tcb();\n\t\t\t\t}, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tec();\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\tec();\n\t\t\t}\n\t\t} else {\n\t\t\tcn();\n\t\t}\n\t}\n\n\tfunction fire() {\n\t\t// check if it's a thenable\n\t\tvar ref;\n\t\ttry {\n\t\t\tref = val && val.then;\n\t\t} catch (e) {\n\t\t\tval = e;\n\t\t\tstate = 2;\n\t\t\treturn fire();\n\t\t}\n\n\t\tthennable(ref, function () {\n\t\t\tstate = 1;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\tstate = 2;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\ttry {\n\t\t\t\tif (state == 1 && typeof fn == \"function\") {\n\t\t\t\t\tval = fn(val);\n\t\t\t\t}\n\n\t\t\t\telse if (state == 2 && typeof er == \"function\") {\n\t\t\t\t\tval = er(val);\n\t\t\t\t\tstate = 1;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\treturn finish();\n\t\t\t}\n\n\t\t\tif (val == self) {\n\t\t\t\tval = TypeError();\n\t\t\t\tfinish();\n\t\t\t} else thennable(ref, function () {\n\t\t\t\tfinish(3);\n\t\t\t}, finish, function () {\n\t\t\t\tfinish(state == 1 && 3);\n\t\t\t});\n\n\t\t});\n\t}\n\n\n}\n\n// promise factory\nDeferred.defer = function () {\n\treturn new Deferred(null);\n};\n\nexport default Deferred;","import {extend, toFunctor, bind, uid, _to_array} from \"../webix/helpers.js\";\nimport {assert, log, debug_mode} from \"../webix/debug.js\";\n\n//event system\nconst EventSystem={\n\t$init:function(){\n\t\tif (!this._evs_events){\n\t\t\tthis._evs_events = {};\t\t//hash of event handlers, name => handler\n\t\t\tthis._evs_handlers = {};\t//hash of event handlers, ID => handler\n\t\t\tthis._evs_map = {};\n\t\t}\n\t},\n\t//temporary block event triggering\n\tblockEvent : function(){\n\t\tthis._evs_events._block = true;\n\t},\n\t//re-enable event triggering\n\tunblockEvent : function(){\n\t\tthis._evs_events._block = false;\n\t},\n\tmapEvent:function(map){\n\t\textend(this._evs_map, map, true);\n\t},\n\ton_setter:function(config){\n\t\tif(config){\n\t\t\tfor(var i in config){\n\t\t\t\tvar method = toFunctor(config[i], this.$scope);\n\t\t\t\tvar sub = i.indexOf(\"->\");\n\t\t\t\tif (sub !== -1){\n\t\t\t\t\tthis[i.substr(0,sub)].attachEvent(i.substr(sub+2), bind(method, this));\n\t\t\t\t} else\n\t\t\t\t\tthis.attachEvent(i, method);\n\t\t\t}\n\t\t}\n\t},\n\t//trigger event\n\tcallEvent:function(type,params){\n\t\tconst master = this._event_master || this;\n\t\tif (this._evs_events._block) return true;\n\t\t\n\t\ttype = type.toLowerCase();\n\t\tvar event_stack =this._evs_events[type.toLowerCase()];\t//all events for provided name\n\t\tvar return_value = true;\n\n\t\tif (DEBUG)\n\t\t\tif ((debug_mode.events || this.debug) && type !== \"onmousemoving\" )\t//can slowdown a lot\n\t\t\t\tlog(\"info\",\"[\"+this.name+\"@\"+((this._settings||{}).id)+\"] event:\"+type,params);\n\t\t\n\t\tif (event_stack)\n\t\t\tfor(var i=0; i<event_stack.length; i++){\n\t\t\t\t/*\n\t\t\t\t\tCall events one by one\n\t\t\t\t\tIf any event return false - result of whole event will be false\n\t\t\t\t\tHandlers which are not returning anything - counted as positive\n\t\t\t\t*/\n\t\t\t\tif (event_stack[i].apply(master, (params||[]))===false) return_value=false;\n\t\t\t}\n\t\tif (this._evs_map[type]){\n\t\t\tvar target = this._evs_map[type];\n\t\t\ttarget.$eventSource = this;\n\t\t\tif (!target.callEvent(type,params))\n\t\t\t\treturn_value =\tfalse;\n\t\t\ttarget.$eventSource = null;\n\t\t}\n\n\t\treturn return_value;\n\t},\n\t//assign handler for some named event\n\tattachEvent:function(type,functor,id){\n\t\tassert(functor, \"Invalid event handler for \"+type);\n\n\t\ttype=type.toLowerCase();\n\t\t\n\t\tid=id||uid(); //ID can be used for detachEvent\n\t\tfunctor = toFunctor(functor, this.$scope);\t//functor can be a name of method\n\n\t\tvar event_stack=this._evs_events[type]||_to_array();\n\t\t//save new event handler\n\t\tif (arguments[3])\n\t\t\tevent_stack.unshift(functor);\n\t\telse\n\t\t\tevent_stack.push(functor);\n\t\tthis._evs_events[type]=event_stack;\n\t\tthis._evs_handlers[id]={ f:functor,t:type };\n\t\t\n\t\treturn id;\n\t},\n\t//remove event handler\n\tdetachEvent:function(id){\n\t\tif(!this._evs_handlers[id]){\n\t\t\tvar name = (id+\"\").toLowerCase();\n\t\t\tif (this._evs_events[name]){\n\t\t\t\tthis._evs_events[name] = _to_array();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tvar type=this._evs_handlers[id].t;\n\t\tvar functor=this._evs_handlers[id].f;\n\t\t\n\t\t//remove from all collections\n\t\tvar event_stack=this._evs_events[type];\n\t\tevent_stack.remove(functor);\n\t\tdelete this._evs_handlers[id];\n\t},\n\thasEvent:function(type){\n\t\ttype=type.toLowerCase();\n\t\tvar stack = this._evs_events[type];\n\t\tif (stack && stack.length) return true;\n\n\t\tvar parent = this._evs_map[type];\n\t\tif (parent)\n\t\t\treturn parent.hasEvent(type);\n\t\treturn false;\n\t}\n};\n\nexport default EventSystem;","import { log, assert } from \"../webix/debug\";\nimport { isArray, extend } from \"../webix/helpers\";\nimport { stringify } from \"../webix/stringify\";\nimport { callEvent } from \"../webix/customevents\";\nimport promise from \"../thirdparty/promiz\";\n\nimport xml from \"./drivers/xml\";\nimport json from \"./drivers/json\";\n\nexport function ajax(url,params,call){\n\t//if parameters was provided - made fast call\n\tif (arguments.length!==0){\n\t\treturn (new ajax()).get(url,params,call);\n\t}\n\n\tif (!this || !this.getXHR) return new ajax(); //allow to create new instance without direct new declaration\n\n\treturn this;\n}\n\najax.count = 0;\najax.prototype={\n\tmaster:null,\n\t//creates xmlHTTP object\n\tgetXHR:function(){\n\t\treturn new XMLHttpRequest();\n\t},\n\tstringify:function(obj){\n\t\treturn stringify(obj);\n\t},\n\t/*\n\t\tsend data to the server\n\t\tparams - hash of properties which will be added to the url\n\t\tcall - callback, can be an object with success and error functions\n\t*/\n\t_send:function(url, params, call, mode){\n\t\tvar master;\n\t\t//webix.ajax(url, callback) - can be called only by user\n\t\tif (params && (isArray(params) || (typeof (params.success || params.error || params) == \"function\"))){\n\t\t\tmaster = call;\n\t\t\tcall = params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tvar defer = promise.defer();\n\t\tvar x=this.getXHR();\n\t\tvar headers = this._header || {};\n\n\t\tif (!callEvent(\"onBeforeAjax\", [mode, url, params, x, headers, null, defer])){\n\t\t\treturn defer.reject(x);\n\t\t}\n\n\t\t//add content-type to POST|PUT|DELETE\n\t\tvar json_mode = false;\n\t\tif (mode !== \"GET\"){\n\t\t\tvar found = false;\n\t\t\tfor (let key in headers)\n\t\t\t\tif (key.toString().toLowerCase() == \"content-type\"){\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif (headers[key] == \"application/json\")\n\t\t\t\t\t\tjson_mode = true;\n\t\t\t\t}\n\t\t\tif (!found && !(window.FormData && (params instanceof window.FormData)))\n\t\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\t//add extra params to the url\n\t\tif (typeof params == \"object\" && !(window.FormData && (params instanceof window.FormData))){\n\t\t\tif (json_mode)\n\t\t\t\tparams = this.stringify(params);\n\t\t\telse {\n\t\t\t\tvar t=[];\n\t\t\t\tfor (var a in params){\n\t\t\t\t\tvar value = params[a];\n\t\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\tif(typeof value===\"object\")\n\t\t\t\t\t\tvalue = this.stringify(value);\n\t\t\t\t\tt.push(encodeURIComponent(a)+\"=\"+encodeURIComponent(value)); // utf-8 escaping\n\t\t\t\t}\n\t\t\t\tparams=t.join(\"&\");\n\t\t\t}\n\t\t}\n\n\t\tif (params && mode===\"GET\"){\n\t\t\turl=url+(url.indexOf(\"?\")!=-1 ? \"&\" : \"?\")+params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tx.open(mode, url, !this._sync);\n\n\t\tvar type = this._response;\n\t\tif (type) x.responseType = type;\n\n\t\t//if header was provided - use it\n\t\tfor (let key in headers)\n\t\t\tx.setRequestHeader(key, headers[key]);\n\t\t\n\t\t//async mode, define loading callback\n\t\tvar self=this;\n\t\tthis.master = this.master || master;\n\t\tx.onreadystatechange = function(){\n\t\t\tif (!x.readyState || x.readyState == 4){\n\t\t\t\tajax.count++;\n\n\t\t\t\tvar is_error = x.status >= 400 || x.status === 0;\n\t\t\t\tvar text, data;\n\t\t\t\tif (x.responseType == \"blob\" || x.responseType == \"arraybuffer\"){\n\t\t\t\t\ttext = \"\";\n\t\t\t\t\tdata = x.response;\n\t\t\t\t} else {\n\t\t\t\t\ttext = x.responseText||\"\";\n\t\t\t\t\tdata = self._data(x);\n\t\t\t\t}\n\t\t\t\tif (is_error){\n\t\t\t\t\tcallEvent(\"onAjaxError\", [x]);\n\t\t\t\t\tdefer.reject(x);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t} else {\n\t\t\t\t\tdefer.resolve(data);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t}\t\n\t\t\t}\n\t\t};\n\n\t\tif (this._timeout)\n\t\t\tx.timeout = this._timeout;\n\n\t\t//IE can use sync mode sometimes, fix it\n\t\tif (!this._sync)\n\t\t\tsetTimeout(function(){\n\t\t\t\tx.send(params||null);\n\t\t\t}, 0);\n\t\telse\n\t\t\tx.send(params||null);\n\t\t\n\t\tif (this.master && !this._sync){\n\t\t\tdefer.then(function(data){\n\t\t\t\t//anti-leak\n\t\t\t\tself.master=null;\n\t\t\t\tcall=self=master=null;\t\n\t\t\t\treturn data;\n\t\t\t});\n\t\t}\n\n\t\treturn this._sync?x:defer; //return XHR, which can be used in case of sync. mode\n\t},\n\t_data:function(x){\n\t\treturn {\n\t\t\txml:function(){ \n\t\t\t\ttry{\n\t\t\t\t\treturn xml.tagToObject(xml.toObject(x.responseText, this));\n\t\t\t\t}\n\t\t\t\tcatch(e){\n\t\t\t\t\tlog(x.responseText);\n\t\t\t\t\tlog(e.toString()); assert(0, \"Invalid xml data for parsing\"); \n\t\t\t\t}\n\t\t\t},\n\t\t\trawxml:function(){ \n\t\t\t\tif (!window.XPathResult)\n\t\t\t\t\treturn xml.fromString(x.responseText);\n\t\t\t\treturn x.responseXML;\n\t\t\t},\n\t\t\ttext:function(){ return x.responseText; },\n\t\t\tjson:function(){\n\t\t\t\treturn json.toObject(x.responseText, false);\n\t\t\t}\n\t\t};\n\t},\n\t//GET request\n\tget:function(url,params,call){\n\t\treturn this._send(url,params,call,\"GET\");\n\t},\n\t//POST request\n\tpost:function(url,params,call){\n\t\treturn this._send(url,params,call,\"POST\");\n\t},\n\t//PUT request\n\tput:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PUT\");\n\t},\n\t//DELETE request\n\tdel:function(url,params,call){\n\t\treturn this._send(url,params,call,\"DELETE\");\n\t},\n\t//PATCH request\n\tpatch:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PATCH\");\n\t},\n\n\tsync:function(){\n\t\tthis._sync = true;\n\t\treturn this;\n\t},\n\ttimeout:function(num){\n\t\tthis._timeout = num;\n\t\treturn this;\n\t},\n\tresponse:function(value){\n\t\tthis._response = value;\n\t\treturn this;\n\t},\n\theaders:function(header){\n\t\tthis._header = extend(this._header||{},header);\n\t\treturn this;\n\t},\n\tbind:function(master){\n\t\tthis.master = master;\n\t\treturn this;\n\t}\n};\najax.$callback = function(owner, call, text, data, x, is_error){\n\tif (owner.$destructed) return;\n\n\tif (is_error)\n\t\tcallEvent(\"onAjaxError\", [x]);\n\t\n\tif (call){\n\t\tvar method = call.success || call;\n\t\tif (is_error)\n\t\t\tmethod = call.error;\n\t\tif (method && method.call)\n\t\t\tmethod.call(owner,text,data,x);\n\t}\n};","import {extend, bind, isDate, isUndefined} from \"../../webix/helpers\";\nimport env from \"../../webix/env\";\n\nimport Promise from \"../../thirdparty/promiz\";\nimport i18n from \"../../webix/i18n\";\n\nimport require from \"../require\";\nimport jsarray from \"./jsarray\";\n\n\nconst excel = extend({\n\ttoObject:function(data){\n\t\tif(!data.excel){\n\t\t\tvar opts = data.options || {};\n\t\t\tif (opts.dataurl) \n\t\t\t\textend(opts, this._urlToOptions(opts.dataurl));\n\n\t\t\tdata = data.data || data;\n\t\t\tvar promise = Promise.defer();\n\n\t\t\tif(data.name){ //file\n\t\t\t\topts.ext = data.name.split(\".\").pop();\n\t\t\t\tvar reader = new FileReader();\n\n\t\t\t\treader.onload = bind(function (e) {\n\t\t\t\t\tpromise.resolve(this.parseData(e.target.result, opts));\n\t\t\t\t}, this);\n\t\t\t\treader.readAsArrayBuffer(data);\n\t\t\t}\n\t\t\telse //arraybuffer\n\t\t\t\tpromise.resolve(this.parseData(data, opts));\n\n\t\t\treturn promise;\n\t\t}\n\t\t//plain jsarray or hash\n\t\treturn data;\n\t},\n\tparseData:function(data, options){\n\t\tdata = new Uint8Array(data);\n\t\tconst arr = [];\n\t\tfor(let i = 0; i != data.length; ++i)\n\t\t\tarr[i] = String.fromCharCode(data[i]);\n\n\t\tlet ext = (options.ext || options).toLowerCase();\n\t\tif (ext != \"xls\") ext = \"xlsx\";\n\t\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(bind(function(){\n\t\t\t/* global XLS, XLSX */\n\t\t\tconst wb = (ext == \"xls\" ? XLS : XLSX).read(arr.join(\"\"), {\n\t\t\t\ttype: \"binary\",\n\t\t\t\tcellStyles: isUndefined(options.cellStyles) ? true : options.cellStyles,\n\t\t\t\tcellDates: isUndefined(options.cellDates) ? true : options.cellDates,\n\t\t\t\tsheetStubs: options.sheetStubs\n\t\t\t});\n\n\t\t\tconst book = wb.Workbook;\n\t\t\tconst res = {\n\t\t\t\tsheets: wb.Sheets,\n\t\t\t\tnames: wb.SheetNames,\n\t\t\t\toptions:options,\n\t\t\t\tranges: book ? (book.Names || []) : [],\n\t\t\t\tstates: book && book.Sheets ? book.Sheets.map(s => [\"visible\", \"hidden\", \"veryHidden\"][s.Hidden]) : wb.SheetNames.map(() => \"visible\")\n\t\t\t};\n\t\t\treturn extend(this.getSheet(res, options), res);\n\t\t}, this));\n\t},\n\tgetSheet:function(data, options){\n\t\tvar name = options.name || data.names[0];\n\t\tdata = this.sheetToArray(data.sheets[name], options);\n\t\tif(options.rows && options.rows.length)\n\t\t\tdata.data = data.data.splice(options.rows[0], Math.min(options.rows[1], data.data.length)-options.rows[0]);\n\t\treturn data;\n\t},\n\tsheetToArray:function(sheet, options){\n\t\tconst all = [];\n\t\tconst spans = [];\n\t\tconst styles = [];\n\t\tconst sizes = [];\n\t\tconst types = [];\n\t\tconst hidden = [];\n\t\tconst links = [];\n\t\tlet sheetSettings = {};\n\n\t\tconst cellTypes = { n:\"number\", d:\"date\", s:\"string\", b:\"boolean\"};\n\n\t\tif(sheet && sheet[\"!ref\"]){\n\t\t\tvar range = XLS.utils.decode_range(sheet[\"!ref\"]), \n\t\t\t\trow, col, cellCoord, cell,\n\t\t\t\txCorrection = range.s.c,\n\t\t\t\tyCorrection = range.s.r+(options.rows?options.rows[0]:0);\n\n\t\t\tfor (row = range.s.r; row <= range.e.r; row++) {\n\t\t\t\tvar nrow = [];\n\t\t\t\tfor (col = range.s.c; col <= range.e.c; col++) {\n\t\t\t\t\tcellCoord = XLS.utils.encode_cell({ r: row, c: col });\n\t\t\t\t\tcell = sheet[cellCoord];\n\t\t\t\t\tif(!cell)\n\t\t\t\t\t\tnrow.push(\"\");\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar ncell = \"\";\n\t\t\t\t\t\tif(options.math&&cell.f) // get formula\n\t\t\t\t\t\t\tncell = cell.f.charAt(0)==\"=\" ? cell.f : \"=\"+cell.f;\n\t\t\t\t\t\telse if (cell.t ==\"d\" && isDate(cell.v))\n\t\t\t\t\t\t\tncell  = i18n.dateFormatStr(cell.v);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tncell = cell.v;\n\t\t\t\t\t\tnrow.push(ncell);\n\n\t\t\t\t\t\tif (cell.s)\n\t\t\t\t\t\t\tstyles.push([row-yCorrection, col-xCorrection, cell.s]);\n\t\t\t\t\t\tif (cell.t)\n\t\t\t\t\t\t\ttypes.push([row-yCorrection, col-xCorrection, cellTypes[cell.t]]);\n\t\t\t\t\t\tif (cell.l)\n\t\t\t\t\t\t\tlinks.push([row-yCorrection, col-xCorrection, cell.l.location ? \"#\"+cell.l.location : cell.l.Target]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tall.push(nrow);\n\t\t\t}\n\n\t\t\tif(sheet[\"!merges\"]){\n\t\t\t\tvar merges = sheet[\"!merges\"];\n\t\t\t\tfor(let i = 0; i<merges.length; i++){\n\t\t\t\t\tvar s = merges[i].s;\n\t\t\t\t\tvar e = merges[i].e;\n\t\t\t\t\tif(!options.rows || (s.r-yCorrection>=0 && e.r-yCorrection<=options.rows[1]))\n\t\t\t\t\t\tspans.push([s.r-yCorrection, s.c-xCorrection, e.c-s.c+1, e.r-s.r+1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!cols\"]){\n\t\t\t\tvar widths = sheet[\"!cols\"];\n\t\t\t\tfor(let i = 0; i<widths.length; i++){\n\t\t\t\t\tconst item = widths[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-xCorrection;\n\t\t\t\t\t\tsizes.push([\"column\", index, Math.round(item.wch/(8.43/70))]); //mode, colind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"column\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!rows\"]){\n\t\t\t\tvar heights = sheet[\"!rows\"];\n\t\t\t\tfor(let i = 0; i<heights.length; i++){\n\t\t\t\t\tconst item = heights[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-yCorrection;\n\t\t\t\t\t\tsizes.push([\"row\", index, item.hpx]); //mode (\"row\", \"column\"), rowind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"row\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!settings\"])\n\t\t\t\tsheetSettings = sheet[\"!settings\"];\n\t\t}\n\n\t\treturn { data:all, spans, styles, sizes, types, hidden, links, sheetSettings, excel: true };\n\t},\n\t_urlToOptions:function(details){\n\t\tvar parts = details.split(\"[\");\n\t\tvar options = {};\n\t\toptions.name = parts[0];\n\t\tif(parts[1]){\n\t\t\tvar rows = parts[1].split(/[^0-9]+/g);\n\t\t\trows[0] = rows[0]*1 || 0;\n\t\t\trows[1] = rows[1]*1 || 9999999;\n\t\t\toptions.rows = rows;\n\t\t}\n\t\treturn options;\n\t}\n}, jsarray);\n\nexport default excel;","import promise from \"../thirdparty/promiz\";\nimport proxy from \"../load/proxy\";\nimport DataDriver from \"../load/drivers/index\";\n\n\nimport {ajax} from \"../load/ajax\";\n\nimport {copy, bind} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\n\nconst silentErrorMarker = {};\n\nconst AtomDataLoader={\n\t$init:function(config){\n\t\tthis._data_generation = 0;\n\n\t\t//prepare data store\n\t\tthis.data = {};\n\t\tthis.waitData = promise.defer();\n\n\t\tif (config)\n\t\t\tthis._settings.datatype = config.datatype||\"json\";\n\t\tthis.$ready.push(this._load_when_ready);\n\t},\n\t_load_when_ready:function(){\n\t\tthis._ready_for_data = true;\n\t\t\n\t\tif (this._settings.url)\n\t\t\tthis.url_setter(this._settings.url);\n\t\tif (this._settings.data)\n\t\t\tthis.data_setter(this._settings.data);\n\t},\n\turl_setter:function(value){\n\t\tvalue = proxy.$parse(value);\n\n\t\tif (!this._ready_for_data) return value;\n\t\tthis.load(value, this._settings.datatype);\t\n\t\treturn value;\n\t},\n\tdata_setter:function(value){\n\t\tif (!this._ready_for_data) return value;\n\t\tthis.parse(value, this._settings.datatype);\n\t\treturn true;\n\t},\n\t//loads data from external URL\n\tload:function(url,call,details,clear){\n\t\tlet type;\n\t\tif (typeof call == \"string\"){\t//second parameter can be a loading type or callback\n\t\t\t//we are not using setDriver as data may be a non-datastore here\n\t\t\ttype = call;\n\t\t\tcall = arguments[2];\n\t\t}\n\n\t\tconst d = this._fetch(url, type, details||null);\n\t\tif (d && d.then)\n\t\t\treturn d.then(data => {\n\t\t\t\tthis._onLoad(data, clear);\n\t\t\t\tif (call)\n\t\t\t\t\tajax.$callback(this, call, \"\", data, -1);\n\t\t\t\treturn data;\n\t\t\t}, x => this._onLoadError(x));\n\t},\n\t_fetch:function(url, type, details){\n\t\tvar result;\n\n\t\tif (type || !this.data.driver)\n\t\t\tthis.data.driver = DataDriver[type||\"json\"];\n\n\t\tif(!this.callEvent(\"onBeforeLoad\",[]))\n\t\t\treturn promise.reject();\t\t\n\n\t\t//proxy\t\n\t\turl = proxy.$parse(url);\n\t\tif (url.$proxy && url.load){\n\t\t\tresult = url.load(this, details);\n\t\t}\n\t\t//promize\n\t\telse if (typeof url === \"function\"){\n\t\t\tresult = url.call(this, details);\n\t\t}\n\t\t//normal url\n\t\telse {\n\t\t\tresult = ajax().bind(this).get(url);\n\t\t}\n\n\t\t//we wrap plain data in promise to keep the same processing for it\n\t\tif(result && !result.then){\n\t\t\tresult = promise.resolve(result);\n\t\t}\n\n\t\tconst gen = ++this._data_generation;\n\t\tif(result && result.then){\n\t\t\treturn result.then((data) => {\n\t\t\t\t// component destroyed, or clearAll was issued\n\t\t\t\tif (this.$destructed || this._data_generation !== gen)\n\t\t\t\t\t// by returning rejection we are preventing the further executing chain\n\t\t\t\t\t// if user have used list.load(data).then(do_something)\n\t\t\t\t\t// the do_something will not be executed\n\t\t\t\t\t// the error handler may be triggered though\n\t\t\t\t\treturn promise.reject(silentErrorMarker);\n\n\t\t\t\treturn data;\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t},\n\t//loads data from object\n\tparse:function(data,type,clear){\n\t\tif (data && typeof data.then == \"function\"){\n\t\t\tconst gen = ++this._data_generation;\n\t\t\t// component destroyed, or clearAll was issued\n\t\t\treturn data.then((data) => {\n\t\t\t\tif (this.$destructed || this._data_generation !== gen)\n\t\t\t\t\treturn promise.reject();\n\t\t\t\tthis.parse(data, type, clear);\n\t\t\t});\n\t\t}\n\n\t\t//loading data from other component\n\t\tif (data && data.sync && this.sync)\n\t\t\tthis._syncData(data);\n\t\telse if(!this.callEvent(\"onBeforeLoad\",[]))\n\t\t\treturn promise.reject();\n\t\telse {\n\t\t\tif(type || !this.data.driver)\n\t\t\t\tthis.data.driver = DataDriver[type||\"json\"];\n\t\t\tthis._onLoad(data, clear);\n\t\t}\n\n\t\treturn promise.resolve();\n\t},\n\t_syncData: function(data){\n\t\tif(this.data && this.data.attachEvent)\n\t\t\tthis.data.attachEvent(\"onSyncApply\",bind(function(){\n\t\t\t\tif(this._call_onready)\n\t\t\t\t\tthis._call_onready();\n\t\t\t},this));\n\n\t\tthis.sync(data);\n\t},\n\t_parse:function(data){\n\t\tvar parsed, record,\n\t\t\tdriver = this.data.driver;\n\n\t\trecord = driver.getRecords(data)[0];\n\t\tparsed = record ? copy(driver.getDetails(record)) : {};\n\n\t\tif(this.setValues)\n\t\t\tthis.setValues(parsed, false, \"auto\");\n\t\telse\n\t\t\tthis.data = parsed;\n\t},\n\t_onLoadContinue:function(data, clear){\n\t\tif (data){\n\t\t\tif (!this.$onLoad || !this.$onLoad(data, this.data.driver, clear)){\n\t\t\t\tif (this.data && this.data._parse) {\n\t\t\t\t\tif (clear) this.data.clearAll(true);\n\t\t\t\t\tthis.data._parse(data); //datastore\n\t\t\t\t} else {\n\t\t\t\t\tif (clear) this.clearAll(true);\n\t\t\t\t\tthis._parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t} else\n\t\t\tthis._onLoadError(data);\n\n\t\t//data loaded, view rendered, call onready handler\n\t\tif(this._call_onready)\n\t\t\tthis._call_onready();\n\n\t\tthis.callEvent(\"onAfterLoad\",[]);\n\t\tthis.waitData.resolve();\n\t},\n\t//default after loading callback\n\t_onLoad:function(data, clear){\n\t\t// webix loading object or uploaded file structure\n\t\tif (data && typeof data.text === \"function\" && !data.name){\n\t\t\tdata = data.text();\n\t\t}\n\n\t\tdata = this.data.driver.toObject(data);\n\t\tif(data && data.then)\n\t\t\tdata.then(data => this._onLoadContinue(data, clear));\n\t\telse\n\t\t\tthis._onLoadContinue(data, clear);\n\t},\n\t_onLoadError:function(xhttp){\n\t\tif (xhttp !== silentErrorMarker){\n\t\t\t//ignore error for dead components\n\t\t\tif (!this.$destructed){\n\t\t\t\tthis.callEvent(\"onAfterLoad\",[]);\n\t\t\t\tthis.callEvent(\"onLoadError\",arguments);\n\t\t\t}\n\n\t\t\tcallEvent(\"onLoadError\", [xhttp, this]);\n\t\t}\n\t\treturn promise.reject(xhttp);\n\t},\n\t_check_data_feed:function(data){\n\t\tif (!this._settings.dataFeed || this._ignore_feed || !data)\n\t\t\treturn true;\n\n\t\tvar url = this._settings.dataFeed;\n\t\tif (typeof url == \"function\")\n\t\t\treturn url.call(this, (data.id||data), data);\n\n\t\turl = url+(url.indexOf(\"?\")==-1?\"?\":\"&\")+\"action=get&id=\"+encodeURIComponent(data.id||data);\n\t\tif(!this.callEvent(\"onBeforeLoad\",[]))\n\t\t\treturn false;\n\n\t\tajax(url, function(text,xml,loader){\n\t\t\tthis._ignore_feed = true;\n\t\t\tvar driver = DataDriver.json;\n\t\t\tvar data = driver.toObject(text, xml);\n\t\t\tif (data)\n\t\t\t\tthis.setValues(driver.getDetails(driver.getRecords(data)[0]), false, \"auto\");\n\t\t\telse\n\t\t\t\tthis._onLoadError(loader);\n\t\t\tthis._ignore_feed = false;\n\t\t\tthis.callEvent(\"onAfterLoad\",[]);\n\t\t}, this);\n\t\treturn false;\n\t}\n};\n\nexport default AtomDataLoader;","import {offset} from \"../webix/html\";\nimport {delay} from \"../webix/helpers\";\n\n\nconst AutoScroll = {\n\t_auto_scroll:function(pos){\n\t\tlet yScroll, xScroll;\n\t\tlet mode = this._settings.dragscroll;\n\n\t\tif (typeof mode !== \"string\")\n\t\t\tmode = this._settings.layout||\"xy\";\n\t\txScroll = mode.indexOf(\"x\") !== -1;\n\t\tyScroll = mode.indexOf(\"y\") !== -1;\n\n\t\tconst data = this._body || this.$view;\n\t\tconst box = offset(data);\n\n\t\tconst sense = Math.max((this._settings.rowHeight||(this.type&&!isNaN(parseFloat(this.type.height))?this.type.height:0))+5, 40); //dnd auto-scroll sensivity\n\t\tlet reset = false;\n\n\t\tif (yScroll && this._auto_y_scroll(pos, box, sense) ) reset = true;\n\t\tif (xScroll && this._auto_x_scroll(pos, box, sense) ) reset = true;\n\n\t\tif (reset)\n\t\t\tthis._auto_scroll_delay = delay(this._auto_scroll, this, [pos], 100);\n\t},\n\t_auto_scroll_column:function(pos){\n\t\tconst mode = this._settings.dragscroll;\n\t\tif (typeof mode === \"string\" && mode.indexOf(\"x\") === -1)\n\t\t\treturn;\n\n\t\tconst data = this._header || this.$view;\n\t\tconst box = offset(data);\n\n\t\tconst sense = Math.max(this._settings.headerRowHeight||0, 40);\n\t\tif ( this._auto_x_scroll(pos, box, sense) )\n\t\t\tthis._auto_scroll_delay = delay(this._auto_scroll_column, this, [pos], 100);\n\t},\n\t_auto_y_scroll:function(pos, box, sense){\n\t\tlet top = box.y;\n\t\tlet bottom = top + box.height;\n\t\tconst scroll = this.getScrollState();\n\n\t\tconst config = this._settings;\n\t\tif(config.topSplit){\n\t\t\tconst topSplitPos = this._cellPosition(this.getIdByIndex(config.topSplit-1), this.columnId(0));\n\t\t\ttop += topSplitPos.top + topSplitPos.height;\n\t\t}\n\n\t\tif (pos.y < (top + sense)){\n\t\t\treturn this._auto_scrollTo(scroll.x, scroll.y-sense*2, pos, \"y\");\n\t\t} else if (pos.y > bottom - sense){\n\t\t\treturn this._auto_scrollTo(scroll.x, scroll.y+sense*2, pos, \"y\");\n\t\t}\n\t\treturn false;\n\t},\n\t_auto_x_scroll:function(pos, box, sense){\n\t\tlet left = box.x;\n\t\tlet right = left + box.width;\n\t\tconst scroll = this.getScrollState();\n\n\t\tif (pos.x < (left + sense)){\n\t\t\treturn this._auto_scrollTo(scroll.x-sense*2, scroll.y, pos, \"x\");\n\t\t} else if (pos.x > right - sense){\n\t\t\treturn this._auto_scrollTo(scroll.x+sense*2, scroll.y, pos, \"x\");\n\t\t}\n\t\treturn false;\n\t},\n\t_auto_scrollTo:function(x, y, pos, mode){\n\t\tif (this.callEvent(\"onBeforeAutoScroll\", [pos])){\n\t\t\tthis.scrollTo(x, y);\n\t\t\tthis.callEvent(\"onAfterAutoScroll\", []);\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst diff = this._render_scroll_shift ? 0 : (this._render_scroll_diff||0);\n\t\t\treturn Math.abs((mode === \"x\" ? x : y) - scroll[mode] + diff) < 1;\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport default AutoScroll;","import {assert} from \"../webix/debug\";\n\nimport {uid, isArray, toNode, isUndefined, toFunctor} from \"../webix/helpers\";\nimport {attachEvent} from \"../webix/customevents\";\nimport {locate} from \"../webix/html\";\nimport {use} from \"../services\";\n\nimport type from \"../webix/type\";\nimport state from \"../core/state\";\n\n//global click events for UI\nimport \"./click\";\n\nconst views = {};\n\nfunction ui(config, parent, id){\n\tvar res;\n\tstate._ui_creation++;\n\t// save old value of global scope\n\tconst temp_scope = state._global_scope;\n\t// save old value of global collection\n\tconst temp_collection = state._global_collection;\n\t// set global scope to the scope of new UI or to previous value\n\t// as result inner webix.ui calls will have access the scope of master view\n\t// mainly necessary for suggests\n\tstate._global_scope = config.$scope || temp_scope;\n\ttry {\n\t\tres = _ui_creator(config, parent, id);\n\t} finally {\n\t\tstate._ui_creation--;\n\t\t// restore global scope\n\t\tstate._global_scope = temp_scope;\n\t\t// restore global collection\n\t\t// if an error occurred while creating the isolated layout\n\t\tstate._global_collection = temp_collection;\n\t}\n\treturn res;\n}\nui.views = views;\n\n\nfunction _ui_creator(config, parent, id){\n\tvar multiset = isArray(config);\n\tvar node = toNode((config.container||parent)||document.body);\n\n\t// solve problem with non-unique ids\n\tif(node._settings)\n\t\tid = _correctId(node, multiset, id);\n\n\tvar top_node;\n\tvar moving = false;\n\tvar body_child = (node == document.body);\n\tif (config._settings || (node && multiset)){\n\t\ttop_node = config;\n\t\tmoving = true;\n\t} else {\n\t\tif (node && body_child)\n\t\t\tconfig.$topView = true;\n\t\tif (!config._inner)\n\t\t\tconfig._inner = {};\n\n\t\tif (parent && parent.getParentView){\n\t\t\tstate._parent_cell = (!id && id!==0) ? parent.getParentView() : parent;\n\t\t}\n\n\t\ttop_node = _view(config);\n\t}\n\n\tif (body_child && !top_node.setPosition && !top_node.$apiOnly)\n\t\tuse(\"fixHeight\")();\n\n\tif (top_node._settings && top_node._settings._hidden && !node.$view){\n\t\ttop_node._settings._container = node;\n\t} else if (!top_node.$apiOnly){\n\t\tif (node.appendChild)\n\t\t\t_appendDom(node, top_node, config);\n\t\telse if (node.destructor){\n\t\t\tvar target = node;\n\n\t\t\t//addView or view moving with target id\n\t\t\tif (!id && id!==0 && !isArray(top_node)){\n\t\t\t\tid = node;\n\t\t\t\tnode = node.getParentView();\n\t\t\t}\n\n\t\t\t//if target supports view adding\n\t\t\tif (node && node._replace){\n\t\t\t\tif (moving && top_node.getParentView){\n\t\t\t\t\t//if source supports view removing\n\t\t\t\t\tlet parent = top_node.getParentView();\n\t\t\t\t\tif (parent  && parent._remove){\n\t\t\t\t\t\tparent._remove(top_node);\n\t\t\t\t\t}\n\t\t\t\t\t//adjust parent link and scope\n\t\t\t\t\ttop_node._parent_cell = node;\n\t\t\t\t\ttop_node.$scope = node.$scope;\n\t\t\t\t}\n\n\t\t\t\tnode._replace(top_node, id);\n\t\t\t} else {\n\t\t\t\tlet parent = target.$view.parentNode;\n\t\t\t\ttarget.destructor();\n\t\t\t\t_appendDom(parent, top_node, config);\n\t\t\t}\n\t\t} else\n\t\t\tassert(0, \"Not existing parent:\"+config.container);\n\t}\n\n\treturn top_node;\n}\n\nfunction _appendDom(node, top_node, config){\n\tnode.appendChild(top_node._viewobj);\n\tif (top_node.getParentView()) return;\n\n\t//resize window with position center or top\n\t//do not resize other windows and elements\n\t// which are attached to custom html containers\n\tif (((!top_node.setPosition || top_node._settings.fullscreen) && node == document.body) || top_node._settings.position )\n\t\tstate.top_views.push(top_node._destructor_handler);\n\tif (!config.skipResize)\n\t\ttop_node.adjust();\n}\n\nfunction _correctId(target, multiset, id){\n\t//replace view\n\tvar views = [target];\n\t//replace content of layout\n\tif (multiset)\n\t\tviews = target.getChildViews();\n\t//replace content of window\n\telse if (target._body_cell)\n\t\tviews = [target._body_cell];\n\t//add cell in layout by number\n\telse if (typeof id == \"number\"){\n\t\treturn id;\n\t//replace cell in layout by id\n\t} else if (id){\n\t\tviews = [$$(id)];\n\t\t_deleteIds(views);\n\t\treturn views[0].config.id;\n\t}\n\n\t_deleteIds(views);\n\treturn id;\n}\n\nfunction _deleteIds(uis){\n\tfor (var i = uis.length - 1; i >= 0; i--){\n\t\tlet current = uis[i];\n\t\t//remove original id\n\t\tdelete views[current.config.id];\n\t\t//create temp id\n\t\tcurrent.config.id = \"x\"+uid();\n\t\tviews[current.config.id] = current;\n\t\t//process childs\n\t\tif (current.getChildViews)\n\t\t\t_deleteIds(current.getChildViews());\n\t\t//process related UI\n\t\tif (current._destroy_with_me)\n\t\t\t_deleteIds(current._destroy_with_me);\n\t}\n}\n\n\nfunction _view(config){\n\n\tif (DEBUG){\n\t\t// check for trailing comma\n\t\tvar coll = config.cells || config.rows || config.elements || config.cols;\n\t\tif (coll)\n\t\t\tfor (let i=0; i<coll.length; i++)\n\t\t\t\tif (coll[i] === null || typeof coll[i] === \"undefined\")\n\t\t\t\t\tassert(0, \"You have trailing comma or Null element in collection's configuration\");\n\t}\n\n\tif (config.view){\n\t\tvar view = config.view;\n\t\tassert(ui[view], \"unknown view:\"+view);\n\t\treturn new ui[view](config);\n\t} else if (config.rows || config.cols){\n\t\tvar cells = config.rows||config.cols;\n\t\tvar accordion = false;\n\t\tfor (let i=0; i<cells.length; i++){\n\t\t\tif (cells[i].body && !cells[i].view && !cells[i].align)\n\t\t\t\taccordion = true;\n\t\t}\n\t\tif (accordion){\n\t\t\treturn new ui.headerlayout(config);\n\t\t} else\n\t\t\treturn new ui.layout(config);\n\t}\n\telse if (config.cells)\n\t\treturn new ui.multiview(config);\n\telse if (config.template || config.content)\n\t\treturn new ui.template(config);\t\n\telse if (config.align && config.body){\n\t\treturn new ui.align(config);\n\t} else return new ui.spacer(config);\n}\n//FIXME\nui._view = _view;\n\nfunction $$(id){\n\tif (!id) return null;\n\t\n\tif (views[id]) return views[id];\n\n\tvar name = id;\n\tif (typeof id == \"object\"){\n\t\tif (id._settings)\n\t\t\treturn id;\n\t\tname = id.target||id;\n\t}\n\treturn views[locate({ target:toNode(name)},/*@attr*/\"view_id\")];\n}\nif (typeof window.$$ === \"undefined\") window.$$ = $$;\n\t\n\t\n\nlet protoUI = function(){\n\tvar origins = arguments;\n\tvar selfname = origins[0].name;\n\t\n\tvar t = function(data){\n\t\tif (!t)\n\t\t\treturn ui[selfname].prototype;\n\n\t\tvar origins = t.$protoWait;\n\t\tif (origins){\n\t\t\tvar params = [origins[0]];\n\t\t\t\n\t\t\tfor (let i=1; i < origins.length; i++){\n\t\t\t\tparams[i] = origins[i];\n\n\t\t\t\tif (params[i].$protoWait)\n\t\t\t\t\tparams[i] = params[i].call(-1, params[i].name);\n\n\t\t\t\tif (params[i].prototype && params[i].prototype.name)\n\t\t\t\t\tui[params[i].prototype.name] = params[i];\n\t\t\t}\n\t\t\tui[selfname] = proto.apply(-1, params);\n\n\t\t\tif (t._webix_type_wait)\t\n\t\t\t\tfor (let i=0; i < t._webix_type_wait.length; i++)\n\t\t\t\t\ttype(ui[selfname], t._webix_type_wait[i]);\n\t\t\t\t\n\t\t\tt = origins = null;\t\n\t\t}\n\t\t\t\n\t\tif (this != -1)\n\t\t\treturn new ui[selfname](data);\n\t\telse \n\t\t\treturn ui[selfname];\n\t};\n\tt.$protoWait = Array.prototype.slice.call(arguments, 0);\n\treturn (ui[selfname]=t);\n};\n\nlet proto = function(){\n\tvar origins = arguments;\n\tvar compilation = origins[0];\n\tvar has_constructor = !!compilation.$init;\n\tvar construct = [];\n\t\n\tassert(compilation,\"Invalid mixing target\");\n\t\t\n\tfor (var i=origins.length-1; i>0; i--) {\n\t\tassert(origins[i],\"Invalid mixing source\");\n\t\tif (typeof origins[i]== \"function\")\n\t\t\torigins[i]=origins[i].prototype;\n\t\tif (origins[i].$init) \n\t\t\tconstruct.push(origins[i].$init);\n\t\tif (origins[i].defaults){ \n\t\t\tvar defaults = origins[i].defaults;\n\t\t\tif (!compilation.defaults)\n\t\t\t\tcompilation.defaults = {};\n\t\t\tfor (let def in defaults)\n\t\t\t\tif (isUndefined(compilation.defaults[def]))\n\t\t\t\t\tcompilation.defaults[def] = defaults[def];\n\t\t}\n\t\tif (origins[i].type && compilation.type){\n\t\t\tfor (let def in origins[i].type)\n\t\t\t\tif (!compilation.type[def])\n\t\t\t\t\tcompilation.type[def] = origins[i].type[def];\n\t\t}\n\t\t\t\n\t\tfor (var key in origins[i]){\n\t\t\tif (!compilation[key] && compilation[key] !== false)\n\t\t\t\tcompilation[key] = origins[i][key];\n\t\t}\n\t}\n\t\n\tif (has_constructor)\n\t\tconstruct.push(compilation.$init);\n\t\n\t\n\tcompilation.$init = function(){\n\t\tfor (var i=0; i<construct.length; i++)\n\t\t\tconstruct[i].apply(this, arguments);\n\t};\n\tif (compilation.$skin)\n\t\tcompilation.$skin();\n\n\tvar result = function(config){\n\t\tthis.$ready=[];\n\t\tassert(this.$init,\"object without init method\");\n\t\tthis.$init(config);\n\t\tif (this._parseSettings)\n\t\t\tthis._parseSettings(config, this.defaults);\n\t\tfor (var i=0; i < this.$ready.length; i++)\n\t\t\tthis.$ready[i].call(this);\n\t};\n\tresult.prototype = compilation;\n\t\n\tcompilation = origins = null;\n\treturn result;\n};\n\nattachEvent(\"onClick\", function(e){\n\tconst element = $$(e);\n\n\tif (element && element.touchable){\n\t\tuse(\"UIManager\").applyChanges(element);\n\n\t\tif (element.config.disabled) return;\n\n\t\tlet css = \"\";\n\t\tlet trg = e.target;\n\t\tif (trg.className && trg.className.toString().indexOf(\"webix_view\") === 0) return;\n\n\t\tif (element)\n\t\t\tuse(\"UIManager\")._focus_action(element);\n\n\t\t//reaction on custom css elements in buttons\n\t\t//loop through all parents\n\t\twhile (trg && trg.parentNode){\n\t\t\tif (trg.getAttribute){\n\t\t\t\tif (trg.getAttribute(/*@attr*/\"view_id\"))\n\t\t\t\t\tbreak;\n\n\t\t\t\tcss = trg.className;\n\t\t\t\tif (css){\n\t\t\t\t\tcss = css.toString().split(\" \");\n\t\t\t\t\tfor (let i =0; i<css.length; i++){\n\t\t\t\t\t\tif (element.on_click[css[i]]){\n\t\t\t\t\t\t\tconst res = element.on_click[css[i]].call(element,e,element._settings.id,trg);\n\t\t\t\t\t\t\tif (res === false)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttrg = trg.parentNode;\n\t\t}\n\n\t\tif (element._settings.click){\n\t\t\tconst code = toFunctor(element._settings.click, element.$scope);\n\t\t\tif (code && code.call) code.call(element, element._settings.id, e);\n\t\t}\n\n\t\tlet popup = element._settings.popup;\n\t\tif (popup && !element._settings.readonly && !e.longtouch_drag){\n\t\t\tpopup = $$(popup);\n\t\t\tassert(popup, \"Unknown popup\");\n\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tconst node = element.getInputNode() || element.getNode();\n\n\t\t\t\tpopup._settings.master = element._settings.id;\n\t\t\t\tpopup.show(node, null, true);\n\n\t\t\t\tnode.setAttribute(\"aria-expanded\", true);\n\t\t\t\tif (popup._settings.id != element._settings.suggest)\t// not a suggest\n\t\t\t\t\tuse(\"UIManager\").setFocus(popup.getBody());\n\t\t\t}\n\t\t}\n\n\t\telement.callEvent(\"onItemClick\", [element._settings.id, e]);\n\t}\n});\n\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\tvar mod = window.webix_on_core_ready({ proto, protoUI});\n\t\tproto = mod.proto;\n\t\tprotoUI = mod.protoUI;\n\t}\n}\n\nexport { ui, proto, protoUI, $$ };","import i18n from \"../webix/i18n\";\nimport rules from \"../webix/rules\";\nimport template from \"../webix/template\";\n\nimport {toNode, isUndefined} from \"../webix/helpers\";\nimport { event } from \"../webix/htmlevents\";\nimport {define} from \"../services\";\nimport Promise from \"../thirdparty/promiz\";\nimport {_uid} from \"../ui/helpers\";\nimport {create, addCss, removeCss, preventEvent} from \"../webix/html\";\n\nfunction callback(config, result){\n\t// prompt\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tif (result === false){\n\t\t\tconfig._promise.reject();\n\t\t} else {\n\t\t\tconst inputBox = config._box.querySelector(\".webix_popup_input\");\n\t\t\tconst input = inputBox.querySelector(\"input\");\n\t\t\tif (config.input.required && !input.value){\n\t\t\t\tconfig.input.invalid = true;\n\t\t\t\taddCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tresult = input.value || \"\";\n\t\t\t\tconfig._promise.resolve(result);\n\t\t\t}\n\t\t}\t\n\t}\n\n\t(config.type.indexOf(\"confirm\") != -1 && result === false) ? config._promise.reject() : config._promise.resolve(result);\n\n\tconst usercall = config.callback;\n\tif (usercall)\n\t\tusercall(result, config.details);\n\n\tmodalbox.hide(config.id);\n}\nfunction modal_key(e){\n\tconst order = modalbox.order;\n\tconst count = order.length;\n\tconst source = e.target;\n\n\tif (count > 0 && message.keyboard){\n\t\tconst code = e.which || e.keyCode;\n\t\tif(code != 13 && code != 32 && code != 27)\n\t\t\treturn;\n\n\t\tlet activeBox;\n\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tconst box = modalbox.pull[ order[i] ];\n\n\t\t\tif(box._box != source && box._box.contains(source) && code == 32) // ignore space inside input\n\t\t\t\treturn;\n\n\t\t\tif(box.container && box.container.contains(source)){\n\t\t\t\tactiveBox = box;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(!activeBox)\n\t\t\tactiveBox = modalbox.pull[ order[order.length-1] ];\n\n\t\tif (code == 13 || code == 32)\n\t\t\tcallback(activeBox, true);\n\t\telse if (code == 27)\n\t\t\tcallback(activeBox, false);\n\n\t\tpreventEvent(e);\n\t\treturn !(e.cancelBubble = true);\n\t}\n}\n\nevent(document, \"keydown\", modal_key, { capture: true });\n\t\nfunction modality(mode, container){\n\tvar node = container || document.body;\n\tvar cover;\n\tif(isUndefined(node.modality)){\n\t\tcover = create(\"DIV\", {\n\t\t\t\"class\":\"webix_modal_cover\",\n\t\t\tstyle:\"position:\"+(container ? \"absolute\" : \"fixed\")+\";\"\n\t\t});\n\t\tcover.onkeydown = modal_key;\n\n\t\tif(container){\n\t\t\tvar position = window.getComputedStyle(container).position;\n\t\t\tif(position != \"fixed\" && position != \"absolute\" && position != \"sticky\" && position != \"relative\")\n\t\t\t\tnode.style.position = \"relative\";\n\t\t}\n\t\tnode.appendChild(cover);\n\t\tnode.modality = 1;\n\t}\n\telse\n\t\tmode ? node.modality ++ : node.modality --;\n\n\t//trigger visibility only if necessary\n\tif((mode && node.modality === 1) || node.modality === 0){\n\t\tcover = cover || Array.prototype.slice.call(node.querySelectorAll(\".webix_modal_cover\")).filter(el => el.parentNode == node)[0];\n\n\t\tif(cover){\n\t\t\tif(!node.modality){\n\t\t\t\tcover.style.display = \"none\";\n\t\t\t\tremoveCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t\telse if(node.modality == 1){\n\t\t\t\tcover.style.display = \"inline-block\";\n\t\t\t\taddCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t}\n\t}\n\treturn cover;\n}\n\nfunction button(text, result, className){\n\treturn \"<div role='button' tabindex='0' aria-label='\"+text+\"' class='webix_popup_button\"+(className?(\" \"+className):\"\")+\"' result='\"+result+\"' ><div>\"+text+\"</div></div>\";\n}\n\nfunction input(config){\n\treturn \"<div tabindex='0' class='webix_popup_input webix_el_text\"+(config.required?\" webix_required\":\"\")+\"'><input value='\"+template.escape(config.value || \"\")+\"' placeholder='\"+template.escape(config.placeholder || \"\")+\"'></input></div>\";\n}\n\nfunction info(text){\n\tif (!t.area){\n\t\tt.area = document.createElement(\"DIV\");\n\t\tt.area.className = \"webix_message_area\";\n\t\tt.area.style[t.position]=\"5px\";\n\t\t\n\t\tdocument.body.appendChild(t.area);\n\t}\n\tt.area.setAttribute(\"role\", \"alert\");\n\tt.area.setAttribute(\"aria-atomic\", true);\n\tt.hide(text.id);\n\tvar message = document.createElement(\"DIV\");\n\tmessage.innerHTML = \"<div>\"+text.text+\"</div>\";\n\tmessage.className = \"webix_message webix_\" + text.type;\n\tmessage.onclick = function(){\n\t\tif (text) t.hide(text.id);\n\t\ttext = null;\n\t};\n\n\tif (t.position == \"bottom\" && t.area.firstChild)\n\t\tt.area.insertBefore(message,t.area.firstChild);\n\telse\n\t\tt.area.appendChild(message);\n\t\n\tif (text.expire > 0)\n\t\tt.timers[text.id]=window.setTimeout(function(){\n\t\t\tt.hide(text.id);\n\t\t}, text.expire);\n\n\t//styling for animation\n\tmessage.style.height = message.offsetHeight-2+\"px\";\n\n\tt.pull[text.id] = message;\n\tmessage = null;\n\n\treturn text.id;\n}\nfunction _boxStructure(config, ok, cancel, hasInput){\n\tvar box = document.createElement(\"DIV\");\n\tvar css = config.css ? \" \"+config.css : \"\";\n\tbox.className = \"webix_modal_box webix_\"+config.type+css;\n\tbox.setAttribute(\"webixbox\", 1);\n\tbox.setAttribute(\"role\", \"alertdialog\");\n\tbox.setAttribute(\"aria-label\", config.title || \"\");\n\tbox.setAttribute(\"tabindex\", \"0\");\n\n\tvar inner = \"\";\n\tif (config.width)\n\t\tbox.style.width = config.width+(rules.isNumber(config.width)?\"px\":\"\");\n\tif (config.height)\n\t\tbox.style.height = config.height+(rules.isNumber(config.height)?\"px\":\"\");\n\tif (config.title)\n\t\tinner += \"<div class=\\\"webix_popup_title\\\">\"+config.title+\"</div>\";\n\tinner += \"<div class=\\\"webix_popup_text\"+(hasInput?\" webix_popup_label\":\"\")+\"\\\"><span>\"+(config.content?\"\":(config.text || \"\"))+\"</span></div>\";\n\tinner += \"<div  class=\\\"webix_popup_controls\\\">\";\n\tif (hasInput)\n\t\tinner += input(config.input);\n\tif (cancel)\n\t\tinner += button(config.cancel || i18n.message.cancel, false);\n\tif (ok)\n\t\tinner += button(config.ok || i18n.message.ok, true,\"confirm\");\n\tif (config.buttons && !ok && !cancel){\n\t\tfor (var i=0; i<config.buttons.length; i++)\n\t\t\tinner += button(config.buttons[i],i);\n\t}\n\tinner += \"</div>\";\n\tbox.innerHTML = inner;\n\n\tif (config.content){\n\t\tvar node = config.content;\n\t\tif (typeof node == \"string\") \n\t\t\tnode = document.getElementById(node);\n\t\tif (node.style.display == \"none\")\n\t\t\tnode.style.display = \"\";\n\t\tbox.childNodes[config.title?1:0].appendChild(node);\n\t}\n\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tconst inputBox = box.querySelector(\".webix_popup_input\");\n\t\tconst input = inputBox.querySelector(\"input\");\n\t\tinput.oninput = function(){\n\t\t\tif (config.input.invalid){\n\t\t\t\tremoveCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\tconfig.input.invalid = false;\n\t\t\t}\n\t\t};\n\t}\n\n\tbox.onclick = function(e){\n\t\tvar source = e.target;\n\t\tif (!source.className) source = source.parentNode;\n\t\tif (source.className.indexOf(\"webix_popup_button\")!=-1){\n\t\t\tlet result = source.getAttribute(\"result\");\n\t\t\tresult = (result == \"true\")||(result == \"false\"?false:result);\n\t\t\tcallback(config, result);\n\t\t}\n\t\te.cancelBubble = true;\n\t};\n\tconfig._box = box;\n\treturn box;\n}\n\nmodalbox.pull = {};\nmodalbox.order = [];\n\nfunction _createBox(config, ok, cancel, hasInput){\n\tconst box = config.tagName ? config : _boxStructure(config, ok, cancel, hasInput);\n\tconst container = config.container;\n\n\tconst containerWidth = container ? container.offsetWidth : (window.innerWidth||document.documentElement.offsetWidth);\n\tconst containerHeight = container ? container.offsetHeight : (window.innerHeight||document.documentElement.offsetHeight);\n\tconst containerLeft = container ? container.scrollLeft : 0;\n\tconst containerTop = container ? container.scrollTop : 0;\n\n\tif(config.container)\n\t\tbox.style.position = \"absolute\";\n\n\ttoNode((config.container || document.body).appendChild(box));\n\tconst cover = modality(true, config.container);\n\n\tconst x = config.left||Math.abs(containerLeft+Math.floor((containerWidth - box.offsetWidth)/2));\n\tconst y = config.top||Math.abs(containerTop+Math.floor((containerHeight - box.offsetHeight)/2));\n\tif (config.position == \"top\")\n\t\tbox.style.top = \"-3px\";\n\telse{\n\t\tbox.style.top = y+\"px\";\n\t\tif(cover){\n\t\t\tcover.style.top = containerTop+\"px\";\n\t\t\tcover.style.left = containerLeft+\"px\";\n\t\t}\n\t}\n\tbox.style.left = x+\"px\";\n\t//necessary for IE only\n\tbox.onkeydown = modal_key;\n\n\tif(hasInput)\n\t\tbox.querySelector(\".webix_popup_input input\").focus();\n\telse\n\t\tbox.focus();\n\n\tif (!config.id)\n\t\tconfig.id = _uid(\"modalbox\");\n\telse if(modalbox.pull[config.id]){\n\t\tmodalbox.hide(config.id);\n\t}\n\n\tmodalbox.order.push(config.id);\n\tmodalbox.pull[config.id] = config;\n\n\tconfig._promise = Promise.defer();\n\treturn config._promise;\n}\n\nfunction alertPopup(config){\n\treturn _createBox(config, true);\n}\nfunction confirmPopup(config){\n\treturn _createBox(config, true, true);\n}\nfunction boxPopup(config){\n\treturn _createBox(config);\n}\nfunction promptPopup(config){\n\treturn _createBox(config, true, true, true);\n}\nfunction box_params(text, type, callback){\n\tif (typeof text != \"object\"){\n\t\tif (typeof type == \"function\"){\n\t\t\tcallback = type;\n\t\t\ttype = \"\";\n\t\t}\n\t\ttext = {text:text, type:type, callback:callback };\n\t}\n\treturn text;\n}\nfunction params(text, type, expire, id){\n\tif (typeof text != \"object\")\n\t\ttext = {text:text, type:type, expire:expire, id:id};\n\ttext.id = text.id||_uid(\"message\");\n\ttext.expire = text.expire||t.expire;\n\treturn text;\n}\nexport function alert(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn alertPopup(text);\n}\nexport function confirm(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"confirm\";\n\treturn confirmPopup(text);\n}\n\nexport function modalbox(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn boxPopup(text);\n}\n\nexport function prompt(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"prompt\";\n\ttext.input = text.input || {};\n\treturn promptPopup(text);\n}\n\nmodalbox.hide = function(id){\n\tif(id && modalbox.pull[id]){\n\t\tvar node = modalbox.pull[id]._box;\n\t\tif(node){\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodalbox.order.splice(modalbox.order.indexOf(id), 1);\n\t\t\tmodality(false, modalbox.pull[id].container);\n\t\t\tdelete modalbox.pull[id];\n\t\t}\n\t}\n};\n\nmodalbox.hideAll = function(){\n\tfor (var id in modalbox.pull){\n\t\tthis.hide(id);\n\t}\n};\n\nexport function message(text, type, expire, id){ //eslint-disable-line\n\ttext = params.apply(this, arguments);\n\ttext.type = text.type||\"info\";\n\n\tvar subtype = text.type.split(\"-\")[0];\n\tswitch (subtype){\n\t\tcase \"alert\":\n\t\t\treturn alertPopup(text);\n\t\tcase \"confirm\":\n\t\t\treturn confirmPopup(text);\n\t\tcase \"modalbox\":\n\t\t\treturn boxPopup(text);\n\t\tcase \"prompt\":\n\t\t\treturn promptPopup(text);\n\t\tdefault:\n\t\t\treturn info(text);\n\t}\n}\n\nvar t = message;\nt.expire = 4000;\nt.keyboard = true;\nt.position = \"top\";\nt.pull = {};\nt.timers = {};\n\nt.hideAll = function(){\n\tfor (var key in t.pull)\n\t\tt.hide(key);\n};\nt.hide = function(id){\n\tvar obj = t.pull[id];\n\tif (obj && obj.parentNode){\n\t\twindow.setTimeout(function(){\n\t\t\tobj.parentNode.removeChild(obj);\n\t\t\tobj = null;\n\t\t},2000);\n\t\t//styling for animation\n\t\tobj.style.height = 0;\n\t\tobj.className+=\" hidden\";\n\t\tt.area.removeAttribute(\"role\");\n\t\t\n\t\tif(t.timers[id])\n\t\t\twindow.clearTimeout(t.timers[id]);\n\t\tdelete t.pull[id];\n\t}\n};\n\n//override circualr dependencies\ndefine(\"message\", message);\nexport default modalbox;","import {ui, $$} from \"../ui/core\";\nimport {isUndefined} from \"../webix/helpers\";\nimport {create} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\n\nconst fullscreen = {\n\tset:function(view, config){\n\t\tconfig = config || {};\n\n\t\tif(this._view)\n\t\t\tthis.exit();\n\n\t\tif($$(view))\n\t\t\tview = $$(view);\n\t\telse{\n\t\t\tif(typeof view == \"string\")\n\t\t\t\tview = document.getElementById(view);\n\t\t\tif(view instanceof Element)\n\t\t\t\tview = {$view: view, $html: true};\n\t\t\tassert(view, \"Incorrect view for fullscreen mode\");\n\t\t}\n\n\t\tthis._view = view;\n\t\tthis._pos = this._setPosition();\n\n\t\tconst viewConfig = view.config;\n\t\tif(view.setPosition){\n\t\t\tviewConfig.fullscreen = true;\n\t\t\tview.resize();\n\n\t\t\treturn view;\n\t\t}\n\t\telse{\n\t\t\tthis._fullscreen = ui({\n\t\t\t\tview:\"window\",\n\t\t\t\thead: this._getHeadConfig(config),\n\t\t\t\tcss:config.css||\"\",\n\t\t\t\tfullscreen:true,\n\t\t\t\tborderless:true,\n\t\t\t\t//better resize logic\n\t\t\t\tbody:{rows:[]}\n\t\t\t});\n\n\t\t\tif(viewConfig)\n\t\t\t\tthis._sizes = {\n\t\t\t\t\twidth: viewConfig.width, minWidth: viewConfig.minWidth, maxWidth: viewConfig.maxWidth,\n\t\t\t\t\theight: viewConfig.height, minHeight: viewConfig.minHeight, maxHeight: viewConfig.maxHeight\n\t\t\t\t};\n\n\t\t\tif(view.getParentView && view.getParentView()){\n\t\t\t\tthis._parent = view.getParentView();\n\n\t\t\t\tif(this._parent.index){\n\t\t\t\t\tthis._pos.index = this._parent.index(view);\n\t\t\t\t\tthis._pos.active = this._parent.getActiveId ? this._parent.getActiveId() == viewConfig.id : false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis._parent = view.$view.parentNode;\n\t\t\t\tthis._pos.node = create(\"div\");\n\n\t\t\t\t//save old position\n\t\t\t\tthis._parent.replaceChild(this._pos.node, view.$view);\n\t\t\t}\n\n\t\t\tthis._fullscreen.getBody().addView(view.$html ? {view:\"template\", content:view.$view, css:\"webix_fullscreen_html\"} : view);\n\n\t\t\tthis._fullscreen.show();\n\t\t\tthis._setSizes(view);\n\n\t\t\treturn this._fullscreen;\n\t\t}\n\t},\n\texit:function(){\n\t\tif(this._view){\n\t\t\tconst viewConfig = this._view.config;\n\t\t\tthis._setPosition(true);\n\t\t\tif(this._view.setPosition){\n\t\t\t\tviewConfig.fullscreen = false;\n\t\t\t\tthis._view.resize();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(this._parent instanceof Element){\n\t\t\t\t\tthis._view._parent_cell = null;\n\t\t\t\t\tif(this._view._set_inner)\n\t\t\t\t\t\tthis._view._set_inner(this._view.config);\n\t\t\t\t\tthis._parent.replaceChild(this._view.$view, this._pos.node);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(!isUndefined(this._pos.index)){\n\t\t\t\t\t\tthis._parent.addView(this._view, this._pos.index);\n\t\t\t\t\t\tif(this._pos.active)\n\t\t\t\t\t\t\tthis._view.show(false, false);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tthis._view._parent_cell = this._parent;\n\t\t\t\t\t\tthis._parent._replace(this._view);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._setSizes(this._view, this._sizes);\n\n\t\t\t\t//prevent view destruction (with layout)\n\t\t\t\tif(!this._view.$html)\n\t\t\t\t\tthis._fullscreen.getBody()._cells = [];\n\n\t\t\t\t//we can't set head false with replace, so we need to close win\n\t\t\t\tthis._fullscreen.close();\n\t\t\t}\n\t\t\tthis._clearValues();\n\t\t}\n\t},\n\t_clearValues:function(){\n\t\tdelete this._parent;\n\t\tdelete this._view;\n\t\tdelete this._sizes;\n\t\tdelete this._pos;\n\t\tdelete this._fullscreen;\n\t},\n\t_setPosition(restore){\n\t\tconst view = this._view;\n\t\tconst oldStyles = {};\n\n\t\tif(view.setPosition){\n\t\t\tif(restore)\n\t\t\t\tview.setPosition(this._pos.left, this._pos.top);\n\t\t\telse{\n\t\t\t\toldStyles.left = view.config.left;\n\t\t\t\toldStyles.top = view.config.top;\n\t\t\t\tview.setPosition(0,0);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconst rules = [\"position\", \"top\", \"bottom\", \"left\", \"right\"];\n\t\t\tconst style = view.$view.style;\n\n\t\t\trules.forEach(rule => {\n\t\t\t\tif(restore)\n\t\t\t\t\tstyle[rule] = this._pos[rule];\n\t\t\t\telse{\n\t\t\t\t\toldStyles[rule] = style[rule];\n\t\t\t\t\tstyle[rule] = rule == \"position\" ? \"relative\" : 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn oldStyles;\n\t},\n\t_setSizes:function(view, sizes){\n\t\tif(!view.$html){\n\t\t\tsizes = sizes || {height:0, minHeight:0, maxHeight:0, width:0, minWidth:0, maxWidth:0};\n\t\t\tview.define(sizes);\n\t\t\tview.resize();\n\t\t}\n\t},\n\t_getHeadConfig:function(config){\n\t\tif(config.head === false || typeof config.head == \"object\")\n\t\t\treturn config.head;\n\t\telse{\n\t\t\treturn {\n\t\t\t\tcols:[\n\t\t\t\t\t{template:config.head||\"\", type:\"header\", borderless:true},\n\t\t\t\t\t{view:\"icon\", icon:\"wxi-close\", click:()=>{\n\t\t\t\t\t\tthis.exit();\n\t\t\t\t\t}}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport default fullscreen;","import ready from \"../webix/ready\";\n\nimport {assert} from \"../webix/debug\";\nimport {event} from \"../webix/htmlevents\";\nimport {delay,uid,_power_array,isUndefined,isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {locate,preventEvent} from \"../webix/html\";\nimport {modalbox} from \"../webix/message\";\nimport fullscreen from \"../webix/fullscreen\";\n\nimport {$$} from \"../ui/core\";\nimport state from \"../core/state\";\n\nimport {define} from \"../services\";\n\n\nconst UIManager = {\n\t_view: null,\n\t_hotkeys: {},\n\t_focus_time:0,\n\t_controls: {\n\t\t\"esc\": \"escape\",\n\t\t\"up\": \"arrowup\",\n\t\t\"down\": \"arrowdown\",\n\t\t\"left\": \"arrowleft\",\n\t\t\"right\": \"arrowright\",\n\t\t\"pgdown\": \"pagedown\",\n\t\t\"pgup\": \"pageup\",\n\t\t\"space\": \" \",\n\t\t\"multiply\": \"*\",\n\t\t\"add\": \"+\",\n\t\t\"subtract\": \"-\",\n\t\t\"decimal\": \".\",\n\t\t\"divide\": \"/\",\n\t\t\"pausebreak\": \"pause\",\n\t\t\"5numlocked\": \"clear\"\n\t},\n\t_keyboard_layouts: {\n\t\tQWERTY: {\n\t\t\t\"KeyA\": \"a\", \"KeyB\": \"b\", \"KeyC\": \"c\", \"KeyD\": \"d\", \"KeyE\": \"e\",\n\t\t\t\"KeyF\": \"f\", \"KeyG\": \"g\", \"KeyH\": \"h\", \"KeyI\": \"i\", \"KeyJ\": \"j\",\n\t\t\t\"KeyK\": \"k\", \"KeyL\": \"l\", \"KeyM\": \"m\", \"KeyN\": \"n\", \"KeyO\": \"o\",\n\t\t\t\"KeyP\": \"p\", \"KeyQ\": \"q\", \"KeyR\": \"r\", \"KeyS\": \"s\", \"KeyT\": \"t\",\n\t\t\t\"KeyU\": \"u\", \"KeyV\": \"v\", \"KeyW\": \"w\", \"KeyX\": \"x\", \"KeyY\": \"y\",\n\t\t\t\"KeyZ\": \"z\",\n\n\t\t\t\"Digit0\": \"0\", \"Digit1\": \"1\", \"Digit2\": \"2\", \"Digit3\": \"3\", \"Digit4\": \"4\",\n\t\t\t\"Digit5\": \"5\", \"Digit6\": \"6\", \"Digit7\": \"7\", \"Digit8\": \"8\", \"Digit9\": \"9\",\n\t\t\t\n\t\t\t\"Numpad0\": \"0\", \"Numpad1\": \"1\", \"Numpad2\": \"2\", \"Numpad3\": \"3\", \"Numpad4\": \"4\",\n\t\t\t\"Numpad5\": \"5\", \"Numpad6\": \"6\", \"Numpad7\": \"7\", \"Numpad8\": \"8\", \"Numpad9\": \"9\",\n\t\t\t\"NumpadAdd\": \"add\", \"NumpadSubtract\": \"subtract\", \"NumpadMultiply\": \"multiply\",\n\t\t\t\"NumpadDivide\": \"divide\", \"NumpadDecimal\": \"decimal\", \"NumpadEnter\": \"enter\",\n\t\t\t\n\t\t\t\"ControlLeft\": \"ctrl\", \"ControlRight\": \"ctrl\",\n\t\t\t\"AltLeft\": \"alt\", \"AltRight\": \"alt\",\n\t\t\t\"ShiftLeft\": \"shift\", \"ShiftRight\": \"shift\",\n\t\t\t\"MetaLeft\": \"meta\", \"MetaRight\": \"meta\",\n\t\t\t\n\t\t\t\"Backquote\": \"`\", \"Backslash\": \"\\\\\", \"Semicolon\": \";\", \"Quote\": \"'\",\n\t\t\t\"Comma\": \",\", \"Period\": \".\", \"Slash\": \"/\", \"BracketLeft\": \"[\",\n\t\t\t\"BracketRight\": \"]\", \"Minus\": \"-\", \"Equal\": \"=\", \"IntlBackslash\": \"\\\\\",\n\t\t\t\"IntlRo\": \"\\\\\", \"IntlYen\": \"\\\\\",\n\t\t},\n\t\tQWERTZ: {\n\t\t\t\"KeyY\": \"z\", \"KeyZ\": \"y\", \n\t\t\t\"Minus\": \"ß\", \"Equal\": \"´\", \"BracketLeft\": \"ü\",\n\t\t\t\"BracketRight\": \"+\", \"Semicolon\": \"ö\", \"Quote\": \"ä\",\n\t\t\t\"Backslash\": \"#\", \"IntlBackslash\": \"<\"\n\t\t},\n\t\tAZERTY: {\n\t\t\t\"KeyQ\": \"a\", \"KeyA\": \"q\", \"KeyZ\": \"w\", \"KeyW\": \"z\",\n\t\t\t\"KeyM\": \",\", \"Comma\": \";\", \"Period\": \":\", \"Semicolon\": \"m\",\n\t\t\t\"Digit1\": \"&\", \"Digit2\": \"é\", \"Digit3\": \"\\\"\", \"Digit4\": \"'\",\n\t\t\t\"Digit5\": \"(\", \"Digit6\": \"-\", \"Digit7\": \"è\", \"Digit8\": \"_\",\n\t\t\t\"Digit9\": \"ç\", \"Digit0\": \"à\", \"Minus\": \")\", \"Equal\": \"=\",\n\t\t\t\"BracketLeft\": \"^\", \"BracketRight\": \"$\", \"Backslash\": \"*\",\n\t\t\t\"Quote\": \"ù\", \"Slash\": \"!\", \"Backquote\": \"²\",\n\t\t\t\"IntlBackslash\": \"<\", \"IntlRo\": \"µ\"\n\t\t}\n\t},\n\t_inputs:{\n\t\t\"input\": 1,\n\t\t\"button\":1,\n\t\t\"textarea\":1,\n\t\t\"select\":1\n\t},\n\t_enable: function() {\n\t\t// attaching events here\n\t\tevent(document, \"keydown\", this._keypress, { bind:this });\n\t\tevent(document, \"compositionstart\", ()=> this._startComposition());\n\t\tevent(document, \"compositionend\", ()=> this._endComposition());\n\t\tevent(document.body, \"click\", this._focus_click, { capture:true, bind:this });\n\t\tevent(document.body, \"focus\", this._focus_tab, { capture:true, bind:this });\n\n\t\tstate.destructors.push({obj:this});\n\t},\n\t_startComposition: function(){\n\t\tclearTimeout(this._composition);\n\t\tthis._composition = true;\n\t},\n\t_endComposition: function(){\n\t\t//in some browsers compositionEnd fires before the keyDown event\n\t\tthis._composition = delay(() => delete this._composition);\n\t},\n\tdestructor: function(){\n\t\tUIManager._view = null;\n\t},\n\tgetFocus: function() {\n\t\treturn this._view;\n\t},\n\t_focus_action:function(view){\n\t\tthis._focus_was_there = this._focus_was_there || view._settings.id;\n\t},\n\tsetFocus: function(view, only_api, tab){\n\t\t//view can be empty\n\t\tview = $$(view);\n\t\t//unfocus if view is hidden\n\t\tif (view && !view.$view) view = null;\n\n\t\t//store last click time, it is necessary to prevent refocusing\n\t\t//for example when user moves focus from onclick handler somewher\n\t\t//and we want to prevent autofocusing, when event will reach document.body\n\t\tthis._focus_time = state._focus_time = new Date();\n\n\t\tif (this._view === view) return true;\n\t\tif (this._view && this._view.callEvent)\n\t\t\tthis._view.callEvent(\"onBlur\", [this._view]);\n\n\t\tif (view && view.callEvent){\n\t\t\tview.callEvent(\"onFocus\", [view, this._view]);\n\t\t\tif(tab) view.callEvent(\"onTabFocus\", [view, this._view]);\n\t\t}\n\t\tcallEvent(\"onFocusChange\", [view, this._view]);\n\n\t\tif (this._view && this._view.blur && !only_api) this._view.blur();\n\t\tthis._view = view;\n\t\tif (view && view.focus && !only_api) view.focus();\n\t\treturn true;\n\t},\n\tapplyChanges: function(element){\n\t\tvar view = this.getFocus();\n\t\tif (view && view != element && view._applyChanges)\n\t\t\tview._applyChanges(element);\n\t},\n\thasFocus: function(view) {\n\t\treturn (view === this._view) ? true : false;\n\t},\n\t_focus: function(e){\n\t\tfor(let i = 0; i < modalbox.order.length; i++){\n\t\t\tif(modalbox.pull[ modalbox.order[i] ]._box.contains(e.target))\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar view = locate(e, /*@attr*/\"view_id\") || this._focus_was_there;\n\n\t\t//if html was repainted we can miss the view, so checking last processed one\n\t\tview = $$(view);\n\t\tthis._focus_was_there = null;\n\n\t\t//set timer, to fix issue with Android input focusin\n\t\tstate._focus_time = new Date();\n\n\t\tif (view == this._view) return true;\n\n\t\tif (view){\n\t\t\tif (this.canFocus(view)){\n\t\t\t\t// keep form focus\n\t\t\t\tif (this._view && this._view.getFormView() == view && this._view.focus)\n\t\t\t\t\tthis._view.focus();\n\t\t\t\telse{\n\t\t\t\t\t//radio view with scroll: focus changes onClick event target into radiogroup, so we need to readjust the focus target before it happens\n\t\t\t\t\tif (e.target.type == \"radio\" || e.target.getAttribute(\"role\") == \"radio\")\n\t\t\t\t\t\te.target.setAttribute(\"tabindex\", \"0\");\n\n\t\t\t\t\tthis.setFocus(view);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//remove focus from an unreachable view\n\t\t\telse if (view.$view.contains(e.target))\n\t\t\t\te.target.blur();\n\t\t}\n\t\telse this.setFocus(null);\n\n\t\treturn true;\n\t},\n\t_focus_click:function(e){\n\t\t// if it was onfocus/onclick less then 100ms behore then we ignore it\n\t\tif ((new Date())-this._focus_time < 100) {\n\t\t\tthis._focus_was_there = null;\n\t\t\treturn false;\n\t\t}\n\t\treturn this._focus(e);\n\t},\n\t_focus_tab: function(e){\n\t\tif(!this._inputs[e.target.nodeName.toLowerCase()])\n\t\t\treturn false;\n\t\treturn this._focus(e);\n\t},\n\t_top_modal: function(view){\n\t\tconst modality = state._modality;\n\t\tif (!modality.length) return true;\n\n\t\tconst top = this._getTop(view);\n\t\treturn (top.$view.style.zIndex||0) >= Math.max(...modality);\n\t},\n\t_getTop: function(view){\n\t\tlet top = view.queryView(view => !view.getParentView(), \"parent\") || view;\n\n\t\tconst insideContainer = $$(top.$view.parentNode); //container inside view (like filter in query view list)\n\t\tif(insideContainer)\n\t\t\ttop = this._getTop(insideContainer);\n\n\t\treturn top;\n\t},\n\tcanFocus:function(view){\n\t\tif(document.body.modality || view.$view.modality || view.queryView(view => view.$view.modality, \"parent\")) //modalbox\n\t\t\treturn false;\n\t\treturn view.isVisible() && view.isEnabled() && !view.config.disabled && this._top_modal(view) && !view.queryView({disabled:true}, \"parent\");\n\t},\n\n\t_moveChildFocus: function(check_view){\n\t\tvar focus = this.getFocus();\n\t\t//we have not focus inside of closing item\n\t\tif (check_view && !this._is_child_of(check_view, focus))\n\t\t\treturn false;\n\n\t\tif (!this._focus_logic(\"getPrev\", check_view))\n\t\t\tthis._view = null;\n\t},\n\t_is_child_of: function(parent, child) {\n\t\tif (!parent) return false;\n\t\tif (!child) return false;\n\t\twhile (child) {\n\t\t\tif (child === parent) return true;\n\t\t\tchild = child.getParentView();\n\t\t}\n\t\treturn false;\n\t},\n\t_keypress_timed:function(){\n\t\tif (this && this.callEvent)\n\t\t\tthis.callEvent(\"onTimedKeyPress\",[]);\n\t},\n\t_keypress: function(e) {\n\t\tlet code = e.which || e.keyCode;\n\n\t\t// processing or not found\n\t\tif (code == 229 || code == 0) return;\n\n\t\t// numpad keys\n\t\tif (code > 95 && code < 106) code -= 48;\n\n\t\tconst view = this.getFocus();\n\t\tif (view && view.callEvent) {\n\t\t\tif (view.callEvent(\"onKeyPress\", [code, e]) === false)\n\t\t\t\tpreventEvent(e);\n\t\t\tif (view.hasEvent(\"onTimedKeyPress\")){\n\t\t\t\tclearTimeout(view._key_press_timeout);\n\t\t\t\tview._key_press_timeout = delay(this._keypress_timed, view, [], (view._settings.keyPressTimeout||250));\n\t\t\t}\n\t\t}\n\n\t\tif (this._check_keycode(e) === false) {\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t// dir - getNext or getPrev\n\t_focus_logic: function(dir, focus) {\n\t\tvar next = focus||this.getFocus();\n\t\tif(next){\n\t\t\tdir = dir || \"getNext\";\n\t\t\tvar start = next;\n\t\t\tvar marker = uid();\n\n\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\tnext = this[dir](next);\n\t\t\t\t// view with focus ability\n\t\t\t\tif (next && this.canFocus(next))\n\t\t\t\t\treturn this.setFocus(next);\n\n\t\t\t\t// elements with focus ability not found\n\t\t\t\tif (next === start || next.$fmarker == marker){\n\t\t\t\t\tif(focus)\n\t\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t//prevents infinity loop\n\t\t\t\tnext.$fmarker = marker;\n\t\t\t}\n\t\t}\n\t},\n\t_tab_logic:function(view, e){\n\t\tvar mode = !e.shiftKey;\n\t\tif (view && view._custom_tab_handler && !view._custom_tab_handler(mode, e))\n\t\t\treturn false;\n\n\t\tif (view && view._in_edit_mode){\n\t\t\tif (view.editNext)\n\t\t\t\treturn view.editNext(mode);\n\t\t\telse if (view.editStop){\n\t\t\t\tview.editStop();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else\n\t\t\tdelay(function(){\n\t\t\t\tview = $$(document.activeElement);\n\t\t\t\tif(view && !UIManager.canFocus(view))\n\t\t\t\t\treturn UIManager._focus_logic(mode ? \"getNext\" : \"getPrev\", view);\n\t\t\t\tUIManager.setFocus(view, true, true);\n\t\t\t});\n\t},\n\tgetTop: function(id) {\n\t\tvar next, view = $$(id);\n\n\t\twhile (view && (next = view.getParentView()))\n\t\t\tview = next;\n\t\treturn view;\n\t},\n\n\tgetNext: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//tab to first children\n\t\tif (cells.length && !_inner_call)\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn cells[i];\n\n\t\t//unique case - single view without child and parent\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells.length){\n\t\t\tvar index = _power_array.find.call(p_cells, view)+1;\n\t\t\twhile (index < p_cells.length) {\n\t\t\t\t//next visible child\n\t\t\t\tif (this.canFocus(p_cells[index])) \n\t\t\t\t\treturn p_cells[index];\n\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} \n\n\t\t//sibling of parent\n\t\treturn this.getNext(parent, true);\n\t},\n\n\tgetPrev: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//last child of last child\n\t\tif (cells.length && _inner_call)\n\t\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn this.getPrev(cells[i], true);\n\n\t\tif (_inner_call && this.canFocus(view)) return view;\n\n\t\t//fallback from top to bottom\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn this.canFocus(view) ? this.getPrev(view, true) : view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells) {\n\t\t\tvar index = _power_array.find.call(p_cells, view)-1;\n\t\t\twhile (index >= 0) {\n\t\t\t\tif (this.canFocus(p_cells[index]))\n\t\t\t\t\treturn this.getPrev(p_cells[index], true);\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getPrev(parent, true);\n\t},\n\taddHotKey: function(keys, handler, view) {\n\t\tassert(handler, \"Hot key handler is not defined\");\n\t\tconst code = this._parse_keys(keys);\n\n\t\tif (!view) view = null;\n\t\tif (!this._hotkeys[code]) this._hotkeys[code] = [];\n\t\tthis._hotkeys[code].push({ handler, view });\n\n\t\treturn keys;\n\t},\n\tremoveHotKey: function(keys, func, view){\n\t\tconst code = this._parse_keys(keys);\n\t\tif (!func && !view)\n\t\t\tdelete this._hotkeys[code];\n\t\telse {\n\t\t\tvar t = this._hotkeys[code];\n\t\t\tif (t){\n\t\t\t\tfor (var i = t.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (view && t[i].view !== view) continue;\n\t\t\t\t\tif (func && t[i].handler !== func) continue;\n\t\t\t\t\tt.splice(i,1);\n\t\t\t\t}\n\t\t\t\tif (!t.length)\n\t\t\t\t\tdelete this._hotkeys[code];\n\t\t\t}\n\n\t\t}\n\t},\n\t_get_key(e) {\n\t\t// key can be undefined (browser autofill)\n\t\tif (!e.key) return \"\";\n\n\t\t// naive check for QWERTZ and AZERTY layouts\n\t\t// we are handling QWERTY/QWERTZ/AZERTY layouts only, as they are most common\n\t\tconst key = this._check_keyboard_layout(e) ? e.key.toLowerCase() : this._normalize_key_code(e);\n\t\treturn this._controls[key] || key;\n\t},\n\t_normalize_key_code(e) {\n\t\t// https://w3c.github.io/uievents-code/\n\t\t// https://w3c.github.io/uievents-code/#key-alphanumeric-section\n\t\t// convert key code to layout-agnostic key names (QWERTY)\n\t\t// special keys not in the default layout are not converted (fallback to e.key)\n\t\treturn this._keyboard_layouts[\"QWERTY\"][e.code] || e.key.toLowerCase();\n\t},\n\t_check_keyboard_layout(e) {\n\t\treturn this._keyboard_layouts[\"QWERTZ\"][e.code] === e.key.toLowerCase() || this._keyboard_layouts[\"AZERTY\"][e.code] === e.key.toLowerCase();\n\t},\n\t_keycode: function(key, ctrl, shift, alt, meta) {\n\t\treturn key+\"_\"+[\"\", (ctrl ? \"1\" : \"0\"), (shift ? \"1\" : \"0\"), (alt ? \"1\" : \"0\"), (meta ? \"1\" : \"0\")].join(\"\");\n\t},\n\t_check_keycode: function(e){\n\t\tconst keyCode = e.which || e.keyCode;\n\t\tconst is_any = !e.ctrlKey && !e.altKey && !e.metaKey && (keyCode!=9)&&(keyCode!=27)&&(keyCode!=13);\n\t\tconst code = this._keycode(this._get_key(e), e.ctrlKey, e.shiftKey, e.altKey, e.metaKey);\n\n\t\tvar focus = this.getFocus();\n\t\tif (this._hotkeys[code])\n\t\t\treturn  this._process_calls(this._hotkeys[code], focus, e);\n\t\telse if (is_any && this._hotkeys[\"any_0000\"])\n\t\t\treturn  this._process_calls(this._hotkeys[\"any_0000\"], focus, e);\n\n\t\treturn true;\n\t},\n\t_process_calls:function(calls, focus, e){\n\t\tfor (var i = 0; i < calls.length; i++) {\n\t\t\tvar key = calls[i];\n\t\t\tif ((key.view !== null) &&\t\t//common hot-key\n\t\t\t\t(focus !== key.view) &&\t\t//hot-key for current view\n\t\t\t\t//hotkey for current type of view\n\t\t\t\t(typeof(key.view) !== \"string\" || !focus || focus.name !== key.view)) continue;\n\n\t\t\tvar temp_result = key.handler(focus, e);\n\t\t\tif (!!temp_result === temp_result) return temp_result;\n\t\t}\n\t\treturn true;\n\t},\n\t_parse_keys: function(keys) {\n\t\tvar controls = this._controls;\n\t\tvar parts = keys.toLowerCase().split(/[ +\\-_]/);\n\t\tvar ctrl, shift, alt, meta;\n\t\tctrl = shift = alt = meta = 0;\n\t\tvar letter = \"\";\n\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\tif (parts[i] === \"ctrl\") ctrl = 1;\n\t\t\telse if (parts[i] === \"shift\") shift = 1;\n\t\t\telse if (parts[i] === \"alt\") alt = 1;\n\t\t\telse if (parts[i] === \"command\") meta = 1;\n\t\t\telse {\n\t\t\t\tletter = controls[parts[i]] || parts[i];\n\t\t\t}\n\t\t}\n\n\t\treturn this._keycode(letter, ctrl, shift, alt, meta);\n\t},\n\tgetState:function(node, children) {\n\t\tchildren = (children||false);\n\t\tnode = $$(node);\n\t\tvar state = {\n\t\t\tid: node.config.id,\n\t\t\twidth: node.config.width,\n\t\t\theight: node.config.height,\n\t\t\tgravity: node.config.gravity\n\t\t};\n\t\tif (!isUndefined(node.config.collapsed)) state.collapsed = node.config.collapsed;\n\t\tif (node.name === \"tabs\" || node.name === \"tabbar\") state.activeCell = node.getValue();\n\t\t\n\t\tif (children) {\n\t\t\tstate = [state];\n\t\t\tif (node._cells) {\n\t\t\t\tfor (var i = 0; i < node._cells.length; i++)\n\t\t\t\t\tstate = state.concat(this.getState(node._cells[i], children));\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tsetState:function(states) {\n\t\tif (!isArray(states)) states = [states];\n\t\n\t\tfor (var i = 0; i < states.length; i++) {\n\t\t\tvar state = states[i];\n\t\t\tvar node = $$(state.id);\n\t\t\tif (!node) continue;\n\t\n\t\t\tif (!isUndefined(state.collapsed)) node.define(\"collapsed\", state.collapsed);\n\t\t\tif (!isUndefined(state.activeCell)) node.setValue(state.activeCell, \"auto\");\n\t\n\t\t\tnode.define(\"width\", state.width);\n\t\t\tnode.define(\"height\", state.height);\n\t\t\tnode.define(\"gravity\", state.gravity);\n\t\t}\n\t\tvar top = $$(states[0].id);\n\t\tif (top) top.resize();\n\t}\n};\n\nready(function() {\n\tUIManager._enable();\n\n\tUIManager.addHotKey(\"enter\", function(view, ev){\n\t\tif (UIManager._composition)\n\t\t\treturn false;\n\t\tif (view && view.callEvent)\n\t\t\tview.callEvent(\"onEnter\", [ev]);\n\t\tif (view && view.editStop && view._in_edit_mode){\n\t\t\tview.editStop();\n\t\t\treturn true;\n\t\t} else if (view && view.touchable){\n\t\t\tconst form = view.getFormView();\n\t\t\tif (form && !view._skipSubmit)\n\t\t\t\tform.callEvent(\"onSubmit\",[view,ev]);\n\t\t}\n\t});\n\tUIManager.addHotKey(\"esc\", function(view, ev){\n\t\tif (view){\n\t\t\tif (view.editCancel && view._in_edit_mode){\n\t\t\t\tview.editCancel();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst top = view.getTopParentView();\n\t\t\tif (top && top.setPosition){\n\t\t\t\tif (fullscreen._fullscreen == top)\n\t\t\t\t\tfullscreen.exit();\n\t\t\t\tif (top._editorMaster){\n\t\t\t\t\tconst master = $$(top._editorMaster);\n\t\t\t\t\tif (master.editCancel && master._in_edit_mode)\n\t\t\t\t\t\tmaster.editCancel();\n\t\t\t\t}\n\t\t\t\ttop._hide(ev);\n\t\t\t}\n\t\t}\n\t});\n\tUIManager.addHotKey(\"shift+tab\", UIManager._tab_logic);\n\tUIManager.addHotKey(\"tab\", UIManager._tab_logic);\n});\n\ndefine(\"UIManager\", UIManager);\n\nexport default UIManager;","const RecordBind={\n\t$init:function(){\n\t\tthis.attachEvent(\"onChange\", this._update_binds);\t\t\n\t},\n\t_bind_update:function(target, rule, format){\n\t\tvar data = this.getValues()||null;\n\t\tif (format)\n\t\t\tdata = format(data);\n\t\tthis._bind_update_common(target, rule, data);\n\t}\n};\n\n\nexport default RecordBind;","import {assert} from \"../webix/debug\";\nimport {debug_size_box} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {create, createCss, remove, addCss, removeCss, triggerEvent, preventEvent} from \"../webix/html\";\nimport {toNode, extend} from \"../webix/helpers\";\nimport env from \"../webix/env\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\nimport {_uid, _each} from \"../ui/helpers\";\n\nimport state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\n\nimport Settings from \"../core/settings\";\nimport Destruction from \"../core/destruction\";\nimport BaseBind from \"../core/basebind\";\n\nconst UIExtension = window.webix_view||{};\n\nconst api = {\n\tname:\"baseview\",\n\t//attribute , which will be used for ID storing\n\t$init:function(config){\n\t\tif (!config.id) \n\t\t\tconfig.id = _uid(this.name);\n\t\t\n\t\tthis._parent_cell = state._parent_cell;\n\t\tstate._parent_cell = null;\n\n\t\t// if scope not provided directly, and there is no parent view\n\t\t// check if we have a global scope\n\t\tthis.$scope = config.$scope || (this._parent_cell ? this._parent_cell.$scope : state._global_scope);\n\t\t\n\t\tif (!this._viewobj){\n\t\t\tthis._contentobj = this._viewobj = create(\"DIV\",{\n\t\t\t\t\"class\":\"webix_view\"\n\t\t\t});\n\t\t\tthis.$view = this._viewobj;\n\t\t}\n\t},\n\t$skin:false,\n\tdefaults:{\n\t\twidth:0,\n\t\theight:0,\n\t\tgravity:1\n\t},\n\tgetNode:function(){\n\t\treturn this._viewobj;\n\t},\n\t// needed only to maintain the deprecated ActiveContent module\n\t// do not use it anywhere else\n\t$setNode:function(node){\n\t\tthis._viewobj = this._dataobj = this.$view = node;\n\t},\n\tgetParentView:function(){\n\t\treturn this._parent_cell||null;\t\n\t},\n\tgetTopParentView:function(){\n\t\tvar parent = this.getParentView();\n\t\treturn parent ? parent.getTopParentView() :  this;\n\t},\n\tgetFormView:function(){\n\t\tvar parent = this.getParentView();\n\t\treturn (!parent || parent._recollect_elements) ? parent : parent.getFormView();\n\t},\n\tgetChildViews:function(){ return []; },\n\tqueryView:function(search, all){\n\t\tlet confirm;\n\t\tif (typeof search === \"string\")\n\t\t\tsearch = { view:search };\n\t\tif (typeof search === \"object\")\n\t\t\tconfirm = test => {\n\t\t\t\tconst config = test.config;\n\n\t\t\t\tfor (let key in search){\n\t\t\t\t\tif (config[key] != search[key])\n\t\t\t\t\t\treturn false; \n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\t\telse\n\t\t\tconfirm = search;\n\n\t\tif (all === \"self\" && confirm(this)) return this;\n\t\tconst results = all === \"all\" ? [] : false;\n\t\tconst direction = all === \"parent\" ? this._queryGoUp : this._queryGoDown;\n\n\t\tconst found = this._queryView(confirm, direction, results);\n\t\treturn all === \"all\" ? results : found;\n\t},\n\t_queryGoDown:function(node){\n\t\treturn node.getChildViews();\n\t},\n\t_queryGoUp:function(node){\n\t\tvar parent = node.getParentView();\n\t\treturn parent ? [parent] : [];\n\t},\n\t_queryView:function(confirm, next, all){\n\t\tvar kids = next(this);\n\t\tfor (var i =0; i<kids.length; i++){\n\t\t\tif (confirm(kids[i])){\n\t\t\t\tif (all)\n\t\t\t\t\tall.push(kids[i]);\n\t\t\t\telse\n\t\t\t\t\treturn kids[i];\n\t\t\t}\n\n\t\t\tvar sub = kids[i]._queryView(confirm, next, all);\n\t\t\tif (sub && !all){\n\t\t\t\treturn sub;\n\t\t\t} \n\t\t}\n\t\treturn null;\n\t},\n\tisVisible:function(base_id){\n\t\tif (this._settings.hidden){\n\t\t\tif(base_id){\n\t\t\t\tif (!this._hidden_render) {\n\t\t\t\t\tthis._hidden_render = [];\n\t\t\t\t\tthis._hidden_hash = {};\n\t\t\t\t}\n\t\t\t\tif (!this._hidden_hash[base_id]){\n\t\t\t\t\tthis._hidden_hash[base_id] =  true;\n\t\t\t\t\tthis._hidden_render.push(base_id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar parent = this.getParentView();\n\t\tif (parent) return parent.isVisible(base_id, this._settings.id);\n\t\t\n\t\treturn true;\n\t},\n\tisEnabled:function(){\n\t\tif(this._disable_cover)\n\t\t\treturn false;\n\n\t\tvar parent= this.getParentView();\n\t\tif(parent)\n\t\t\treturn parent.isEnabled();\n\n\t\treturn true;\n\t},\n\t_fix_cover:function(){\n\t\tif (this._disable_cover && !this._disable_cover.parentNode)\n\t\t\tthis._viewobj.appendChild(this._disable_cover);\n\t},\n\tdisable:function(){\n\t\tremove(this._disable_cover);\n\t\tthis._settings.disabled = true;\n\t\tconst container = this._viewobj;\n\n\t\tthis._disable_cover = create(\"div\",{\n\t\t\t\"class\":\"webix_disabled\",\n\t\t\t\"style\":`left:${container.scrollLeft}px; top:${container.scrollTop}px;`\n\t\t});\n\n\t\tcontainer.appendChild(this._disable_cover);\n\t\tcontainer.setAttribute(\"aria-disabled\", \"true\");\n\t\taddCss(container,\"webix_disabled_view\",true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\tenable:function(){\n\t\tthis._settings.disabled = false;\n\n\t\tif (this._disable_cover){\n\t\t\tremove(this._disable_cover);\n\t\t\tremoveCss(this._viewobj,\"webix_disabled_view\");\n\t\t\tthis._viewobj.removeAttribute(\"aria-disabled\");\n\t\t\tthis._disable_cover = null;\n\t\t}\n\t},\n\tdisabled_setter:function(value){\n\t\tif (value)\n\t\t\tthis.disable();\n\t\telse\n\t\t\tthis.enable();\n\t\treturn value;\n\t},\n\tcontainer_setter:function(value){\n\t\tassert(toNode(value),\"Invalid container\");\n\t\treturn true;\n\t},\n\tcss_setter:function(value){\n\t\tif (typeof value == \"object\")\n\t\t\tvalue = createCss(value);\n\n\t\tthis._viewobj.className += \" \"+value;\n\t\treturn value;\n\t},\n\tid_setter:function(value){\n\t\tif (state._global_collection && (state._global_collection != this || this._prev_global_col)){\n\t\t\tvar oldvalue = this.config.$id = value;\n\t\t\t(this._prev_global_col || state._global_collection)._elements[value] = this;\n\t\t\tvalue = _uid(this.name);\n\t\t\t(this._prev_global_col || state._global_collection)._translate_ids[value]=oldvalue;\n\t\t}\n\t\tassert(!ui.views[value], \"Non unique view id: \"+value);\n\t\tui.views[value] = this;\n\t\tthis._viewobj.setAttribute(/*@attr*/\"view_id\", value);\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\t\tvar last = this._last_size;\n\t\tif (last && last[0]==x && last[1]==y) {\n\t\t\tif (DEBUG) debug_size_box(this, [x,y,\"not changed\"]);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (DEBUG) debug_size_box(this, [x,y]);\n\t\t\n\t\tthis._last_size = [x,y];\n\t\tthis.$width  = this._content_width = x-(this._scroll_y?env.scrollSize:0);\n\t\tthis.$height = this._content_height = y-(this._scroll_x?env.scrollSize:0);\n\n\t\tvar config = this._settings;\n\t\tif (!config.flex){\n\t\t\tthis._viewobj.style.width = x+\"px\";\n\t\t\tthis._viewobj.style.height = y+\"px\";\n\t\t}\n\n\t\treturn true;\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar s = this._settings;\n\n\t\tvar size = [\n\t\t\t(s.width || s.minWidth || 0)*1,\n\t\t\t(s.width || s.maxWidth || 100000)*1,\n\t\t\t(s.height || s.minHeight || 0)*1,\n\t\t\t(s.height || s.maxHeight || 100000)*1,\n\t\t\ts.gravity\n\t\t];\n\n\t\tif (assert){\n\t\t\tvar check = (isNaN(size[0]) || isNaN(size[1]) || isNaN(size[2]) || isNaN(size[3]));\n\t\t\tif (check){\n\t\t\t\tassert(false, \"Size is not a number \"+this._settings.id);\n\t\t\t\ts.width = s.height = s.maxWidth = s.maxHeight = s.minWidth = s.minHeight = 0;\n\t\t\t\tsize = [0,0,100000,100000,1];\n\t\t\t}\n\t\t}\n\n\t\tsize[0]+=dx; size[1]+=dx;\n\t\tsize[2]+=dy; size[3]+=dy;\n\t\treturn size;\n\t},\n\tshow:function(force, animate_settings){\n\t\tvar parent = this.getParentView();\n\t\tvar show = !arguments[2];\n\t\tif (parent) {\n\t\t\tif(!animate_settings && animate_settings !== false && this._settings.animate)\n\t\t\t\tif (parent._settings.animate)\n\t\t\t\t\tanimate_settings = extend((parent._settings.animate?extend({},parent._settings.animate):{}), this._settings.animate, true);\n\n\t\t\tif (show?parent._show:parent._hide)\n\t\t\t\t(show?parent._show:parent._hide).call(parent, this, animate_settings);\n\t\t\tif (show)\n\t\t\t\tthis._render_hidden_views();\n\n\t\t\t//force show of parent view\n\t\t\t//stop further processing is view is a part of isolated scope\n\t\t\tif (force && show)  \n\t\t\t\tparent.show(parent.$$?false:force);\n\t\t}\n\t\telse{\n\t\t\tif (this._settings.hidden){\n\t\t\t\tif (show){\n\t\t\t\t\tvar node = toNode(this._settings._container||document.body);\n\t\t\t\t\tnode.appendChild(this._viewobj);\n\t\t\t\t\tthis._settings.hidden = false;\n\n\t\t\t\t\tthis.adjust();\n\n\t\t\t\t\tif (this.callEvent){\n\t\t\t\t\t\tthis.callEvent(\"onViewShow\", []);\n\n\t\t\t\t\t\tif (this._signal_hidden_cells)\n\t\t\t\t\t\t\t_each(this, this._signal_hidden_cells);\n\t\t\t\t\t}\n\t\t\t\t\tthis._render_hidden_views();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!show){\n\t\t\t\t\tthis._settings.hidden = this._settings._hidden = true;\n\t\t\t\t\tif (this._viewobj){\n\t\t\t\t\t\tthis._settings._container = this._viewobj.parentNode;\n\t\t\t\t\t\tremove(this._viewobj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_render_hidden_views:function(){\n\t\tif (this._hidden_render){\n\t\t\tfor (var i=0; i < this._hidden_render.length; i++){\n\t\t\t\tvar ui_to_render = $$(this._hidden_render[i]);\n\t\t\t\tif (ui_to_render)\n\t\t\t\t\tui_to_render.render();\n\t\t\t}\n\t\t\tthis._hidden_render = [];\n\t\t\tthis._hidden_hash = {};\n\t\t}\n\t},\n\t_onKeyPress:function(code, e){\n\t\tconst target = e.target, role = target.getAttribute(\"role\");\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"tab\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\thidden_setter:function(value){\n\t\tif (value) this.hide();\n\t\treturn this._settings.hidden;\n\t},\n\thide:function(){\n\t\tthis.show(null, null, true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\tadjust:function(){\n\t\tif(!this._viewobj.parentNode)\n\t\t\treturn false;\n\n\t\tvar x = this._viewobj.parentNode.clientWidth||0;\n\t\tvar y = this._viewobj.parentNode.clientHeight||0;\n\n\t\tvar sizes=this.$getSize(0,0);\n\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\n\t\t//minWidth\n\t\tif (sizes[0]>x) x = sizes[0];\n\t\t//minHeight\n\t\tif (sizes[2]>y) y = sizes[2];\n\n\t\t//maxWidth rule\n\t\tif ((!fullscreen || this._settings.width)  && x>sizes[1]) x = sizes[1];\n\t\t//maxHeight rule\n\t\tif ((!fullscreen || this._settings.height) && y>sizes[3]) y = sizes[3];\n\n\t\tthis.$setSize(x,y);\n\t\tif (state._responsive_exception){\n\t\t\tstate._responsive_exception = false;\n\t\t\tthis.adjust();\n\t\t}\n\t},\n\tresize:function(){\n\t\tif (state._child_sizing_active || state._freeze_resize || state._responsive_tinkery ) return;\n\n\t\tvar parent = this.getParentView();\n\t\tif (parent){\n\t\t\tif (parent.resizeChildren)\n\t\t\t\tparent.resizeChildren();\n\t\t\telse\n\t\t\t\tparent.resize();\n\t\t} else {\n\t\t\tthis.adjust();\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t}\n};\n\nconst view = protoUI(api, Settings, Destruction, BaseBind, UIExtension);\nexport default { api, view };","import {create, remove} from \"../webix/html\";\nimport {isUndefined, toNode} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nconst Canvas = proto({\n\t$init:function(container){\n\t\tthis._canvas_labels = [];\n\t\tthis._canvas_series =  (!isUndefined(container.series)?container.series:container.name);\n\t\tthis._obj = toNode(container.container||container);\n\t\tvar width = container.width*(window.devicePixelRatio||1);\n\t\tvar height = container.height*(window.devicePixelRatio||1);\n\t\tvar style = container.style||\"\";\n\t\tstyle += \";width:\"+container.width+\"px;height:\"+container.height+\"px;\";\n\t\tthis._prepareCanvas(container.name, style ,width, height, container.title);\n\t},\n\t_prepareCanvas:function(name,style,x,y, title){\n\t\t//canvas has the same size as master object\n\t\tthis._canvas = create(\"canvas\",{ title:title, width:x, height:y, canvas_id:name, style:(style||\"\")});\n\t\tthis._obj.appendChild(this._canvas);\n\t\treturn this._canvas;\n\t}, \n\tgetCanvas:function(context){\n\t\tvar ctx = (this._canvas||this._prepareCanvas(this._contentobj)).getContext(context||\"2d\");\n\t\tif(!this._webixDevicePixelRatio){\n\t\t\tthis._webixDevicePixelRatio = true;\n\t\t\tctx.scale(window.devicePixelRatio||1, window.devicePixelRatio||1);\n\t\t}\n\t\treturn ctx;\n\t},\n\t_resizeCanvas:function(x, y){\n\t\tif (this._canvas){\n\t\t\tthis._canvas.setAttribute(\"width\", x*(window.devicePixelRatio||1));\n\t\t\tthis._canvas.setAttribute(\"height\", y*(window.devicePixelRatio||1));\n\t\t\tthis._canvas.style.width = x+\"px\";\n\t\t\tthis._canvas.style.height = y+\"px\";\n\t\t\tthis._webixDevicePixelRatio = false;\n\t\t}\n\t},\n\trenderText:function(x,y,text,css,w){\n\t\tif (!text) return; //ignore empty text\n\t\tif (w) w = Math.max(w,0);\n\t\tif (y) y = Math.max(y,0);\n\t\tvar t = create(\"DIV\",{\n\t\t\t\"class\":\"webix_canvas_text\"+(css?(\" \"+css):\"\"),\n\t\t\t\"style\":\"left:\"+x+\"px; top:\"+y+\"px;\",\n\t\t\t\"aria-hidden\":\"true\"\n\t\t},text);\n\t\tthis._obj.appendChild(t);\n\t\tthis._canvas_labels.push(t); //destructor?\n\t\tif (w)\n\t\t\tt.style.width = w+\"px\";\n\t\treturn t;\n\t},\n\trenderTextAt:function(valign,align, x,y,t,c,w){\n\t\tvar text=this.renderText.call(this,x,y,t,c,w);\n\t\tif (text){\n\t\t\tlet size;\n\t\t\tif(document.body.contains(text))\n\t\t\t\tsize = { width: text.offsetWidth, height: text.offsetHeight };\n\t\t\telse{\n\t\t\t\t// inside window\n\t\t\t\tconst d = create(\"DIV\",{class: \"webix_chart\", style: \"visibility:hidden; position:absolute; top:0px; left:0px;\"}, \"\");\n\t\t\t\tconst parentNode = text.parentNode;\n\t\t\t\tdocument.body.appendChild(d);\n\t\t\t\td.appendChild(text);\n\t\t\t\tsize = { width: text.offsetWidth, height: text.offsetHeight };\n\t\t\t\tparentNode.appendChild(text);\n\t\t\t\tremove(d);\n\t\t\t}\n\n\t\t\tif (valign){\n\t\t\t\tif(valign == \"middle\")\n\t\t\t\t\ttext.style.top = parseInt(y-size.height/2,10) + \"px\";\n\t\t\t\telse\n\t\t\t\t\ttext.style.top = y-size.height + \"px\";\n\t\t\t}\n\t\t\tif (align){\n\t\t\t\tif(align == \"left\")\n\t\t\t\t\ttext.style.left = x-size.width + \"px\";\n\t\t\t\telse\n\t\t\t\t\ttext.style.left = parseInt(x-size.width/2,10) + \"px\";\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t},\n\tclearCanvas:function(skipMap){\n\t\tvar areas=[];\n\n\t\tremove(this._canvas_labels);\n\t\tthis._canvas_labels = [];\n\n\t\tif (!skipMap&&this._obj._htmlmap){\n\n\t\t\t//areas that correspond this canvas layer\n\t\t\tareas = this._getMapAreas();\n\t\t\t//removes areas of this canvas\n\t\t\twhile(areas.length){\n\t\t\t\tareas[0].parentNode.removeChild(areas[0]);\n\t\t\t\tareas.splice(0,1);\n\t\t\t}\n\t\t\tareas = null;\n\n\t\t\t//removes _htmlmap object if all its child nodes are removed\n\t\t\tif(!this._obj._htmlmap.getElementsByTagName(\"AREA\").length){\n\t\t\t\tthis._obj._htmlmap.parentNode.removeChild(this._obj._htmlmap);\n\t\t\t\tthis._obj._htmlmap = null;\n\t\t\t}\n\t\t}\n\t\t//FF breaks, when we are using clear canvas and call clearRect without parameters\n\t\t//width|height are used insead of offsetWidth|offsetHeight for hidden canvas (series)\n\t\tthis.getCanvas().clearRect(0,0,\n\t\t\tthis._canvas.offsetWidth||Math.floor(this._canvas.width/(window.devicePixelRatio||1)), \n\t\t\tthis._canvas.offsetHeight||Math.floor(this._canvas.height/(window.devicePixelRatio||1))\n\t\t);\n\t},\n\ttoggleCanvas:function(){\n\t\tthis._toggleCanvas(this._canvas.style.display==\"none\");\n\t},\n\tshowCanvas:function(){\n\t\tthis._toggleCanvas(true);\n\t},\n\thideCanvas:function(){\n\t\tthis._toggleCanvas(false);\n\t},\n\t_toggleCanvas:function(show){\n\t\tvar areas, i;\n\n\t\tfor(i=0; i < this._canvas_labels.length;i++)\n\t\t\tthis._canvas_labels[i].style.display = (show?\"\":\"none\");\n\n\t\tif (this._obj._htmlmap){\n\t\t\tareas = this._getMapAreas();\n\t\t\tfor( i = 0; i < areas.length; i++){\n\t\t\t\tif(show)\n\t\t\t\t\tareas[i].removeAttribute(\"disabled\");\n\t\t\t\telse\n\t\t\t\t\tareas[i].setAttribute(\"disabled\",\"true\");\n\t\t\t}\n\t\t}\n\t\t//FF breaks, when we are using clear canvas and call clearRect without parameters\n\t\tthis._canvas.style.display = (show?\"\":\"none\");\n\t},\n\t_getMapAreas:function(){\n\t\tvar res = [], areas, i;\n\t\tareas = this._obj._htmlmap.getElementsByTagName(\"AREA\");\n\t\tfor(i = 0; i < areas.length; i++){\n\t\t\tif(areas[i].getAttribute(\"userdata\") == this._canvas_series){\n\t\t\t\tres.push(areas[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n});\n\nexport default Canvas;","const skin = {\n\ttopLayout:\"space\",\n\t//bar in accordion\n\tbarHeight:46,\t\t\t//!!!Set the same in skin.less!!!\n\ttabbarHeight: 46,\n\trowHeight:34,\n\ttoolbarHeight:46,\n\tsidebarTitleHeight:45,\n\tlistItemHeight:34,\t\t//list, grouplist, dataview, etc.\n\tinputHeight: 38,\n\tbuttonHeight: 38,\n\tinputPadding: 3,\n\tmenuHeight: 34,\n\tlabelTopHeight: 22,\n\tunitHeaderHeight:20,\n\tpropertyItemHeight: 28,\n\ttimelineItemHeight:70,\n\tfontSize: 15,\n\n\tinputSpacing: 4,\n\tborderWidth: 1,\n\n\tsliderHandleWidth: 14,\n\tsliderPadding: 10,\n\tsliderBorder: 1,\n\tvSliderPadding:15,\n\tvSliderHeight:100,\n\tswitchHeight:22,\n\tswitchWidth:50,\n\n\t//margin - distance between cells\n\tlayoutMargin:{ space:10, wide:10, clean:0, head:4, line:-1, toolbar:4, form:8, accordion: 10  },\n\t//padding - distance insede cell between cell border and cell content\n\tlayoutPadding:{ space:10, wide:0, clean:0, head:0, line:0, toolbar:3, form:17, accordion: 0  },\n\t//space between tabs in tabbar\n\ttabMargin:4,\n\ttabOffset: 0,\n\ttabBottomOffset: 6,\n\ttabTopOffset:1,\n\n\tcustomCheckbox: true,\n\tcustomRadio: true,\n\n\tpopupPadding: 8,\n\n\tdataPadding: 10,\n\n\tcalendarWeekHeaderHeight: 24,\n\tpadding:0,\n\taccordionType: \"accordion\",\n\n\toptionHeight: 32,\n\ttimelineColor:\"#3498db\",\n\n\tbackColor:\"#ffffff\",\n\tdataBorderColor:\"#ebebeb\",\n\n\t//colorboard\n\tcolorPadding: 4\n};\n\nexport default skin;","const skin = {\n\ttopLayout:\"space\",\n\t//bar in accordion\n\tbarHeight: 46,\t\t\t//!!!Set the same in skin.less!!!\n\ttabbarHeight: 44,\n\tsidebarTitleHeight: 46,\n\trowHeight:36,\n\ttoolbarHeight:46,\n\tlistItemHeight:36,\t\t//list, grouplist, dataview, etc.\n\tinputHeight: 38,\n\tbuttonHeight: 38,\n\tinputPadding: 3,\n\tmenuHeight: 36,\n\tlabelTopHeight: 22,\n\tpropertyItemHeight: 28,\n\ttimelineItemHeight:64,\n\tunitHeaderHeight:36,\n\tfontSize: 14,\n\n\tinputSpacing: 4,\n\tborderWidth: 1,\n\n\tsliderHandleWidth: 14,\n\tsliderPadding: 10,\n\tsliderBorder: 1,\n\tvSliderPadding:15,\n\tvSliderHeight:100,\n\tswitchHeight:24,\n\tswitchWidth:50,\n\n\t//margin - distance between cells\n\tlayoutMargin:{ space:10, wide:10, clean:0, head:4, line:-1, toolbar:4, form:8, accordion: 2  },\n\t//padding - distance inside cell between cell border and cell content\n\tlayoutPadding:{ space:10, wide:0, clean:0, head:0, line:0, toolbar:3, form:17, accordion: 0  },\n\t//space between tabs in tabbar\n\ttabMargin: 0,\n\ttabOffset: 0,\n\ttabBottomOffset: 0,\n\ttabTopOffset:0,\n\ttabBorder: true,\n\n\tcustomCheckbox: true,\n\tcustomRadio: true,\n\tsidebarMarkAll: true,\n\tpopupNoPoint: true,\n\tborderlessPopup: false,\n\n\tpopupPadding: 0,\n\n\tdataPadding: 12,\n\n\tcalendarWeekHeaderHeight: 18,\n\tpadding:0,\n\taccordionType: \"accordion\",\n\n\toptionHeight: 32,\n\ttimelineColor:\"#7A67EB\",\n\n\tbackColor:\"#2A2B2D\",\n\tdataBorderColor:\"#384047\",\n\n\t//colorboard\n\tcolorPadding: 4\n};\n\nexport default skin;\n","import env from \"../webix/env\";\nimport ready from \"../webix/ready\";\n\nimport {event} from \"../webix/htmlevents\";\nimport {callEvent} from \"../webix/customevents\";\nimport {preventEvent, removeCss, addCss, addStyle} from \"../webix/html\";\n\n//late binding\nimport {$$} from \"../ui/core\";\n\nconst Touch = {\n\tconfig:{\n\t\tlongTouchDelay:700,\n\t\tscrollDelay:150,\n\t\tgravity:500,\n\t\tdeltaStep:10,\n\t\tspeed:\"0ms\",\n\t\tfinish:1000,\n\t\telastic:true\n\t},\n\tlimit:function(value){\n\t\tTouch._limited = value !== false;\t\n\t},\n\tdisable:function(){\n\t\tTouch._disabled = true;\n\t},\n\tenable:function(){\n\t\tTouch._disabled = false;\n\t},\n\t$init:function(){\n\t\tTouch.$init = function(){};\n\n\t\tevent(document.body, env.touch.down,\tTouch._touchstart, {passive:false});\n\t\tevent(document.body, env.touch.move, \tTouch._touchmove, {passive:false});\n\t\tevent(document, env.touch.up, \tTouch._touchend);\n\n\t\tevent(document.body,\"dragstart\",function(e){\n\t\t\tif(Touch._disabled || Touch._limited) return;\n\t\t\treturn preventEvent(e);\n\t\t});\n\n\t\tTouch._clear_artefacts();\n\t\tTouch._scroll = [null, null];\n\t\tTouch.$active = true;\n\t},\n\t_clear_artefacts:function(){\n\t\tTouch._start_context = Touch._current_context = Touch._prev_context = Touch._scroll_context = null;\n\t\tTouch._scroll_mode = Touch._scroll_node = Touch._scroll_stat = Touch._long_touched = null;\n\t\tTouch._delta = \t{ _x_moment:0, _y_moment:0, _time:0 };\n\n\t\tif (Touch._css_button_remove){\n\t\t\tremoveCss(Touch._css_button_remove,\"webix_touch\");\n\t\t\tTouch._css_button_remove = null;\n\t\t}\n\t\t\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = true;\n\t\tTouch._axis_x = true;\n\t\tTouch._axis_y = true;\n\t\tif (!Touch._active_transion)\n\t\t\tTouch._scroll_end();\n\t},\n\t_touchend:function(e){\n\t\tif (Touch._start_context) {\n\t\t\tif (!Touch._scroll_mode) {\n\t\t\t\tif (!Touch._long_touched && !(Touch._axis_x * Touch._axis_y)) {\n\t\t\t\t\tconst delta = Touch._get_delta(e);\n\t\t\t\t\tif (!Touch._axis_x && delta._x/(delta._y||1) > 4) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeX\");\n\t\t\t\t\t} else if (!Touch._axis_y && delta._y/(delta._x||1) > 4) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeY\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet finish = Touch.config.finish;\n\t\t\t\tconst temp = Touch._get_matrix(Touch._scroll_node);\n\t\t\t\tconst x = temp.e;\n\t\t\t\tconst y = temp.f;\n\n\t\t\t\tconst delta = Touch._get_delta(e);\n\t\t\t\tconst view = $$(Touch._scroll_node);\n\n\t\t\t\tconst gravity = (view && view.$scroll) ? view.$scroll.gravity : Touch.config.gravity;\n\t\t\t\tif (delta._time) {\n\t\t\t\t\tconst nx = x + gravity * delta._x_moment / delta._time;\n\t\t\t\t\tconst ny = y + gravity * delta._y_moment / delta._time;\n\n\t\t\t\t\tconst cnx = Touch._scroll[0] ? Touch._correct_minmax(nx, false, false, Touch._scroll_stat.dx, Touch._scroll_stat.px) : x;\n\t\t\t\t\tconst cny = Touch._scroll[1] ? Touch._correct_minmax(ny, false, false, Touch._scroll_stat.dy, Touch._scroll_stat.py) : y;\n\n\t\t\t\t\tconst size = Math.max(Math.abs(cnx - x), Math.abs(cny - y));\n\t\t\t\t\tif (size < 150)\n\t\t\t\t\t\tfinish = finish * size / 150;\n\n\t\t\t\t\tif (cnx != x || cny != y)\n\t\t\t\t\t\tfinish = Math.round(finish * Math.max((cnx - x) / (nx - x), (cny - y) / (ny - y)));\n\n\t\t\t\t\tconst result = {e: cnx, f: cny};\n\t\t\t\t\tif (view && view.adjustScroll)\n\t\t\t\t\t\tview.adjustScroll(result);\n\n\t\t\t\t\tfinish = Math.min(Touch.config.finish, Math.max(100, finish));\n\t\t\t\t\tif (x != result.e || y != result.f) {\n\t\t\t\t\t\tTouch._set_matrix(Touch._scroll_node, result.e, result.f, finish + \"ms\");\n\t\t\t\t\t\tif (Touch._scroll_master)\n\t\t\t\t\t\t\tTouch._scroll_master._sync_scroll(result.e, result.f, finish + \"ms\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTouch._scroll_end();\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tTouch._scroll_end();\n\t\t\t}\n\t\t\tTouch._translate_event(\"onTouchEnd\");\n\t\t\tTouch._clear_artefacts();\n\t\t}\n\t},\n\t_touchmove:function(e){\n\t\tif (!Touch._scroll_context || !Touch._start_context) return;\n\n\t\tvar\tdelta = Touch._get_delta(e);\n\t\tTouch._translate_event(\"onTouchMove\");\n\n\t\tif (Touch._scroll_mode){\n\t\t\tTouch._set_scroll_pos();\n\t\t} else {\n\t\t\tTouch._axis_x = Touch._axis_check(delta._x, \"x\", Touch._axis_x);\n\t\t\tTouch._axis_y = Touch._axis_check(delta._y, \"y\", Touch._axis_y);\n\t\t\tif (Touch._scroll_mode){\n\t\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\t\tif (view){\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tview.callEvent(\"onBeforeScroll\",[data]);\n\t\t\t\t\tif (data.update){\n\t\t\t\t\t\tTouch.config.speed = data.speed;\n\t\t\t\t\t\tTouch.config.scale = data.scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tTouch._init_scroller(); //apply scrolling\n\t\t\t} else {\n\t\t\t\tconst state = Touch._is_scroll();\n\t\t\t\tconst view = $$(state && state[0]);\t\t// support subviews\n\t\t\t\tif (view && view.$hasYScroll && view.$hasYScroll() && e.cancelable){\n\t\t\t\t\treturn preventEvent(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_mode && e.cancelable)\n\t\t\treturn preventEvent(e);\n\t},\n\t_set_scroll_pos:function(){\n\t\tif (!Touch._scroll_node) return;\n\t\tvar temp = Touch._get_matrix(Touch._scroll_node);\n\t\tvar prev = Touch._prev_context || Touch._start_context;\n\n\t\tvar view = $$(Touch._scroll_node);\n\t\tvar elastic = (view && view.$scroll) ? view.$scroll.elastic : Touch.config.elastic;\n\n\t\tif (Touch._scroll[0])\n\t\t\ttemp.e = Touch._correct_minmax( temp.e - prev.x + Touch._current_context.x , elastic, temp.e, Touch._scroll_stat.dx, Touch._scroll_stat.px);\n\t\tif (Touch._scroll[1])\n\t\t\ttemp.f = Touch._correct_minmax( temp.f - prev.y + Touch._current_context.y , elastic, temp.f, Touch._scroll_stat.dy, Touch._scroll_stat.py);\n\n\t\tTouch._set_matrix(Touch._scroll_node, temp.e, temp.f, \"0ms\");\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_scroll(temp.e, temp.f, \"0ms\");\n\t},\n\tscrollTo:function(node, x, y, speed){\n\t\tTouch._set_matrix(node,x,y,speed);\n\t},\n\t_set_matrix:function(node, xv, yv, speed){\n\t\tif (!speed){\n\t\t\tnode.style[env.transform] = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tTouch._active_transion = true;\n\t\tif (node){\n\t\t\tvar trans = Touch.config.translate || env.translate;\n\t\t\tnode.style[env.transform] = trans+\"(\"+Math.round(xv)+\"px, \"+Math.round(yv)+\"px\"+((trans==\"translate3d\")?\", 0\":\"\")+\")\";\n\t\t\tnode.style[env.transitionDuration] = speed;\n\t\t}\n\t},\n\t_get_matrix:function(node){\n\t\tvar matrix = window.getComputedStyle(node)[env.transform];\n\t\tvar tmatrix;\n\n\t\tif (matrix == \"none\")\n\t\t\ttmatrix = {e:0, f:0};\n\t\telse {\n\t\t\tif(window.WebKitCSSMatrix)\n\t\t\t\t/* global WebKitCSSMatrix */\n\t\t\t\ttmatrix = new WebKitCSSMatrix(matrix);\n\t\t\telse {\n\t\t\t\t// matrix(1, 0, 0, 1, 0, 0) --> 1, 0, 0, 1, 0, 0\n\t\t\t\tvar _tmatrix = matrix.replace(/(matrix\\()(.*)(\\))/gi, \"$2\");\n\t\t\t\t// 1, 0, 0, 1, 0, 0 --> 1,0,0,1,0,0\n\t\t\t\t_tmatrix = _tmatrix.replace(/\\s/gi, \"\");\n\t\t\t\t_tmatrix = _tmatrix.split(\",\");\n\n\t\t\t\ttmatrix = {};\n\t\t\t\tvar tkey = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\t\t\t\tfor(var i=0; i<tkey.length; i++){\n\t\t\t\t\ttmatrix[tkey[i]] = parseInt(_tmatrix[i], 10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_pos(tmatrix);\n\n\t\treturn tmatrix;\n\t},\t\n\t_correct_minmax:function(value, allow, current, dx, px){\n\t\tif (value === current) return value;\n\n\t\tif (px > dx) return 0;\n\n\t\tconst delta = Math.abs(value-current);\n\t\tconst sign = delta/(value-current);\n\t\tif (value > 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : 0;\n\n\t\tconst max = dx - px;\n\t\tif (max + value < 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : -max;\n\n\t\treturn value;\n\t},\t\n\t_init_scroll_node:function(node){\n\t\tif (!node.scroll_enabled){\n\t\t\tnode.scroll_enabled = true;\n\t\t\tnode.parentNode.style.position = \"relative\";\n\t\t\tnode.style.cssText += \"transition:transform; user-select:none; transform-style:flat;\";\n\t\t\tnode.addEventListener(env.transitionEnd, function(e){\n\t\t\t\tif (e.target === this) Touch._scroll_end.call(this);\n\t\t\t}, false);\n\t\t}\n\t},\n\t_init_scroller:function(){\n\t\tif (Touch._scroll_mode.indexOf(\"x\") !== -1) Touch._scroll[0] = true;\n\t\tif (Touch._scroll_mode.indexOf(\"y\") !== -1) Touch._scroll[1] = true;\n\n\t\tif (Touch._scroll[0] || Touch._scroll[1])\n\t\t\tTouch._scroll[2] = Touch._scroll_node;\n\n\t\tTouch._init_scroll_node(Touch._scroll_node);\n\t},\n\t_axis_check:function(value, mode, old){\n\t\tif (value > Touch.config.deltaStep){\n\t\t\tif (Touch._was_not_moved){\n\t\t\t\tTouch._long_move(mode);\n\t\t\t\tTouch._locate(mode);\n\t\t\t\tif ((Touch._scroll_mode||\"\").indexOf(mode) == -1) Touch._scroll_mode = \"\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn old;\n\t},\n\t_scroll_end:function(){\n\t\t//sending event to the owner of the scroll only\n\t\tvar result,state,view;\n\t\tview = $$(Touch._scroll_node||this);\n\t\tif (view){\n\t\t\tif (Touch._scroll_node)\n\t\t\t\tresult = Touch._get_matrix(Touch._scroll_node);\n\t\t\telse if(view.getScrollState){\n\t\t\t\tstate = view.getScrollState();\n\t\t\t\tresult = {e:-state.x, f:-state.y};\n\t\t\t}\n\t\t\tcallEvent(\"onAfterScroll\", [result]);\n\t\t\tif (view.callEvent)\n\t\t\t\tview.callEvent(\"onAfterScroll\",[result]);\n\t\t}\n\t\tif (!Touch._scroll_mode)\n\t\t\tTouch._scroll = [null, null];\n\t\tTouch._active_transion = false;\n\t},\n\t_long_move:function(){\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = false;\t\n\t},\t\n\t_stop_old_scroll:function(e){\n\t\tif (Touch._scroll[2]){\n\t\t\tTouch._stop_scroll(e, (Touch._scroll[0] ? \"x\" : \"y\"));\n\t\t} else\n\t\t\treturn true;\n\t},\n\t_touchstart :function(e){\n\t\tif (Touch._disabled) return;\n\n\t\tTouch._long_touched = null;\n\t\tTouch._scroll_context = Touch._start_context = env.touch.context(e);\n\n\t\tif (Touch._limited && !Touch._is_scroll())\n\t\t\tTouch._scroll_context = null;\n\n\t\tTouch._translate_event(\"onTouchStart\");\n\n\t\tif (Touch._stop_old_scroll(e))\n\t\t\tTouch._long_touch_timer = window.setTimeout(Touch._long_touch, Touch.config.longTouchDelay);\n\n\t\tconst element = $$(e);\n\t\tif (element && element.touchable && (!e.target.className || e.target.className.indexOf(\"webix_view\") !== 0)){\n\t\t\tTouch._css_button_remove = element.getNode(e);\n\t\t\taddCss(Touch._css_button_remove,\"webix_touch\");\n\t\t}\n\t},\n\t_long_touch:function(){\n\t\tif(Touch._start_context){\n\t\t\tTouch._long_touched = true;\n\t\t\tTouch._translate_event(\"onLongTouch\");\n\t\t\tcallEvent(\"onClick\", [Touch._start_context]);\n\t\t}\n\t},\n\t_stop_scroll:function(e, stop_mode){\n\t\tTouch._locate(stop_mode);\n\t\tif (Touch._scroll[2]){\n\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\tif (view)\n\t\t\t\tview.callEvent(\"onBeforeScroll\", [Touch._start_context,Touch._current_context]);\n\n\t\t\tif (!Touch._scroll_node || Touch._scroll_node.parentNode !== Touch._scroll[2].parentNode){\n\t\t\t\tTouch._clear_artefacts();\n\t\t\t\tTouch._scroll_end();\n\t\t\t\tTouch._start_context = env.touch.context(e);\n\t\t\t}\n\t\t}\n\t\tTouch._touchmove(e);\n\t},\t\n\t_get_delta:function(e){\n\t\tTouch._prev_context = Touch._current_context;\n\t\tTouch._current_context = env.touch.context(e);\n\n\t\tTouch._delta._x = Math.abs(Touch._start_context.x - Touch._current_context.x);\n\t\tTouch._delta._y = Math.abs(Touch._start_context.y - Touch._current_context.y);\n\n\t\tif (Touch._prev_context){\n\t\t\tif (Touch._current_context.time - Touch._prev_context.time < Touch.config.scrollDelay){\n\t\t\t\tTouch._delta._x_moment = Touch._delta._x_moment/1.3+Touch._current_context.x - Touch._prev_context.x;\n\t\t\t\tTouch._delta._y_moment = Touch._delta._y_moment/1.3+Touch._current_context.y - Touch._prev_context.y;\n\t\t\t} else {\n\t\t\t\tTouch._delta._y_moment = Touch._delta._x_moment = 0;\n\t\t\t}\n\t\t\tTouch._delta._time = Touch._delta._time/1.3+(Touch._current_context.time - Touch._prev_context.time);\n\t\t}\n\n\t\treturn Touch._delta;\n\t},\n\t_get_sizes:function(node){\n\t\treturn {\n\t\t\tdx:node.offsetWidth,\n\t\t\tdy:node.offsetHeight,\n\t\t\tpx:node.parentNode.offsetWidth,\n\t\t\tpy:node.parentNode.offsetHeight\n\t\t};\n\t},\n\t_is_scroll:function(locate_mode){\n\t\tvar node = Touch._start_context.target;\n\t\twhile(node && node.tagName != \"BODY\"){\n\t\t\tif (node.getAttribute){\n\t\t\t\tvar mode = node.getAttribute(\"touch_scroll\");\n\t\t\t\tif (mode && (!locate_mode || mode.indexOf(locate_mode) != -1))\n\t\t\t\t\treturn [node, mode];\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t_locate:function(locate_mode){\n\t\tvar state = Touch._is_scroll(locate_mode);\n\t\tif (state){\n\t\t\tTouch._scroll_mode = state[1];\n\t\t\tTouch._scroll_node = state[0];\n\t\t\tTouch._scroll_stat = Touch._get_sizes(state[0]);\n\t\t}\n\t\treturn state;\n\t},\n\t_translate_event:function(name){\n\t\tcallEvent(name, [Touch._start_context,Touch._current_context]);\n\t\tvar view = Touch._get_event_view(name);\n\t\tif (view)\n\t\t\tview.callEvent(name, [Touch._start_context,Touch._current_context]);\n\t},\n\t_get_event_view:function(name, active){\n\t\tvar view = $$(active ? Touch._scroll_node : Touch._start_context);\n\t\tif(!view) return null;\n\n\t\twhile (view){\n\t\t\tif (view.hasEvent && view.hasEvent(name))\n\t\t\t\treturn view;\n\t\t\tview = view.getParentView();\n\t\t}\n\n\t\treturn null;\n\t},\t\n\t_get_context:function(e){\n\t\tif (!e.touches[0]) {\n\t\t\tvar temp = Touch._current_context;\n\t\t\ttemp.time = new Date();\n\t\t\treturn temp;\n\t\t}\n\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.touches[0].pageX,\n\t\t\ty:e.touches[0].pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t},\n\t_get_context_m:function(e){\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.pageX,\n\t\t\ty:e.pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t}\n};\n\nfunction touchInit(){\n\tif (env.touch){\n\t\tTouch.$init();\n\n\t\t//not full screen mode\n\t\tif (document.body.className.indexOf(\"webix_full_screen\") === -1)\n\t\t\tTouch.limit(true);\n\n\t\tif (env.isSafari && CSS.supports(\"-webkit-overflow-scrolling: touch\"))\n\t\t\taddStyle(\".webix_view{ -webkit-overflow-scrolling:touch; } .webix_scroll_cont{ transform:translateZ(0px); }\");\n\t}\n}\n\nready(touchInit);\n\nenv.mouse = {\n\tdown: \"mousedown\",\n\tmove: \"mousemove\",\n\tup: \"mouseup\",\n\tcontext: Touch._get_context_m\n};\n\nenv.touch = env.touch && {\n\tdown: \"touchstart\",\n\tmove: \"touchmove\",\n\tup: \"touchend\",\n\tcontext: Touch._get_context\n};\n\t\n\nexport default Touch;","import {preventEvent, addCss, removeCss, pos as getPos, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport Touch from \"../core/touch\";\nimport {zIndex} from \"../ui/helpers\";\nimport {_to_array, toNode} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {attachEvent, callEvent} from \"../webix/customevents\";\n\n\n/*\n\tBehavior:DND - low-level dnd handling\n\t@export\n\t\tgetContext\n\t\taddDrop\n\t\taddDrag\n\t\t\n\tDND master can define next handlers\n\t\tonCreateDrag\n\t\tonDragIng\n\t\tonDragOut\n\t\tonDrag\n\t\tonDrop\n\tall are optional\n*/\n\nconst DragControl ={\n\t//has of known dnd masters\n\t_drag_masters : _to_array([\"dummy\"]),\n\t/*\n\t\tregister drop area\n\t\t@param node \t\t\thtml node or ID\n\t\t@param ctrl \t\t\toptions dnd master\n\t\t@param master_mode \t\ttrue if you have complex drag-area rules\n\t*/\n\taddDrop:function(node,ctrl,master_mode){\n\t\tnode = toNode(node);\n\t\tnode.webix_drop=this._getCtrl(ctrl);\n\t\tif (master_mode) node.webix_master=true;\n\t},\n\t//return index of master in collection\n\t//it done in such way to prevent dnd master duplication\n\t//probably useless, used only by addDrop and addDrag methods\n\t_getCtrl:function(ctrl){\n\t\tctrl = ctrl||DragControl;\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index<0){\n\t\t\tindex = this._drag_masters.length;\n\t\t\tthis._drag_masters.push(ctrl);\n\t\t\tif (ctrl.attachEvent)\n\t\t\t\tctrl.attachEvent(\"onDestruct\", () => DragControl.unlink(ctrl));\n\t\t}\n\t\treturn index;\n\t},\n\tunlink(ctrl){\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index > -1){\n\t\t\t// if active view was destroyed, stop dnd\n\t\t\tif (DragControl._active && DragControl._active.webix_drag == index)\n\t\t\t\tDragControl._stopDrag();\n\t\t\t// if last target was destroyed, reset it and continue dnd\n\t\t\tif (DragControl._last && DragControl._last.webix_drop == index)\n\t\t\t\tDragControl._last = null;\n\n\t\t\tthis._drag_masters[index] = null;\n\t\t}\n\t},\n\t_createTouchDrag: function(e, pointer){\n\t\tconst dragCtrl = DragControl;\n\t\tconst master = this._getActiveDragMaster();\n\t\t// for data items only\n\t\tif (master && master.$longTouchLimit){\n\t\t\tif (!dragCtrl._html && !dragCtrl.createDrag(e, pointer)) return;\n\t\t\te.longtouch_drag = true;\n\n\t\t\tconst pos = getPos(e);\n\t\t\tconst customPos = dragCtrl.$dragPos(pos, e);\n\n\t\t\tconst ctx = dragCtrl._drag_context;\n\t\t\tdragCtrl._html.style.top= pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset)+\"px\";\n\t\t\tdragCtrl._html.style.left= pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\t\t}\n\t},\n\t/*\n\t\tregister drag area\n\t\t@param node \thtml node or ID\n\t\t@param ctrl \toptions dnd master\n\t*/\n\taddDrag:function(node,ctrl){\n\t\tnode = toNode(node);\n\t\tnode.webix_drag = this._getCtrl(ctrl);\n\t\t_event(node,\"dragstart\",preventEvent);\n\t\t_event(node, env.mouse.down, e => this._preStart(e, node, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(node, env.touch.down, e => this._preStart(e, node, \"touch\"));\n\t},\n\t//logic of drag - start, we are not creating drag immediately, instead of that we hears mouse moving\n\t_preStart:function(e, node, pointer){\n\t\tif (DragControl._active){\n\t\t\t//if we have nested drag areas, use the top one and ignore the inner one\n\t\t\tif (DragControl._saved_event == e) return;\n\t\t\tDragControl._preStartFalse(e);\n\t\t\tDragControl.destroyDrag(e);\n\t\t}\n\t\tDragControl._active = node;\n\n\t\tconst evobj = env[pointer].context(e);\n\t\tDragControl._start_pos = evobj;\n\t\tDragControl._saved_event = e;\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._startDrag(e, pointer), passive);\n\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._preStartFalse);\n\n\t\t//need to run here, or will not work in IE\n\t\taddCss(document.body,\"webix_noselect\", 1);\n\t},\n\t//if mouse was released before moving - this is not a dnd, remove event handlers\n\t_preStartFalse:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._touch_animation = !e.cancelable;\n\t},\n\t//mouse was moved without button released - dnd started, update event handlers\n\t_startDrag:function(e, pointer){\n\t\tconst touch = (pointer === \"touch\");\n\n\t\t// mouse: allow dnd only on left click\n\t\tif(!touch && DragControl._saved_event.button)\n\t\t\treturn;\n\n\t\t// check touch scroll animation\n\t\tDragControl._touch_animation = !e.cancelable;\n\t\tif (touch && DragControl._touch_animation){\n\t\t\tDragControl._clean_dom_after_drag();\n\t\t\treturn DragControl.destroyDrag(e);\n\t\t}\n\n\t\t//prevent unwanted dnd\n\t\tvar pos = env[pointer].context(e);\n\t\tvar master = DragControl._getActiveDragMaster();\n\n\t\t// only long-touched elements can be dragged\n\t\tvar longTouchLimit = (touch && master && master.$longTouchLimit && !Touch._long_touched);\n\t\tif (longTouchLimit || Math.abs(pos.x-DragControl._start_pos.x)<5 && Math.abs(pos.y-DragControl._start_pos.y)<5)\n\t\t\treturn;\n\n\t\tif (!DragControl._html && !DragControl.createDrag(DragControl._saved_event, pointer))\n\t\t\treturn DragControl._clean_dom_after_drag();\n\t\tDragControl._clean_dom_after_drag(true);\n\n\t\tDragControl.sendSignal(\"start\"); //useless for now\n\n\t\tif (touch) {\n\t\t\t// important: for touch events use e.target as EventTarget\n\t\t\tDragControl._webix_drag_mm = event(e.target, env[pointer].move, e => DragControl._moveDrag(e, pointer), { passive:false });\n\t\t\tDragControl._webix_drag_mu = event(e.target, env[pointer].up, DragControl._stopDrag);\n\t\t} else {\n\t\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._moveDrag(e, pointer));\n\t\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._stopDrag);\n\t\t}\n\t\tDragControl._moveDrag(e, pointer, true);\n\t},\n\t//mouse was released while dnd is active - process target\n\t_stopDrag:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._saved_event = null;\n\n\t\tif (DragControl._last && e){\t//if some drop target was confirmed\n\t\t\tDragControl.$drop(DragControl._active, DragControl._last, e);\n\t\t\tDragControl.$dragOut(DragControl._active, DragControl._last, null, e);\n\t\t}\n\t\tDragControl.destroyDrag(e);\n\t\tDragControl.sendSignal(\"stop\");\t//useless for now\n\t},\n\t_clean_dom_after_drag:function(still_drag){\n\t\tthis._webix_drag_mm = eventRemove(this._webix_drag_mm);\n\t\tthis._webix_drag_mu = eventRemove(this._webix_drag_mu);\n\t\tif (!still_drag)\n\t\t\tremoveCss(document.body,\"webix_noselect\");\n\t},\n\t//dnd is active and mouse position was changed\n\t_moveDrag:function(e, pointer, first){\n\t\tvar dragCtrl = DragControl;\n\t\tvar pos = getPos(e);\n\n\t\t//give possibility to customize drag position\n\t\tvar customPos = dragCtrl.$dragPos(pos, e);\n\t\t//adjust drag marker position\n\t\tvar ctx = dragCtrl._drag_context;\n\t\tdragCtrl._html.style.top=pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset) +\"px\";\n\t\tdragCtrl._html.style.left=pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\n\t\t// check landing at least once\n\t\tif (first) dragCtrl._skip = false;\n\n\t\tif (dragCtrl._skip)\n\t\t\tdragCtrl._skip = false;\n\t\telse {\n\t\t\tlet evobj = e;\n\t\t\tif (pointer === \"touch\"){\n\t\t\t\tconst scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t\t\tconst context = env[pointer].context(e);\n\t\t\t\tconst target = document.elementFromPoint(context.x - scrollLeft, context.y - scrollTop);\n\t\t\t\tevobj = new Proxy(e, {\n\t\t\t\t\tget: function(obj, prop){\n\t\t\t\t\t\tif (prop === \"target\"){\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst res = obj[prop];\n\t\t\t\t\t\tif (typeof res === \"function\"){\n\t\t\t\t\t\t\treturn res.bind(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tdragCtrl._checkLand((evobj.target), evobj);\n\t\t}\n\t\t\n\t\treturn preventEvent(e);\n\t},\n\t//check if item under mouse can be used as drop landing\n\t_checkLand:function(node,e){\n\t\twhile (node && node.tagName!=\"BODY\"){\n\t\t\tif (node.webix_drop){\t//if drop area registered\n\t\t\t\tif (this._last && (this._last!=node || node.webix_master))\t//if this area with complex dnd master\n\t\t\t\t\tthis.$dragOut(this._active,this._last,node,e);\t\t\t//inform master about possible mouse-out\n\t\t\t\tif (!this._last || this._last!=node || node.webix_master){\t//if this is new are or area with complex dnd master\n\t\t\t\t\tthis._last=null;\t\t\t\t\t\t\t\t\t\t//inform master about possible mouse-in\n\t\t\t\t\tthis._landing=this.$dragIn(DragControl._active,node,e);\n\t\t\t\t\tif (this._landing)\t//landing was rejected\n\t\t\t\t\t\tthis._last=node;\n\t\t\t\t\treturn;\t\t\t\t\n\t\t\t\t} \n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode=node.parentNode;\n\t\t}\n\t\tif (this._last)\t//mouse was moved out of previous landing, and without finding new one \n\t\t\tthis._last = this._landing = this.$dragOut(this._active,this._last,null,e);\n\t},\n\t//mostly useless for now, can be used to add cross-frame dnd\n\tsendSignal:function(signal){\n\t\tDragControl.active=(signal==\"start\");\n\t\tcallEvent(\"onDragMode\", [signal]);\n\t},\n\t\n\t//return master for html area\n\tgetMaster:function(t){\n\t\treturn this._drag_masters[t.webix_drag||t.webix_drop];\n\t},\n\t//return dhd-context object\n\tgetContext:function(){\n\t\treturn this._drag_context;\n\t},\n\tgetNode:function(){\n\t\treturn this._html;\n\t},\n\t//called when dnd is initiated, must create drag representation\n\tcreateDrag:function(e, pointer){\n\t\tvar a = DragControl._active;\n\n\t\tDragControl._drag_context = {};\n\t\tvar master = this._drag_masters[a.webix_drag];\n\t\tvar drag_container;\n\n\t\t//if custom method is defined - use it\n\t\tif (master.$dragCreate){\n\t\t\tdrag_container = master.$dragCreate(a,e,pointer);\n\t\t\tif (!drag_container) return false;\n\t\t\tthis._setDragOffset(e);\n\t\t\tdrag_container.style.position = \"absolute\";\n\t\t} else {\n\t\t//overvise use default one\n\t\t\tvar text = DragControl.$drag(a,e,pointer);\n\t\t\tDragControl._setDragOffset(e);\n\n\t\t\tif (!text) return false;\n\t\t\tdrag_container = document.createElement(\"DIV\");\n\t\t\tdrag_container.innerHTML=text;\n\t\t\tdrag_container.className=\"webix_drag_zone\";\n\t\t\tdocument.body.appendChild(drag_container);\n\n\t\t\tvar context = DragControl._drag_context;\n\t\t\tif (context.html){\n\t\t\t\tcontext.x_offset = -Math.round(drag_container.offsetWidth  * 0.5);\n\t\t\t\tcontext.y_offset = -Math.round(drag_container.offsetHeight * 0.75);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t\tdragged item must have topmost z-index\n\t\t\tin some cases item already have z-index\n\t\t\tso we will preserve it if possible\n\t\t*/\n\t\tdrag_container.style.zIndex = Math.max(drag_container.style.zIndex,zIndex());\n\n\t\tDragControl._skipDropH = event(drag_container, env[pointer].move, DragControl._skip_mark);\n\n\t\tif (!DragControl._drag_context.from)\n\t\t\tDragControl._drag_context = {source:a, from:a};\n\t\t\n\t\tDragControl._html = drag_container;\n\t\treturn true;\n\t},\n\t//helper, prevents unwanted mouse-out events\n\t_skip_mark:function(){\n\t\tDragControl._skip = true;\n\t},\n\t//after dnd end, remove all traces and used html elements\n\tdestroyDrag:function(e){\n\t\tvar a = DragControl._active;\n\t\tvar master = this._drag_masters[a.webix_drag];\n\n\t\tif (DragControl._skipDropH)\n\t\t\tDragControl._skipDropH = eventRemove(DragControl._skipDropH);\n\t\t\n\t\tif (master && master.$dragDestroy){\n\t\t\tif(DragControl._html)\n\t\t\t\tmaster.$dragDestroy(a,DragControl._html,e);\n\t\t} else\n\t\t\tremove(DragControl._html);\n\n\t\tif (master && master._auto_scroll_delay)\n\t\t\tmaster._auto_scroll_delay = window.clearTimeout(master._auto_scroll_delay);\n\n\t\tif (DragControl._dropHTML)\n\t\t\tremove(DragControl._dropHTML);\n\n\t\tDragControl._landing=DragControl._active=DragControl._last=DragControl._html=DragControl._dropHTML=null;\n\t\tDragControl._drag_context = null;\n\t},\n\t_getActiveDragMaster: function(){\n\t\treturn DragControl._drag_masters[DragControl._active.webix_drag];\n\t},\n\ttop:0,\t //relative position of drag marker to mouse cursor\n\tleft:0,\n\t_setDragOffset:function(e){\n\t\tconst pos = DragControl._start_pos;\n\t\tconst ctx = DragControl._drag_context;\n\n\t\tif(typeof ctx.x_offset != \"undefined\" && typeof ctx.y_offset != \"undefined\")\n\t\t\treturn null;\n\n\t\tctx.x_offset = ctx.y_offset = 0;\n\t\tconst m = DragControl._getActiveDragMaster();\n\t\tif (m._getDragItemPos && m !== this){\n\t\t\tconst itemPos = m._getDragItemPos(pos,e);\n\t\t\tif (itemPos){\n\t\t\t\tctx.x_offset = itemPos.x - pos.x;\n\t\t\t\tctx.y_offset = itemPos.y - pos.y;\n\t\t\t}\n\t\t}\n\t},\n\t$dragPos:function(pos, e){\n\t\tvar m=this._drag_masters[DragControl._active.webix_drag];\n\t\tif (m.$dragPos && m!=this){\n\t\t\tm.$dragPos(pos, e, DragControl._html);\n\t\t\treturn true;\n\t\t}\n\t},\n\t//called when mouse was moved in drop area\n\t$dragIn:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragIn && m!=this) return m.$dragIn(s,t,e);\n\t\tt.className=t.className+\" webix_drop_zone\";\n\t\treturn t;\n\t},\n\t//called when mouse was moved out drop area\n\t$dragOut:function(s,t,n,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragOut && m!=this) return m.$dragOut(s,t,n,e);\n\t\tt.className=t.className.replace(\"webix_drop_zone\",\"\");\n\t\treturn null;\n\t},\n\t//called when mouse was released over drop area\n\t$drop:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tDragControl._drag_context.from = DragControl.getMaster(s);\n\t\tif (m.$drop && m!=this) return m.$drop(s,t,e);\n\t\tt.appendChild(s);\n\t},\n\t//called when dnd just started\n\t$drag:function(s,e,p){\n\t\tvar m=this._drag_masters[s.webix_drag];\n\t\tif (m.$drag && m!=this) return m.$drag(s,e,p);\n\t\treturn \"<div style='\"+s.style.cssText+\"'>\"+s.innerHTML+\"</div>\";\n\t}\t\n};\n\n//global touch-drag handler\nattachEvent(\"onLongTouch\", function(ev){\n\tconst active = DragControl._active;\n\tif(!DragControl._touch_animation && active && active.contains(ev.target))\n\t\tDragControl._createTouchDrag(ev, \"touch\");\n});\n\n\nexport default DragControl;","import {pos as getPos, offset} from \"../webix/html\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport animate from \"../webix/animate\";\nimport {$active} from \"../webix/skin\";\n\nimport state from \"../core/state\";\nimport env from \"../webix/env\";\nimport UIManager from \"../core/uimanager\";\nimport Destruction from \"../core/destruction\";\n\nimport {zIndex} from \"../ui/helpers\";\nimport {toNode, delay, clone, uid, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent, attachEvent} from \"../webix/customevents\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport Movable from \"../core/movable\";\nimport Modality from \"../core/modality\";\nimport ResizeArea from \"../core/resizearea\";\n\nimport baseview from \"./baseview\";\nimport base from \"./view\";\n\nconst api = {\n\tname:\"window\",\n\n\t$init:function(config){\n\t\tthis._viewobj.innerHTML = \"<div class='webix_win_content'><div class='webix_win_head'></div><div class='webix_win_body'></div></div>\";\n\n\t\tthis._contentobj = this._viewobj.firstChild;\n\t\tthis._headobj = this._contentobj.childNodes[0];\n\t\tthis._dataobj = this._bodyobj = this._contentobj.childNodes[1];\n\t\tthis._viewobj.className +=\" webix_window\";\n\n\t\tthis._viewobj.setAttribute(\"role\", \"dialog\");\n\t\tthis._viewobj.setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._head_cell = this._body_cell = null;\n\t\tthis._settings._inner = {top:false, left:false, right:false, bottom:false }; //set border flags\n\t\tif (!config.id) config.id = uid();\n\n\t\t_event(this._contentobj, \"click\", this._ignore_clicks, {bind:this});\n\t\t_event(this._contentobj, \"click\", function(){\n\t\t\t// brings a window to the front of other windows\n\t\t\tif(!this._settings.zIndex && this._settings.toFront){\n\t\t\t\tthis._viewobj.style.zIndex = zIndex();\n\t\t\t}\n\t\t}, {bind:this, capture:true});\n\n\t\t// hidden_setter handling\n\t\tif(config.modal)\n\t\t\tthis._modal = true;\n\t\t// head_setter handling\n\t\tif(config.headHeight)\n\t\t\tthis._settings.headHeight = config.headHeight;\n\t\tif(config.close)\n\t\t\tthis._settings.close = config.close;\n\n\t\tthis.attachEvent(\"onViewMoveEnd\", function(){\n\t\t\tif(this._settings.position)\n\t\t\t\tdelete this._settings.position;\n\t\t});\n\t},\n\t_ignore_clicks:function(e){\n\t\tconst popups = state._popups;\n\t\tlet index = popups.find(this);\n\t\tif (index == -1)\n\t\t\tindex = popups.length - 1;\n\n\t\te.click_view = index;\n\t},\n\tgetChildViews:function(){\n\t\tif (this._head_cell)\n\t\t\treturn [this._head_cell, this._body_cell];\n\t\telse\n\t\t\treturn [this._body_cell];\n\t},\n\tzIndex_setter:function(value){\n\t\tthis._viewobj.style.zIndex = value;\n\t\treturn value;\n\t},\n\t_remove:function(){ \n\t\tthis.body_setter();\n\t},\n\t_replace:function(new_view, old_view){\n\t\told_view = old_view || this._body_cell;\n\t\tconst isBody = old_view == this._body_cell;\n\n\t\told_view.destructor();\n\n\t\tif(isBody)\n\t\t\tthis._body_cell = new_view;\n\t\telse \n\t\t\tthis._head_cell = new_view;\n\n\t\t(isBody ? this._bodyobj : this._headobj).appendChild(new_view._viewobj);\n\n\t\tconst cell = new_view._viewobj.style;\n\n\t\tlet settings = { top:true, left:true, right:true, bottom:true };\n\t\tlet size = \"0px\";\n\n\t\tif(new_view.config.borderless === false){\n\t\t\tsettings = clone(this._settings._inner);\n\t\t\tsize = \"1px\";\n\t\t}\n\t\tnew_view._settings._inner = settings;\n\t\tcell.borderTopWidth = cell.borderBottomWidth = cell.borderLeftWidth = cell.borderRightWidth = size;\n\n\t\tthis.resize(true);\n\t},\n\tshow:function(node, mode, point){\n\t\tif (node === true){\n\t\t\t//recursive call from some child item\n\t\t\tif (!this._settings.hidden)\n\t\t\t\treturn;\n\t\t\tnode = null;\n\t\t}\n\n\t\tif(!this.callEvent(\"onBeforeShow\",arguments))\n\t\t\treturn false;\n\n\t\tthis._settings.hidden = false;\n\t\tthis._viewobj.style.zIndex = zIndex(this._settings.zIndex);\n\t\tif (this._settings.modal || this._modal){\n\t\t\tthis._modal_set(true);\n\t\t\tthis._modal = null; // hidden_setter handling\n\t\t}\n\n\t\tlet elPos, dx, dy;\n\t\tmode = mode || {};\n\t\tif (!mode.pos)\n\t\t\tmode.pos = this._settings.relative;\n\n\t\t//get position of source html node\n\t\t//we need to show popup which pointing to that node\n\t\tif (node){\n\t\t\t//if event was provided - get node info from it\n\t\t\tif (typeof node == \"object\" && !node.tagName){\n\t\t\t\t/*below logic is far from ideal*/\n\t\t\t\tif (node.target){\n\t\t\t\t\telPos = getPos(node);\n\t\t\t\t\tdx = 20;\n\t\t\t\t\tdy = 5;\n\t\t\t\t} else\n\t\t\t\t\telPos = node;\n\t\t\t} else {\n\t\t\t\tnode = toNode(node);\n\t\t\t\tassert(node,\"Not existing target for window:show\");\n\t\t\t\telPos = offset(node);\n\t\t\t}\n\n\t\t\t//size of body, we need to fit popup inside\n\t\t\tconst x = Math.max(window.innerWidth || 0, document.body.offsetWidth);\n\t\t\tconst y = Math.max(window.innerHeight || 0, document.body.offsetHeight);\n\n\t\t\t//size of node, near which popup will be rendered\n\t\t\tdx = dx || node.offsetWidth  || 0;\n\t\t\tdy = dy || node.offsetHeight || 0;\n\t\t\t//size of popup element\n\t\t\tconst size = this._last_size;\n\n\t\t\tlet fin_x = elPos.x;\n\t\t\tlet fin_y = elPos.y;\n\t\t\tlet point_y = 0;\n\t\t\tlet point_x = 0;\n\t\t\tlet scrollLeft = 0, scrollTop = 0;\n\t\t\tconst fit = this._settings.autofit;\n\t\t\tif (fit){\n\t\t\t\tconst nochange = (fit === \"node\");\n\t\t\t\tlet delta_x = 6, delta_y = 6, delta_point = 6;\n\t\t\t\tif (!this._settings.point)\n\t\t\t\t\tdelta_x = delta_y = delta_point = 0;\n\n\t\t\t\t//default pointer position - top \n\t\t\t\tpoint = \"top\";\n\t\t\t\tfin_y=0; fin_x = 0;\n\n\t\t\t\tscrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\t//if we want to place menu at righ, but there is no place move it to left instead\n\t\t\t\tif (x - elPos.x - dx < size[0] && mode.pos == \"right\" && !nochange)\n\t\t\t\t\tmode.pos = \"left\";\n\n\t\t\t\tif (mode.pos == \"right\"){\n\t\t\t\t\tfin_x = elPos.x+delta_x+dx; \n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"left\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x - delta_point;\n\t\t\t\t} else if (mode.pos == \"left\"){\n\t\t\t\t\tfin_x = elPos.x-delta_x-size[0]-1;\n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"right\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x + size[0]+1;\n\t\t\t\t} else  {\n\t\t\t\t\t//left border of screen\n\t\t\t\t\tif (elPos.x < scrollLeft){\n\t\t\t\t\t\tfin_x = scrollLeft;\n\t\t\t\t\t//popup exceed the right border of screen\n\t\t\t\t\t} else if (x+scrollLeft-elPos.x > size[0]){\n\t\t\t\t\t\tfin_x = elPos.x; //aligned\n\t\t\t\t\t} else{\n\t\t\t\t\t\tfin_x = x+scrollLeft-delta_x-size[0]; //not aligned\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint_x = Math.round(elPos.x+dx/2);\n\t\t\t\t\t//when we have a small popup, point need to be rendered at center of popup\n\t\t\t\t\tpoint_x = Math.min(point_x, fin_x + size[0] - delta_point*3);\n\t\t\t\t}\n\n\t\t\t\t//if height is not fixed - use default position\n\t\t\t\tscrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tif (((!size[1] || (y+scrollTop-dy-elPos.y-delta_y > size[1])) || nochange) && mode.pos != \"top\"){\n\t\t\t\t\t//bottom\t\n\t\t\t\t\tfin_y = dy+elPos.y+delta_y - (!this._settings.point ? 0: 4);\n\t\t\t\t\tif (!point_y){\n\t\t\t\t\t\tpoint = \"top\";\n\t\t\t\t\t\tpoint_y = fin_y-delta_point;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//top\n\t\t\t\t\tfin_y = elPos.y-delta_y - size[1];\n\t\t\t\t\tif (fin_y < 0){\n\t\t\t\t\t\tfin_y = 0; \n\t\t\t\t\t\t//left|right point can be used, but there is no place for top point\n\t\t\t\t\t\tif (point == \"top\") point = false;\n\t\t\t\t\t} else if (!point_y){\n\t\t\t\t\t\tpoint = \"bottom\";\n\t\t\t\t\t\tfin_y --;\n\t\t\t\t\t\tpoint_y = fin_y+size[1]+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deltax = (mode.x || 0);\n\t\t\tconst deltay = (mode.y || 0);\n\n\t\t\tconst fixed = this._checkFixedPosition();\n\t\t\tthis.$view.style.position = fixed ? \"fixed\" : \"absolute\";\n\t\t\tif (fixed){\n\t\t\t\tfin_y = fin_y - scrollTop;\n\t\t\t\tpoint_y = point_y - scrollTop;\n\t\t\t}\n\n\t\t\tthis.setPosition(fin_x+deltax, fin_y+deltay);\n\t\t\tif (this._set_point){\n\t\t\t\tif (point && this._settings.point)\n\t\t\t\t\tthis._set_point(point,point_x+deltax, point_y+deltay, fixed);\n\t\t\t\telse\n\t\t\t\t\tthis._hide_point();\n\t\t\t}\n\t\t} else\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\n\t\tthis._viewobj.style.display = \"block\";\n\t\tthis._hide_timer = 1;\n\t\tdelay(function(){ this._hide_timer = 0; }, this, [], (env.fastClick ? 100 : 400));\n\n\t\tthis._render_hidden_views();\n\n\t\tif (this.config.autofocus){\n\t\t\tthis._prev_focus = UIManager.getFocus();\n\t\t\tUIManager.setFocus(this);\n\t\t}\n\n\t\tif (-1 == state._popups.find(this))\n\t\t\tstate._popups.push(this);\n\n\t\tthis.callEvent(\"onShow\",[]);\n\t}, \n\t_hide:function(e){\n\t\t//do not hide modal windows\n\t\tif (this._settings.hidden || this._settings.modal || !this._settings.escHide || this._hide_timer) return;\n\n\t\tif(e){\n\t\t\t//do not hide submenu when clicking on menu folder\n\t\t\tif (e.showpopup && (e.showpopup == this._settings.id || (this.getTopMenu && this.getTopMenu()._settings.id == e.showpopup))) return;\n\t\t\t//do not hide popup, when starting dnd with a long touch\n\t\t\tif (env.touch && e.longtouch_drag) return;\n\t\t\t//do not hide popup, when we hide inner suggest by pressing esc\n\t\t\tif (e.hidesuggest) return;\n\t\t}\n\n\t\t//do not hide popup, when we have modal layer above the popup\n\t\tif (state._modality.length && this._viewobj.style.zIndex <= Math.max(...state._modality)) return;\n\n\t\t//ignore inside clicks and clicks in child-popups\n\n\t\tif (e){\n\t\t\tlet index = e.click_view;\n\t\t\tif (!index && index !== 0) index = -1;\n\n\t\t\tconst myindex = state._popups.find(this);\n\n\t\t\tif (myindex <= index) return;\n\t\t}\n\n\t\tthis._hide_single();\n\t},\n\thidden_setter:function(value){\n\t\tif(value) \n\t\t\tthis.hide();\n\t\telse\n\t\t\tthis.show();\n\t\treturn !!value;\n\t},\n\thide:function(){\n\t\tconst index = this._hide_single();\n\t\tthis._hide_sub_popups(index);\n\t},\n\t_hide_single:function(){\n\t\tif (this.$destructed || this._settings.hidden) return;\n\n\t\tif (this._settings.modal)\n\t\t\tthis._modal_set(false);\n\n\t\tthis._hiding_process();\n\n\t\tif (this._settings.master){\n\t\t\tconst view = $$(this._settings.master);\n\t\t\tif (view && view.touchable && view._settings.popup === this._settings.id){\n\t\t\t\tconst node = view.getInputNode() || view.getNode();\n\t\t\t\tnode.setAttribute(\"aria-expanded\", false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._settings.autofocus){\n\t\t\tconst el = document.activeElement;\n\t\t\t//as result of hotkey, we can have a activeElement set to document.body\n\t\t\tif (el && this._viewobj && (this._viewobj.contains(el) || el === document.body)){\n\t\t\t\tUIManager.setFocus(this._prev_focus);\n\t\t\t\tthis._prev_focus = null;\n\t\t\t}\n\t\t}\n\n\t\t// clear state\n\t\tconst index = state._popups.find(this);\n\t\tif (index > -1)\n\t\t\tstate._popups.removeAt(index);\n\n\t\treturn index;\n\t},\n\t_hiding_process:function(){\n\t\tif (this._settings.position == \"top\"){\n\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:-(this._content_height+20), duration: 300,\n\t\t\t\tcallback:this._hide_callback, master:this});\n\t\t} else \n\t\t\tthis._hide_callback();\n\t},\n\t//hide all child-popups\n\t_hide_sub_popups:function(index){\n\t\tif (index > -1){\n\t\t\tconst order = state._popups;\n\t\t\tfor (let i=order.length-1; i>=index; i--)\n\t\t\t\tif (order[i]._hide_point)\t//hide only popups, skip windows\n\t\t\t\t\torder[i]._hide_single();\n\t\t}\n\t},\n\tdestructor: function() {\n\t\tthis.hide();\n\t\tDestruction.destructor.apply(this, []);\n\t},\n\t_hide_callback:function(){\n\t\tif (!this.$destructed){\n\t\t\tthis._viewobj.style.display = \"none\";\n\t\t\tthis._settings.hidden = true;\n\t\t\tthis.callEvent(\"onHide\",[]);\n\t\t}\n\t},\n\tclose:function(){\n\t\tthis.destructor(); \n\t},\n\t_inner_body_set:function(value){\n\t\tif (typeof value.borderless == \"undefined\")\n\t\t\tvalue.borderless = true;\n\t},\n\tbody_setter:function(value){\n\t\tif (typeof value != \"object\")\n\t\t\tvalue = {template:value };\n\t\tthis._inner_body_set(value);\n\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\thead_setter:function(value){\n\t\tif (value === false) return value;\n\n\t\tconst height = this._settings.headHeight;\n\t\tconst text = typeof value == \"string\";\n\t\tconst config = { height, padding:0, css: \"webix_win_title\", type:\"header\", borderless:true };\n\t\tif(text){\n\t\t\tthis._viewobj.setAttribute(\"aria-label\", value);\n\t\t\tvalue = { template:value };\n\t\t}\n\t\tif(value.view == \"template\" || (!value.view && value.template)){\n\t\t\textend(value, config);\n\t\t}\n\t\tif(text && this.config.close){\n\t\t\tvalue = { padding:{ left: $active.inputHeight+2, right:2 }, cols:[\n\t\t\t\tvalue,\n\t\t\t\t{ height, view:\"icon\", icon:\"wxi-close\", click:()=>{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}}\n\t\t\t]};\n\t\t}\n\t\telse\n\t\t\textend(value, {borderless:true});\n\n\t\tstate._parent_cell = this;\n\t\tthis._head_cell = ui._view(value);\n\n\t\tconst template = this._head_cell._viewobj.querySelector(\".webix_win_title>div\");\n\t\tif(template)\n\t\t\ttemplate.style.lineHeight = height + \"px\";\n\n\t\tthis._headobj.appendChild(this._head_cell._viewobj);\n\t\treturn value;\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\tgetHead:function(){\n\t\treturn this._head_cell;\n\t},\n\tadjust:function(){ return this.resize(); },\n\tresizeChildren:function(){\n\t\tif (this._body_cell)\n\t\t\tthis.resize();\n\t},\n\tresize:function(){\n\t\tbaseview.api.adjust.call(this);\n\t\tcallEvent(\"onResize\", []);\n\t\tif (this.isVisible()){\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\t\t}\n\t},\n\t_checkFixedPosition: function() {\n\t\tif(this._settings.master) {\n\t\t\tconst top = $$(this._settings.master).getTopParentView().$view;\n\t\t\treturn top && top.style.position === \"fixed\";\n\t\t}\n\t\treturn false;\n\t},\n\t_setPosition:function(x,y){\n\t\tif ((this._settings.position || this._checkFixedPosition())){\n\t\t\tthis.$view.style.position = \"fixed\";\n\n\t\t\tconst width = this._content_width;\n\t\t\tconst height = this._content_height;\n\t\t\tif (width <= 0 || height <= 0) return;\n\n\t\t\tconst maxWidth = (window.innerWidth||document.documentElement.offsetWidth);\n\t\t\tconst maxHeight = (window.innerHeight||document.documentElement.offsetHeight);\n\t\t\tlet left = Math.round((maxWidth-width)/2);\n\t\t\tlet top = Math.round((maxHeight-height)/2);\n\n\t\t\tif (typeof this._settings.position == \"function\"){\n\t\t\t\tconst state = { \tleft:left, top:top, \n\t\t\t\t\twidth:width, height:height, \n\t\t\t\t\tmaxWidth:maxWidth, maxHeight:maxHeight };\n\t\t\t\tthis._settings.position.call(this, state);\n\t\t\t\tif (state.width != width || state.height != height){\n\t\t\t\t\tthis._settings.width = state.width;\n\t\t\t\t\tthis._settings.height = state.height;\n\t\t\t\t\tthis.$setSize(state.width, state.height);\n\t\t\t\t}\n\t\t\t\tthis.setPosition(state.left, state.top);\n\t\t\t} else {\n\t\t\t\tif (this._settings.position == \"top\"){\n\t\t\t\t\ttop = -1*height;\n\t\t\t\t}\n\t\t\t\t//popup inside a fixed win\n\t\t\t\tif(!this._settings.position){\n\t\t\t\t\tleft = this._settings.left || left;\n\t\t\t\t\ttop = this._settings.top || top;\n\t\t\t\t}\n\t\t\t\tthis.setPosition(left, top);\n\t\t\t}\n\n\t\t\tif (this._settings.position == \"top\")\n\t\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:height-((this._settings.padding||0)*2), duration: 300 ,callback:this._topPositionCallback, master:this});\n\t\t} else \n\t\t\tthis.setPosition(x,y);\n\t},\n\t_topPositionCallback:function(node){\n\t\tanimate.clear(node);\n\t\tthis._settings.top=-((this._settings.padding||0)*2);\n\t\tthis.setPosition(this._settings.left, this._settings.top);\n\t},\n\tsetPosition:function(x,y){\n\t\tthis._viewobj.style.top = y+\"px\";\n\t\tthis._viewobj.style.left = x+\"px\";\n\t\tthis._settings.left = x; this._settings.top=y;\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t//line between head and body\n\t\tif (this._settings.head)\n\t\t\tdy += 1;\n\n\t\tconst size =  this._body_cell.$getSize(0,0);\n\t\tlet headMinWidth = 0;\n\t\tif (this._head_cell){\n\t\t\tconst head_size = this._head_cell.$getSize(0,0);\n\t\t\tif (head_size[3]==head_size[2])\n\t\t\t\tthis._settings.headHeight = head_size[3];\n\t\t\tdy += this._settings.headHeight;\n\t\t\theadMinWidth = head_size[0];\n\t\t}\n\n\t\tif (this._settings.fullscreen){\n\t\t\tconst width = window.innerWidth || document.body.clientWidth;\n\t\t\tconst height = window.innerHeight || document.body.clientHeight;\n\t\t\treturn [width, width, height, height];\n\t\t}\n\n\t\t//get layout sizes\n\t\tconst self_size = base.api.$getSize.call(this, 0, 0);\n\n\t\t//use child settings if layout's one was not defined\n\t\tif (headMinWidth && size[1] > 100000)\n\t\t\tsize[0] = Math.max(headMinWidth, size[0]);\n\n\t\tself_size[1] = Math.min(self_size[1],(size[1]>=100000&&self_size[1]>=100000?Math.max(size[0], self_size[0]):size[1])+dx);\n\t\tself_size[3] = Math.min(self_size[3],(size[3]>=100000&&self_size[3]>=100000?Math.max(size[2], self_size[2]):size[3])+dy);\n\n\t\tself_size[0] = Math.min(Math.max(self_size[0],size[0] + dx), self_size[1]);\n\t\tself_size[2] = Math.min(Math.max(self_size[2],size[2] + dy), self_size[3]);\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tx = this._content_width;\n\t\ty = this._content_height;\n\t\tif (this._settings.head === false) {\n\t\t\tthis._headobj.style.display=\"none\";\n\t\t\tthis._body_cell.$setSize(x,y);\n\t\t} else { \n\t\t\tthis._head_cell.$setSize(x,this._settings.headHeight);\n\t\t\tthis._body_cell.$setSize(x,y-this._settings.headHeight);\n\t\t}\n\t},\n\t$skin:function(){\n\t\tthis.defaults.headHeight = $active.barHeight;\n\t},\n\tdefaults:{\n\t\ttop:0,\n\t\tleft:0,\n\t\tautofit:true,\n\t\trelative:\"bottom\",\n\t\tbody:\"\",\n\t\thead:\"\",\n\t\thidden: true,\n\t\tautofocus:true,\n\t\tminWidth:300,\n\t\tminHeight:200,\n\t\tescHide:true\n\t}\n};\n\n//global longtouch handler\nattachEvent(\"onLongTouch\", function(ev){\n\tif (!ev || !ev.target) return;\n\n\tlet view = $$(ev.target);\n\tif (view){\n\t\tview = view.queryView(a => !a.getParentView(), \"parent\")||view;\n\n\t\tconst popups = state._popups;\n\t\tconst index = popups.find(view);\n\t\tif (index !== -1) ev.click_view = index;\n\t}\n});\n\nconst view = protoUI(api, base.view, Movable, Modality, EventSystem, ResizeArea);\nexport default {api, view};","import state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\nimport {bind, delay} from \"../webix/helpers\";\nimport {event} from \"../webix/htmlevents\";\n\n\nconst clipbuffer = {\n\n\t_area: null,\n\t_blur_id: null,\n\t_ctrl: 0,\n\n\t/*! create textarea or returns existing\n\t **/\n\tinit: function() {\n\t\t// returns existing textarea\n\t\tif (this._area !== null)\n\t\t\treturn this._area;\n\n\t\tstate.destructors.push({ obj: this });\n\t\t// creates new textarea\n\t\tthis._area = document.createElement(\"textarea\");\n\t\tthis._area.className = \"webix_clipbuffer\";\n\t\tthis._area.setAttribute(/*@attr*/\"webixignore\", 1);\n\t\tthis._area.setAttribute(\"spellcheck\", \"false\");\n\t\tthis._area.setAttribute(\"autocapitalize\", \"off\");\n\t\tthis._area.setAttribute(\"autocorrect\", \"off\");\n\t\tthis._area.setAttribute(\"autocomplete\", \"off\");\n\t\tdocument.body.appendChild(this._area);\n\n\t\tevent(document.body, \"keydown\", bind(function(e){\n\t\t\tvar key = e.which || e.keyCode;\n\t\t\tvar ctrl = !!(e.ctrlKey || e.metaKey);\n\t\t\tif (key === 86 && ctrl){\n\t\t\t\tthis._area.value = \"\";\n\t\t\t\tdelay(this._paste, this, [e], 100);\n\t\t\t}\n\t\t}, this));\n\n\t\treturn this._area;\n\t},\n\tdestructor: function(){\n\t\tthis._area = null;\n\t},\n\t/*! set text into buffer\n\t **/\n\tset: function(text) {\n\t\tthis.init();\n\t\ttext = text === \"\" ? \"\\n\" : text;\n\t\tthis._area.value = text;\n\t\tthis.focus();\n\t},\n\t/*! select text in textarea\n\t **/\n\tfocus: function() {\n\t\t// if there is native browser selection, skip focus\n\t\tif(!this._isSelectRange()){\n\t\t\tthis.init();\n\t\t\tthis._area.focus();\n\t\t\tthis._area.select();\n\t\t}\n\n\t},\n\t/*! checks document selection\n\t **/\n\t_isSelectRange: function() {\n\t\tvar text = \"\";\n\t\tif (typeof window.getSelection != \"undefined\") {\n\t\t\ttext = window.getSelection().toString();\n\t\t} else if (typeof document.selection != \"undefined\" && document.selection.type == \"Text\") {\n\t\t\ttext = document.selection.createRange().text;\n\t\t}\n\t\treturn !!text;\n\t},\n\t/*! process ctrl+V pressing\n\t **/\n\t_paste: function(e) {\n\t\tvar trg = e.target;\n\t\tif (trg === this._area) {\n\t\t\tvar text = this._area.value;\n\t\t\tvar last_active = UIManager.getFocus();\n\t\t\tif (last_active && (!last_active.getEditor || !last_active.getEditor())){\n\t\t\t\tlast_active.callEvent(\"onPaste\", [text]);\n\t\t\t\tthis._area.select();\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default clipbuffer;","import {create, insertBefore, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {extend, bind} from \"../webix/helpers\";\n\n\nconst CustomPrint = {\n\t$customPrint:function(options, htmlOnly){\n\t\tif(this._prePrint(options, htmlOnly))\n\t\t\treturn true;\n\n\t\tvar tableData = this._getTableArray(options);\n\t\tvar table = this._getTableHTML(tableData, options);\n\n\t\tif(htmlOnly)\n\t\t\treturn table;\n\n\t\tvar doc = create(\"div\", { \"class\":\"webix_ui_print\"});\n\t\tdoc.appendChild(table);\n\n\t\tinsertBefore(doc, options.docFooter, document.body);\n\t\twindow.print();\n\t\t\n\t\tremove(doc);\n\t},\n\t_prePrint:function(options, htmlOnly){\n\t\tif(!htmlOnly && (this.config.layout ==\"y\" || options.scroll || this.config.prerender || this.config.autoheight)) return true;\n\t\t\n\t\tif(this.config.layout ==\"x\")\n\t\t\textend(options || {}, {xCount:this.count(), nobreaks:true}, true);\n\t},\n\t_getPageWidth:function(options){\n\t\tvar size = options.size;\n\t\tvar width = size[options.mode == \"portrait\"?\"width\":\"height\"];\n\t\t\n\t\treturn Math.min(width*env.printPPI-2*env.printMargin);\n\t},\n\t_getTableArray:function(options, base, start){\n\t\tvar maxWidth = options.fit ==\"page\" ? Infinity : this._getPageWidth(options);\n\t\tvar xCount = options.xCount || this._getVisibleRange()._dx;\n\n\t\tvar tableArray = [];\n\t\tvar colrow = [];\n\t\tvar width = 0;\n\t\t\n\t\tvar newTableStart, rownum, colnum;\n\n\t\tstart = start || 0;\n\t\tbase = base || [];\n\n\t\tfor(var i = 0; i<this.data.order.length;){\n\t\t\tvar obj = this.data.pull[this.data.order[i]];\n\t\t\trownum = parseInt(i/xCount);\n\t\t\tcolnum = i-(rownum*xCount);\n\n\t\t\tif(obj && colnum>=start){\n\t\t\t\twidth += this.type.width;\n\t\t\t\t\n\t\t\t\t//start a new table, if cells do not fit page width\n\t\t\t\tif(width > maxWidth && colnum>start){ // 'colnum>start' ensures that a single long cell will have to fit the page\n\t\t\t\t\tnewTableStart = colrow.length+start;\n\t\t\t\t\ttableArray.push(colrow);\n\t\t\t\t\ti = i+(xCount-colrow.length);\n\t\t\t\t\tcolrow = [];\n\t\t\t\t\twidth = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar cellValue = this.type.template(obj, this.type);\n\t\t\t\tvar className = this._itemClassName;\n\t\t\t\t\n\t\t\t\tvar style  = {\n\t\t\t\t\tdisplay:\"table-cell\",\n\t\t\t\t\theight:this.type.height + \"px\",\n\t\t\t\t\twidth:this.type.width + \"px\"\n\t\t\t\t};\n\t\t\t\t//push a cell to a row\n\t\t\t\tcolrow.push({\n\t\t\t\t\ttxt: cellValue,\n\t\t\t\t\tclassName: className+\" \"+(obj.$css || \"\"),\n\t\t\t\t\tstyle: style\n\t\t\t\t});\n\t\t\t\t//push a row to a table and start a new row\n\t\t\t\tif((i+1)%xCount === 0){\n\t\t\t\t\ttableArray.push(colrow);\n\t\t\t\t\tcolrow = [];\n\t\t\t\t\twidth = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tbase.push(tableArray);\n\n\t\tif(newTableStart)\n\t\t\tthis._getTableArray(options, base, newTableStart);\t\n\n\t\treturn base;\n\t},\n\t_getTableHTML:function(tableData, options){\n\t\t\n\t\tvar container = create(\"div\");\n\n\t\ttableData.forEach(bind(function(table, i){\n\n\t\t\tvar tableHTML = create(\"table\", {\n\t\t\t\t\"class\":\"webix_table_print \"+this.$view.className,\n\t\t\t\t\"style\":\"border-collapse:collapse\"\n\t\t\t});\n\n\t\t\ttable.forEach(function(row){\n\t\t\t\tvar tr = create(\"tr\");\n\n\t\t\t\trow.forEach(function(column){\n\t\t\t\t\tvar td = create(\"td\");\n\n\n\t\t\t\t\tif (column.txt) td.innerHTML = column.txt;\n\t\t\t\t\tif (column.className) td.className = column.className;\n\t\t\t\t\tif (column.style) {\n\t\t\t\t\t\tvar keys = Object.keys(column.style);\n\t\t\t\t\t\tkeys.forEach(function(key){\n\t\t\t\t\t\t\tif (column.style[key])\n\t\t\t\t\t\t\t\ttd.style[key] = column.style[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif(column.span){\n\t\t\t\t\t\tif(column.span.colspan > 1)\n\t\t\t\t\t\t\ttd.colSpan = column.span.colspan;\n\t\t\t\t\t\tif(column.span.rowspan > 1)\n\t\t\t\t\t\t\ttd.rowSpan = column.span.rowspan;\n\t\t\t\t\t}\n\t\t\t\t\ttr.appendChild(td);\n\t\t\t\t});\n\t\t\t\ttableHTML.appendChild(tr);\n\t\t\t});\n\t\t\tcontainer.appendChild(tableHTML);\n\n\t\t\tif(!options.nobreaks && i+1 < tableData.length){\n\t\t\t\tvar br = create(\"DIV\", {\"class\":\"webix_print_pagebreak\"});\n\t\t\t\tcontainer.appendChild(br);\n\t\t\t}\n\t\t\t\n\t\t}, this));\n\n\t\treturn container;\n\t}\n};\n\nexport default CustomPrint;","import {assert} from \"../webix/debug\";\nimport {copy, isUndefined, bind, isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {define} from \"../services\";\n\nimport {$$, proto} from \"../ui/core\";\n\nimport {ajax} from \"../load/ajax\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport Settings from \"../core/settings\";\nimport EventSystem from \"../core/eventsystem\";\nimport ValidateData from \"../core/validatedata\";\n\nconst _pull = {};\n\nexport function dp(name,getOnly){\n\tif (typeof name == \"object\" && name._settings)\n\t\tname = name._settings.id;\n\tif (_pull[name] || getOnly)\n\t\treturn _pull[name];\n\n\tif (typeof name == \"string\"||typeof name == \"number\")\n\t\tname = { master:$$(name) };\n\n\tvar dp = new DataProcessor(name);\n\tvar masterId = dp._settings.master._settings.id;\n\t_pull[masterId]=dp;\n\n\t$$(masterId).attachEvent(\"onDestruct\",function(){\n\t\t_pull[this._settings.id] = null;\n\t\tdelete _pull[this._settings.id];\n\t});\n\n\treturn dp;\n}\n\ndefine(\"dp\", dp);\n\ndp.$$ = function(id){\n\treturn _pull[id];\n};\n\n\nexport const DataProcessor = proto({\n\tdefaults: {\n\t\tautoupdate:true,\n\t\tupdateFromResponse:false,\n\t\tmode:\"post\",\n\t\toperationName:\"webix_operation\",\n\t\ttrackMove:false\n\t},\n\n\n\t/*! constructor\n\t **/\n\t$init: function() {\n\t\tthis.reset();\n\t\tthis._ignore = false;\n\t\tthis.name = \"DataProcessor\";\n\t\tthis.$ready.push(this._after_init_call);\n\t},\n\treset:function(){\n\t\tthis._updates = [];\n\t},\n\turl_setter:function(value){\n\t\t/*\n\t\t\twe can use simple url or mode->url\n\t\t*/\n\t\tvar mode = \"\";\n\t\tif (typeof value == \"string\"){\n\t\t\tvar parts = value.split(\"->\");\n\t\t\tif (parts.length > 1){\n\t\t\t\tvalue = parts[1];\n\t\t\t\tmode = parts[0];\n\t\t\t}\n\t\t} else if (value && value.mode){\n\t\t\tmode = value.mode;\n\t\t\tvalue = value.url;\n\t\t}\n\n\t\tif (mode)\n\t\t\treturn proxy(mode, value);\n\n\t\treturn value;\n\t},\n\tmaster_setter:function(value){\n\t\tvar store = value;\n\t\tif (value.name != \"DataStore\")\n\t\t\tstore = value.data;\n\n\t\tthis._settings.store = store;\n\t\treturn value;\n\t},\n\t_promise:function(handler){\n\t\tconst prev = this._waitSave;\n\t\tthis._waitSave = [];\n\t\t\n\t\thandler();\n\t\tconst result = Promise.all(this._waitSave);\n\n\t\tthis._waitSave = prev;\n\t\tif (prev)\n\t\t\tprev.push(result);\n\n\t\treturn result;\n\t},\n\t/*! attaching onStoreUpdated event\n\t **/\n\t_after_init_call: function(){\n\t\tconst store = this._settings.store;\n\t\tif (store){\n\t\t\tstore.attachEvent(\"onStoreUpdated\", bind(this._onStoreUpdated, this));\n\t\t\tstore.attachEvent(\"onDataMove\", bind(this._onDataMove, this));\n\t\t}\n\t},\n\tignore:function(code,master){\n\t\tvar temp = this._ignore;\n\t\tthis._ignore = true;\n\t\tcode.call((master||this));\n\t\tthis._ignore = temp;\n\t},\n\toff:function(){\n\t\tthis._ignore = true;\n\t},\n\ton:function(){\n\t\tthis._ignore = false;\n\t},\n\n\t_copy_data:function(source){\n\t\tvar obj = {};\n\t\tfor (var key in source)\t\n\t\t\tif (key.indexOf(\"$\")!==0)\n\t\t\t\tobj[key]=source[key];\n\t\treturn obj;\n\t},\n\tsave:function(id, operation, obj){\n\t\toperation = operation || \"update\";\n\t\treturn this._save_inner(id, obj, operation, true);\n\t},\n\t_save_inner:function(id, obj, operation, now){\n\t\tif (typeof id == \"object\") id = id.toString();\n\t\tif (!id || this._ignore === true || !operation || operation == \"paint\") return;\n\n\t\tvar store = this._settings.store;\n\t\tif (store){\n\t\t\tobj = obj || this._settings.store.getItem(id);\n\t\t\tif (store._scheme_serialize)\n\t\t\t\tobj = store._scheme_serialize(obj);\n\t\t}\n\n\t\tvar update = { id: id, data:this._copy_data(obj), operation:operation };\n\t\t//save parent id\n\t\tif (!isUndefined(obj.$parent)) update.data.parent = obj.$parent;\n\n\t\tif (update.operation != \"delete\"){\n\t\t\t//prevent saving of not-validated records\n\t\t\tvar master = this._settings.master;\n\t\t\tif (master && master.data && master.data.getMark && master.data.getMark(id, \"webix_invalid\"))\n\t\t\t\tupdate._invalid = true;\n\n\t\t\tif (!this.validate(null, update.data))\n\t\t\t\tupdate._invalid = true;\n\t\t}\n\n\t\tif (this._check_unique(update))\n\t\t\tthis._updates.push(update);\n\n\t\tif (this._settings.autoupdate || now)\n\t\t\treturn this._sendData(id);\n\t\t\t\n\t\treturn;\n\t},\n\t_onDataMove:function(sid, tindex, parent, targetid){\n\t\tif (this._settings.trackMove){\n\t\t\tvar obj = copy(this._settings.store.getItem(sid));\n\n\t\t\tobj.webix_move_index = tindex;\n\t\t\tobj.webix_move_id = targetid;\n\t\t\tobj.webix_move_parent = parent;\n\t\t\tthis._save_inner(sid, obj, \"order\");\n\t\t}\n\t},\n\t_onStoreUpdated: function(id, obj, operation){\n\t\tswitch (operation) {\n\t\t\tcase \"save\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"update\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\toperation = \"insert\";\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\t\toperation = \"delete\";\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t\treturn this._save_inner(id, obj, operation);\n\t},\n\t_check_unique:function(check){\n\t\tfor (var i = 0; i < this._updates.length; i++){\n\t\t\tvar one = this._updates[i];\n\t\t\tif (one.id == check.id && !one._in_progress){\n\t\t\t\tif (check.operation == \"delete\"){\n\t\t\t\t\tif (one.operation == \"insert\")\n\t\t\t\t\t\tthis._updates.splice(i,1);\n\t\t\t\t\telse \n\t\t\t\t\t\tone.operation = \"delete\";\n\t\t\t\t}\n\t\t\t\tone.data = check.data;\n\t\t\t\tone._invalid = check._invalid;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsend:function(){\n\t\treturn this._sendData();\n\t},\n\t_sendData: function(triggerId){\n\t\tif (!this._settings.url)\n\t\t\treturn;\n\n\t\tvar wait;\n\t\tvar marked = this._updates;\n\t\tvar to_send = [];\n\t\tvar url = this._settings.url;\n\n\t\tfor (let i = 0; i < marked.length; i++) {\n\t\t\tvar tosave = marked[i];\n\n\t\t\tif (tosave._in_progress) continue;\n\t\t\tif (tosave._invalid) continue;\n\n\t\t\tvar id = tosave.id;\n\t\t\t// call to .save(id) without autoupdate mode will send the specific object only\n\t\t\tif (!this._settings.autoupdate && triggerId && triggerId != id)\n\t\t\t\tcontinue;\n\n\t\t\tvar operation = tosave.operation;\n\t\t\tvar precise_url = proxy.$parse((typeof url == \"object\" && !url.$proxy) ? url[operation] : url);\n\t\t\tvar custom = precise_url && (precise_url.$proxy || typeof precise_url === \"function\");\n\n\t\t\tif (!precise_url) continue;\n\n\t\t\tconst store = this._settings.store;\n\t\t\tif (store && store._scheme_save)\n\t\t\t\tstore._scheme_save(tosave.data);\n\n\t\t\tif (!this.callEvent(\"onBefore\"+operation, [id, tosave]))\n\t\t\t\tcontinue;\n\t\t\ttosave._in_progress = true;\n\n\t\t\tif (!this.callEvent(\"onBeforeDataSend\", [tosave])) return;\n\n\t\t\ttosave.data = this._updatesData(tosave.data);\n\n\t\t\tlet result;\n\t\t\tif (precise_url.$proxy){\n\t\t\t\tif (precise_url.save){\n\t\t\t\t\t//proxy\n\t\t\t\t\tresult = precise_url.save(this.config.master, tosave, this);\n\t\t\t\t}\n\t\t\t\tto_send.push(tosave);\n\t\t\t} else {\n\t\t\t\tif (operation == \"insert\")\n\t\t\t\t\tdelete tosave.data.id;\n\t\t\t\t\n\t\t\t\tif (custom){\n\t\t\t\t\t//save function\n\t\t\t\t\tresult = precise_url.call(this.config.master, tosave.id, tosave.operation, tosave.data);\n\t\t\t\t} else {\n\t\t\t\t\t//normal url\n\t\t\t\t\ttosave.data[this._settings.operationName] = operation;\n\n\t\t\t\t\tresult = this._send(precise_url, tosave.data, this._settings.mode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, { id: tosave.id, status: tosave.operation });\n\t\t\t\tif (triggerId && id === triggerId){\n\t\t\t\t\twait = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onAfterDataSend\", [tosave]);\n\t\t}\n\n\t\tif (url.$proxy && url.saveAll && to_send.length){\n\t\t\tlet result = url.saveAll(this.config.master, to_send, this);\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, null);\n\t\t\t\tif (!wait)\n\t\t\t\t\twait = result;\n\t\t\t}\n\t\t}\n\n\t\treturn wait;\n\t},\n\t_proxy_on_save:function(result, state){\n\t\tif(result){\n\t\t\tif(!result.then)\n\t\t\t\tresult = promise.resolve(result);\n\n\t\t\tresult = result.then((data) => {\n\t\t\t\tif (data && typeof data.json == \"function\")\n\t\t\t\t\tdata = data.json();\n\n\t\t\t\tvar processed;\n\t\t\t\tif (state === null){\n\t\t\t\t\tprocessed = this._processResult(data); //array of responses\n\t\t\t\t} else {\n\t\t\t\t\tprocessed = this._processResult(state, \"\", data, -1); //text, data, loader\n\t\t\t\t}\n\n\t\t\t\tif (!processed)\n\t\t\t\t\tthrow processed; // trigger rejection\n\n\t\t\t\treturn processed;\n\t\t\t}, (x) => {\n\t\t\t\tthis._processError(state, \"\", null, x);\n\t\t\t\tthrow x;\n\t\t\t});\n\n\t\t\tif (this._waitSave)\n\t\t\t\tthis._waitSave.push(result);\n\n\t\t\treturn result;\n\t\t}\n\t},\n\n\t/*! process updates list to POST and GET params according dataprocessor protocol\n\t *\t@param updates\n\t *\t\tlist of objects { id: \"item id\", data: \"data hash\", operation: \"type of operation\"}\n\t *\t@return\n\t *\t\tobject { post: { hash of post params as name: value }, get: { hash of get params as name: value } }\n\t **/\n\n\n\n\t_updatesData:function(source){\n\t\tvar target = {};\n\t\tfor (var j in source){\n\t\t\tif (j.indexOf(\"$\")!==0)\n\t\t\t\ttarget[j] = source[j];\n\t\t}\n\t\treturn target;\n\t},\n\n\n\n\t/*! send dataprocessor query to server\n\t *\tand attach event to process result\n\t *\t@param url\n\t *\t\tserver url\n\t *\t@param get\n\t *\t\thash of get params\n\t *\t@param post\n\t *\t\thash of post params\n\t *\t@mode\n\t *\t\t'post' or 'get'\n\t **/\n\t_send: function(url, post, mode) {\n\t\tassert(url, \"url was not set for DataProcessor\");\n\t\treturn ajax()[mode](url, post);\n\t},\n\tattachProgress:function(start, end, error){\n\t\tthis.attachEvent(\"onBeforeDataSend\", start);\n\t\tthis.attachEvent(\"onAfterSync\", end);\n\t\tthis.attachEvent(\"onAfterSaveError\", error);\n\t\tthis.attachEvent(\"onLoadError\", error);\n\t},\n\t_processError:function(id, text, data, loader){\n\t\tif (id)\n\t\t\tthis._innerProcessResult(true, id.id, false, id.status, false, {text:text, data:data, loader:loader});\n\t\telse {\n\t\t\tthis.callEvent(\"onLoadError\", arguments);\n\t\t\tcallEvent(\"onLoadError\", [text, data, loader, this]);\n\t\t}\n\t},\n\t_innerProcessResult:function(error, id, newid, status, obj, details){\n\t\tvar master = this._settings.master;\n\t\tvar update = this.getItemState(id);\n\t\tupdate._in_progress = false;\n\n\n\n\t\tif (error){\n\t\t\tif (this.callEvent(\"onBeforeSaveError\", [id, status, obj, details])){\n\t\t\t\tupdate._invalid = true;\n\t\t\t\tif(this._settings.undoOnError && master._settings.undo){\n\t\t\t\t\tthis.ignore(function(){\n\t\t\t\t\t\tmaster.undo(id);\n\t\t\t\t\t});\n\t\t\t\t\tthis.setItemState(id, false);\n\t\t\t\t}\n\t\t\t\tthis.callEvent(\"onAfterSaveError\", [id, status, obj, details]);\n\t\t\t}\n\t\t\treturn;\n\t\t} else\n\t\t\tthis.setItemState(id, false);\n\n\t\tconst store = this._settings.store;\n\t\tif (store && store.exists(id)){\n\t\t\t//update from response\n\t\t\tif (newid && id != newid)\n\t\t\t\tstore.changeId(id, newid);\n\n\t\t\tif (obj && status != \"delete\" && this._settings.updateFromResponse)\n\t\t\t\tthis.ignore(function(){\t\t\t\t\n\t\t\t\t\tstore.updateItem(newid || id, obj);\n\t\t\t\t});\n\t\t}\n\t\t\t\n\n\t\t//clean undo history, for the saved record\n\t\tif(this._settings.undoOnError && master._settings.undo)\n\t\t\tmaster.removeUndo(newid||id);\n\n\t\tthis.callEvent(\"onAfterSave\",[obj, id, details]);\n\t\tthis.callEvent(\"onAfter\"+status, [obj, id, details]);\n\n\t\treturn obj || {};\n\t},\n\tprocessResult: function(state, hash, details){\n\t\t//compatibility with custom json response\n\t\tvar error = (hash && (hash.status == \"error\" || hash.status == \"invalid\"));\n\t\tvar newid = (hash ? ( hash.newid || hash.id ) : false);\n\n\t\treturn this._innerProcessResult(error, state.id, newid, state.status, hash, details);\n\t},\n\t// process saving from result\n\t_processResult: function(state, text, data, loader){\n\t\tvar finalResult;\n\t\tthis.callEvent(\"onBeforeSync\", [state, text, data, loader]);\n\n\t\tif(isArray(state)){ //saveAll results\n\t\t\tfinalResult = [];\n\t\t\tstate.forEach((one) => {\n\t\t\t\tfinalResult.push(this.processResult(one, one, {}));\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tif (loader === -1){\n\t\t\t\t//callback from promise\n\t\t\t\tfinalResult = this.processResult(state, data, {});\n\t\t\t} else {\n\t\t\t\tvar proxy = this._settings.url;\n\t\t\t\tif (proxy.$proxy && proxy.result){\n\t\t\t\t\tfinalResult = proxy.result(state, this._settings.master, this, text,  data, loader) || {};\n\t\t\t\t} else {\n\t\t\t\t\tvar hash;\n\t\t\t\t\tif (text){\n\t\t\t\t\t\thash = data.json();\n\t\t\t\t\t\t//invalid response\n\t\t\t\t\t\tif (text && (hash === null || typeof hash == \"undefined\"))\n\t\t\t\t\t\t\thash = { status:\"error\" };\n\t\t\t\t\t}\n\t\t\t\t\tfinalResult = this.processResult(state, hash,  {text:text, data:data, loader:loader});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onAfterSync\", [state, text, data, loader]);\n\t\treturn finalResult;\n\t},\n\n\n\t/*! if it's defined escape function - call it\n\t *\t@param value\n\t *\t\tvalue to escape\n\t *\t@return\n\t *\t\tescaped value\n\t **/\n\tescape: function(value) {\n\t\tif (this._settings.escape)\n\t\t\treturn this._settings.escape(value);\n\t\telse\n\t\t\treturn encodeURIComponent(value);\n\t},\n\tgetState:function(){\n\t\tif (!this._updates.length) return false;\n\t\tfor (var i = this._updates.length - 1; i >= 0; i--)\n\t\t\tif (this._updates[i]._in_progress)\n\t\t\t\treturn \"saving\";\n\n\t\treturn true;\n\t},\n\tgetItemState:function(id){\n\t\tvar index = this._get_stack_index(id);\n\t\treturn this._updates[index] || null;\n\t},\n\tsetItemState:function(id, state){\n\t\tif (state){\n\t\t\tthis._save_inner(id, null, \"update\");\n\t\t} else{\n\t\t\tvar index = this._get_stack_index(id);\n\t\t\tif (index > -1)\n\t\t\t\tthis._updates.splice(index, 1);\n\t\t}\n\t},\n\t_get_stack_index: function(id) {\n\t\tvar index = -1;\n\t\tfor (var i=0; i < this._updates.length; i++)\n\t\t\tif (this._updates[i].id == id) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\treturn index;\n\t}\n\n}, Settings, EventSystem, ValidateData);","import {extend, _to_array, uid, isUndefined, copy, isArray, bind} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\nimport i18n from \"../webix/i18n\";\n\nimport EventSystem from \"./eventsystem\";\nimport DataDriver from \"../load/drivers/index\";\n\n/*\n\tDataStore is not a behavior, it standalone object, which represents collection of data.\n\tCall provideAPI to map data API\n\n\t@export\n\t\texists\n\t\tgetIdByIndex\n\t\tgetIndexById\n\t\tget\n\t\tset\n\t\trefresh\n\t\tcount\n\t\tsort\n\t\tfilter\n\t\tnext\n\t\tprevious\n\t\tclearAll\n\t\tfirst\n\t\tlast\n*/\n\nfunction DataStore(){\n\tthis.name = \"DataStore\";\n\t\n\textend(this, EventSystem);\n\n\tthis.setDriver(\"json\");\t//default data source is an\n\tthis.pull = {};\t\t\t\t\t\t//hash of IDs\n\tthis.order = _to_array();\t\t//order of IDs\n\tthis._marks = {};\n}\n\nDataStore.prototype={\n\t//defines type of used data driver\n\t//data driver is an abstraction other different data formats - xml, json, csv, etc.\n\tsetDriver:function(type){\n\t\tassert(DataDriver[type],\"incorrect DataDriver\");\n\t\tthis.driver = DataDriver[type];\n\t},\n\t//process incoming raw data\n\t_parse:function(data){\n\t\tthis.callEvent(\"onParse\", [this.driver, data]);\n\n\t\tif (this._filter_order)\n\t\t\tthis.filter();\n\t\n\t\t//get size and position of data\n\t\tconst info = this.driver.getInfo(data);\n\n\t\tif (info.config)\n\t\t\tthis.callEvent(\"onServerConfig\",[info.config]);\n\n\t\tconst options = this.driver.getOptions(data);\n\t\tif (options)\n\t\t\tthis.callEvent(\"onServerOptions\", [options]);\n\n\t\t//get array of records\n\t\tconst recs = this.driver.getRecords(data);\n\n\t\tthis._inner_parse(info, recs);\n\n\t\t//in case of tree store we may want to group data\n\t\tif (this._scheme_group && this._group_processing && !this._not_grouped_order)\n\t\t\tthis._group_processing(this._scheme_group);\n\n\t\t//optional data sorting\n\t\tif (this._scheme_sort){\n\t\t\tthis.blockEvent();\n\t\t\tthis.sort(this._scheme_sort);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[this.driver, data]);\n\t\t//repaint self after data loading\n\t\tthis.refresh();\n\t},\n\t_inner_parse:function(info, recs){\n\t\tlet from = info.from;\n\t\tlet subload = true;\n\t\tlet marks = false;\n\n\t\t//some data is loaded and new data doesn't have \"pos\" - assuming update\n\t\tif (!from && from !== 0 && this.order[0]){\n\t\t\tif (this._removeMissed){\n\t\t\t\t//update mode, create kill list\n\t\t\t\tmarks = {};\n\t\t\t\tfor (let i=0; i<this.order.length; i++)\n\t\t\t\t\tmarks[this.order[i]]=true;\n\t\t\t}\n\t\t\t\n\t\t\tsubload = false;\n\t\t\tfrom = this.order.length;\n\t\t} else \n\t\t\tfrom = (from || 0)*1;\n\n\t\tlet j=0;\n\t\tfor (let i = 0; i < recs.length; i++){\n\t\t\t//get hash of details for each record\n\t\t\tconst temp = this.driver.getDetails(recs[i]);\n\t\t\tconst id = this.id(temp); \t//generate ID for the record\n\t\t\tif (!this.pull[id]){\t\t//if such ID already exists - update instead of insert\n\t\t\t\tthis.order[j+from]=id;\t\n\t\t\t\tj++;\n\t\t\t} else if (subload && this.order[j+from])\n\t\t\t\tj++;\n\n\t\t\tif(this.pull[id]){\n\t\t\t\textend(this.pull[id], temp, true);//add only new properties\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(this.pull[id]);\n\t\t\t\t//update mode, remove item from kill list\n\t\t\t\tif (marks)\n\t\t\t\t\tdelete marks[id];\n\t\t\t} else{\n\t\t\t\tthis.pull[id] = temp;\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(temp);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//update mode, delete items which are not existing in the new xml\n\t\tif (marks){\n\t\t\tthis.blockEvent();\n\t\t\tfor (let delid in marks)\n\t\t\t\tthis.remove(delid);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tconst endpos = info.size * 1;\n\t\tif (endpos) {\n\t\t\tif (!this.order[endpos-1])\n\t\t\t\tthis.order[endpos-1] = undefined;\n\t\t\tif (endpos < this.order.length)\n\t\t\t\tthis.order = _to_array(this.order.slice(0, endpos));\n\t\t}\n\t},\n\t//generate id for data object\n\tid:function(data){\n\t\treturn data.id||(data.id=uid());\n\t},\n\tchangeId:function(old, newid){\n\t\t//assert(this.pull[old],\"Can't change id, for non existing item: \"+old);\n\t\tif(old == newid) return;\n\t\t\n\t\tif(this.pull[old])\n\t\t\tthis.pull[newid] = this.pull[old];\n\t\t\n\t\tthis.pull[newid].id = newid;\n\t\tthis.order[this.order.find(old)]=newid;\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order[this._filter_order.find(old)]=newid;\n\t\tif (this._marks[old]){\n\t\t\tthis._marks[newid] = this._marks[old];\n\t\t\tdelete this._marks[old];\n\t\t}\n\n\n\t\tthis.callEvent(\"onIdChange\", [old, newid]);\n\t\tif (this._render_change_id)\n\t\t\tthis._render_change_id(old, newid);\n\t\tdelete this.pull[old];\n\t},\n\t//get data from hash by id\n\tgetItem:function(id){\n\t\treturn this.pull[id];\n\t},\n\t//assigns data by id\n\tupdateItem:function(id, update, mode){\n\t\tif (typeof id === \"object\")\n\t\t\tid = id.toString();\n\n\t\tconst data = this.getItem(id);\n\t\tlet old = null;\n\n\t\t//check is change tracking active\n\t\tconst changeTrack = this.hasEvent(\"onDataUpdate\");\n\n\t\tassert(data, \"Invalid ID for updateItem\");\n\t\tassert(!update || !update.id || update.id == id, \"Attempt to change ID in updateItem\");\n\t\tif (!isUndefined(update) && data !== update){\n\t\t\t//preserve original object\n\t\t\tif (changeTrack)\n\t\t\t\told = copy(data);\n\n\t\t\tid = data.id;\t//preserve id\n\t\t\textend(data, update, true);\n\t\t\tdata.id = id;\n\t\t}\n\n\t\tif (this._scheme_update)\n\t\t\tthis._scheme_update(data);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[id, data, (mode||\"update\")]);\n\n\t\tif (changeTrack)\n\t\t\tthis.callEvent(\"onDataUpdate\", [id, data, old]);\n\t},\n\t//sends repainting signal\n\trefresh:function(id){\n\t\tif (this._skip_refresh) return; \n\t\t\n\t\tif (id){\n\t\t\tif (this.exists(id))\n\t\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\t}else\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\t//converts range IDs to array of all IDs between them\n\tgetRange:function(from,to){\t\t\n\t\t//if some point is not defined - use first or last id\n\t\t//BEWARE - do not use empty or null ID\n\t\tif (from)\n\t\t\tfrom = this.getIndexById(from);\n\t\telse \n\t\t\tfrom = (this.$min||this.startOffset)||0;\n\t\tif (to)\n\t\t\tto = this.getIndexById(to);\n\t\telse {\n\t\t\tto = this.$max === 0 ? 0 : Math.min((this.$max?this.$max-1:(this.endOffset||Infinity)),(this.count()-1));\n\t\t\tif (to<0) to = 0; //we have not data in the store\n\t\t}\n\n\t\tif (from > to){ //can be in case of backward shift-selection\n\t\t\tlet a=to; to=from; from=a;\n\t\t}\n\n\t\treturn this.getIndexRange(from,to);\n\t},\n\t//converts range of indexes to array of all IDs between them\n\tgetIndexRange:function(from,to){\n\t\tto = Math.min((to === 0 ? 0 : (to||Infinity)), this.count()-1);\n\n\t\tconst ret = _to_array(); //result of method is rich-array\n\t\tfor (let i = (from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.order[i]));\n\t\treturn ret;\n\t},\n\t//returns total count of elements\n\tcount:function(){\n\t\treturn this.order.length;\n\t},\n\t//returns truy if item with such ID exists\n\texists:function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\t//nextmethod is not visible on component level, check DataMove.move\n\t//moves item from source index to the target index\n\tmove:function(sindex,tindex){\n\t\tassert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\t\tif (sindex == tindex) return;\n\n\t\tconst id = this.getIdByIndex(sindex);\n\t\tconst obj = this.getItem(id);\n\n\t\tif (this._filter_order)\n\t\t\tthis._move_inner(this._filter_order, 0, 0, this.getIdByIndex(sindex), this.getIdByIndex(tindex));\n\n\t\tthis._move_inner(this.order, sindex, tindex);\n\t\t\n\t\t\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"move\"]);\n\t},\n\t_move_inner:function(col, sindex, tindex, sid, tid){\n\t\tif (sid||tid){\n\t\t\tsindex = tindex = -1;\n\t\t\tfor (let i = 0; i < col.length; i++){\n\t\t\t\tif (col[i] == sid && sindex<0)\n\t\t\t\t\tsindex = i;\n\t\t\t\tif (col[i] == tid && tindex<0)\n\t\t\t\t\ttindex = i;\n\t\t\t}\n\t\t}\n\t\tconst id = col[sindex];\n\t\tcol.removeAt(sindex);\t//remove at old position\n\t\tcol.insertAt(id,Math.min(col.length, tindex));\t//insert at new position\n\t},\n\tscheme:function(config){\n\t\tthis._scheme = {};\n\t\tthis._scheme_save = config.$save;\n\t\tthis._scheme_init = config.$init||config.$change;\n\t\tthis._scheme_update = config.$update||config.$change;\n\t\tthis._scheme_serialize = config.$serialize;\n\t\tthis._scheme_group = config.$group;\n\t\tthis._scheme_sort = config.$sort;\n\t\tthis._scheme_export = config.$export;\n\n\t\t//ignore $-starting properties, as they have special meaning\n\t\tfor (let key in config)\n\t\t\tif (key.substr(0,1) != \"$\")\n\t\t\t\tthis._scheme[key] = config[key];\n\t},\n\timportData:function(target, silent){\n\t\tconst data = target ? (target.data || target) : [];\n\t\tthis._filter_order = null;\n\n\t\tif (typeof data.serialize == \"function\"){\n\t\t\tthis.order = _to_array([].concat(data.order));\n\n\t\t\t//make full copy, to preserve object properties\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (this._make_full_copy){\n\t\t\t\tthis._make_full_copy = false;\n\t\t\t\tconst oldpull = this.pull;\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull){\n\t\t\t\t\tconst old = oldpull[key];\n\t\t\t\t\tthis.pull[key] = copy(data.pull[key]);\n\t\t\t\t\tif (old && old.open) this.pull[key].open = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull)\n\t\t\t\t\tthis.pull[key] = data.pull[key];\n\t\t\t}\n\n\t\t\tif (data.branch && this.branch){\n\t\t\t\tthis.branch = copy(data.branch);\n\t\t\t\tthis._filter_branch = null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.order = _to_array();\n\t\t\tthis.pull = {};\n\t\t\tlet id, obj;\n\n\t\t\tif (isArray(target))\n\t\t\t\tfor (let key=0; key<target.length; key++){\n\t\t\t\t\tobj = id = target[key];\n\t\t\t\t\tif (typeof obj == \"object\")\n\t\t\t\t\t\tobj.id = obj.id || uid();\n\t\t\t\t\telse\n\t\t\t\t\t\tobj = { id:id, value:id };\n\n\t\t\t\t\tthis.order.push(obj.id);\n\t\t\t\t\tif (this._scheme_init)\n\t\t\t\t\t\tthis._scheme_init(obj);\n\t\t\t\t\tthis.pull[obj.id] = obj;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tfor (let key in data){\n\t\t\t\t\tthis.order.push(key);\n\t\t\t\t\tthis.pull[key] = { id:key, value: data[key] };\n\t\t\t\t}\n\t\t}\n\t\tif (this._extraParser && !data.branch){\n\t\t\tthis.branch = { 0:[]};\n\t\t\tif (!this._datadriver_child)\n\t\t\t\tthis._set_child_scheme(\"data\");\n\n\t\t\tfor (let i = 0; i<this.order.length; i++){\n\t\t\t\tconst key = this.order[i];\n\t\t\t\tthis._extraParser(this.pull[key], 0, 0, false);\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[]);\n\t\tif (!silent)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\tsync:function(source, filter, silent){\n\t\tthis.unsync();\n\n\t\tconst type = typeof source;\n\t\tif (type == \"string\")\n\t\t\tsource = $$(source);\n\n\t\tif (type != \"function\" && type != \"object\"){\n\t\t\tsilent = filter;\n\t\t\tfilter = null;\n\t\t}\n\t\t\n\t\tif (source.name != \"DataStore\" && source.name != \"TreeStore\"){\n\t\t\tif (source.data && (source.data.name === \"DataStore\" || source.data.name === \"TreeStore\"))\n\t\t\t\tsource = source.data;\n\t\t\telse {\n\t\t\t\tthis._sync_source = source;\n\t\t\t\treturn callEvent(\"onSyncUnknown\", [this, source, filter]);\n\t\t\t}\n\t\t}\n\n\t\tconst sync_logic = bind(function(id, data, mode){\n\t\t\tif (this._skip_next_sync) return;\n\n\t\t\t//sync of tree-structure with after-filtering\n\t\t\t//we need to make a full copy, to preserve $count\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (filter && this.branch) this._make_full_copy = true;\n\t\t\tthis.importData(source, true);\n\t\t\t\n\t\t\tif (filter)\n\t\t\t\tthis.silent(filter);\n\t\t\tif (this._on_sync)\n\t\t\t\tthis._on_sync();\n\n\t\t\tif(!(id && data && mode) && !this.count())//clearall\n\t\t\t\tthis._marks = {};\n\t\t\tif(mode ==\"delete\" && this._marks[id])\n\t\t\t\tdelete this._marks[id];\n\n\t\t\tthis.callEvent(\"onSyncApply\",[]);\n\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh();\n\t\t\telse\n\t\t\t\tsilent = false;\n\t\t}, this);\n\n\t\tthis._sync_events = [\n\t\t\tsource.attachEvent(\"onStoreUpdated\", sync_logic),\n\t\t\tsource.attachEvent(\"onIdChange\", bind(function(old, nid){ this.changeId(old, nid); this.refresh(nid); }, this))\n\t\t];\n\t\tthis._sync_source = source;\n\n\t\t//backward data saving\n\t\tthis._back_sync_handler = this.attachEvent(\"onStoreUpdated\", function(id, data, mode){\n\t\t\tif (mode == \"update\" || mode == \"save\"){\n\t\t\t\tthis._skip_next_sync = 1;\n\t\t\t\tsource.updateItem(id, data);\n\t\t\t\tthis._skip_next_sync = 0;\n\t\t\t}\n\t\t});\n\n\t\tsync_logic();\n\t},\n\tunsync:function(){\n\t\tif (this._sync_source){\n\t\t\tconst source = this._sync_source;\n\n\t\t\tif ((source.name != \"DataStore\" && source.name != \"TreeStore\") &&\n\t\t\t\t\t(!source.data || source.data.name != \"DataStore\" || source.data.name != \"TreeStore\")){\n\t\t\t\t//data sync with external component\n\t\t\t\tcallEvent(\"onUnSyncUnknown\", [this, source]);\n\t\t\t} else {\n\t\t\t\t//data sync with webix component\n\t\t\t\tfor (let i = 0; i < this._sync_events.length; i++)\n\t\t\t\t\tsource.detachEvent(this._sync_events[i]);\n\t\t\t\tthis.detachEvent(this._back_sync_handler);\n\t\t\t}\n\n\t\t\tthis._sync_source = null;\n\t\t}\n\t},\n\tdestructor:function(){\n\t\tthis.unsync();\n\n\t\tthis.pull = this.order = this._marks = null;\n\t\tthis._evs_events = this._evs_handlers = {};\n\t},\n\t//adds item to the store\n\tadd:function(obj,index){\n\t\t//default values\t\t\n\t\tif (this._scheme)\n\t\t\tfor (let key in this._scheme)\n\t\t\t\tif (isUndefined(obj[key]))\n\t\t\t\t\tobj[key] = this._scheme[key];\n\n\t\tif (this._scheme_init)\n\t\t\tthis._scheme_init(obj);\n\n\t\t//generate id for the item\n\t\tconst id = this.id(obj);\n\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\tconst order = arguments[2]||this.order;\n\n\t\t//by default item is added to the end of the list\n\t\tconst data_size = order.length;\n\n\t\tif (isUndefined(index) || index < 0)\n\t\t\tindex = data_size; \n\t\t//check to prevent too big indexes\t\t\t\n\t\tif (index > data_size){\n\t\t\tassert(0, \"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\tindex = Math.min(order.length,index);\n\t\t}\n\t\tif (this.callEvent(\"onBeforeAdd\", [id, obj, index]) === false) return false;\n\n\t\tassert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[id]=obj;\n\t\torder.insertAt(id,index);\n\t\tif (this._filter_order){\t//adding during filtering\n\t\t\t//we can't know the location of new item in full dataset, making suggestion\n\t\t\t//put at end of original dataset by default\n\t\t\tlet original_index = this._filter_order.length;\n\t\t\t//if some data exists, put at the same position in original and filtered lists\n\t\t\tif (this.order.length)\n\t\t\t\toriginal_index = Math.min((index || 0), original_index);\n\n\t\t\tthis._filter_order.insertAt(id,original_index);\n\t\t}\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"add\"]);\n\t\tthis.callEvent(\"onAfterAdd\",[id,index]);\n\n\t\treturn obj.id;\n\t},\n\t\n\t//removes element from datastore\n\tremove:function(id){\n\t\t//id can be an array of IDs - result of getSelect, for example\n\t\tif (isArray(id)){\n\t\t\tfor (let i = 0; i < id.length; i++)\n\t\t\t\tthis.remove(id[i]);\n\t\t\treturn;\n\t\t}\n\t\tif (this.callEvent(\"onBeforeDelete\",[id]) === false) return false;\n\t\t\n\t\tassert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tconst obj = this.getItem(id); //save for later event\n\t\t//clear from collections\n\t\tthis.order.remove(id);\n\t\tif (this._filter_order) \n\t\t\tthis._filter_order.remove(id);\n\t\t\t\n\t\tdelete this.pull[id];\n\t\tif (this._marks[id])\n\t\t\tdelete this._marks[id];\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"delete\"]);\n\t\tthis.callEvent(\"onAfterDelete\",[id]);\n\t},\n\t//deletes all records in datastore\n\tclearAll:function(soft){\n\t\t//instead of deleting one by one - just reset inner collections\n\t\tthis.pull = {};\n\t\tthis._marks = {};\n\t\tthis.order = _to_array();\n\t\t//this.feed = null;\n\t\tthis._filter_order = null;\n\t\tif (!soft)\n\t\t\tthis.url = null;\n\t\tthis.callEvent(\"onClearAll\",[soft]);\n\t\tthis.refresh();\n\t},\n\t//converts index to id\n\tgetIdByIndex:function(index){\n\t\tassert(index >= 0,\"DataStore::getIdByIndex Incorrect index\");\n\t\treturn this.order[index];\n\t},\n\t//converts id to index\n\tgetIndexById:function(id){\n\t\tif (!this.pull[id])\n\t\t\treturn -1;\n\t\telse\n\t\t\treturn this.order.find(id);\t//slower than getIdByIndex\n\t},\n\t//returns ID of next element\n\tgetNextId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)+(step||1)];\n\t},\n\t//returns ID of first element\n\tgetFirstId:function(){\n\t\treturn this.order[0];\n\t},\n\t//returns ID of last element\n\tgetLastId:function(){\n\t\treturn this.order[this.order.length-1];\n\t},\n\t//returns ID of previous element\n\tgetPrevId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)-(step||1)];\n\t},\n\t/*\n\t\tsort data in collection\n\t\t\tby - settings of sorting\n\n\t\tor\n\t\t\tby - array of settings\n\n\t\tor\n\n\t\t\tby - sorting function\n\t\t\tdir - \"asc\" or \"desc\"\n\n\t\tor\n\n\t\t\tby - property\n\t\t\tdir - \"asc\" or \"desc\"\n\t\t\tas - type of sortings\n\n\t\tSorting function will accept 2 parameters and must return 1,0,-1, based on desired order\n\n\t\treturns true if sorting was successful, false otherwise\n\t*/\n\tsort:function(by, dir, as){\n\t\tlet parameters;\n\t\tlet sort = by;\n\n\t\tif (isArray(sort)){\n\t\t\tsort = sort.map(a => this._sort_init(a));\n\t\t\tparameters = [sort];\n\t\t} else {\n\t\t\tsort = this._sort_init(by, dir, as);\n\t\t\tparameters = [sort.by, sort.dir, sort.as, sort];\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeSort\", parameters)) return false;\n\t\tconst sorter = this.sorting.create(sort);\n\n\t\tthis.order = this._sort_core(sorter, this.order);\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order = this._sort_core(sorter, this._filter_order);\n\t\tif (this._filter_branch)\t//treestore\n\t\t\tthis._sort_core(sorter, this.order, this._filter_branch);\n\n\t\t//repaint self\n\t\tthis.refresh();\n\n\t\tthis.callEvent(\"onAfterSort\", parameters);\n\t\treturn true;\n\t},\n\t_sort_init:function(by, dir, as){\n\t\tlet sort = by;\n\n\t\tif (typeof by == \"function\")\n\t\t\tsort = {as:by, dir:dir};\n\t\telse if (typeof by == \"string\")\n\t\t\tsort = {by:by, dir:dir, as:as};\n\n\t\tif (typeof sort.by == \"string\")\n\t\t\tsort.by = sort.by.replace(/#/g,\"\");\n\n\t\treturn sort;\n\t},\n\t_sort_core:function(sorter, order){\n\t\tif (this.order.length){\n\t\t\tconst pre = order.splice(0, this.$freeze);\n\t\t\t//get array of IDs\n\t\t\tconst neworder = _to_array();\n\t\t\tfor (let i = order.length-1; i>=0; i--)\n\t\t\t\tneworder[i] = this.pull[order[i]];\n\n\t\t\tneworder.sort(sorter);\n\t\t\treturn _to_array(pre.concat(neworder.map(function(obj){ \n\t\t\t\tassert(obj, \"Client sorting can't be used with dynamic loading\");\n\t\t\t\treturn this.id(obj);\n\t\t\t},this)));\n\t\t}\n\t\treturn order;\n\t},\n\t/*\n\t\tFilter datasource\n\t\t\n\t\ttext - property, by which filter\n\t\tvalue - filter mask\n\t\t\n\t\tor\n\t\t\n\t\ttext - filter method\n\t\t\n\t\tFilter method will receive data object and must return true or false\n\t*/\n\t_filter_reset:function(preserve){\n\t\t//remove previous filtering , if any\n\t\tif (this._filter_order && !preserve){\n\t\t\tthis.order = this._filter_order;\n\t\t\tdelete this._filter_order;\n\t\t}\n\t},\n\t_filter_core:function(filter, value, preserve){\n\t\tconst neworder = _to_array();\n\t\tconst freeze = this.$freeze || 0;\n\n\t\tfor (let i=0; i < this.order.length; i++){\n\t\t\tconst id = this.order[i];\n\t\t\tif (i < freeze || filter(this.getItem(id),value))\n\t\t\t\tneworder.push(id);\n\t\t}\n\t\t//set new order of items, store original\n\t\tif (!preserve || !this._filter_order)\n\t\t\tthis._filter_order = this.order;\n\t\tthis.order = neworder;\n\t},\n\tfind:function(config, first){\n\t\tconst result = [];\n\n\t\tfor(let i in this.pull){\n\t\t\tconst data = this.pull[i];\n\n\t\t\tlet match = true;\n\t\t\tif (typeof config == \"object\"){\n\t\t\t\tfor (let key in config)\n\t\t\t\t\tif (data[key] != config[key]){\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if (!config(data))\n\t\t\t\tmatch = false;\n\n\t\t\tif (match)\n\t\t\t\tresult.push(data);\n\t\t\t\n\t\t\tif (first && result.length)\n\t\t\t\treturn result[0];\n\t\t}\n\n\t\treturn first ? null : result;\n\t},\n\tfilter:function(text,value,preserve){\n\t\t//unfilter call but we already in not-filtered state\n\t\tif (!text && !this._filter_order && !this._filter_branch) return;\n\t\tif (!this.callEvent(\"onBeforeFilter\", [text, value])) return;\n\t\t\n\t\tthis._filter_reset(preserve);\n\t\tif (!this.order.length) return;\n\n\t\t//if text not define -just unfilter previous state and exit\n\t\tif (text){\n\t\t\tlet filter = text;\n\t\t\tvalue = value||\"\";\n\t\t\tif (typeof text == \"string\"){\n\t\t\t\ttext = text.replace(/#/g,\"\");\n\t\t\t\tif (typeof value == \"function\")\n\t\t\t\t\tfilter = function(obj){\n\t\t\t\t\t\treturn value(obj[text]);\n\t\t\t\t\t};\n\t\t\t\telse{\n\t\t\t\t\tvalue = value.toString().toLowerCase();\n\t\t\t\t\tfilter = function(obj,value){\t//default filter - string start from, case in-sensitive\n\t\t\t\t\t\tassert(obj, \"Client side filtering can't be used with dynamic loading\");\n\t\t\t\t\t\treturn (obj[text]||\"\").toString().toLowerCase().indexOf(value)!=-1;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._filter_core(filter, value, preserve, this._filterMode);\n\t\t}\n\t\t//repaint self\n\t\tthis.refresh();\n\t\t\n\t\tthis.callEvent(\"onAfterFilter\", []);\n\t},\n\t/*\n\t\tIterate through collection\n\t*/\n\t_obj_array:function(){\n\t\tconst data = [];\n\t\tfor (let i = this.order.length - 1; i >= 0; i--)\n\t\t\tdata[i]=this.pull[this.order[i]];\n\n\t\treturn data;\n\t},\n\teach:function(method, master, all){\n\t\tlet order = this.order;\n\t\tif (all)\n\t\t\torder = this._filter_order || order;\n\n\t\tfor (let i = 0; i<order.length; i++){\n\t\t\tif(order[i])\n\t\t\t\tmethod.call((master||this), this.getItem(order[i]), i);\n\t\t}\n\t},\n\t_methodPush:function(object,method){\n\t\treturn function(){ return object[method].apply(object,arguments); };\n\t},\n\t/*\n\t\tmap inner methods to some distant object\n\t*/\n\tprovideApi:function(target,eventable){\n\t\t\t\n\t\tif (eventable){\n\t\t\tthis.mapEvent({\n\t\t\t\tonbeforesort:\ttarget,\n\t\t\t\tonaftersort:\ttarget,\n\t\t\t\tonbeforeadd:\ttarget,\n\t\t\t\tonafteradd:\t\ttarget,\n\t\t\t\tonbeforedelete:\ttarget,\n\t\t\t\tonafterdelete:\ttarget,\n\t\t\t\tondataupdate:\ttarget/*,\n\t\t\t\tonafterfilter:\ttarget,\n\t\t\t\tonbeforefilter:\ttarget*/\n\t\t\t});\n\t\t}\n\n\t\tconst list = [\"sort\",\"add\",\"remove\",\"exists\",\"getIdByIndex\",\"getIndexById\",\"getItem\",\"updateItem\",\"refresh\",\"count\",\"filter\",\"find\",\"getNextId\",\"getPrevId\",\"clearAll\",\"getFirstId\",\"getLastId\",\"serialize\",\"sync\"];\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t\ttarget[list[i]] = this._methodPush(this,list[i]);\n\t},\n\taddMark:function(id, mark, css, value, silent){\n\t\tconst obj = this._marks[id]||{};\n\t\tthis._marks[id] = obj;\n\t\tif (!obj[mark]){\n\t\t\tobj[mark] = value||true;\n\t\t\tif (css){\n\t\t\t\tconst old_css = obj.$css||\"\";\n\t\t\t\tobj.$css = old_css+\" \"+mark;\n\t\t\t}\n\t\t\tif (!silent)\n\t\t\t\tthis.refresh(id);\n\t\t}\n\t\treturn obj[mark];\n\t},\n\tremoveMark:function(id, mark, css, silent){\n\t\tconst obj = this._marks[id];\n\t\tif (obj){\n\t\t\tif (obj[mark])\n\t\t\t\tdelete obj[mark];\n\t\t\tif (css){\n\t\t\t\tconst current_css = obj.$css;\n\t\t\t\tif (current_css){\n\t\t\t\t\tconst re = new RegExp(\"(\\\\s|^)\"+mark+\"(\\\\s|$)\");\n\t\t\t\t\tobj.$css = current_css.replace(re, (v,b,a) => b && a ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh(id);\n\t\t}\n\t},\n\tgetMark:function(id, mark){\n\t\tconst obj = this._marks[id];\n\t\treturn (obj ? obj[mark] : false);\n\t},\n\tclearMark:function(name, css, silent){\n\t\tfor (const id in this._marks){\n\t\t\tconst obj = this._marks[id];\n\t\t\tif (obj[name]){\n\t\t\t\tdelete obj[name];\n\t\t\t\tif (css && obj.$css){\n\t\t\t\t\tconst re = new RegExp(\"(\\\\s|^)\"+name+\"(\\\\s|$)\");\n\t\t\t\t\tobj.$css = obj.$css.replace(re, (v,b,a) => b && a ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t\tif (!silent)\n\t\t\t\t\tthis.refresh(id);\n\t\t\t}\n\t\t}\n\t},\n\t/*\n\t\tserializes data to a json object\n\t*/\n\tserialize: function(all){\n\t\tlet ids = this.order;\n\t\tif (all && this._filter_order)\n\t\t\tids = this._filter_order;\n\n\t\tconst result = [];\n\t\tfor(let i=0; i< ids.length;i++) {\n\t\t\tlet el = this.pull[ids[i]];\n\t\t\tif (this._scheme_serialize){\n\t\t\t\tel = this._scheme_serialize(el);\n\t\t\t\tif (el===false) continue;\n\t\t\t}\n\t\t\tresult.push(el);\n\t\t}\n\t\treturn result;\n\t},\n\tsorting:{\n\t\tcreate:function(config){\n\t\t\tif (isArray(config))\n\t\t\t\treturn this._multi(config);\n\t\t\treturn this._dir(config.dir, this._by(config.by, config.as));\n\t\t},\n\t\tas:{\n\t\t\t//handled by dataFeed\n\t\t\t\"server\":function(){\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\"date\":function(a,b){\n\t\t\t\ta = a-0; b = b-0;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"int\":function(a,b){\n\t\t\t\ta = a*1; b = b*1;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_strict\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_locale_strict\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"string_locale\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"raw\":function(a,b){\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t}\n\t\t},\n\t\t_multi:function(methods){\n\t\t\tmethods = methods.map(c => this._dir(c.dir, this._by(c.by, c.as)));\n\n\t\t\treturn function(a,b){\n\t\t\t\tlet result, i = 0;\n\t\t\t\tdo {\n\t\t\t\t\tresult = methods[i](a,b);\n\t\t\t\t} while(!result && methods[++i]);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t},\n\t\t_by:function(prop, method){\n\t\t\tlet customMethod;\n\n\t\t\tif (typeof method != \"function\")\n\t\t\t\tmethod = this.as[method||\"string\"];\n\t\t\telse\n\t\t\t\tcustomMethod = true;\n\n\t\t\tassert(method, \"Invalid sorting method\");\n\t\t\treturn function(a,b){\n\t\t\t\tif(!customMethod){\n\t\t\t\t\ta = a[prop];\n\t\t\t\t\tb = b[prop];\n\t\t\t\t}\n\t\t\t\treturn method(a, b, prop);\n\t\t\t};\n\t\t},\n\t\t_dir:function(prop, method){\n\t\t\tif (prop == \"asc\" || !prop)\n\t\t\t\treturn method;\n\t\t\treturn function(a,b){\n\t\t\t\treturn method(a,b)*-1;\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport default DataStore;","import {ajax} from \"../load/ajax\";\nimport {bind, delay, extend, toFunctor, isArray} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nimport {dp} from \"../load/dataprocessor\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport DataStore from \"../core/datastore\";\nimport AtomDataLoader from \"../core/atomdataloader\";\n\n\n/*\n\tBehavior:DataLoader - load data in the component\n\t\n\t@export\n\t\tload\n\t\tparse\n*/\nconst DataLoader =proto({\n\t$init:function(config){\n\t\t//prepare data store\n\t\tconfig = config || \"\";\n\n\t\tthis._feed_last = {};\n\t\tthis._data_generation = 0;\n\n\t\tthis.data = new DataStore();\n\t\tthis.data.attachEvent(\"onClearAll\", bind(this._call_onclearall, this));\n\t\tthis.data.attachEvent(\"onServerConfig\", bind(this._call_on_config, this));\n\t\tthis.attachEvent(\"onDestruct\", this._call_onclearall);\n\n\t\tthis.data.feed = this._feed;\n\t\tthis.data.owner = config.id;\n\t},\n\t_feed:function(from, count, callback, defer, clear){\n\t\t//allow only single request at same time\n\t\tif (this._load_count){\n\t\t\tif(this._feed_last.from == from && this._feed_last.count == count) return promise.reject();\n\t\t\tdefer = promise.defer();\n\t\t\tthis._load_count = [from,count,callback,defer,clear];\t//save last ignored request\n\t\t\treturn defer;\n\t\t} else\n\t\t\tthis._load_count = true;\n\t\tthis._feed_last.from = from;\n\t\tthis._feed_last.count = count;\n\t\treturn this._feed_common.call(this, from, count, callback, defer, false, clear);\n\t},\n\t_feed_common:function(from, count, callback, defer, details, clear){\n\t\tlet url = this.data.url;\n\t\tif (from < 0) from = 0;\n\n\t\tif(!details)\n\t\t\tdetails = { start: from, count:count };\n\n\t\tif(this.count())\n\t\t\tdetails[\"continue\"] = \"true\";\n\n\t\tconst state = this.getState ? this.getState() : null;\n\t\t// proxy\n\t\tif (url && typeof url != \"string\"){\n\t\t\tif (state){\n\t\t\t\tif (state.sort)\n\t\t\t\t\tdetails.sort = state.sort;\n\t\t\t\tif (state.filter)\n\t\t\t\t\tdetails.filter = state.filter;\n\t\t\t}\n\t\t\treturn this.load(url, 0, details, clear).then(\n\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t() => this._feed_callback()\n\t\t\t);\n\t\t} else { // GET\n\t\t\turl = url+((url.indexOf(\"?\")==-1)?\"?\":\"&\");\n\n\t\t\tvar params = [];\n\t\t\tfor(var d in details){\n\t\t\t\tparams.push(d+\"=\"+details[d]);\n\t\t\t}\n\t\t\tif (state){\n\t\t\t\tif (state.sort){\n\t\t\t\t\tvar sort = isArray(state.sort) ? state.sort : [state.sort];\n\t\t\t\t\tfor (var i=0; i<sort.length; i++)\n\t\t\t\t\t\tparams.push(\"sort[\"+sort[i].id+\"]=\"+encodeURIComponent(sort[i].dir));\n\t\t\t\t}\n\t\t\t\tif (state.filter)\n\t\t\t\t\tfor (var key in state.filter){\n\t\t\t\t\t\tvar filterValue = state.filter[key];\n\t\t\t\t\t\tif(typeof filterValue == \"object\")\n\t\t\t\t\t\t\tfilterValue = ajax().stringify(filterValue); //server daterangefilter\n\t\t\t\t\t\tparams.push(\"filter[\"+key+\"]=\"+encodeURIComponent(filterValue));\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\turl += params.join(\"&\");\n\t\t\tif (this._feed_last.url !== url){\n\t\t\t\tthis._feed_last.url = url;\n\t\t\t\treturn this.load(url, 0, null, clear).then(\n\t\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t\t() => this._feed_callback()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._load_count = false;\n\t\t\t\treturn promise.reject();\n\t\t\t}\n\t\t}\n\t},\n\t_feed_on_load:function(data, callback, defer){\n\t\tdelay(()=> this._feed_callback(), \"\", \"\", 100);\n\t\tif(callback)\n\t\t\tajax.$callback(this, callback, data);\n\t\tif(defer)\n\t\t\tdefer.resolve(data);\n\t\treturn data;\n\t},\n\t_feed_callback:function(){\n\t\t//after loading check if we have some ignored requests\n\t\tvar temp = this._load_count;\n\t\tthis._load_count = false;\n\t\tif (typeof temp ==\"object\")\n\t\t\tthis.data.feed.apply(this, temp);\t//load last ignored request\n\t},\n\t//loads data from external URL\n\tload:function(url){\n\t\turl = proxy.$parse(url);\n\t\tvar ajax = AtomDataLoader.load.apply(this, arguments);\n\n\t\t//prepare data feed for dyn. loading\n\t\tif (!this.data.url)\n\t\t\tthis.data.url = url;\n\n\t\treturn ajax;\n\t},\n\t//load next set of data rows\n\tloadNext:function(count, start, callback, url, now, clear){\n\t\tvar config = this._settings;\n\t\tif (config.datathrottle && !now){\n\t\t\tif (this._throttle_request)\n\t\t\t\twindow.clearTimeout(this._throttle_request);\n\n\t\t\tlet defer = promise.defer();\n\t\t\tthis._throttle_request = delay(function(){\n\t\t\t\tdefer.resolve(this.loadNext(count, start, callback, url, true, clear));\n\t\t\t},this, 0, config.datathrottle);\n\t\t\treturn defer;\n\t\t}\n\n\t\tif (!start && start !== 0) start = this.count();\n\t\tif (!count)\n\t\t\tcount = config.datafetch || this.count();\n\n\t\tthis.data.url = url || this.data.url;\n\t\tif (this.callEvent(\"onDataRequest\", [start,count,callback,url]) && this.data.url)\n\t\t\treturn this.data.feed.call(this, start, count, callback, false, clear);\n\t\treturn promise.reject();\n\t},\n\t_maybe_loading_already:function(count, from){\n\t\tvar last = this._feed_last;\n\t\tif(this._load_count && last.url){\n\t\t\tif (last.from<=from && (last.count+last.from >= count + from )) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tremoveMissed_setter:function(value){\n\t\treturn (this.data._removeMissed = value);\n\t},\n\t//init of dataprocessor delayed after all settings processing\n\t//because it need to be the last in the event processing chain\n\t//to get valid validation state\n\t_init_dataprocessor:function(){\n\t\tvar url = this._settings.save;\n\n\t\tif (url === true)\n\t\t\turl = this._settings.save = this._settings.url;\n\n\t\tvar obj = { master: this };\n\t\t\n\t\tif (url && url.url)\n\t\t\textend(obj, url);\n\t\telse\n\t\t\tobj.url = url;\n\n\t\tdp(obj);\n\t},\n\tsave_setter:function(value){\n\t\tif (value)\n\t\t\tthis.$ready.push(this._init_dataprocessor);\n\n\t\treturn value;\n\t},\n\twaitSave:function(handler){\n\t\treturn dp(this)._promise(() => {\n\t\t\thandler.call(this);\n\t\t}).then(many => many.length == 1 ? many[0] : many);\n\t},\n\tscheme_setter:function(value){\n\t\tthis.data.scheme(value);\n\t},\n\tdataFeed_setter:function(value){\n\t\tvalue = proxy.$parse(value);\n\n\t\tthis.data.attachEvent(\"onBeforeFilter\", bind(function(text, filtervalue){\n\t\t\tvar result;\n\n\t\t\t//complex filtering, can't be routed to dataFeed\n\t\t\tif (typeof text == \"function\") return true;\n\n\t\t\t//we have dataFeed and some text\n\t\t\tif (this._settings.dataFeed && (text || filtervalue)){\n\t\t\t\ttext = text || \"id\";\n\t\t\t\tif (filtervalue && typeof filtervalue == \"object\")\n\t\t\t\t\tfiltervalue = filtervalue.id;\n\n\t\t\t\tvar url = this._settings.dataFeed;\n\n\t\t\t\t//url data feed\n\t\t\t\tif(typeof url ==\"string\"){\n\t\t\t\t\tvar urldata = \"filter[\"+text+\"]=\"+encodeURIComponent(filtervalue);\n\t\t\t\t\tresult = this._fetch(\n\t\t\t\t\t\turl+(url.indexOf(\"?\")<0?\"?\":\"&\")+urldata,\n\t\t\t\t\t\tthis._settings.datatype\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t//js data feed\n\t\t\t\telse{\n\t\t\t\t\tvar filter = {};\n\t\t\t\t\tfilter[text] = filtervalue;\n\t\t\t\t\tif (typeof url == \"function\"){\n\t\t\t\t\t\tresult = url.call(this, filtervalue, filter);\n\t\t\t\t\t} else if (url.$proxy && url.load) {\n\t\t\t\t\t\tresult = url.load(this, { filter });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (result){\n\t\t\t\t\tif (!result.then)\n\t\t\t\t\t\tresult = promise.resolve(result);\n\n\t\t\t\t\tresult.then(\n\t\t\t\t\t\tdata => {\n\t\t\t\t\t\t\tthis._onLoad(data, true);\n\t\t\t\t\t\t\tthis.data.callEvent(\"onAfterFilter\", []);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx => this._onLoadError(x)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},this));\n\t\treturn value;\n\t},\n\t_call_onready:function(){\n\t\tif (this._settings.ready && !this._ready_was_used){\n\t\t\tvar code = toFunctor(this._settings.ready, this.$scope);\n\t\t\tif (code)\n\t\t\t\tdelay(code, this, arguments);\n\t\t\tif (this.callEvent)\n\t\t\t\tdelay(this.callEvent, this, [\"onReady\", []]);\n\t\t\tthis._ready_was_used = true;\n\t\t}\n\t},\n\t_call_onclearall:function(soft){\n\t\tthis._data_generation++;\n\t\tif (!soft){\n\t\t\tthis._load_count = false;\n\t\t\tthis._feed_last = {};\n\t\t\tthis.waitData = promise.defer();\n\t\t}\n\t},\n\t_call_on_config:function(config){\n\t\tthis._parseSettingColl(config);\n\t}\n},AtomDataLoader);\n\n\n\nexport default DataLoader;","import {isArray, _to_array} from \"../webix/helpers\";\n\nconst DataState = {\n\tgetState:function(){\n\t\tvar cols_n = this.config.columns.length;\n\t\tvar columns = this.config.columns;\n\t\tvar settings = { \n\t\t\tids:[],\n\t\t\tsize:[],\n\t\t\tselect:this.getSelectedId(true),\n\t\t\tscroll:this.getScrollState()\n\t\t};\n\t\tfor(var i = 0; i < cols_n; i++){\n\t\t\tvar col = columns[i];\n\t\t\tsettings.ids.push(col.id);\n\t\t\tsettings.size.push((col.fillspace || col.adjust) ? -1 : col.width);\n\t\t}\n\n\t\tsettings.order = [].concat(this._hidden_column_order.length ? this._hidden_column_order : settings.ids);\n\n\t\tif (this._last_order.length){\n\t\t\tvar sort = this._last_order.map(id => {\n\t\t\t\treturn { id:id, dir:this._last_sorted[id].dir };\n\t\t\t});\n\t\t\tsettings.sort = (sort.length == 1) ? sort[0] : sort;\n\t\t}\n\n\t\t//this method will try to access the rendered values\n\t\t//just ignore it if grid is not rendered yet\n\t\tif (this._filter_elements && this._dtable_fully_ready) {\n\t\t\tvar filter = {};\n\t\t\tvar any_filter = 0;\n\t\t\tfor (let key in this._filter_elements) {\n\t\t\t\tif (this._hidden_column_hash[key]) continue;\n\n\t\t\t\tvar f = this._filter_elements[key];\n\t\t\t\tf[1].value = filter[key] = f[2].getValue(f[0]);\n\t\t\t\tany_filter = 1;\n\t\t\t}\n\t\t\tif (any_filter)\n\t\t\t\tsettings.filter=filter;\n\t\t}\n\n\t\tsettings.hidden = [];\n\t\tfor (let key in this._hidden_column_hash)\n\t\t\tsettings.hidden.push(key);\n\t\t\n\t\treturn settings;\n\t},\n\tsetState:function(obj){\n\t\tconst columns = this.config.columns;\n\t\tif(!obj) return;\n\n\t\tthis.markSorting();\n\t\tthis._last_order = [];\n\t\tthis._last_sorted = {};\n\n\t\tthis.blockEvent();\n\n\t\tif (obj.order && obj.order.length){\n\t\t\tthis._hidden_column_order = _to_array([].concat(obj.order));\n\t\t\tconst rs = obj.order.length - this._settings.rightSplit;\n\t\t\tthis._hidden_split = [this._settings.leftSplit, rs, this._settings.rightSplit];\n\t\t}\n\n\t\tif (obj.hidden){\n\t\t\tconst hihash = {};\n\t\t\tfor (let i=0; i<obj.hidden.length; i++){\n\t\t\t\thihash[obj.hidden[i]] = true;\n\t\t\t\tif(!this._hidden_column_order.length)\n\t\t\t\t\tthis.hideColumn(obj.hidden[i]);\n\t\t\t}\n\n\t\t\tif(this._hidden_column_order.length){\n\t\t\t\tfor (let i=0; i<this._hidden_column_order.length; i++){\n\t\t\t\t\tconst hikey = this._hidden_column_order[i];\n\t\t\t\t\tif (!!hihash[hikey] == !this._hidden_column_hash[hikey])\n\t\t\t\t\t\tthis.hideColumn(hikey, {}, false, !!hihash[hikey]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj.ids){\n\t\t\tlet reorder = false;\n\t\t\tfor (let i=0; i<columns.length; i++)\n\t\t\t\tif (columns[i].id != obj.ids[i])\n\t\t\t\t\treorder = true;\n\t\t\tif (reorder){\n\t\t\t\tfor (let i=0; i<obj.ids.length; i++)\n\t\t\t\t\tcolumns[i] = this.getColumnConfig(obj.ids[i]) || columns[i];\n\t\t\t\tthis.refreshColumns();\n\t\t\t}\n\t\t}\n\n\t\tif (obj.size){\n\t\t\tconst cols_n = Math.min(obj.size.length, columns.length);\n\t\t\tfor (let i = 0; i < cols_n; i++){\n\t\t\t\tconst col = columns[i];\n\t\t\t\tif(col && obj.size[i] > 0 && col.width != obj.size[i]){\n\t\t\t\t\tdelete col.fillspace;\n\t\t\t\t\tdelete col.adjust;\n\t\t\t\t\tthis._setColumnWidth( i, obj.size[i], true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.unblockEvent();\n\n\t\tconst silent = !(this._settings.leftSplit || this._settings.rightSplit);\n\t\tthis._updateColsSizeSettings(silent);\n\t\tthis.callEvent(\"onStructureUpdate\", []);\n\n\t\tconst server = this._skip_server_op = { };\n\t\tif (obj.sort){\n\t\t\tlet sort = obj.sort, multi = true;\n\t\t\tif (!isArray(sort)){\n\t\t\t\tsort = [sort]; multi = false;\n\t\t\t}\n\t\t\tfor (let i=0; i<sort.length; i++){\n\t\t\t\tconst col = this.getColumnConfig(sort[i].id);\n\t\t\t\tif (col) {\n\t\t\t\t\tthis._sort(col.id, sort[i].dir, col.sort, multi);\n\t\t\t\t\tif (col.sort == \"server\") server.sort = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj.filter){\n\t\t\t//temporary disable filtering \n\t\t\tlet temp = this.filterByAll;\n\t\t\tthis.filterByAll = function(){};\n\n\t\t\t//apply defined filters\n\t\t\tfor (let key in obj.filter) {\n\t\t\t\tconst value = obj.filter[key];\n\t\t\t\tconst f = this._filter_elements[key];\n\t\t\t\tif (!value || !f) continue;\n\n\t\t\t\tf[2].setValue(f[0], value);\n\t\t\t\tlet contentid = f[1].contentId;\n\t\t\t\tif (contentid)\n\t\t\t\t\tthis._active_headers[contentid].value = value;\n\t\t\t}\n\n\t\t\t//remove old filters\n\t\t\tfor (let key in this._filter_elements){\n\t\t\t\tif (!obj.filter[key]){\n\t\t\t\t\tlet f = this._filter_elements[key];\n\t\t\t\t\tf[2].setValue(f[0], \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t//restore and apply filtering\n\t\t\tthis.filterByAll = temp;\n\t\t\tthis.filterByAll();\n\t\t}\n\n\t\t// apply server filter\\sort once\n\t\tdelete this._skip_server_op;\n\t\tif (server.sort || server.filter)\n\t\t\tthis.loadNext(0, 0, 0, 0, true, true).then(() => {\n\t\t\t\tif (server.sort)\n\t\t\t\t\tthis._on_after_sort(server.$params);\n\t\t\t\tif (server.filter)\n\t\t\t\t\tthis._on_after_filter();\n\t\t\t});\n\n\t\tif (obj.select && this.select){\n\t\t\tlet select = obj.select;\n\t\t\tthis.unselect();\n\t\t\tfor (let i = 0; i < select.length; i++)\n\t\t\t\tif (!select[i].row || this.exists(select[i].row))\n\t\t\t\t\tthis._select(select[i], true);\n\t\t}\n\n\t\tif (obj.scroll)\n\t\t\tthis.scrollTo(obj.scroll.x, obj.scroll.y);\n\t}\n};\n\nexport default DataState;","import {pos, offset} from \"../webix/html\";\nimport {use} from \"../services\";\nimport Touch from \"../core/touch\";\nimport {extend, delay, _power_array, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DragControl from \"../core/dragcontrol\";\nimport AutoScroll from \"../core/autoscroll\";\n\n\n/*\n\tBehavior:DragItem - adds ability to move items by dnd\n\t\n\tdnd context can have next properties\n\t\tfrom - source object\n\t\tto - target object\n\t\tsource - id of dragged item(s)\n\t\ttarget - id of drop target, null for drop on empty space\n\t\tstart - id from which DND was started\n*/\n\nconst DragItem ={\n\t//helper - defines component's container as active zone for dragging and for dropping\n\t_initHandlers:function(obj, source, target){\n\t\tif (!source) DragControl.addDrop(obj._contentobj,obj,true);\n\t\tif (!target) DragControl.addDrag(obj._contentobj,obj);\n\t\tthis.attachEvent(\"onDragOut\",function(a,b){ this.$dragMark(a,b); });\n\t\tthis.attachEvent(\"onBeforeAutoScroll\",function(){\n\t\t\tvar context = DragControl.getContext();\n\t\t\treturn !!(DragControl._active && context && (context.to === this || this._auto_scroll_force));\n\t\t});\n\t},\n\tdrag_setter:function(value){\n\t\tif (value){\n\t\t\textend(this, AutoScroll, true);\n\t\t\tif (value == \"order\" || value == \"move\")\n\t\t\t\textend(this, use(\"DragOrder\"), true);\n\t\t\tif (value == \"inner\" || value == \"order\")\n\t\t\t\tthis._inner_drag_only = true;\n\n\t\t\tthis._initHandlers(this, value == \"source\", value == \"target\");\n\t\t\tdelete this.drag_setter;\t//prevent double initialization\n\t\t}\n\t\treturn value;\n\t},\n\t/*\n\t\ts - source html element\n\t\tt - target html element\n\t\td - drop-on html element ( can be not equal to the target )\n\t\te - native html event \n\t*/\n\t//called when drag moved over possible target\n\t$dragIn:function(s,t,e){\n\t\tvar id = this.locate(e) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//in inner drag mode - ignore dnd from other components\n\t\tif ((this._inner_drag_only || context.from._inner_drag_only) && context.from !== this) return false;\n\n\t\tvar to = DragControl.getMaster(t);\n\t\t//previous target\n\t\tvar html = (this.getItemNode(id, e)||this._dataobj);\n\t\t//prevent double processing of same target\n\t\tif (html == DragControl._landing) return html;\n\t\tcontext.target = id;\n\t\tcontext.to = to;\n\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\tconst fragile = (this._touch_scroll && !this._settings.prerender);\n\t\tif (this._settings.dragscroll !== false  && !fragile)\n\t\t\tthis._auto_scroll_delay = delay(function(pos,id){\n\t\t\t\tthis._drag_pause(id);\n\t\t\t\tthis._auto_scroll(pos,id);\n\t\t\t}, this, [pos(e), id], 250);\n\n\t\tif (!this.$dropAllow(context, e)  || !this.callEvent(\"onBeforeDragIn\",[context, e])){\n\t\t\tcontext.to = context.target = null;\n\t\t\tif (this._auto_scroll_delay)\n\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\treturn null;\n\t\t}\n\t\t//mark target only when landing confirmed\n\t\tthis.$dragMark(context,e);\n\t\treturn html;\n\t},\n\t$dropAllow:function(){\n\t\treturn true;\n\t},\n\t_drag_pause:function(){\n\t\t//may be reimplemented in some components\n\t\t// tree for example\n\t},\n\t_target_to_id:function(target){\n\t\treturn target && typeof target === \"object\" ? target.toString() : target;\n\t},\n\t//called when drag moved out from possible target\n\t$dragOut:function(s,t,n,e){\n\t\tvar id = (this._viewobj.contains(n) ? this.locate(e): null) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//still over previous target\n\t\tif ((context.target||\"\").toString() == (id||\"\").toString()) return null;\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t//unmark previous target\n\t\tcontext.target = context.to = null;\n\t\tthis.callEvent(\"onDragOut\",[context,e]);\n\t\treturn null;\n\t},\n\t//called when drag moved on target and button is released\n\t$drop:function(s,t,e){\n\t\tvar context = DragControl._drag_context;\n\t\t//finalize context details\n\t\tcontext.to = this;\n\t\tthis._define_index(s,t,context);\n\n\t\t//unmark last target\n\t\tthis.$dragMark({}, e);\n\n\t\tif( context.from && context.from != context.to && context.from.callEvent ){\n\t\t\tif(!context.from.callEvent(\"onBeforeDropOut\", [context,e]))\n\t\t\t\treturn;\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeDrop\",[context,e])) return;\n\t\t//moving\n\t\tthis._context_to_move(context,e);\n\t\t\n\t\tthis.callEvent(\"onAfterDrop\",[context,e]);\n\t},\n\t_define_index:function(s,t,context){\n\t\tvar target = this._target_to_id(context.target);\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (target){\n\t\t\t\tcontext.parent = this.getParentId(target);\n\t\t\t\tcontext.index = this.getBranchIndex(target);\n\t\t\t} else context.index = -1;\n\t\t} else\n\t\t\tcontext.index = target?this.getIndexById(target):this.count();\n\t},\n\t_context_to_move:function(context){\n\t\tassert(context.from, \"Unsopported d-n-d combination\");\n\t\tif (context.from && context.from.move){\t//from different component with item dnd\n\t\t\tvar details = { parent: context.parent, mode: context.pos };\n\t\t\tcontext.from.move(context.source,context.index,context.to, details);\n\t\t}\n\t},\n\t$longTouchLimit: true,\n\t_getDragItemPos: function(pos,e){\n\t\tif (this.getItemNode){\n\t\t\tvar id = this.locate(e, true);\n\t\t\t//in some case, node may be outiside of dom ( spans in datatable for example )\n\t\t\t//so getItemNode can return null\n\t\t\tvar node = id ? this.getItemNode(id) : null;\n\t\t\treturn node ? offset(node) : node;\n\t\t}\n\t},\n\t//called when drag action started\n\t$drag:function(s,e){\n\t\tvar id = this.locate(e, true);\n\t\tif (id){\n\t\t\tvar list = [id];\n\n\t\t\tif (this.getSelectedId){ //has selection model\n\t\t\t\t//if dragged item is one of selected - drag all selected\n\t\t\t\tvar selection = this.getSelectedId(true, true);\t\n\n\t\t\t\tif (selection && selection.length > 1 && _power_array.find.call(selection,id)!=-1){\n\t\t\t\t\tvar hash = {}; \n\t\t\t\t\tlist = [];\n\t\t\t\t\tfor (let i=0;i<selection.length; i++)\n\t\t\t\t\t\thash[selection[i]]=true;\n\t\t\t\t\tfor (let i = 0; i<this.data.order.length; i++){\n\t\t\t\t\t\tvar hash_id = this.data.order[i];\n\t\t\t\t\t\tif (hash[hash_id])\n\t\t\t\t\t\t\tlist.push(hash_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//save initial dnd params\n\t\t\tvar context = DragControl._drag_context = { source:list, start:id };\n\t\t\tcontext.from = this;\n\n\t\t\tif (this.callEvent(\"onBeforeDrag\",[context,e])){\n\t\t\t\tif (Touch._start_context)\n\t\t\t\t\tdelay(function(){ Touch._start_context = null; });\n\n\t\t\t\t//set drag representation\n\t\t\t\treturn context.html||this.$dragHTML(this.getItem(id), e, context);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t$dragHTML:function(obj,e,context){\n\t\tlet html = this._toHTML(obj);\n\t\tif ( isArray(context.source) && context.source.length > 1 )\n\t\t\thtml = this._toMultipleHTML(html, context.source.length);\n\t\treturn html;\n\t},\n\t_toMultipleHTML:function(html, len){\n\t\thtml = \"<div class='webix_drag_main'>\"+html+\"</div>\";\n\t\tlet multiple = \"<div class='webix_drag_multiple'></div>\";\n\t\tif ( len > 2 )\n\t\t\tmultiple = \"<div class='webix_drag_multiple_last'></div>\" + multiple;\n\t\treturn multiple+html+\"<span class='webix_badge'>\"+len+\"</span>\";\n\t},\n\t$dragMark:function(context){\n\t\tvar target = null;\n\t\tif (context.target)\n\t\t\ttarget = this._target_to_id(context.target);\n\n\t\t//touch webkit will stop touchmove event if source node removed\n\t\tif (this._marked && this._marked != target){\n\t\t\tthis._remove_css([this._marked], \"webix_drag_over\", true);\n\t\t\tthis._marked = null;\n\t\t}\n\n\t\tif (!this._marked && target){\n\t\t\tthis._marked = target;\n\t\t\tthis._add_css([target], \"webix_drag_over\", true);\n\t\t\treturn target;\n\t\t}\n\t\t\n\t\treturn !!context.to;\n\t},\n\t_add_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.addCss(source[i], css);\n\t},\n\t_remove_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.removeCss(source[i], css);\n\t},\n\n\t// methods used in order/move modes\n\t$dropHTML: function(){\n\t\treturn \"\";\n\t},\n\t_set_drop_area:function(target, t){\n\t\tconst node = this.getItemNode(target);\n\t\tif (node){\n\t\t\tnode.parentNode.insertBefore(DragControl._dropHTML[0], node);\n\t\t} else t.children[0].appendChild(DragControl._dropHTML[0]);\n\t}\n};\n\nexport default DragItem;","import {extend, copy, _power_array} from \"../webix/helpers\";\n\n\nconst Undo = {\n\t$init:function(){\n\t\tthis._undoHistory = extend([],_power_array,true);\n\t\tthis._undoCursor = -1;\n\t},\n\tundo_setter: function(value){\n\t\tif(value){\n\t\t\tthis._init_undo();\n\t\t\tthis._init_undo = function(){};\n\t\t}\n\t\treturn value;\n\t},\n\t_init_undo: function(){\n\t\tvar view = this;\n\n\t\t// drag-n-drop\n\t\tthis.attachEvent(\"onBeforeDrop\", function(context){\n\t\t\tif(context.from == context.to){\n\t\t\t\tvar item = view._draggedItem = copy(this.getItem(context.start));\n\t\t\t\tif(this.data.branch){\n\t\t\t\t\titem.$index = this.getBranchIndex(item.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\titem.$index = this.getIndexById(item.id);\n\t\t\t}\n\t\t});\n\t\tthis.data.attachEvent(\"onDataMove\", function( sid ){\n\t\t\tif(view._draggedItem && view._draggedItem.id == sid){\n\t\t\t\tvar data = view._draggedItem;\n\t\t\t\tview._draggedItem = null;\n\t\t\t\tview._addToHistory(sid, data, \"move\");\n\t\t\t}\n\t\t});\n\n\t\t// add, remove\n\t\tthis.data.attachEvent(\"onBeforeDelete\", function(id){\n\t\t\tif(this.getItem(id)){\n\t\t\t\tvar item = view._deletedItem = copy(this.getItem(id));\n\t\t\t\tif(this.branch){\n\t\t\t\t\titem.$index = this.getBranchIndex(id);\n\t\t\t\t\tif(this.branch[id])\n\t\t\t\t\t\titem.$branch = copy(this.serialize(id));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\titem.$index = this.getIndexById(id);\n\t\t\t}\n\t\t});\n\t\tthis.data.attachEvent(\"onDataUpdate\", function(id, data, old){\n\t\t\tview._addToHistory(id+\"\", old, \"update\");\n\t\t});\n\t\tthis.data.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tvar data = null;\n\t\t\tif(id){\n\t\t\t\tif(mode == \"add\"){\n\t\t\t\t\tdata = copy(item);\n\t\t\t\t}\n\t\t\t\telse if( mode == \"delete\") {\n\t\t\t\t\tdata = view._deletedItem;\n\t\t\t\t}\n\n\t\t\t\tif(data)\n\t\t\t\t\tview._addToHistory(id, data, mode);\n\t\t\t}\n\t\t});\n\n\t\t// id change\n\t\tthis.data.attachEvent(\"onIdChange\", function(oldId,newId){\n\t\t\tif(typeof oldId == \"object\")\n\t\t\t\toldId = oldId.row;\n\t\t\tfor(var i =0; i < view._undoHistory.length; i++){\n\t\t\t\tif(view._undoHistory[i].id == oldId){\n\t\t\t\t\tview._undoHistory[i].id = newId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_addToHistory: function(id, data, action){\n\t\tif(!this._skipHistory && this._settings.undo){\n\t\t\tthis._undoHistory.push({id: id, action: action, data: data});\n\t\t\tconst undoLimit = this._settings.undoLimit || 20;\n\t\t\tif(this._undoHistory.length > undoLimit)\n\t\t\t\tthis._undoHistory.splice(0,1);\n\t\t\tif(!this._skipCursorInc)\n\t\t\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t\t}\n\t},\n\tignoreUndo: function(func, master){\n\t\tthis._skipHistory = true;\n\t\tfunc.call(master||this);\n\t\tthis._skipHistory = false;\n\t},\n\tremoveUndo: function(id){\n\t\tfor( var i = this._undoHistory.length-1; i >=0; i--){\n\t\t\tif(this._undoHistory[i].id == id){\n\t\t\t\tif(this._undoHistory[i].action == \"id\"){\n\t\t\t\t\tid = this._undoHistory[i].data;\n\t\t\t\t}\n\t\t\t\tthis._undoHistory.removeAt(i);\n\t\t\t}\n\t\t}\n\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t},\n\tundo: function(id){\n\t\tif(id){\n\t\t\tthis.ignoreUndo(function(){\n\t\t\t\tvar data, i;\n\t\t\t\tfor( i = this._undoHistory.length-1; !data && i >=0; i--){\n\t\t\t\t\tif(this._undoHistory[i].id == id)\n\t\t\t\t\t\tdata = this._undoHistory[i];\n\t\t\t\t}\n\n\t\t\t\tif(data){\n\t\t\t\t\t/*if(data.action == \"id\")\n\t\t\t\t\t\tid = data.data;*/\n\t\t\t\t\tthis._undoAction(data);\n\t\t\t\t\tthis._undoHistory.removeAt(i+1);\n\t\t\t\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tvar data = this._undoHistory[this._undoCursor];\n\t\t\tif(data){\n\t\t\t\tthis.ignoreUndo(function(){\n\t\t\t\t\tthis._undoAction(data);\n\t\t\t\t\tthis._undoHistory.removeAt(this._undoCursor);\n\t\t\t\t});\n\t\t\t\tthis._undoCursor--;\n\t\t\t\t/*if(data.action == \"id\")\n\t\t\t\t\tthis.undo();*/\n\t\t\t}\n\t\t}\n\t},\n\t_undoAction: function(obj){\n\t\tif(obj.action == \"delete\"){\n\t\t\tvar branch = null,\n\t\t\t\tparentId = obj.data.$parent;\n\n\t\t\tif(obj.data.$branch){\n\t\t\t\tbranch = {\n\t\t\t\t\tparent: obj.id,\n\t\t\t\t\tdata: copy(obj.data.$branch)\n\t\t\t\t};\n\t\t\t\tdelete obj.data.$branch;\n\t\t\t\tif(parentId && !this.data.pull[parentId])\n\t\t\t\t\tparentId = 0;\n\t\t\t}\n\n\t\t\tthis.add(obj.data, obj.data.$index, parentId);\n\t\t\tif(branch){\n\t\t\t\tthis.parse(branch);\n\t\t\t}\n\t\t}\n\t\telse if(obj.action == \"add\"){\n\t\t\tthis.remove(obj.id);\n\t\t}\n\t\telse if(obj.action == \"update\"){\n\t\t\tthis.updateItem(obj.id, obj.data);\n\t\t}\n\t\telse if(obj.action == \"move\"){\n\t\t\tif(obj.data.$parent){\n\t\t\t\tif(this.getItem(obj.data.$parent))\n\t\t\t\t\tthis.move(obj.id, obj.data.$index, null, {parent: obj.data.$parent});\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.move(obj.id, obj.data.$index);\n\t\t}\n\t\t/*else if(obj.action == \"id\"){\n\t\t\tthis.data.changeId(obj.id, obj.data);\n\t\t}*/\n\t}\n};\n\nexport default Undo;","import {create} from \"../webix/html\";\nimport {isArray, isUndefined, copy, toNode, delay, extend} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nfunction init_suggest(editor, input){\n\tconst suggest = editor.config.suggest;\n\tif (suggest){\n\t\tconst box = editor.config.suggest = create_suggest(suggest);\n\t\tconst boxobj = $$(box);\n\t\tif (boxobj && input)\n\t\t\tboxobj.linkInput(input);\n\t\treturn boxobj;\n\t}\n}\n\nfunction attach_editend(suggest){\n\tif (suggest && suggest.setMasterValue && !suggest._editor_initialized){\n\t\tsuggest._editor_initialized = true;\n\t\tsuggest.attachEvent(\"onValueSuggest\", function(){\n\t\t\tdelay(()=>callEvent(\"onEditEnd\", []));\n\t\t});\n\t}\n}\n\nfunction create_suggest(config){\n\tif (typeof config == \"string\") return config;\n\tif (config.linkInput) return config._settings.id;\n\n\tif (typeof config == \"object\"){\n\t\tif (isArray(config))\n\t\t\tconfig = { data: config };\n\t\tconfig.view = config.view || \"suggest\";\n\t} else if (config === true)\n\t\tconfig = { view:\"suggest\" };\n\n\tconst obj = ui(config);\n\treturn obj.config.id;\n}\n\nfunction getLabel(config){\n\tconst text = (config.header && config.header[0]) ? config.header[0].text : config.editValue||config.label;\n\treturn (text || \"\").toString().replace(/<[^>]*>/g, \"\");\n}\n\n/*\nthis.node - html node, available after render call\nthis.config - editor config\nthis.value - original value\nthis.popup - id of popup \n*/\nconst editors = {\n\t\"text\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t\tthis.getInputNode(this.node).select();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode(this.node).value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tconst input = this.getInputNode(this.node);\n\t\t\tinput.value = value;\n\n\t\t\tconst suggest = init_suggest(this, input);\n\t\t\tattach_editend(suggest);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<input type='text' aria-label='\"+getLabel(this.config)+\"'>\");\n\t\t}\n\t},\n\t\"inline-checkbox\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.checked;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"inline-text\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.value;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t\tthis.node.select();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"checkbox\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().checked;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().checked = !!value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<div><input type='checkbox' aria-label='\"+getLabel(this.config)+\"'></div>\");\n\t\t}\n\t},\n\t\"select\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().value = value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\tlet html = \"\";\n\t\t\tconst options = this.config.options || this.config.collection;\n\t\t\tassert(options,\"options not defined for select editor\");\n\n\t\t\tif (options.data && options.data.each)\n\t\t\t\toptions.data.each(function(obj){\n\t\t\t\t\thtml +=\"<option value='\"+obj.id+\"'>\"+obj.value+\"</option>\";\n\t\t\t\t});\n\t\t\telse {\n\t\t\t\tif (isArray(options)){\n\t\t\t\t\tfor (let i = 0; i < options.length; i++){\n\t\t\t\t\t\tconst rec = options[i];\n\t\t\t\t\t\tconst isplain = isUndefined(rec.id);\n\t\t\t\t\t\tconst id = isplain ? rec : rec.id;\n\t\t\t\t\t\tconst label = isplain ? rec : rec.value;\n\n\t\t\t\t\t\thtml +=\"<option value='\"+id+\"'>\"+label+\"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else for (let key in options){\n\t\t\t\t\thtml +=\"<option value='\"+key+\"'>\"+options[key]+\"</option>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<select aria-label='\"+getLabel(this.config)+\"'>\"+html+\"</select>\");\n\t\t}\n\t},\n\tpopup:{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tdestroy:function(){\n\t\t\tthis.getPopup().hide();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().getValue()||\"\";\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getPopup().show(this.node);\n\t\t\tthis.getInputNode().setValue(value);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.getPopup().getChildViews()[0];\n\t\t},\n\t\tgetPopup:function(){\n\t\t\tlet id = this.config.$popup;\n\n\t\t\tif (!(id && $$(id)))\n\t\t\t\tid = this.config.$popup = this.createPopup();\n\n\t\t\treturn $$(id);\n\t\t},\n\t\tcreatePopup:function(){\n\t\t\tconst popup = this.config.popup || this.config.suggest;\n\t\t\tif (popup){\n\t\t\t\tlet pobj;\n\t\t\t\tif (typeof popup == \"object\" && !popup.name){\n\t\t\t\t\tpopup.view = popup.view || \"suggest\";\n\t\t\t\t\tpobj = ui(copy(popup));\n\t\t\t\t} else\n\t\t\t\t\tpobj = $$(popup);\n\n\t\t\t\t//custom popup may be linked already\n\t\t\t\tif(!pobj._linked){\n\t\t\t\t\tif (pobj.linkInput)\n\t\t\t\t\t\tpobj.linkInput(document.body);\n\t\t\t\t\telse if(this.linkInput)\n\t\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\t\tpobj._linked = true;\n\t\t\t\t}\n\t\t\t\tattach_editend(pobj);\n\n\t\t\t\treturn pobj;\n\t\t\t}\n\n\t\t\tconst editor = editors.$popup[this.popupType];\n\t\t\tlet popupId = editor.$popup;\n\n\t\t\tif(!(popupId && $$(popupId))){\n\t\t\t\tconst popup = ui(copy(editor));\n\t\t\t\tif(!popup.linkInput && !popupId)\n\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\teditor.$popup = popupId = popup._settings.id;\n\t\t\t\tthis.popupInit(popup);\n\t\t\t}\n\n\t\t\treturn popupId;\n\t\t},\n\t\tlinkInput:function(node){\n\t\t\t_event(toNode(node), \"keydown\", e => {\n\t\t\t\t//abort, when editor was not initialized yet\n\t\t\t\tif (!this.config.$popup) return;\n\n\t\t\t\tconst code = e.which || e.keyCode, list = this.getInputNode();\n\t\t\t\tif(!list.isVisible()) return;\n\n\t\t\t\tif(list.moveSelection && code < 41 && code > 32){\n\t\t\t\t\tlet dir;\n\t\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\t\telse if(code == 34) dir = \"pgdown\";\n\t\t\t\t\telse if(code == 35) dir = \"bottom\";\n\t\t\t\t\telse if(code == 36) dir = \"top\";\n\t\t\t\t\telse if(code == 37) dir = \"left\";\n\t\t\t\t\telse if(code == 38) dir = \"up\";\n\t\t\t\t\telse if(code == 39) dir = \"right\";\n\t\t\t\t\telse if(code == 40) dir = \"down\";\n\n\t\t\t\t\tlist.moveSelection(dir);\n\t\t\t\t}\n\t\t\t\t// shift+enter support for 'popup' editor\n\t\t\t\telse if(code === 13 && ( e.target.nodeName !==\"TEXTAREA\" || !e.shiftKey))\n\t\t\t\t\tcallEvent(\"onEditEnd\", []);\n\t\t\t\n\t\t\t});\n\t\t},\n\n\t\tpopupInit:function(){},\n\t\tpopupType:\"text\",\n\t\trender:function(){ return {}; },\n\t\t$inline:true\n\t}\n};\n\neditors.color = extend({\n\tfocus:function(){},\n\tpopupType:\"color\",\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onItemClick\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.date = extend({\n\tfocus:function(){},\n\tpopupType:\"date\",\n\tsetValue:function(value){\n\t\tthis._is_string = this.config.stringResult || (value && typeof value == \"string\");\n\t\teditors.popup.setValue.call(this, value);\n\t},\n\tgetValue:function(){\n\t\treturn this.getInputNode().getValue(this._is_string?i18n.parseFormatStr:\"\")||\"\";\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onAfterDateSelect\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.combo = extend({\n\t_create_suggest:function(config){\n\t\tlet suggest, id;\n\t\tif (this.config.popup){\n\t\t\tsuggest = this.config.popup;\n\t\t\tid = suggest.config.id;\n\t\t}\n\t\telse if (config){\n\t\t\tid = create_suggest(config);\n\t\t\tsuggest = $$(id);\n\t\t} else\n\t\t\tid = this._shared_suggest(config);\n\n\t\tattach_editend(suggest);\n\t\treturn id;\n\t},\n\t_shared_suggest:function(){\n\t\tconst e = editors.combo;\n\n\t\tif(e._suggest && $$(e._suggest))\n\t\t\treturn e._suggest;\n\n\t\treturn e._suggest = this._create_suggest(true);\n\t},\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor\"\n\t\t}, \"<input type='text' role='combobox' aria-label='\"+getLabel(this.config)+\"'>\");\n\n\t\t//save suggest id for future reference\t\t\n\t\tconst suggest = this.config.suggest = this._create_suggest(this.config.suggest);\n\n\t\tif (suggest){\n\t\t\t$$(suggest).linkInput(node.firstChild, true);\n\t\t\t_event(node.firstChild, \"click\", () => this.showPopup());\n\t\t}\n\t\treturn node;\n\t},\n\tgetPopup:function(){\n\t\treturn $$(this.config.suggest);\n\t},\n\tshowPopup:function(){\n\t\tconst popup = this.getPopup();\n\t\tconst list = popup.getList();\n\t\tconst input = this.getInputNode();\n\t\tconst value = this._initial_value;\n\n\t\tpopup.show(input);\n\t\tinput.setAttribute(\"aria-expanded\", \"true\");\n\t\tif (value){\n\t\t\tassert(list.exists(value), \"Option with ID \"+value+\" doesn't exist\");\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t\tpopup._last_input_target = input;\n\t},\n\tafterRender:function(){\n\t\tthis.showPopup();\n\t},\n\tsetValue:function(value){\n\t\tthis._initial_value = value;\n\t\tif (this.config.suggest){\n\t\t\tconst sobj = $$(this.config.suggest);\n\t\t\tconst data = this.config.collection || this.config.options;\n\t\t\tif (data)\n\t\t\t\tsobj.getList().data.importData(data);\n\n\t\t\tthis.getInputNode(this.node).value = sobj.getItemText(value);\n\t\t}\n\t},\n\tgetValue:function(){\n\t\tlet value = this.getInputNode().value;\n\t\tif (this.config.suggest){\n\t\t\tconst suggest = $$(this.config.suggest),\n\t\t\t\tlist = suggest.getList();\n\t\t\tif (value || (list.getSelectedId && list.getSelectedId()))\t\n\t\t\t\tvalue = suggest.getSuggestion(value);\n\t\t}\n\t\treturn value;\n\t}\n}, editors.text);\n\neditors.richselect = extend({\n\tfocus:function(){},\n\tgetValue:function(){\n\t\treturn this.getPopup().getValue();\n\t},\n\tsetValue:function(value){\n\t\tconst suggest = this.config.collection || this.config.options;\n\t\tthis.getInputNode();\n\t\tif (suggest)\n\t\t\tthis.getPopup().getList().data.importData(suggest);\n\n\t\tthis.getPopup().show(this.node);\n\t\tthis.getPopup().setValue(value);\n\t},\n\tgetInputNode:function(){\n\t\treturn this.getPopup().getList();\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.linkInput(document.body);\n\t\tattach_editend(popup);\n\t},\n\tpopupType:\"richselect\"\n}, editors.popup);\n\neditors.password = extend({\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor webix_password_editor\"\n\t\t}, \"<input type='password' aria-label='\"+getLabel(this.config)+\"'><span class='webix_icon wxi-eye'></span>\");\n\n\t\tconst icon = node.querySelector(\".webix_icon\");\n\t\t_event(icon, \"click\", () => {\n\t\t\tthis.toggleInput();\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t});\n\t\treturn node;\n\t},\n\ttoggleInput:function(){\n\t\tconst input = this.getInputNode(this.node);\n\t\tconst isPassword = input.getAttribute(\"type\") === \"password\";\n\t\tinput.setAttribute(\"type\", isPassword ? \"text\" : \"password\");\n\n\t\tconst icon = input.nextSibling;\n\t\ticon.className = `webix_icon wxi-eye${isPassword ? \"-slash\" : \"\"}`;\n\t},\n\tmasterFormat: function(value){\n\t\treturn !value && value !== 0 ? \"\" : \"&bull;\".repeat(value.toString().length);\n\t}\n}, editors.text);\n\neditors.$popup = {\n\ttext:{\n\t\tview:\"popup\", width:250, height:150,\n\t\tbody:{ view:\"textarea\" }\n\t},\n\tcolor:{\n\t\tview:\"popup\",\n\t\tbody:{ view:\"colorboard\" }\n\t},\n\tdate:{\n\t\tview:\"popup\", width:250, height:250, padding:0,\n\t\tbody:{ view:\"calendar\", icons:true, borderless:true }\n\t},\n\trichselect:{\n\t\tview:\"suggest\",\n\t\tbody:{ view:\"list\", select:true }\n\t},\n\tmultiselect:{\n\t\tview:\"multisuggest\",\n\t\tsuggest:{\n\t\t\tbutton:true\n\t\t}\n\t}\n};\n\nexport default editors;","import {remove, removeCss, addCss} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {extend, bind, delay, isUndefined} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {attachEvent, callEvent, detachEvent} from \"../webix/customevents\";\nimport Undo from \"../core/undo\";\n\n\nimport globalState from \"../core/state\";\nimport editors from \"../webix/editors\";\n/*\n\tBehavior:EditAbility - enables item operation for the items\n\t\n\t@export\n\t\tedit\n\t\tstopEdit\n*/\n\nconst EditAbility ={\n\tdefaults:{\n\t\teditaction:\"click\"\n\t},\n\t$init:function(config){\n\t\tthis._editors = {};\n\t\tthis._in_edit_mode = 0;\n\t\tthis._edit_open_time = 0;\n\t\tthis._contentobj.style.position = \"relative\";\n\t\tif (config)\n\t\t\tconfig.onDblClick = config.onDblClick || {};\n\n\t\tthis.attachEvent(\"onAfterRender\", this._refocus_inline_editor);\n\n\t\t//when we call extend the editable prop can be already set\n\t\tif (this._settings.editable)\n\t\t\tthis._init_edit_events_once();\n\n\t\textend(this,Undo);\n\t},\n\t_try_reselecting_text:function(input, start){\n\t\ttry {\t\t\t//Chrome throws an error if selectionStart is not accessible\n\t\t\tif (typeof input.selectionStart === \"number\") {\n\t\t\t\tinput.selectionStart = start >= 0 ? start : input.value.length;\n\t\t\t\tinput.selectionEnd = input.value.length;\n\t\t\t}\n\t\t} catch(e){}\t// eslint-disable-line\n\t},\n\t_refocus_inline_editor:function(){\n\t\tconst editor = this.getEditor();\n\t\tif (editor && editor.$inline && !editor.getPopup){\n\t\t\tconst newnode = this._locateInput(editor);\n\t\t\tif (newnode && newnode != editor.node){\n\t\t\t\teditor.node = newnode;\n\t\t\t\tnewnode.focus();\n\n\t\t\t\tconst justOpened = (new Date())-this._edit_open_time > 200;\n\t\t\t\tthis._try_reselecting_text(newnode, justOpened ? -1 : 0);\n\t\t\t}\n\t\t}\n\t},\n\teditable_setter:function(value){\n\t\tif (value)\n\t\t\tthis._init_edit_events_once();\n\t\treturn value;\n\t},\n\t_init_edit_events_once:function(){\n\t\t//will close editor on any click outside\n\t\tconst e1 = attachEvent(\"onEditEnd\", bind(function(){\n\t\t\tif (this._in_edit_mode)\n\t\t\t\tthis.editStop();\n\t\t}, this));\n\t\tconst e2 = attachEvent(\"onClick\", bind(function(e){\n\t\t\t//but ignore click which opens editor\n\t\t\tif (this._in_edit_mode && (new Date())-this._edit_open_time > 200){\n\t\t\t\tif (!this._last_editor || this._last_editor.popupType || !e || ( !this._last_editor.node || !this._last_editor.node.contains(e.target)))\n\t\t\t\t\tthis.editStop();\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.attachEvent(\"onDestruct\", function(){ detachEvent(e1); detachEvent(e2); });\n\t\t\n\t\t//property sheet has simple data object, without events\n\t\tif (this.data.attachEvent)\n\t\t\tthis.data.attachEvent(\"onIdChange\", bind(function(oldid, newid){\n\t\t\t\tthis._changeEditorId(oldid, newid);\n\t\t\t}, this));\n\n\t\t//when clicking on row - will start editor\n\t\tthis.attachEvent(\"onItemClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"click\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\tthis.attachEvent(\"onItemDblClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"dblclick\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\t//each time when we clicking on input, reset timer to prevent self-closing\n\t\tthis._reset_active_editor = bind(function(){\n\t\t\tthis._edit_open_time = new Date();\n\t\t},this);\n\n\t\tthis._init_edit_events_once = function(){};\n\n\t\tif (this._component_specific_edit_init)\n\t\t\tthis._component_specific_edit_init();\n\t},\n\t_handle_live_edits:function(){\n\t\tdelay(function(){\n\t\t\tvar editor = this.getEditor();\n\t\t\tif (editor && editor.config.liveEdit){\n\t\t\t\tvar state = { value:editor.getValue(), old: editor.value };\n\t\t\t\tif (state.value == state.old) return;\n\n\t\t\t\teditor.value = state.value;\n\t\t\t\tthis._set_new_value(editor, state.value, false);\n\t\t\t\tthis.callEvent(\"onLiveEdit\", [state, editor]);\n\t\t\t}\n\t\t}, this);\n\t},\n\t_show_editor_form:function(id){\n\t\tvar form = this._settings.form;\n\t\tif (typeof form != \"string\")\n\t\t\tthis._settings.form = form = ui(form).config.id;\n\n\t\tform = $$(form);\n\t\tvar realform = form.setValues?form:form.getChildViews()[0];\n\t\t\n\t\trealform.setValues(this.getItem(id.row || id), false, \"auto\");\n\t\tform.config.master = this.config.id;\n\t\tform.show( this.getItemNode(id) );\n\n\t\tvar first = realform.getChildViews()[0];\n\t\tif (first.focus)\n\t\t\tfirst.focus();\n\t},\n\tedit:function(id, preserve, show){\n\t\tif (!this._settings.editable || !this.callEvent(\"onBeforeEditStart\", [id])) return false;\n\t\tif (this._settings.form)\n\t\t\treturn this._show_editor_form(id);\n\n\t\tvar editor = this._get_editor_type(id);\n\t\tif (editor){\n\t\t\tif (this.getEditor(id)) return;\n\t\t\tif (!preserve) this.editStop();\n\n\t\t\t//render html input\n\t\t\tassert(editors[editor], \"Invalid editor type: \"+editor);\n\t\t\tvar type = extend({}, editors[editor]);\n\n\t\t\tvar node = this._init_editor(id, type, show);\n\t\t\tif (type.config.liveEdit)\n\t\t\t\tthis._live_edits_handler = this.attachEvent(\"onKeyPress\", this._handle_live_edits);\n\n\t\t\tvar area = type.getPopup?type.getPopup(node)._viewobj:node;\n\n\t\t\tif (area)\n\t\t\t\t_event(area, \"click\", this._reset_active_editor);\n\t\t\tif (node)\n\t\t\t\t_event(node, \"input\", this._on_editor_change, { bind:{ view:this, id:id }});\n\t\t\tif (show !== false)\n\t\t\t\ttype.focus();\n\n\t\t\tif (this.$fixEditor)\n\t\t\t\tthis.$fixEditor(type);\n\n\t\t\t//save time of creation to prevent instant closing from the same click\n\t\t\tthis._edit_open_time = globalState.edit_open_time = new Date();\n\n\t\t\tUIManager.setFocus(this, true);\n\t\t\tthis.callEvent(\"onAfterEditStart\", [id]);\n\t\t\treturn type;\n\t\t}\n\t\treturn null;\n\t},\n\tgetEditor:function(id){\n\t\tif (!id)\n\t\t\treturn this._last_editor;\n\n\t\treturn this._editors[id];\n\t},\n\t_changeEditorId:function(oldid, newid)\t{\n\t\tvar editor = this._editors[oldid];\n\t\tif (editor){\n\t\t\tthis._editors[newid] = editor;\n\t\t\teditor.id = newid;\n\t\t\tdelete this._editors[oldid];\n\t\t}\n\t},\n\t_on_editor_change:function(){\n\t\tif (this.view.hasEvent(\"onEditorChange\"))\n\t\t\tthis.view.callEvent(\"onEditorChange\", [this.id, this.view.getEditorValue(this.id) ]);\n\t},\n\t_get_edit_config:function(){\n\t\treturn this._settings;\n\t},\n\t_init_editor:function(id, type, show){\n\t\ttype.config = this._get_edit_config(id);\n\t\tvar node = type.render();\n\n\t\tif (type.$inline)\n\t\t\tnode = this._locateInput(id);\n\t\ttype.node = node;\n\n\t\tvar item = this.getItem(id);\n\t\t//value can be configured by editValue option\n\t\tvar value = item[this._settings.editValue||\"value\"];\n\t\t//if property was not defined - use empty value\n\t\tif (isUndefined(value))\n\t\t\tvalue = \"\";\n\n\t\ttype.setValue(value, item);\n\t\ttype.value = value;\n\n\t\tthis._addEditor(id, type);\n\n\t\tif(type.getPopup){\n\t\t\tconst popup = type.getPopup();\n\t\t\tpopup.attachEvent(\"onHide\", function(){\n\t\t\t\tif(this._edit_active) this.show();\n\t\t\t});\n\t\t\tpopup._editorMaster = this._settings.id;\n\t\t}\n\n\t\t//show it over cell\n\t\tif (show !== false)\n\t\t\tthis.showItem(id);\n\t\tif (!type.$inline)\n\t\t\tthis._sizeToCell(id, node, true);\n\n\t\tif (type.afterRender)\n\t\t\ttype.afterRender();\n\t\treturn node;\n\t},\n\t_locate_cell:function(id){\n\t\treturn this.getItemNode(id);\n\t},\n\t_locateInput:function(id){\n\t\tvar cell = this._locate_cell(id);\n\t\tif (cell)\n\t\t\tcell = cell.getElementsByTagName(\"input\")[0] || cell;\n\n\t\treturn cell;\n\t},\n\t_get_editor_type:function(){\n\t\treturn this._settings.editor;\n\t},\n\t_addEditor:function(id, type){\n\t\ttype.id = id;\n\t\tthis._editors[id]= this._last_editor = type;\n\t\tthis._in_edit_mode++;\n\t},\n\t_removeEditor:function(editor){\n\t\tif (this._last_editor == editor)\n\t\t\tthis._last_editor = 0;\n\t\t\n\t\tif (editor.destroy)\n\t\t\teditor.destroy();\n\n\t\tdelete editor.popup;\n\t\tdelete editor.node;\n\n\t\tdelete this._editors[editor.id];\n\t\tthis._in_edit_mode--;\n\t},\n\tfocusEditor:function(){\n\t\tvar editor = this.getEditor.apply(this, arguments);\n\t\tif (editor && editor.focus)\n\t\t\teditor.focus();\n\t},\n\teditCancel:function(){\n\t\tthis.editStop(null, null, true);\n\t},\n\t_applyChanges: function(el){\n\t\tif (el){\n\t\t\tvar ed = this.getEditor();\n\t\t\tif (ed && ed.getPopup && ed.getPopup() == el.getTopParentView()) return;\n\t\t}\n\t\tthis.editStop();\n\t},\n\teditStop:function(id){\n\t\tif (this._edit_stop) return;\n\t\tthis._edit_stop = 1;\n\n\n\t\tvar cancel = arguments[2];\n\t\tvar result = 1;\n\t\tif (!id){\n\t\t\tthis._for_each_editor(function(editor){\n\t\t\t\tresult = result * this._editStop(editor, cancel);\n\t\t\t});\n\t\t} else \n\t\t\tresult = this._editStop(this._editors[id], cancel);\n\n\t\tthis._edit_stop = 0;\n\t\treturn result;\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft, \n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.offsetHeight,\n\t\t\twidth:html.offsetWidth,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_sizeToCell:function(id, node, inline){\n\t\t//fake inputs\n\t\tif (!node.style) return;\n\n\t\tvar pos = this._cellPosition(id, null, true);\n\n\t\tnode.style.top = pos.top + \"px\";\n\t\tnode.style.left = pos.left + \"px\";\n\n\t\tnode.style.width = pos.width-1+\"px\";\n\t\tnode.style.height = pos.height-1+\"px\";\n\n\t\tnode.top = pos.top; //later will be used during y-scrolling\n\n\t\tif (inline) pos.parent.appendChild(node);\n\t\treturn pos;\n\t},\n\t_for_each_editor:function(handler){\n\t\tfor (var editor in this._editors)\n\t\t\thandler.call(this, this._editors[editor]);\n\t},\n\t_editStop:function(editor, ignore){\n\t\tif (!editor || globalState._final_destruction) return;\n\t\tvar state = { \n\t\t\tvalue : this._get_new_value(editor), \n\t\t\told : editor.value\n\t\t};\n\n\t\tconst popup = editor.getPopup ? editor.getPopup() : null;\n\n\t\tif (this.callEvent(\"onBeforeEditStop\", [state, editor, ignore])){\n\t\t\tif (!ignore){\n\t\t\t\t//special case, state.old = 0, state.value = \"\"\n\t\t\t\t//we need to state.old to string, to detect the change\n\t\t\t\tvar old = state.old;\n\t\t\t\tif (typeof state.value == \"string\") old += \"\";\n\n\t\t\t\tif (old != state.value || editor.config.liveEdit){\n\t\t\t\t\tvar item = this._set_new_value(editor, state.value, true);\t\n\t\t\t\t\tthis.updateItem(editor.row || editor.id, item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (editor.$inline)\n\t\t\t\teditor.node = null;\n\t\t\telse\n\t\t\t\tremove(editor.node);\n\n\t\t\tif (popup){\n\t\t\t\tpopup.hide();\n\t\t\t\tdelete popup._edit_active;\n\t\t\t}\n\n\t\t\tthis._removeEditor(editor);\n\t\t\tif (this._live_edits_handler)\n\t\t\t\tthis.detachEvent(this._live_edits_handler);\n\n\t\t\tthis.callEvent(\"onAfterEditStop\", [state, editor, ignore]);\n\t\t\treturn 1;\n\t\t}\n\t\telse if(popup){\n\t\t\tif(!popup.isVisible())\n\t\t\t\tpopup.show();\n\t\t\teditor.getPopup()._edit_active = true;\n\n\t\t}\n\t\treturn 0;\n\t},\n\tvalidateEditor:function(id){\n\t\tlet result = true;\n\t\tif (this._settings.rules){\n\t\t\tconst editor = this.getEditor(id);\n\t\t\tconst key = editor.column||this._settings.editValue||\"value\";\n\t\t\tconst rule = this._settings.rules[key];\n\t\t\tconst all = this._settings.rules.$all;\n\t\t\tconst input = editor.getInputNode();\n\n\t\t\tif ((rule || all) && !input._viewobj){ //only for html inputs\n\t\t\t\tconst obj = this.data.getItem(editor.row||editor.id);\n\t\t\t\tconst value = editor.getValue();\n\n\t\t\t\tif (rule)\n\t\t\t\t\tresult = rule.call(this, value, obj, key);\n\t\t\t\tif (all)\n\t\t\t\t\tresult = all.call(this, value, obj, key) && result;\n\t\t\t\n\t\t\t\tif (result)\n\t\t\t\t\tremoveCss(input, \"webix_invalid\");\n\t\t\t\telse\n\t\t\t\t\taddCss(input, \"webix_invalid\");\n\n\t\t\t\tcallEvent(\"onLiveValidation\", [editor, result, obj, value]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tgetEditorValue:function(id){\n\t\tvar editor;\n\t\tif (arguments.length === 0)\n\t\t\teditor = this._last_editor;\n\t\telse\n\t\t\teditor = this.getEditor(id);\n\n\t\tif (editor)\n\t\t\treturn editor.getValue();\n\t},\n\tgetEditState:function(){\n\t\treturn this._last_editor || false;\n\t},\n\teditNext:function(next, from){\n\t\treturn this._edit_next(next, from);\n\t},\n\t_edit_next:function(next, from){\n\t\tnext = next !== false; //true by default\n\t\tif (this._in_edit_mode == 1 || from){\n\t\t\t//only if one editor is active\n\t\t\tconst editor_next = this._find_cell_next((this._last_editor || from ), function(id){\n\t\t\t\tif (this._get_editor_type(id))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t}, next);\n\n\t\t\tif (this.editStop()){\t//if we was able to close previous editor\n\t\t\t\tif (editor_next){\t//and there is a new target\n\t\t\t\t\tconst result = this.edit(editor_next);\t//init new editor\n\t\t\t\t\tthis._after_edit_next(editor_next);\n\t\t\t\t\tif(result === false)\n\t\t\t\t\t\treturn this._edit_next(next, editor_next);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t//stab, used in datatable\n\t_after_edit_next:function(){},\n\t_find_cell_next:function(start, check, direction){\n\t\tvar row = this.getIndexById(start.id);\n\t\tvar order = this.data.order;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t_get_new_value(editor){\n\t\treturn editor.getValue();\n\t},\n\t_set_new_value:function(editor, new_value, copy){\n\t\tvar item = copy ? {} : this.getItem(editor.id);\n\t\titem[this._settings.editValue||\"value\"] = new_value;\n\t\treturn item;\n\t}\n};\n\nexport default EditAbility;","import {_to_array, uid} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport GroupMethods from \"../core/groupmethods\";\n\n\nconst GroupStore = {\n\t$init:function(){\n\t\tthis.attachEvent(\"onClearAll\", () => this._not_grouped_order = null);\n\t\tthis.attachEvent(\"onSyncApply\", () => this._not_grouped_order = null);\n\t},\n\tungroup:function(target){\n\t\t// reset filters before ungrouping\n\t\tif (this._filter_reset)\n\t\t\tthis._filter_reset(false);\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (!this._ungroupLevel(target)) return;\n\t\t} else {\n\t\t\tif (!this._not_grouped_order) return;\n\n\t\t\tthis.order = this._not_grouped_order;\n\t\t\tthis.pull = this._not_grouped_pull;\n\n\t\t\tthis._not_grouped_order = this._not_grouped_pull = null;\n\t\t}\n\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_ungroupLevel(target){\n\t\tconst parent = target || 0;\n\t\tconst level = parent == \"0\" ? 1 : this.getItem(parent).$level + 1;\n\t\tlet changed = false;\n\t\tconst top = this.branch[parent];\n\t\tlet order = [];\n\n\t\tfor (var i=0; i<top.length; i++){\n\t\t\tconst id = top[i];\n\t\t\tif (this.pull[id].$group){\n\t\t\t\tchanged = true;\n\t\t\t\tvar group = this.branch[id];\n\n\t\t\t\tif (group)\n\t\t\t\t\tthis.branch[id] = group.filter(a => {\n\t\t\t\t\t\tif (!this.pull[a].$footer)\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\tthis._unregisterItem(a);\n\t\t\t\t\t});\n\t\t\t\torder = order.concat(this.branch[id] || []);\n\t\t\t\tthis._unregisterItem(id);\n\t\t\t} else\n\t\t\t\torder.push(id);\n\t\t}\n\n\t\tif (!changed) return false;\n\t\tthis.branch[parent] = order;\n\t\tthis._fix_group_levels(this.branch[parent], parent, level);\n\n\t\tif (typeof target === \"undefined\")\n\t\t\tthis._ungroupLevel();\n\n\t\treturn true;\n\t},\n\t_unregisterItem(id){\n\t\tdelete this.pull[id];\n\t\tdelete this.branch[id];\n\t},\n\t_group_processing:function(scheme){\n\t\tthis.blockEvent();\n\t\tthis.group(scheme);\n\t\tthis.unblockEvent();\n\t},\n\t_group_prop_accessor:function(val){\n\t\tif (typeof val == \"function\")\n\t\t\treturn val;\n\t\tconst acc = function(obj){ return obj[val]; };\n\t\tacc.$name = val;\n\t\treturn acc;\n\t},\t\n\tgroup:function(config, target){\n\t\tassert(config, \"Empty config\");\n\n\t\tlet input;\n\t\tif (typeof config === \"string\"){\n\t\t\tinput = config;\n\t\t\tconfig = { by:this._group_prop_accessor(config), map:{} };\n\t\t} else if (typeof config === \"function\"){\n\t\t\tconfig = { by:config, map:{} };\n\t\t} else if (typeof config.by === \"string\"){\n\t\t\tinput = config.by;\n\t\t\tconfig.by = this._group_prop_accessor(config.by);\n\t\t}\n\t\tconfig.map = config.map || {};\n\t\tif (input && !config.map[input])\n\t\t\tconfig.map[input] = [input];\n\t\tconfig.missing = (config.missing === undefined) ? true : config.missing;\n\n\t\t// reset filters before grouping\n\t\tif (this._filter_reset)\n\t\t\tthis._filter_reset(false);\n\n\t\tif (this.getBranchIndex)\n\t\t\treturn this._group_tree(config, target);\n\t\t\n\t\tif (!this._not_grouped_order){\n\t\t\tthis._not_grouped_order = this.order;\n\t\t\tthis._not_grouped_pull = this.pull;\n\t\t}\n\n\t\tconst groups = {};\n\t\tconst labels = [];\n\t\tconst missed = [];\n\t\tconst misGroup = config.missing;\n\t\tthis.each(function(data){\n\t\t\tlet current = config.by(data);\n\t\t\tif (!current && current !== 0){\n\t\t\t\tif (misGroup === false) return;\n\t\t\t\tif (misGroup === true){\n\t\t\t\t\tmissed.push(data);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrent = misGroup;\n\t\t\t}\n\n\t\t\tif (!groups[current]){\n\t\t\t\tlabels.push({ id:current, value:current, $group:true, $row:config.row });\n\t\t\t\tgroups[current] = _to_array();\n\t\t\t}\n\t\t\tgroups[current].push(data);\n\t\t});\n\n\t\tfor (let i=0; i<labels.length; i++){\n\t\t\tlet group = labels[i];\n\t\t\tthis._map_group(config.map, group, groups[labels[i].id]);\n\n\t\t\tif (this.hasEvent(\"onGroupCreated\"))\n\t\t\t\tthis.callEvent(\"onGroupCreated\", [group.id, group.value, groups[labels[i].id]]);\n\t\t}\n\n\t\tthis.order = _to_array();\n\t\tthis.pull = {};\n\t\tthis._fill_pull(labels);\n\t\tthis._fill_pull(missed);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_fill_pull:function(arr){\n\t\tfor (let i=0; i < arr.length; i++){\n\t\t\tlet id = this.id(arr[i]);\n\t\t\tif (this.pull[id])\n\t\t\t\tid = arr[i].id = uid();\n\n\t\t\tthis.pull[id] = arr[i];\n\t\t\tthis.order.push(id);\n\t\t\tif (this._scheme_init)\n\t\t\t\tthis._scheme_init(arr[i]);\n\t\t}\n\t},\n\t_map_group:function(map, group, data){\n\t\tfor (let prop in map){\n\t\t\tlet functor = (map[prop][1]||\"any\");\n\t\t\tlet property = this._group_prop_accessor(map[prop][0]);\n\t\t\tif (typeof functor != \"function\"){\n\t\t\t\tassert(GroupMethods[functor], \"Unknown grouping rule: \"+functor);\n\t\t\t\tfunctor = GroupMethods[functor];\n\t\t\t}\n\n\t\t\tgroup[prop] = functor.call(this, property, data);\n\t\t}\n\t},\n\t_group_tree:function(config, parent){\n\t\t//prepare\n\t\tlet level = 0;\n\t\tif (parent)\n\t\t\tlevel = this.getItem(parent).$level;\n\t\telse parent = 0;\n\n\t\t//run\n\t\tconst topbranch = [];\n\t\tconst labels = [];\n\t\tconst missed = [];\n\n\t\tlet order = this.branch[parent];\n\t\tlet groups = {};\n\t\tfor (let i=0; i<order.length; i++){\n\t\t\tconst data = this.getItem(order[i]);\n\t\t\tlet current = config.by(data);\n\n\t\t\tif (!current && current !== 0)\n\t\t\t\tif (config.missing === false) continue;\n\t\t\t\telse if (config.missing === true){\n\t\t\t\t\tmissed.push(data.id);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else current = config.missing;\n\n\t\t\tlet ancestor = groups[current];\n\t\t\tif (!ancestor){\n\t\t\t\tlet id = uid();\n\t\t\t\tlet newitem = this.pull[id] = { id, value:current, $group:true, $row:config.row};\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(newitem);\n\n\t\t\t\tlabels.push(newitem);\n\t\t\t\tancestor = groups[current] = this.branch[id] = [];\n\t\t\t\tancestor._formath = [];\n\t\t\t\ttopbranch.push(id);\n\t\t\t}\n\t\t\tancestor.push(data.id);\n\t\t\tancestor._formath.push(data);\n\t\t}\n\n\t\tthis.branch[parent] = topbranch.concat(missed);\n\t\tfor (let i=0; i<labels.length; i++){\n\t\t\tlet group = labels[i];\n\t\t\tthis._map_group(config.map, group, this.branch[labels[i].id]._formath);\n\n\t\t\tif (this.hasEvent(\"onGroupCreated\"))\n\t\t\t\tthis.callEvent(\"onGroupCreated\", [group.id, group.value, this.branch[group.id]._formath]);\n\n\t\t\tif (config.footer){\n\t\t\t\tlet id = \"footer$\"+group.id;\n\t\t\t\tlet footer = this.pull[id] = { id:id, $footer:true, value: group.value, $level:level, $count:0, $parent:group.id, $row:config.footer.row};\n\n\t\t\t\tthis._map_group(config.footer, footer, this.branch[labels[i].id]._formath);\n\t\t\t\t\n\t\t\t\tthis.branch[group.id].push(footer.id);\n\t\t\t\tthis.callEvent(\"onGroupFooter\", [footer.id, footer.value, this.branch[group.id]._formath]);\n\t\t\t}\n\t\t\tdelete this.branch[group.id]._formath;\n\t\t}\n\n\t\tthis._fix_group_levels(this.branch[parent], parent, level+1);\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_fix_group_levels:function(branch, parent, level){\n\t\tif (parent)\n\t\t\tthis.getItem(parent).$count = branch.length;\n\n\t\tfor (let i = 0; i < branch.length; i++) {\n\t\t\tconst item = this.pull[branch[i]];\n\t\t\titem.$level = level;\n\t\t\titem.$parent = parent;\n\n\t\t\tconst next = this.branch[item.id];\n\t\t\tif (next)\n\t\t\t\tthis._fix_group_levels(next, item.id, level+1);\n\t\t}\n\t}\n};\n\nexport default GroupStore;","import {preventEvent} from \"../webix/html\";\nimport {_power_array} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport UIManager from \"./uimanager\";\n\n\n/*aria-style handling for options of multiple-value controls (radio, segmented, tabbar)*/\n\nconst HTMLOptions = {\n\t$init: function(){\n\t\tthis.$ready.push(()=>{\n\t\t\tif(!this.customRadio_setter || this.config.customRadio)\n\t\t\t\t_event( this.$view, \"keydown\", this._moveSelection, {bind:this});\n\t\t});\n\t},\n\t_focus: function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\n\t\tconst input = this._getInputNode();\n\t\tif (input)\n\t\t\tfor (let i=0; i<input.length; i++)\n\t\t\t\tif (input[i].getAttribute(\"tabindex\") == \"0\")\n\t\t\t\t\treturn input[i].focus();\n\t},\n\t_blur: function(){\n\t\tconst input = this._getInputNode();\n\t\tif (input)\n\t\t\tfor (let i=0; i<input.length; i++)\n\t\t\t\tif (input[i].getAttribute(\"tabindex\") == \"0\")\n\t\t\t\t\treturn input[i].blur();\n\t},\n\t_moveSelection: function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif (code>34 && code <41){\n\t\t\tconst inp = this._getInputNode();\n\t\t\tlet index = false;\n\n\t\t\tif (!inp.length) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tconst dir = (code === 37 || code === 38 || code === 35)?-1:1;\n\t\t\tif (code === 35) index = inp.length-1;\n\t\t\telse if (code === 36 ) index = 0;\n\t\t\telse {\n\t\t\t\tfor (let i=0; i<inp.length; i++)\n\t\t\t\t\tif (inp[i].getAttribute(\"tabindex\") == \"0\"){\n\t\t\t\t\t\tindex = i + dir;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif (index !== false){\n\t\t\t\tlet i = index;\n\t\t\t\tdo {\n\t\t\t\t\tif (i >= inp.length) i = 0;\n\t\t\t\t\tif (i < 0) i = inp.length-1;\n\n\t\t\t\t\tif (!inp[i].getAttribute(\"webix_disabled\")){\n\t\t\t\t\t\tconst id = inp[i].getAttribute(/*@attr*/\"button_id\");\n\n\t\t\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\t\t\tinp[i].focus();\n\t\t\t\t\t\ti = \"success\";\n\t\t\t\t\t}\n\t\t\t\t\telse i += dir;\n\n\t\t\t\t} while(i !== \"success\" && i !== index);\n\t\t\t}\n\t\t}\n\t},\n\t_get_tooltip_data: function(t,e){\n\t\tlet id,\n\t\t\tnode = e.target;\n\t\twhile (node && !node.webix_tooltip){\n\t\t\tid = node.getAttribute(\"webix_t_id\");\n\t\t\tif (id)\n\t\t\t\treturn this.getOption(id);\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\toptionIndex: function(id){\n\t\tconst options = this._settings.options;\n\t\tfor (let i=0; i<options.length; i++)\n\t\t\tif (options[i].id == id)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\tgetOption: function(id){\n\t\tconst index = this.optionIndex(id);\n\t\tif (index !== -1)\n\t\t\treturn this._settings.options[index];\n\t\treturn null;\n\t},\n\taddOption: function(id, value, show, index){\n\t\tlet obj = id;\n\t\tif (typeof id != \"object\"){\n\t\t\tvalue = value || id;\n\t\t\tobj = { id:id, value:value };\n\t\t} else {\n\t\t\tid = obj.id;\n\t\t\tindex = show;\n\t\t\tshow = value;\n\t\t}\n\n\t\tif (this.optionIndex(id) === -1){\n\t\t\t_power_array.insertAt.call(this._settings.options, obj, index);\n\t\t\tthis.refresh();\n\n\t\t\tthis.callEvent(\"onOptionAdd\", [id, obj]);\n\t\t}\n\n\t\tif (show){\n\t\t\tif (this._settings.options.length === 1)\n\t\t\t\tthis._settings.value = \"\";\n\t\t\tthis.setValue(id, \"auto\");\n\t\t}\n\t},\n\tremoveOption: function(id){\n\t\tconst index = this.optionIndex(id);\n\n\t\tif (index !== -1){\n\t\t\tconst options = this._settings.options;\n\n\t\t\t_power_array.removeAt.call(options, index);\n\n\t\t\t// if we remove a selected option\n\t\t\tif (this._settings.value == id)\n\t\t\t\tthis._setNextVisible(options, index);\n\n\t\t\tthis.refresh();\n\n\t\t\tthis.callEvent(\"onOptionRemove\", [id, this._settings.value]);\n\t\t}\n\t},\n\t_setNextVisible: function(options, index){\n\t\tconst size = options.length;\n\n\t\tif (size && !this.customRadio_setter){\n\t\t\tindex = Math.min(index, size-1);\n\t\t\t//forward search\n\t\t\tfor (let i=index; i<size; i++)\n\t\t\t\tif (!options[i].hidden)\n\t\t\t\t\treturn this.setValue(options[i].id,\"auto\");\n\t\t\t//backward search\n\t\t\tfor (let i=index; i>=0; i--)\n\t\t\t\tif (!options[i].hidden)\n\t\t\t\t\treturn this.setValue(options[i].id,\"auto\");\n\t\t}\n\n\t\t//nothing found\t\t\n\t\tthis.setValue(\"\",\"auto\");\n\t},\n\t_getFirstActive(first){\n\t\tconst options = this._settings.options;\n\n\t\tif (options.length){\n\t\t\tfor (let i=0; i<options.length; i++)\n\t\t\t\tif (!options[i].hidden && !options[i].disabled)\n\t\t\t\t\treturn options[i].id;\n\t\t\tif (first)\n\t\t\t\treturn options[0].id;\n\t\t}\n\t\treturn \"\";\n\t},\n\t_filterOptions: function(options){\n\t\tconst copy = [];\n\t\tfor(let i=0; i<options.length; i++)\n\t\t\tif(!options[i].hidden)\n\t\t\t\tcopy.push(options[i]);\n\t\treturn copy;\n\t},\n\t_setOptionState: function(id, field, state){\n\t\tconst options = this._settings.options;\n\t\tconst index = this.optionIndex(id);\n\n\t\tif (options[index] && state != !!options[index][field]){\t\t\t\t//new state differs from previous one\n\t\t\toptions[index][field] = state;\n\n\t\t\tif (state && field === \"hidden\" && this._settings.value == id)\t\t//switch to next visible one\n\t\t\t\tthis._setNextVisible(options, index);\n\t\t\tthis.refresh();\n\t\t}\n\t},\n\thideOption: function(id){\n\t\tthis._setOptionState(id, \"hidden\", true);\n\t},\n\tshowOption: function(id){\n\t\tthis._setOptionState(id, \"hidden\", false);\n\t},\n\tdisableOption: function(id){\n\t\tthis._setOptionState(id, \"disabled\", true);\n\t},\n\tenableOption: function(id){\n\t\tthis._setOptionState(id, \"disabled\", false);\n\t}\n};\n\nexport default HTMLOptions;","import {preventEvent} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\n\n\nconst KeysNavigation = {\n\t$init:function(){\n\t\tif(this.getSelectedId)\n\t\t\tthis.attachEvent(\"onAfterRender\", this._set_focusable_item);\n\t\tif(this.moveSelection)\n\t\t\tthis.attachEvent(\"onTabFocus\", this._set_item_focus);\n\t},\n\t_set_item_focus:function(){\n\t\tif(this.getSelectedId){\n\t\t\tvar sel = this.getSelectedId(true);\n\t\t\tif(!sel.length || !this.getItemNode(sel[0]))\n\t\t\t\tthis.moveSelection(\"down\"); //select and show\n\t\t}\n\t},\n\t_set_focusable_item:function(){\n\t\tvar sel = this.getSelectedId(true);\n\t\tif(!sel.length || !this.getItemNode(sel[0])){\n\t\t\tvar node =  this._dataobj.querySelector(\"[\"+this._id+\"]\");\n\t\t\tif(node)\n\t\t\t\tnode.setAttribute(\"tabindex\", \"0\");\n\t\t}\n\t},\n\t_navigation_helper:function(mode){\n\t\treturn function(view, e){\n\t\t\tvar tag = e.target;\n\n\t\t\t//ignore clipboard listener\n\t\t\tif (!tag.getAttribute(/*@attr*/\"webixignore\")){\n\t\t\t\t//ignore hotkeys if focus in the common input\n\t\t\t\t//to allow normal text edit operations\n\t\t\t\tvar name = tag.tagName;\n\t\t\t\tif (name == \"INPUT\" || name == \"TEXTAREA\" || name == \"SELECT\") return true;\n\t\t\t}\n\n\t\t\tif (view && view.moveSelection && view.config.navigation && !view._in_edit_mode){\n\t\t\t\tpreventEvent(e);\n\t\t\t\treturn view.moveSelection(mode, {shift:e.shiftKey, ctrl:e.ctrlKey, e});\n\t\t\t}\n\t\t};\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tconst config = this._settings;\n\t\tif (config.disabled) return;\n\n\t\tif ((mode == \"right\" || mode == \"left\") && this._parent_menu){\n\t\t\tconst parent = $$(this._parent_menu);\n\t\t\tparent._hide_sub_menu(true);\n\t\t\tif (parent.config.layout === \"x\")\n\t\t\t\tparent.moveSelection(mode);\n\t\t\telse\n\t\t\t\tUIManager.setFocus(parent);\n\t\t\treturn;\n\t\t}\n\n\t\t//get existing selection\n\t\tlet selected = this.getSelectedId(true);\n\t\tconst x_layout = (this.count && (config.layout ==\"x\" || config.xCount > 1));\n\n\t\tlet prev = true;\n\t\tif (!selected.length && this.count()){\n\t\t\tif (mode == \"down\" || (mode == \"right\" && x_layout)) mode = \"top\";\n\t\t\telse if (mode == \"up\" || (mode == \"left\" && x_layout)) mode = \"bottom\";\n\t\t\telse return;\n\t\t\tselected = [this.getFirstId()];\n\t\t\tprev = false;\n\t\t}\n\n\t\tif (selected.length == 1){  //if we have a selection\n\t\t\tselected = selected[0];\n\t\t\tprev = (prev === true) ? selected : null;\n\n\t\t\tif (mode == \"left\"){\n\t\t\t\tif (this.close && !this._ignore_clicks) return this.close(selected);\t//tree (not window)\n\t\t\t\tif (this._level_up && this._level_up(selected)) return this.render();\t//grouplist\n\t\t\t} else if (mode == \"right\"){\n\t\t\t\tif (this.open) return this.open(selected);\n\t\t\t\tif (this._level_down && this._level_down(selected)) return this.render();\n\t\t\t}\n\n\t\t\tif (mode == \"top\") {\n\t\t\t\tselected = this.getFirstId();\n\t\t\t} else if (mode == \"bottom\") {\n\t\t\t\tselected = this.getLastId();\n\t\t\t} else if (mode == \"up\" || mode == \"left\" || mode == \"pgup\") {\n\t\t\t\tconst index = this.getIndexById(selected);\n\t\t\t\tconst step = mode == \"pgup\" ? 10 : 1;\n\t\t\t\tselected = this.getIdByIndex(Math.max(0, index-step));\n\t\t\t} else if (mode == \"down\" || mode == \"right\" || mode == \"pgdown\") {\n\t\t\t\tconst index = this.getIndexById(selected);\n\t\t\t\tconst step = mode == \"pgdown\" ? 10 : 1;\n\t\t\t\tselected = this.getIdByIndex(Math.min(this.count()-1, index+step));\n\t\t\t} else {\n\t\t\t\tassert(false, \"Not supported selection moving mode\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dir = (mode == \"up\" || mode == \"left\" || mode == \"pgdown\" || mode == \"bottom\")?-1:1;\n\t\t\tif (this._skip_item) {\n\t\t\t\tselected = this._skip_item(selected, prev, dir);\n\t\t\t\tif (!selected) return;\n\t\t\t}\n\n\t\t\tthis.showItem(selected);\n\t\t\tthis.select(selected);\n\n\t\t\tif (this.getSubMenu && this.getSubMenu(selected))\n\t\t\t\tthis._mouse_move_activation(selected, this.getItemNode(selected));\n\n\t\t\tif (!config.clipboard && focus !== false){\n\t\t\t\tconst node = this.getItemNode(selected);\n\t\t\t\tif (node) node.focus();\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tnavigation_setter:function(value){\n\t\t//using global flag to apply hotkey only once\n\t\tif (value && !UIManager._global_nav_grid_hotkeys){\n\t\t\tUIManager._global_nav_grid_hotkeys = true;\n\t\t\t//hotkeys will react on any component but will not work in edit mode\n\t\t\t//you can define moveSelection method to handle navigation keys\n\t\t\tUIManager.addHotKey(\"up\",         this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"down\",       this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"right\",      this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"left\",       this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"shift+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"shift+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"shift+right\",   this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"shift+left\", this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"ctrl+shift+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+right\",   this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+left\", this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"pageup\", \tthis._navigation_helper(\"pgup\"));\n\t\t\tUIManager.addHotKey(\"pagedown\",   this._navigation_helper(\"pgdown\"));\n\t\t\tUIManager.addHotKey(\"home\", \t    this._navigation_helper(\"top\"));\n\t\t\tUIManager.addHotKey(\"end\", \t\tthis._navigation_helper(\"bottom\"));\n\n\t\t\tUIManager.addHotKey(\"shift+pageup\", \tthis._navigation_helper(\"pgup\"));\n\t\t\tUIManager.addHotKey(\"shift+pagedown\",   this._navigation_helper(\"pgdown\"));\n\t\t\tUIManager.addHotKey(\"shift+home\", \t    this._navigation_helper(\"top\"));\n\t\t\tUIManager.addHotKey(\"shift+end\", \t\tthis._navigation_helper(\"bottom\"));\n\n\t\t\tUIManager.addHotKey(\"ctrl+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"ctrl+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"ctrl+left\",   this._navigation_helper(\"left\"));\n\t\t\tUIManager.addHotKey(\"ctrl+right\", this._navigation_helper(\"right\"));\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\nexport default KeysNavigation;","import {uid,isArray} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\n\nimport i18n from \"../webix/i18n\";\nimport {use} from \"../services\";\n\nimport template from \"../webix/template\";\nimport editors from \"../webix/editors\";\n\n/*Data collection mapping logic */\n\nconst MapCollection = {\n\t$init:function(){\n\t\tthis._collection_handlers = {};\n\t\tthis.$ready.push(this._create_scheme_init);\n\t\tthis.attachEvent(\"onStructureUpdate\", this._create_scheme_init);\n\t\tthis.attachEvent(\"onStructureLoad\", function(){\n\t\t\tif(!this._scheme_init_order.length)\n\t\t\t\tthis._create_scheme_init();\n\t\t});\n\t\tthis.attachEvent(\"onDestruct\", function() {\n\t\t\t// remove leftover handlers from collections\n\t\t\tfor (const collectionId in this._collection_handlers){\n\t\t\t\tconst collection = $$(collectionId);\n\t\t\t\tif (collection && !collection.$destructed) {\t\t\t\t\n\t\t\t\t\tconst handlers = this._collection_handlers[collectionId];\n\t\t\t\t\tfor (let i = 0; i < handlers.length; i++) {\n\t\t\t\t\t\tcollection.data.detachEvent(handlers[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._collection_handlers = {};\n\t\t});\n\t},\n\t_create_scheme_init:function(){\n\t\tvar stack = this._scheme_init_order = [];\n\t\tvar config = this._settings;\n\n\t\tif (config.columns)\n\t\t\tthis._build_data_map(config.columns);\n\t\tif (this._settings.map)\n\t\t\tthis._process_field_map(config.map);\n\n\t\tif (stack.length){\n\t\t\tthis.data._scheme_init = function(obj){\n\t\t\t\tfor (var i=0; i<stack.length; i++){\n\t\t\t\t\tstack[i](obj);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\t_process_field_map:function(map){\n\t\tfor (var key in map)\n\t\t\tthis._scheme_init_order.push(this._process_single_map(key, map[key]));\n\t},\n\t_process_single_map:function(target, map, extra){\n\t\tvar source = map.replace(/^(\\s|)\\((date|number)\\)/, \"\");\n\t\tvar getSource;\n\t\tif (source === \"\"){\n\t\t\tgetSource = a => a[target];\n\t\t} else {\n\t\t\tif (source.indexOf(\"#\") === -1 && source.indexOf(\"{\") === -1){\n\t\t\t\tsource = \"#\"+source+\"#\";\n\t\t\t}\n\t\t\tgetSource = template(source);\n\t\t}\n\n\t\tif (map.indexOf(\"(date)\")===0){\n\t\t\tif (extra && !extra.format) extra.format = i18n.dateFormatStr;\n\n\t\t\treturn function(obj){\n\t\t\t\tconst dateStr = (getSource(obj) || \"\").toString();\n\t\t\t\tobj[target] = i18n.parseFormatDate(dateStr);\n\t\t\t};\n\t\t} else if (map.indexOf(\"(number)\")===0){\n\t\t\treturn function(obj){\n\t\t\t\tobj[target] = getSource(obj)*1;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(obj){\n\t\t\t\tobj[target] = getSource(obj) || \"\";\n\t\t\t};\n\t\t}\n\t},\n\t_build_data_map:function(columns){ //for datatable\n\t\tfor (let i=0; i<columns.length; i++){\n\t\t\tconst col = columns[i];\n\t\t\tif (!col.id) {\n\t\t\t\tcol.id = \"i\" + uid();\n\t\t\t\tif (!col.header)\n\t\t\t\t\tcol.header = \"\";\n\t\t\t}\n\t\t\tif (col.map)\n\t\t\t\tthis._scheme_init_order.push(this._process_single_map(col.id, col.map, columns[i]));\n\n\t\t\tthis._map_options(columns[i]);\n\n\t\t\tif (col.editor && !col.template && !col.format)\n\t\t\t\tthis._map_editor(col.id, columns[i]);\n\t\t}\n\t},\n\t_create_collection:function(options){\n\t\tif (typeof options === \"string\"){\n\t\t\tlet options_view = $$(options);\t\t\t\t\t\t\t\t\t\t//id of some other view\n\n\t\t\tif (!options_view){\t\t\t\t\t\t\t\t\t\t\t\t\t//or url\n\t\t\t\toptions = new (use(\"DataCollection\"))({ url: options });\n\t\t\t\tthis._destroy_with_me.push(options);\n\t\t\t} else options = options_view;\n\t\t\tif (options.getBody)\t\t\t\t\t\t\t\t\t\t\t\t//if it was a view, special check for suggests\n\t\t\t\toptions = options_view.getBody();\n\n\t\t} else if (typeof options === \"function\" || options.$proxy){\t\t\t//proxy or function\n\t\t\toptions = new (use(\"DataCollection\"))({ url:options });\n\t\t\tthis._destroy_with_me.push(options);\n\n\t\t} else if (!options.loadNext){\n\t\t\tlet array = isArray(options);\n\t\t\tlet data = [];\n\n\t\t\tif (array && typeof options[0] !== \"object\"){\t\t\t\t\t\t//[\"one\", \"two\"]\n\t\t\t\tfor (let i=0; i<options.length; i++)\n\t\t\t\t\tdata.push({id:options[i], value:options[i]});\n\t\t\t\toptions = data;\n\t\t\t} else if (!array){\t\t\t\t\t\t\t\t\t\t\t\t\t//{ 1:\"one\", 2:\"two\" }\n\t\t\t\tfor (let i in options)\n\t\t\t\t\tdata.push({id:i, value:options[i]});\n\t\t\t\toptions = data;\n\t\t\t} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// else [{ id:1, value:\"one\"}, ...]\n\n\t\t\toptions = new (use(\"DataCollection\"))({ data:options });\n\t\t\tthis._destroy_with_me.push(options);\n\n\t\t} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// else data collection or view\n\t\treturn options;\n\t},\n\t_map_options:function(column){\n\t\tlet options = column.options || column.collection;\n\n\t\tif (options) {\n\t\t\toptions = this._create_collection(options);\n\t\t\tthis._bind_collection(options, column);\n\t\t}\n\n\t\tif (column.header) {\n\t\t\tthis._map_header_options(column.header);\n\t\t\tthis._map_header_options(column.footer);\n\t\t}\n\t},\n\t_map_header_options:function(arr){\n\t\tarr = arr || [];\n\t\tfor (let i = 0; i < arr.length; i++){\n\t\t\tconst config = arr[i];\n\t\t\tif (config && config.options){\n\t\t\t\tlet options = config.options;\n\t\t\t\tif (!options.loadNext)\n\t\t\t\t\toptions = config.options = this._create_collection(options);\n\n\t\t\t\tconst id = options.data.attachEvent(\"onStoreUpdated\", () => {\n\t\t\t\t\tif(this.refreshFilter)\n\t\t\t\t\t\tthis.refreshFilter(config.columnId);\n\t\t\t\t});\n\n\t\t\t\t// collect handler ids for further destruction\n\t\t\t\tif (!this._collection_handlers[options.config.id]) this._collection_handlers[options.config.id] = [];\n\t\t\t\tthis._collection_handlers[options.config.id].push(id);\n\t\t\t}\n\t\t}\n\t},\n\t_bind_collection:function(options, column){\n\t\tif (column){\n\t\t\tdelete column.options;\n\t\t\tcolumn.collection = options;\n\t\t\tcolumn.template = column.template || this._bind_template(column.optionslist);\n\t\t\tconst id = options.data.attachEvent(\"onStoreUpdated\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t\tif(this.refreshFilter)\n\t\t\t\t\tthis.refreshFilter(column.id);\n\t\t\t});\n\n\t\t\t// collect handler ids for further destruction\n\t\t\tif (!this._collection_handlers[options.config.id]) this._collection_handlers[options.config.id] = [];\n\t\t\tthis._collection_handlers[options.config.id].push(id);\n\t\t}\n\t},\n\t_bind_template:function(multi){\n\t\tif (multi) {\n\t\t\tconst separator = typeof multi === \"string\" ? multi : \",\";\n\t\t\treturn function(obj, common, value, column){\n\t\t\t\tif (!value) return \"\";\n\n\t\t\t\tconst ids = value.toString().split(separator);\n\t\t\t\tfor (let i = 0; i < ids.length; i++){\n\t\t\t\t\tconst data = column.collection.data.pull[ids[i]];\n\t\t\t\t\tids[i] = data ? (data.value  || \"\") : \"\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn ids.join(\", \");\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(obj, common, value, column){\n\t\t\t\tconst data = column.collection.data.pull[value];\n\t\t\t\tif (data && (data.value || data.value === 0))\n\t\t\t\t\treturn data.value;\n\t\t\t\treturn \"\";\n\t\t\t};\n\t\t}\n\t},\n\t_map_editor: function(id, config){\n\t\tconst editor = editors[config.editor];\n\t\tif(editor && editor.masterFormat)\n\t\t\tconfig.format = editor.masterFormat;\n\t}\n};\n\nexport default MapCollection;","import {preventEvent, remove, create} from \"../webix/html\";\nimport {bind} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {event} from \"../webix/htmlevents\";\n\n\n/*\n    UI: navigation control\n*/\nconst NavigationButtons = {\n\t$init:function(){\n\t\tthis.$ready.push(function(){\n\t\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t\t});\n\t},\n\t_moveActive:function(code, e){\n\t\tif(code === 37  || code === 39){\n\t\t\tpreventEvent(e);\n\t\t\tthis._showNavItem(code===37?-1:1);\n\n\t\t\tvar node = this._navPanel.querySelector(\"[tabindex='0']\");\n\t\t\tif(node) node.focus();\n\t\t}\n\t},\n\t_renderPanel:function(){\n\t\tremove(this._navPanel);\n\n\n\t\tthis._navPanel = create(\"DIV\",{\n\t\t\t\"class\":\"webix_nav_panel \"+\"webix_nav_panel_\"+this._settings.navigation.type,\n\t\t\t\"role\":\"tablist\"\n\t\t},\"\");\n\n\t\tthis._viewobj.appendChild(this._navPanel);\n\n\n\t\tthis._renderNavItems();\n\t\tthis._renderNavButtons();\n\t\tthis._setLinkEventHandler();\n\t},\n\t_setLinkEventHandler: function(){\n\t\tvar h = [];\n\t\tif(this._navPanel)\n\t\t\th[0] = event(this._navPanel,\"click\", bind(function(e){\n\t\t\t\tvar elem = e.target;\n\t\t\t\tvar found = false;\n\t\t\t\twhile(elem != this._navPanel && !found){\n\t\t\t\t\tvar bindId = elem.getAttribute(this._linkAttr);\n\t\t\t\t\tif(bindId){\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tthis._showPanelBind(bindId);\n\t\t\t\t\t}\n\t\t\t\t\telem = elem.parentNode;\n\t\t\t\t}\n\t\t\t},this));\n\t\tif(this._prevNavButton)\n\t\t\th[1] = event(this._prevNavButton,\"click\", bind(function(){\n\t\t\t\tthis._showNavItem(-1);\n\t\t\t},this));\n\t\tif(this._nextNavButton)\n\t\t\th[1] = event(this._nextNavButton,\"click\", bind(function(){\n\t\t\t\tthis._showNavItem(1);\n\t\t\t},this));\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tfor(var i=0;i< h.length; i++){\n\t\t\t\tthis.detachEvent(h[i]);\n\t\t\t}\n\t\t\th = null;\n\t\t});\n\t},\n\t_showNavItem: function(inc){\n\t\tif(this._cells){\n\t\t\tvar index = this._active_cell + inc;\n\t\t\tif(index >= this._cells.length || index < 0){\n\t\t\t\tindex = (index < 0?this._cells.length-1:0);\n\t\t\t}\n\t\t\tthis.setActiveIndex(index);\n\t\t}\n\t},\n\t_showPanelBind: function(id){\n\t\tif(this._cells)\n\t\t\t$$(id).show();\n\t},\n\t_renderNavItems:function(){\n\t\tvar item, config;\n\t\tconfig = this._settings.navigation;\n\t\tif(config.items){\n\t\t\tthis._linkAttr = config.linkAttr || /*@attr*/\"bind_id\";\n\n\t\t\tif(!this._navPanel)\n\t\t\t\tthis._renderPanel();\n\t\t\telse\n\t\t\t\tthis._clearPanel();\n\n\t\t\tvar data = (this._cells?this._cells:this.data.order);\n\t\t\tif(data.length>1){\n\t\t\t\tfor (var i=0; i < data.length; i++){\n\n\t\t\t\t\titem = create(\"DIV\",{\n\t\t\t\t\t\t\"class\":\"webix_nav_item webix_nav_\"+(i==this._active_cell?\"active\":\"inactive\"),\n\t\t\t\t\t\t\"role\":\"tab\",\n\t\t\t\t\t\t\"tabindex\":(i==this._active_cell?\"0\":\"-1\")\n\t\t\t\t\t});\n\t\t\t\t\tvar id = this._cells?this._cells[i]._settings.id:data[i];\n\t\t\t\t\tif(id)\n\t\t\t\t\t\titem.setAttribute(this._linkAttr, id);\n\t\t\t\t\tthis._navPanel.appendChild(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_clearPanel:function(){\n\t\tif (this._navPanel){\n\t\t\tvar coll = this._navPanel.childNodes;\n\t\t\tfor (var i = coll.length - 1; i >= 0; i--)\n\t\t\t\tremove(coll[i]);\n\t\t}\n\t},\n\t_renderNavButtons: function(){\n\t\tvar config = this._settings.navigation;\n\t\tif(config.buttons){\n\n\t\t\tif(this._prevNavButton)\n\t\t\t\tremove(this._prevNavButton);\n\t\t\tif(this._prevNavButton)\n\t\t\t\tremove(this._nextNavButton);\n\n\n\t\t\tthis._prevNavButton = create(\n\t\t\t\t\"DIV\",\n\t\t\t\t{\n\t\t\t\t\t\"class\":\"webix_nav_button_\"+config.type+\" webix_nav_button_prev \"\n\t\t\t\t},\n\t\t\t\t\"<div role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"+i18n.aria.prevTab+\"\\\" class=\\\"webix_nav_button_inner\\\"></div>\"\n\t\t\t);\n\t\t\tthis._viewobj.appendChild(this._prevNavButton);\n\n\t\t\tthis._nextNavButton = create(\n\t\t\t\t\"DIV\",\n\t\t\t\t{\n\t\t\t\t\t\"class\":\"webix_nav_button_\"+config.type+\" webix_nav_button_next \"\n\t\t\t\t},\n\t\t\t\t\"<div role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"+i18n.aria.prevTab+\"\\\" class=\\\"webix_nav_button_inner\\\"></div>\"\n\t\t\t);\n\t\t\tthis._viewobj.appendChild(this._nextNavButton);\n\t\t}\n\t}\n};\n\nexport default NavigationButtons;","import {locate, insertBefore, remove} from \"../webix/html\";\nimport {bind, clone, extend, toFunctor} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport type from \"../webix/type\";\n\nconst RenderStack ={\n\t$init:function(){\n\t\tassert(this.data,\"RenderStack :: Component doesn't have DataStore\");\n\t\tassert(template,\"template :: template is not accessible\");\n\n\t\t//used for temporary HTML elements\n\t\t//automatically nulified during destruction\n\t\tthis._html = document.createElement(\"DIV\");\n\t\t\t\t\n\t\tthis.data.attachEvent(\"onIdChange\", bind(this._render_change_id, this));\n\t\tthis.attachEvent(\"onItemClick\", this._call_onclick);\n\t\t\n\t\t//create copy of default type, and set it as active one\n\t\tif (!this.types){ \n\t\t\tthis.types = { \"default\" : this.type };\n\t\t\tthis.type.name = \"default\";\n\t\t}\n\t\tthis.type = clone(this.type);\n\t},\n\t\n\tcustomize:function(obj){ \n\t\ttype(this,obj);\n\t},\n\titem_setter:function(value){\n\t\treturn this.type_setter(value);\n\t},\n\ttype_setter:function(value){\n\t\tif(!this.types[value])\n\t\t\tthis.customize(value);\n\t\telse {\n\t\t\tthis.type = clone(this.types[value]);\n\t\t\tif (this.type.css) \n\t\t\t\tthis._contentobj.className+=\" \"+this.type.css;\n\t\t}\n\t\tif (this.type.on_click)\n\t\t\textend(this.on_click, this.type.on_click);\n\n\t\treturn value;\n\t},\n\t\n\ttemplate_setter:function(value){\n\t\tthis.type.template=template(value);\n\t},\n\t//convert single item to HTML text (templating)\n\t_toHTML:function(obj){\n\t\tvar mark = this.data._marks[obj.id];\n\t\t//check if related template exist\n\t\tassert((!obj.$template || this.type[\"template\"+obj.$template]),\"RenderStack :: Unknown template: \"+obj.$template);\n\t\tthis.callEvent(\"onItemRender\",[obj]);\n\t\treturn this.type.templateStart(obj,this.type, mark)+(obj.$template?this.type[\"template\"+obj.$template]:this.type.template)(obj,this.type,mark)+this.type.templateEnd(obj, this.type,mark);\n\t},\n\t//convert item to HTML object (templating)\n\t_toHTMLObject:function(obj){\n\t\tthis._html.innerHTML = this._toHTML(obj);\n\t\treturn this._html.firstChild;\n\t},\n\t_render_change_id:function(old, newid){\n\t\tvar obj = this.getItemNode(old);\n\t\tif (obj) {\n\t\t\tobj.setAttribute(this._id, newid);\n\t\t\tthis._htmlmap[newid] = this._htmlmap[old];\n\t\t\tdelete this._htmlmap[old];\n\t\t}\n\t},\n\t//calls function that is set in onclick property\n\t_call_onclick:function(){\n\t\tif (this._settings.click){\n\t\t\tvar code = toFunctor(this._settings.click, this.$scope);\n\t\t\tif (code && code.call) code.apply(this,arguments);\n\t\t}\n\t},\n\t//return html container by its ID\n\t//can return undefined if container doesn't exists\n\tgetItemNode:function(search_id){\n\t\tif (this._htmlmap)\n\t\t\treturn this._htmlmap[search_id];\n\t\t\t\n\t\t//fill map if it doesn't created yet\n\t\tthis._htmlmap={};\n\t\t\n\t\tvar t = this._dataobj.childNodes;\n\t\tfor (var i=0; i < t.length; i++){\n\t\t\tvar id = t[i].getAttribute(this._id); //get item's\n\t\t\tif (id)\n\t\t\t\tthis._htmlmap[id]=t[i];\n\t\t}\n\t\t//call locator again, when map is filled\n\t\treturn this.getItemNode(search_id);\n\t},\n\t//return id of item from html event\n\tlocate:function(e){ return locate(e,this._id); },\n\t/*change scrolling state of top level container, so related item will be in visible part*/\n\tshowItem:function(id){\n\n\t\tvar html = this.getItemNode(id);\n\t\tif (html && this.scrollTo){\n\t\t\tvar txmin = html.offsetLeft;\n\t\t\tvar txmax = txmin + html.offsetWidth;\n\t\t\tvar tymin = html.offsetTop;\n\n\t\t\tvar tymax = tymin + html.offsetHeight;\n\t\t\tvar state = this.getScrollState();\n\n\t\t\tvar x = state.x;\n\t\t\tif (x > txmin || x + this._content_width < txmax )\n\t\t\t\tx = txmin;\n\t\t\tvar y = state.y;\n\t\t\tif (y > tymin || y + this._content_height < tymax )\n\t\t\t\ty = tymin;\n\n\t\t\tthis.scrollTo(x,y);\n\t\t\tif(this._setItemActive)\n\t\t\t\tthis._setItemActive(id);\n\t\t}\n\t},\n\t//update view after data update\n\t//method calls low-level rendering for related items\n\t//when called without parameters - all view refreshed\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tif (id){\n\t\t\tvar cont = this.getItemNode(id); //get html element of updated item\n\t\t\tswitch(type){\n\t\t\t\tcase \"paint\":\n\t\t\t\tcase \"update\":\n\t\t\t\t\t//in case of update - replace existing html with updated one\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\tvar t1 = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t1, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"delete\":\n\t\t\t\t\t//in case of delete - remove related html\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\tremove(cont);\n\t\t\t\t\tdelete this._htmlmap[id];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"add\":\n\t\t\t\t\t//in case of add - put new html at necessary position\n\t\t\t\t\tvar t2 = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t2, this.getItemNode(this.data.getNextId(id)), this._dataobj);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"move\":\n\t\t\t\t\t//moving without repainting the item\n\t\t\t\t\tinsertBefore(this.getItemNode(id), this.getItemNode(this.data.getNextId(id)), this._dataobj);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tassert(0, \"Unknown render command: \"+type);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t//full reset\n\t\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\t\t//getRange - returns all elements\n\t\t\t\t(this._renderobj||this._dataobj).innerHTML = this.data.getRange().map(this._toHTML,this).join(\"\");\n\t\t\t\tthis._htmlmap = null; //clear map, it will be filled at first getItemNode\n\t\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default RenderStack;","import {addCss, removeCss} from \"../webix/html\";\nimport {_to_array, bind, isArray} from \"../webix/helpers\";\nimport {_event, event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport env from \"../webix/env\";\n\nimport ready from \"../webix/ready\";\nimport state from \"../core/state\";\n\n\n/*\n\tBehavior:SelectionModel - manage selection states\n\t@export\n\t\tselect\n\t\tunselect\n\t\tselectAll\n\t\tunselectAll\n\t\tisSelected\n\t\tgetSelectedId\n*/\nconst SelectionModel ={\n\t$init:function(){\n\t\t//collection of selected IDs\n\t\tthis._selected = _to_array();\n\t\tassert(this.data, \"SelectionModel :: Component doesn't have DataStore\");\n\n\t\t//remove selection from deleted items\n\t\tthis.data.attachEvent(\"onStoreUpdated\",bind(this._data_updated,this));\n\t\tthis.data.attachEvent(\"onStoreLoad\", bind(this._data_loaded,this));\n\t\tthis.data.attachEvent(\"onAfterFilter\", bind(this._data_filtered,this));\n\t\tthis.data.attachEvent(\"onSyncApply\", bind(this._select_check,this));\n\t\tthis.data.attachEvent(\"onIdChange\", bind(this._id_changed,this));\n\t\tthis.$ready.push(this._set_noselect);\n\t},\n\t_set_noselect: function(){\n\t\tif (this._settings.select==\"multiselect\" || this._settings.multiselect || this._settings.select==\"area\")\n\t\t\t_event(this.$view,\"mousedown\", function(e){\n\t\t\t\tif (e.shiftKey || (env.isIE && e.ctrlKey)){\n\t\t\t\t\tconst node = env.isIE ? document.body : this;\n\t\t\t\t\tstate._noselect_element = node;\n\t\t\t\t\taddCss(node, \"webix_noselect\", true);\n\t\t\t\t}\n\t\t\t});\n\t},\n\t_id_changed:function(oldid, newid){\n\t\tfor (var i = this._selected.length - 1; i >= 0; i--)\n\t\t\tif (this._selected[i]==oldid)\n\t\t\t\tthis._selected[i]=newid;\n\t},\n\t_data_filtered:function(){\n\t\tfor (var i = this._selected.length - 1; i >= 0; i--){\n\t\t\tif (this.data.getIndexById(this._selected[i]) < 0) {\n\t\t\t\tvar id = this._selected[i];\n\t\t\t\tthis.removeCss(id, \"webix_selected\", true);\n\t\t\t\tthis._selected.splice(i,1);\n\t\t\t\tthis.callEvent(\"onSelectChange\",[id]);\n\t\t\t}\n\t\t}\n\t},\n\t//helper - linked to onStoreUpdated\n\t_data_updated:function(id,obj,type){\n\t\tif (type == \"delete\"){\t\t\t\t//remove selection from deleted items\n\t\t\tif (this.loadBranch){\n\t\t\t\t//hierarchy, need to check all\n\t\t\t\tthis._select_check();\n\t\t\t} else{\n\t\t\t\tthis._selected.remove(id);\n\t\t\t\tthis.callEvent(\"onSelectChange\",[this._selected]);\n\t\t\t}\n\t\t}\n\t\telse if (!id && !this.data.count() && !this.data._filter_order && !this.data._filter_branch){\t//remove selection for clearAll\n\t\t\tthis._selected = _to_array();\n\t\t}\n\t},\n\t_data_loaded:function(){\n\t\tif (this._settings.select)\n\t\t\tthis.data.each(function(obj){\n\t\t\t\tif (obj && obj.$selected) this.select(obj.id);\n\t\t\t}, this);\n\t},\n\t_select_check:function(){\n\t\tlet selectionChanged;\n\t\tfor (let i = this._selected.length - 1; i >= 0; i--)\n\t\t\tif (!this.exists(this._selected[i])){\n\t\t\t\tselectionChanged = true;\n\t\t\t\tthis._selected.splice(i,1);\n\t\t\t}\n\t\tif(selectionChanged)\n\t\t\tthis.callEvent(\"onSelectChange\",[this._selected]);\n\t},\n\t//helper - changes state of selection for some item\n\t_select_mark:function(id,state,refresh,need_unselect){\n\t\tvar sname = state ? \"onBeforeSelect\" : \"onBeforeUnSelect\";\n\t\tif (!this.callEvent(sname,[id,state])) return false;\n\n\t\tif (need_unselect){\n\t\t\tthis._silent_selection = true;\n\t\t\tthis.unselectAll();\n\t\t\tthis._silent_selection = false;\n\t\t}\n\t\t\n\t\tif (state)\n\t\t\tthis.addCss(id, \"webix_selected\", true);\n\t\telse\n\t\t\tthis.removeCss(id, \"webix_selected\", true);\n\n\t\tif (refresh)\n\t\t\trefresh.push(id);\t\t\t\t//if we in the mass-select mode - collect all changed IDs\n\t\telse{\n\t\t\tif (state)\n\t\t\t\tthis._selected.push(id);\t\t//then add to list of selected items\n\t\t\telse\n\t\t\t\tthis._selected.remove(id);\n\t\t\tthis._refresh_selection(id);\t//othervise trigger repainting\n\t\t}\n\n\t\tvar ename = state ? \"onAfterSelect\" : \"onAfterUnSelect\";\n\t\tthis.callEvent(ename,[id]);\n\n\t\treturn true;\n\t},\n\t//select some item\n\tselect:function(id,preserve){\n\t\tvar ctrlKey = arguments[2];\n\t\tvar shiftKey = arguments[3];\n\t\t//if id not provide - works as selectAll\n\t\tif (!id) return this.selectAll();\n\n\t\t//allow an array of ids as parameter\n\t\tif (isArray(id)){\n\t\t\tfor (var i=0; i < id.length; i++)\n\t\t\t\tthis.select(id[i], (i?1:preserve), ctrlKey, shiftKey);\n\t\t\treturn;\n\t\t}\n\n\t\tassert(this.data.exists(id), \"Incorrect id in select command: \"+id);\n\t\t\n\t\t//block selection mode\n\t\tif (shiftKey && this._selected.length)\n\t\t\treturn this.selectAll(this._selected[this._selected.length-1],id);\n\n\t\t//single selection mode\n\t\tvar need_unselect = false;\n\t\tif (!ctrlKey && !preserve && (this._selected.length!=1 || this._selected[0]!=id))\n\t\t\tneed_unselect = true;\n\n\t\tif (!need_unselect && this.isSelected(id)){\n\t\t\tif (ctrlKey) this.unselect(id);\t//ctrl-selection of already selected item\n\t\t\treturn;\n\t\t}\n\n\t\tthis._select_mark(id, true, null, need_unselect);\n\t},\n\t//unselect some item\n\tunselect:function(id){\n\t\t//if id is not provided  - unselect all items\n\t\tif (!id) return this.unselectAll();\n\t\tif (!this.isSelected(id)) return;\n\t\t\n\t\tthis._select_mark(id,false);\n\t},\n\t//select all items, or all in defined range\n\tselectAll:function(from,to){\n\t\tvar range;\n\t\tvar refresh=[];\n\t\t\n\t\tif (from||to)\n\t\t\trange = this.data.getRange(from||null,to||null);\t//get limited set if bounds defined\n\t\telse\n\t\t\trange = this.data.getRange();\t\t\t//get all items in other case\n\t\t//in case of paging - it will be current page only\n\t\trange.each(function(obj){ \n\t\t\tif (!this.data.getMark(obj.id, \"webix_selected\")){\n\t\t\t\tif(this._select_mark(obj.id,true,refresh))\n\t\t\t\t\tthis._selected.push(obj.id);\n\t\t\t}\n\t\t},this);\n\t\t//repaint self\n\t\tthis._refresh_selection(refresh);\n\t},\n\t//remove selection from all items\n\tunselectAll:function(){\n\t\tvar refresh=[];\n\t\t\n\t\tthis._selected.each(function(id){\n\t\t\tthis._select_mark(id,false,refresh);\t//unmark selected only\n\t\t},this);\n\t\t\n\t\tthis._selected=_to_array();\n\t\tthis._refresh_selection(refresh);\t//repaint self\n\t},\n\t//returns true if item is selected\n\tisSelected:function(id){\n\t\treturn this._selected.find(id)!=-1;\n\t},\n\t/*\n\t\treturns ID of selected items or array of IDs\n\t\tto make result predictable - as_array can be used, \n\t\t\twith such flag command will always return an array \n\t\t\tempty array in case when no item was selected\n\t*/\n\tgetSelectedId:function(as_array){\t\n\t\tswitch(this._selected.length){\n\t\t\tcase 0: return as_array?[]:\"\";\n\t\t\tcase 1: return as_array?[this._selected[0]]:this._selected[0];\n\t\t\tdefault: return ([].concat(this._selected)); //isolation\n\t\t}\n\t},\n\tgetSelectedItem:function(as_array){\n\t\tvar sel = this.getSelectedId(true);\n\t\tif (sel.length > 1 || as_array){\n\t\t\tfor (var i = sel.length - 1; i >= 0; i--)\n\t\t\t\tsel[i] = this.getItem(sel[i]);\n\t\t\treturn sel;\n\t\t} else if (sel.length)\n\t\t\treturn this.getItem(sel[0]);\n\t},\n\t//detects which repainting mode need to be used\n\t_is_mass_selection:function(obj){\n\t\t// crappy heuristic, but will do the job\n\t\treturn obj.length>100 || obj.length > this.data.count/2;\n\t},\n\t_refresh_selection:function(refresh){\n\t\tif (typeof refresh != \"object\") refresh = [refresh];\n\t\tif (!refresh.length) return;\t//nothing to repaint\n\t\t\n\t\tif (this._is_mass_selection(refresh))\t\n\t\t\tthis.data.refresh();\t//many items was selected - repaint whole view\n\t\telse\n\t\t\tfor (var i=0; i < refresh.length; i++)\t//repaint only selected\n\t\t\t\tthis.render(refresh[i],this.data.getItem(refresh[i]),\"update\");\n\t\t\t\n\t\tif (!this._silent_selection)\t\n\t\t\tthis.callEvent(\"onSelectChange\",[refresh]);\n\t}\n};\n\nready(function(){\n\tevent(document.body,\"mouseup\", function(){\n\t\tif(state._noselect_element){\n\t\t\tremoveCss(state._noselect_element,\"webix_noselect\");\n\t\t\tstate._noselect_element = null;\n\t\t}\n\t});\n});\n\nexport default SelectionModel;","import color from \"../../webix/color\";\nimport {assert} from \"../../webix/debug\";\n\n\nfunction joinAttributes(attrs){\n\tvar result = \" \";\n\tif(attrs)\n\t\tfor(var a in attrs)\n\t\t\tresult += a+\"=\\\"\"+attrs[a]+\"\\\" \";\n\treturn result;\n}\n// SVG\nvar SVG = {};\n\nSVG.draw = function(content, width, height, css){\n\tvar attrs = {\n\t\txmlns: \"http://www.w3.org/2000/svg\",\n\t\tversion: \"1.1\",\n\t\theight: \"100%\",\n\t\twidth: \"100%\",\n\t\tviewBox: \"0 0 \"+width+\" \"+height,\n\t\t\"class\": css||\"\"\n\t};\n\treturn \"<svg \"+joinAttributes(attrs)+\">\"+content+\"</svg>\";\n};\nSVG.styleMap = {\n\t\"lineColor\": \"stroke\",\n\t\"color\": \"fill\"\n};\nSVG.group = function(path){\n\treturn \"<g>\"+path+\"</g>\";\n};\nSVG._handlers = {\n\t// MoveTo: {x:px,y:py}\n\t\"M\": function(p){\n\t\treturn \" M \"+ p.x+\" \"+ p.y;\n\t},\n\t// LineTo: {x:px,y:py}\n\t\"L\": function(p){\n\t\treturn \" L \"+ p.x+\" \"+ p.y;\n\t},\n\t// Curve: 3 points {x:px,y:py}: two control points and an end point\n\t\"C\": function(cp0, cp1, p){\n\t\treturn \" C \"+cp0.x + \" \"+cp0.y+\" \"+cp1.x + \" \"+cp1.y+\" \"+p.x + \" \"+p.y;\n\t},\n\t// Arc: center point {x:px,y:py}, radius, angle0, angle1\n\t\"A\": function(p, radius, angle0, angle1){\n\t\tvar x = p.x+Math.cos(angle1)*radius;\n\t\tvar y = p.y+Math.sin(angle1)*radius;\n\t\tvar bigCircle = angle1-angle0 >= Math.PI;\n\t\treturn  \" A \"+radius+\" \"+radius+\" 0 \"+(bigCircle?1:0)+\" 1 \"+x+\" \"+y;\n\t}\n};\n// points is an array of an array with two elements: {string} line type, {array}\nSVG.definePath = function(points, close){\n\tvar path = \"\";\n\tfor(var i =0; i < points.length; i++){\n\t\tassert(points[i][0]&&typeof points[i][0] == \"string\", \"Path type must be a string\");\n\t\tvar type = (points[i][0]).toUpperCase();\n\t\tassert(this._handlers[type], \"Incorrect path type\");\n\t\tpath += this._handlers[type].apply(this,points[i].slice(1));\n\n\t}\n\tif(close)\n\t\tpath += \" Z\";\n\n\treturn path;\n};\nSVG._linePoints = function(points){\n\tvar result = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\tresult.push([i?\"L\":\"M\",points[i]]);\n\t}\n\treturn result;\n};\nSVG.setOpacity = function(rawColor,opacity){\n\tlet rgbColor = color.toRgb(rawColor);\n\trgbColor.push(opacity);\n\treturn \"rgba(\"+rgbColor.join(\",\")+\")\";\n};\nSVG._curvePoints = function(points){\n\tvar result = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\tvar p = points[i];\n\t\tif(!i){\n\t\t\tresult.push([\"M\",p[0]]);\n\t\t}\n\t\tresult.push([\"C\",p[1],p[2],p[3]]);\n\t}\n\treturn result;\n};\nSVG.getPath = function(path, css, attrs){\n\tattrs = joinAttributes(attrs);\n\treturn \"<path class=\\\"\"+css+\"\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"\"+path+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getSector = function(p, radius, angle0, angle1, css, attrs){\n\tattrs = joinAttributes(attrs);\n\tvar x0 = p.x+Math.cos(angle0)*radius;\n\tvar y0 = p.y+Math.sin(angle0)*radius;\n\tvar lines = [\n\t\t[\"M\",p],\n\t\t[\"L\",{x:x0, y:y0}],\n\t\t[\"A\", p,radius,angle0,angle1],\n\t\t[\"L\",p]\n\t];\n\n\n\treturn \"<path class=\\\"\"+css+\"\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"\"+SVG.definePath(lines,true)+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getCurve = function(points,css, attrs){\n\tattrs = joinAttributes(attrs);\n\tvar path = this.definePath(this._curvePoints(points));\n\treturn \"<path fill=\\\"none\\\" class=\\\"\"+css+\"\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"\"+path+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getLine = function(p0,p1,css, attrs){\n\treturn this.getPath(this.definePath(this._linePoints([p0,p1]),true),css,attrs);\n};\nSVG.getCircle = function(p, radius, css, attrs){\n\tattrs = joinAttributes(attrs);\n\treturn \"<circle class=\\\"\"+css+\"\\\" cx=\\\"\"+ p.x+\"\\\" cy=\\\"\"+ p.y+\"\\\" r=\\\"\"+radius+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getRect = function(x, y, width, height, css, attrs){\n\tattrs = joinAttributes(attrs);\n\treturn \"<rect class=\\\"\"+css+\"\\\" rx=\\\"0\\\" ry=\\\"0\\\" x=\\\"\"+x+\"\\\" y=\\\"\"+y+\"\\\" width=\\\"\"+width+\"\\\" height=\\\"\"+height+\"\\\" \"+attrs+\"/>\";\n};\n\n\nexport default SVG;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\n\nconst defaults = {\n\tpaddingX: 3,\n\tpaddingY: 4,\n\twidth: 20,\n\tmargin: 4,\n\tminHeight: 4,\n\teventRadius: 8,\n\torigin:0,\n\titemCss: function(value){return value < (this.config.origin||0)?\" webix_sparklines_bar_negative\":\"\";}\n};\n\nfunction Bar(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nBar.prototype.draw = function(data, width, height){\n\tlet graph = \"\";\n\tconst config = this.config;\n\tconst renderer = SVG;\n\tconst horizontal = config.horizontal;\n\tconst items = [];\n\tconst origin = parseInt(this._getOrigin(data, width, height),10)+0.5;\n\tconst points = this.getPoints(data, width, height, origin);\n\n\t// draw bars\n\tfor(let i = 0; i< points.length; i++){\n\t\tlet css;\n\t\tcss = (typeof config.itemCss == \"function\"?config.itemCss.call(this,data[i]):(config.itemCss||\"\"));\n\t\tif (config.negativeColor && data[i] < config.origin)\n\t\t\tcss += \" \"+this._applyColor(renderer,config.negativeColor);\n\t\telse if(config.color)\n\t\t\tcss += \" \"+this._applyColor(renderer,config.color);\n\t\tconst p = points[i];\n\t\titems.push(renderer.getRect(p.x, p.y, p.width, p.height,\"webix_sparklines_bar \"+css));\n\t}\n\tgraph += renderer.group(items.join(\"\"));\n\n\t// origin\n\tconst padding = horizontal ? config.paddingY : config.paddingX;\n\n\tif(horizontal)\n\t\tgraph += renderer.group(renderer.getLine({x: origin, y: padding},{x: origin, y: height-padding},\"webix_sparklines_origin\"));\n\telse\n\t\tgraph += renderer.group(renderer.getLine({x: padding, y: origin},{x: width-padding, y: origin},\"webix_sparklines_origin\"));\n\n\t// event areas\n\tconst evPoints = this._getEventPoints(data, width, height, origin);\n\tconst evItems = [];\n\tfor(let i = 0; i< evPoints.length; i++){\n\t\tconst p = evPoints[i];\n\t\tevItems.push(renderer.getRect(p.x, p.y, p.width, p.height,\"webix_sparklines_event_area \",{\"webix_area\":i}));\n\t}\n\tgraph += renderer.group(evItems.join(\"\"));\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_bar_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nBar.prototype._applyColor = function(renderer,color){\n\tconst config = {},\n\t\tmap = renderer.styleMap;\n\tif(color)\n\t\tconfig[map.color] = color;\n\treturn createCss(config);\n};\nBar.prototype._getOrigin = function(data, width, height){\n\tconst config = this.config;\n\tconst horizontal = config.horizontal;\n\tconst padding = horizontal ? config.paddingX : config.paddingY;\n\tconst size = ((horizontal ? width : height)||100)-padding*2;\n\tlet pos;\n\n\tif(horizontal)\n\t\tpos = padding;\n\telse{\n\t\tpos = padding+size;\n\t}\n\n\tif(config.origin !== false){\n\t\tconst minValue = Math.min(...data);\n\t\tconst maxValue = Math.max(...data);\n\t\tconst origin = config.origin||-0.000001;\n\t\tif(origin >= maxValue){\n\t\t\tpos = padding;\n\t\t}\n\t\telse if(origin > minValue){\n\t\t\tconst unit = size/(maxValue - minValue);\n\t\t\tpos += (horizontal ? 1 : -1)*unit*(origin-minValue);\n\t\t}\n\t}\n\treturn pos;\n};\nBar.prototype._getEventPoints = function(data, width, height){\n\tconst result = [];\n\tconst horizontal = this.config.horizontal;\n\tconst x = this.config.paddingX;\n\tconst y = this.config.paddingY;\n\twidth = (width||100)-x*2;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tconst unit = (horizontal ? height : width)/data.length;\n\t\tfor(let i = 0; i < data.length; i++){\n\t\t\tif(horizontal)\n\t\t\t\tresult.push({x, y: Math.ceil(unit*i)+y, height: unit, width});\n\t\t\telse\n\t\t\t\tresult.push({x: Math.ceil(unit*i)+x, y, height, width: unit});\n\t\t}\n\t}\n\treturn result;\n};\nBar.prototype.getPoints = function(data, width, height, originPos){\n\tconst config = this.config;\n\tconst horizontal = config.horizontal;\n\tlet minValue = Math.min(...data);\n\tif (config.origin < minValue) \n\t\tminValue = config.origin;\n\n\tconst maxValue = Math.max(...data);\n\tconst result = [];\n\tconst x = config.paddingX;\n\tconst y = config.paddingY;\n\tlet margin = config.margin;\n\tlet barWidth = config.width||20;\n\n\twidth = (width||100)-x*2;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tconst unit = (horizontal ? height : width)/data.length;\n\t\tconst scale = config.scale || (maxValue - minValue);\n\t\tbarWidth = Math.min(unit-margin,barWidth);\n\t\tmargin = unit-barWidth;\n\t\tlet origin = minValue;\n\n\t\tif(config.origin !== false && config.origin > minValue)\n\t\t\torigin = config.origin||0;\n\n\t\tconst itemHeight = (horizontal ? width : height)/(scale||1);\n\n\t\tfor(let i=0; i < data.length; i++){\n\t\t\tlet h = Math.abs(Math.ceil(itemHeight*(data[i]-origin)));\n\t\t\tif(data[i] && h < config.minHeight)\n\t\t\t\th += config.minHeight;\n\n\t\t\tif(horizontal)\n\t\t\t\tresult.push({x: originPos-(data[i]>=origin?0:h), y: Math.ceil(unit*i)+y+margin/2, height: barWidth, width: h});\n\t\t\telse\n\t\t\t\tresult.push({x: Math.ceil(unit*i)+x+margin/2, y: originPos-(data[i]>=origin?h:0), height: h, width: barWidth});\n\t\t}\n\t}\n\treturn result;\n};\n\nexport default Bar;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\nimport Base from \"./line\";\n\nvar defaults = {\n\tpaddingX: 3,\n\tpaddingY: 6,\n\tradius: 2,\n\tminHeight: 4,\n\teventRadius: 8\n};\n\nfunction Spline(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nSpline.prototype.draw = function(data, width, height){\n\tvar config = this.config,\n\t\tgraph = \"\",\n\t\tLine = Base.prototype,\n\t\tpoints = this.getPoints(data, width, height),\n\t\trenderer = SVG,\n\t\tstyles = config.color?this._applyColor(renderer,config.color):null;\n\n\t// draw spline\n\tgraph += renderer.group(renderer.getCurve(points, \"webix_sparklines_line\"+(styles?\" \"+styles.line:\"\")));\n\n\tvar linePoints = Line.getPoints.call(this,data, width, height);\n\t// draw items\n\tgraph += Line._drawItems(renderer, linePoints, config.radius, \"webix_sparklines_item\"+(styles?\" \"+styles.item:\"\"));\n\t// draw event items\n\tvar eventRadius = Math.min(data.length?(width-2*(config.paddingX||0))/data.length:0,config.eventRadius);\n\tgraph += Line._drawEventItems(renderer, linePoints, eventRadius);\n\treturn  renderer.draw(graph, width, height,\"webix_sparklines_line_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nSpline.prototype._applyColor = function(renderer,color){\n\tvar config = {\"line\":{},\"item\":{}},\n\t\tmap = renderer.styleMap;\n\tif(color){\n\t\tconfig.line[map.lineColor] = color;\n\t\tconfig.item[map.color] = color;\n\t\tfor(var name in config)\n\t\t\tconfig[name] = createCss(config[name]);\n\t}\n\treturn config;\n};\nSpline.prototype.getPoints = function(data, width, height){\n\tvar i, points, px, py,\n\t\tresult = [], x = [], y =[],\n\t\tLine = Base.prototype;\n\n\tpoints = Line.getPoints.call(this, data, width, height);\n\n\tfor(i = 0; i< points.length; i++){\n\t\tx.push(points[i].x);\n\t\ty.push(points[i].y);\n\t}\n\tpx = this._getControlPoints(x);\n\tpy = this._getControlPoints(y);\n\t/*updates path settings, the browser will draw the new spline*/\n\tfor ( i=0;i<points.length-1;i++){\n\t\tresult.push([points[i],{x:px[0][i],y:py[0][i]},{x:px[1][i],y:py[1][i]},points[i+1]]);\n\t}\n\treturn result;\n\n};\n/* code from https://www.particleincell.com/2012/bezier-splines/ */\nSpline.prototype._getControlPoints = function(points){\n\tvar a=[], b=[], c=[], r=[], p1=[], p2=[],\n\t\ti, m, n = points.length-1;\n\n\ta[0]=0;\n\tb[0]=2;\n\tc[0]=1;\n\tr[0] = points[0] + 2*points[1];\n\n\tfor (i = 1; i < n - 1; i++){\n\t\ta[i]=1;\n\t\tb[i]=4;\n\t\tc[i]=1;\n\t\tr[i] = 4 * points[i] + 2 * points[i+1];\n\t}\n\n\ta[n-1]=2;\n\tb[n-1]=7;\n\tc[n-1]=0;\n\tr[n-1] = 8*points[n-1]+points[n];\n\n\tfor (i = 1; i < n; i++){\n\t\tm = a[i]/b[i-1];\n\t\tb[i] = b[i] - m * c[i - 1];\n\t\tr[i] = r[i] - m*r[i-1];\n\t}\n\n\tp1[n-1] = r[n-1]/b[n-1];\n\tfor (i = n - 2; i >= 0; --i)\n\t\tp1[i] = (r[i] - c[i] * p1[i+1]) / b[i];\n\n\tfor (i=0;i<n-1;i++)\n\t\tp2[i]=2*points[i+1]-p1[i+1];\n\n\tp2[n-1]=0.5*(points[n]+p1[n-1]);\n\n\treturn [p1, p2];\n};\n\n\n\nexport default Spline;","import template from \"../webix/template\";\nimport UIManager from \"../core/uimanager\";\n\nimport clipbuffer from \"../webix/clipbuffer\";\nimport csv from \"../webix/csv\";\n\nimport {isUndefined, delay} from \"../webix/helpers\";\n\n\nconst TablePaste = {\n\tclipboard_setter:function(value){\n\t\tif (value === true || value === 1) value = \"block\";\n\n\t\tclipbuffer.init();\n\t\tthis.attachEvent(\"onSelectChange\",this._sel_to_clip);\n\t\tthis.attachEvent(\"onAfterEditStop\", function(v, ed){\n\t\t\tconst sel = this.getSelectedId(true);\n\t\t\tif(sel.length == 1 && ed.row == sel[0].row)\n\t\t\t\tthis._sel_to_clip();\n\t\t});\n\t\t// solution for clicks on selected items\n\t\tthis.attachEvent(\"onItemClick\",function(){\n\t\t\tif(document.activeElement && this.$view.contains(document.activeElement)){\n\t\t\t\tclipbuffer.focus();\n\t\t\t\tUIManager.setFocus(this);\n\t\t\t}\n\t\t});\n\t\tthis.attachEvent(\"onPaste\", this._clip_to_sel);\n\n\t\treturn value;\n\t},\n\ttemplateCopy_setter: template,\n\t_sel_to_clip: function() {\n\t\tdelay(() => { //wait until editor is closed\n\t\t\tif (!this.$destructed && (!this.getEditor || !this.getEditor())){\n\t\t\t\tconst data = this._get_sel_text();\n\t\t\t\tclipbuffer.set(data);\n\t\t\t\tUIManager.setFocus(this);\n\t\t\t}\n\t\t});\n\t},\n\t_get_sel_text: function() {\n\t\tconst data = [];\n\t\tconst filter = this._settings.templateCopy;\n\t\tthis.mapSelection(function(value, row, col, row_ind) {\n\t\t\tif (!data[row_ind]) data[row_ind] = [];\n\t\t\tconst newvalue = filter ? filter(value, row, col) : value;\n\t\t\tdata[row_ind].push(newvalue);\n\t\t\treturn value;\n\t\t});\n\t\tconst value = data.length === 1 && data[0].length === 1 ? data[0][0] : csv.stringify(data, this._settings.delimiter);\n\t\treturn value;\n\t},\n\n\t_clip_to_sel: function(text) {\n\t\tif (!isUndefined(this._paste[this._settings.clipboard])) {\n\t\t\tconst data = csv.parse(text, this._settings.delimiter);\n\t\t\tthis._paste[this._settings.clipboard].call(this, data);\n\t\t}\n\t},\n\n\t_paste: {\n\t\tblock: function(data) {\n\t\t\tconst leftTop = this.mapSelection(null);\n\t\t\tif (!leftTop) return;\n\n\t\t\t// filling cells with data\n\t\t\tthis.mapCells(leftTop.row, leftTop.column, data.length, null, function(value, row, col, row_ind, col_ind) {\n\t\t\t\tif (data[row_ind] && data[row_ind].length>col_ind) {\n\t\t\t\t\treturn data[row_ind][col_ind];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tselection: function(data) {\n\t\t\tthis.mapSelection(function(value, row, col, row_ind, col_ind) {\n\t\t\t\tif (data[row_ind] && data[row_ind].length>col_ind)\n\t\t\t\t\treturn data[row_ind][col_ind];\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\trepeat: function(data) {\n\t\t\tthis.mapSelection(function(value, row, col, row_ind, col_ind) {\n\t\t\t\trow = data[row_ind%data.length];\n\t\t\t\tvalue = row[col_ind%row.length];\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tcustom: function() {}\n\t}\n};\n\nexport default TablePaste;","import {bind} from \"../webix/helpers\";\nimport ValidateData from \"./validatedata\";\nimport rules from \"../webix/rules\";\n\nconst ValidateCollection = {\n\t_validate_init_once:function(){\n\t\tthis.data.attachEvent(\"onStoreUpdated\",bind(function(id, data, mode){\n\t\t\tif (id && (mode == \"add\" || mode == \"update\" || mode ==\"save\"))\n\t\t\t\tthis.validate(id);\n\t\t}, this));\n\t\tthis.data.attachEvent(\"onClearAll\",bind(this.clearValidation, this));\n\n\t\tthis._validate_init_once = function(){};\n\t},\n\trules_setter:function(value){\n\t\tif (value){\n\t\t\tthis._validate_init_once();\n\t\t}\n\t\treturn value;\n\t},\n\tclearValidation:function(){\n\t\tthis.data.clearMark(\"webix_invalid\", true);\n\t},\n\tvalidate:function(id){\n\t\tvar result = true;\n\t\tif (!id)\n\t\t\tfor (var key in this.data.pull)\n\t\t\t\tresult = this.validate(key) && result;\n\t\telse {\n\t\t\tthis._validate_details = {};\n\t\t\tvar obj = this.getItem(id);\n\t\t\tresult = ValidateData.validate.call(this, null, obj);\n\t\t\tif (result){\n\t\t\t\tif (this.callEvent(\"onValidationSuccess\",[id, obj]))\n\t\t\t\t\tthis._clear_invalid(id);\n\t\t\t} else {\n\t\t\t\tif (this.callEvent(\"onValidationError\",[id, obj, this._validate_details]))\n\t\t\t\t\tthis._mark_invalid(id, this._validate_details);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\t_validate:function(rule, data, obj, key){\n\t\tif (typeof rule == \"string\")\n\t\t\trule = rules[rule];\n\n\t\tvar res = rule.call(this, data, obj, key);\n\t\tif (!res){\n\t\t\tthis._validate_details[key] = true;\n\t\t}\n\t\treturn res;\n\t},\n\t_clear_invalid:function(id){\n\t\tthis.data.removeMark(id, \"webix_invalid\", true);\n\t},\n\t_mark_invalid:function(id){\n\t\tthis.data.addMark(id, \"webix_invalid\", true);\n\t}\n};\n\nexport default ValidateCollection;","import {insertBefore, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\n\n\n/*\n\tRenders collection of items\n\tAlways shows y-scroll\n\tCan be used with huge datasets\n\t\n\t@export\n\t\tshow\n\t\trender\n*/\n\nconst VirtualRenderStack ={\n\t$init:function(){\n\t\tassert(this.render,\"VirtualRenderStack :: Object must use RenderStack first\");\n\n\t\tthis._htmlmap={}; //init map of rendered elements\n\n\t\t//we need to repaint area each time when view resized or scrolling state is changed\n\t\t_event(this._viewobj,\"scroll\",bind(this._render_visible_rows,this));\n\n\t\t//here we store IDs of elemenst which doesn't loadede yet, but need to be rendered\n\t\tthis._unrendered_area=[];\n\t},\n\t//return html object by item's ID. Can return null for not-rendering element\n\tgetItemNode:function(search_id){\n\t\t//collection was filled in _render_visible_rows\n\t\treturn this._htmlmap[search_id];\n\t},\n\t//adjust scrolls to make item visible\n\tshowItem:function(id){\n\t\tvar range = this._getVisibleRange();\n\t\tvar ind = this.data.getIndexById(id);\n\t\t//we can't use DOM method for not-rendered-yet items, so fallback to pure math\n\t\tvar dy = Math.floor(ind/range._dx)*range._y;\n\t\tvar state = this.getScrollState();\n\t\tif (dy<state.y || dy + this._settings.height >= state.y + this._content_height)\n\t\t\tthis.scrollTo(0, dy);\n\t},\n\t//repain self after changes in DOM\n\t//for add, delete, move operations - render is delayed, to minify performance impact\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tif (id){\n\t\t\tvar cont = this.getItemNode(id);\t//old html element\n\t\t\tswitch(type){\n\t\t\t\tcase \"update\":\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\t//replace old with new\n\t\t\t\t\tvar t = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: // \"move\", \"add\", \"delete\"\n\t\t\t\t\t/*\n\t\t\t\t\t\tfor all above operations, full repainting is necessary\n\t\t\t\t\t\tbut from practical point of view, we need only one repainting per thread\n\t\t\t\t\t\tcode below initiates double-thread-rendering trick\n\t\t\t\t\t*/\n\t\t\t\t\tthis._render_delayed();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t//full repainting\n\t\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\t\tthis._htmlmap = {}; \t\t\t\t\t//nulify links to already rendered elements\n\t\t\t\tthis._render_visible_rows(null, true);\t\n\t\t\t\t// clear delayed-rendering, because we already have repaint view\n\t\t\t\tthis._wait_for_render = false;\t\t\t\n\t\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t\t}\n\t\t}\n\t},\n\t//implement double-thread-rendering pattern\n\t_render_delayed:function(){\n\t\t//this flag can be reset from outside, to prevent actual rendering \n\t\tif (this._wait_for_render) return;\n\t\tthis._wait_for_render = true;\t\n\t\t\n\t\twindow.setTimeout(bind(function(){\n\t\t\tthis.render();\n\t\t},this),1);\n\t},\n\t//create empty placeholders, which will take space before rendering\n\t_create_placeholder:function(height){\n\t\tif(env.maxHTMLElementSize)\n\t\t\theight = Math.min(env.maxHTMLElementSize, height);\n\t\tvar node = document.createElement(\"DIV\");\n\t\tnode.style.cssText = \"height:\"+height+\"px; width:100%; overflow:hidden;\";\n\t\treturn node;\n\t},\n\t/*\n\t\tMethods get coordinatest of visible area and checks that all related items are rendered\n\t\tIf, during rendering, some not-loaded items was detected - extra data loading is initiated.\n\t\treset - flag, which forces clearing of previously rendered elements\n\t*/\n\t_render_visible_rows:function(e,reset){\n\t\tthis._unrendered_area=[]; //clear results of previous calls\n\t\t\n\t\tvar viewport = this._getVisibleRange();\t//details of visible view\n\n\t\tif (!this._dataobj.firstChild || reset){\t//create initial placeholder - for all view space\n\t\t\tthis._dataobj.innerHTML=\"\";\n\t\t\tthis._dataobj.appendChild(this._create_placeholder(viewport._max));\n\t\t\t//register placeholder in collection\n\t\t\tthis._htmlrows = [this._dataobj.firstChild];\n\t\t}\n\t\t\n\t\t/*\n\t\t\tvirtual rendering breaks all view on rows, because we know widht of item\n\t\t\twe can calculate how much items can be placed on single row, and knowledge \n\t\t\tof that, allows to calculate count of such rows\n\t\t\t\n\t\t\teach time after scrolling, code iterate through visible rows and render items \n\t\t\tin them, if they are not rendered yet\n\t\t\t\n\t\t\tboth rendered rows and placeholders are registered in _htmlrows collection\n\t\t*/\n\n\t\t//position of first visible row\n\t\tvar t = viewport._from;\n\t\t\t\n\t\twhile(t<=viewport._height){\t//loop for all visible rows\n\t\t\t//skip already rendered rows\n\t\t\twhile(this._htmlrows[t] && this._htmlrows[t]._filled && t<=viewport._height){\n\t\t\t\tt++; \n\t\t\t}\n\t\t\t//go out if all is rendered\n\t\t\tif (t>viewport._height) break;\n\t\t\t\n\t\t\t//locate nearest placeholder\n\t\t\tvar holder = t;\n\t\t\twhile (!this._htmlrows[holder]) holder--;\n\t\t\tvar holder_row = this._htmlrows[holder];\n\t\t\t\n\t\t\t//render elements in the row\t\t\t\n\t\t\tvar base = t*viewport._dx+(this.data.$min||0);\t//index of rendered item\n\t\t\tif (base > (this.data.$max||Infinity)) break;\t//check that row is in virtual bounds, defined by paging\n\t\t\tvar nextpoint =  Math.min(base+viewport._dx-1,(this.data.$max?this.data.$max-1:Infinity));\n\t\t\tvar node = this._create_placeholder(viewport._y);\n\t\t\t//all items in rendered row\n\t\t\tvar range = this.data.getIndexRange(base, nextpoint);\n\t\t\tif (!range.length) break; \n\t\t\t\n\t\t\tvar loading = { $template:\"Loading\" };\n\t\t\tfor (let i=0; i<range.length; i++){\n\t\t\t\tif (!range[i])\n\t\t\t\t\tthis._unrendered_area.push(base+i);\n\t\t\t\trange[i] = this._toHTML(range[i]||loading);\n\t\t\t}\n\n\t\t\tnode.innerHTML=range.join(\"\"); \t//actual rendering\n\t\t\tfor (let i=0; i < range.length; i++)\t\t\t\t\t//register all new elements for later usage in getItemNode\n\t\t\t\tthis._htmlmap[this.data.getIdByIndex(base+i)]=node.childNodes[i];\n\t\t\t\n\t\t\t//correct placeholders\n\t\t\tvar h = parseFloat(holder_row.style.height,10);\n\t\t\tvar delta = (t-holder)*viewport._y;\n\t\t\tvar delta2 = (h-delta-viewport._y);\n\t\t\t\n\t\t\t//add new row to the DOOM\n\t\t\tinsertBefore(node,delta?holder_row.nextSibling:holder_row,this._dataobj);\n\t\t\tthis._htmlrows[t]=node;\n\t\t\tnode._filled = true;\n\t\t\t\n\t\t\t/*\n\t\t\t\tif new row is at start of placeholder - decrease placeholder's height\n\t\t\t\telse if new row takes whole placeholder - remove placeholder from DOM\n\t\t\t\telse \n\t\t\t\t\twe are inserting row in the middle of existing placeholder\n\t\t\t\t\tdecrease height of existing one, and add one more, \n\t\t\t\t\tbefore the newly added row\n\t\t\t*/\n\t\t\tif (delta <= 0 && delta2>0){\n\t\t\t\tholder_row.style.height = delta2+\"px\";\n\t\t\t\tthis._htmlrows[t+1] = holder_row;\n\t\t\t} else {\n\t\t\t\tif (delta<0)\n\t\t\t\t\tremove(holder_row);\n\t\t\t\telse\n\t\t\t\t\tholder_row.style.height = delta+\"px\";\n\t\t\t\tif (delta2>0){ \n\t\t\t\t\tvar new_space = this._htmlrows[t+1] = this._create_placeholder(delta2);\n\t\t\t\t\tinsertBefore(new_space,node.nextSibling,this._dataobj);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tt++;\n\t\t}\n\t\t\n\t\t//when all done, check for non-loaded items\n\t\tif (this._unrendered_area.length){\n\t\t\t//we have some data to load\n\t\t\t//detect borders\n\t\t\tvar from = this._unrendered_area[0];\n\t\t\tvar to = this._unrendered_area.pop()+1;\n\t\t\tif (to>from){\n\t\t\t\t//initiate data loading\n\t\t\t\tvar count = to - from;\n\t\t\t\tif (this._maybe_loading_already(count, from)) return;\n\n\t\t\t\tcount = Math.max(count, (this._settings.datafetch||this._settings.loadahead||0));\n\t\t\t\tthis.loadNext(count, from);\n\t\t\t}\n\t\t}\n\t},\n\t//calculates visible view\n\t_getVisibleRange:function(){\n\t\tvar state = this.getScrollState();\n\t\tvar top = Math.max(0, state.y);\n\t\tvar tpadding = this._tilesPadding||0;\n\t\tvar width = this._content_width - tpadding; \n\t\tvar height = this._content_height - tpadding/2;\n\n\t\t//size of single item\n\t\tvar t = this.type;\n\n\t\tvar dx = Math.floor(width/t.width)||1; //at least single item per row\n\t\t\n\t\tvar min = Math.floor(top/t.height);\t\t\t\t//index of first visible row\n\t\tvar dy = Math.ceil((height+top)/t.height)-1;\t\t//index of last visible row\n\t\t//total count of items, paging can affect this math\n\t\tvar count = this.data.$max?(this.data.$max-this.data.$min):this.data.count();\n\t\tvar max = Math.ceil(count/dx)*t.height;\t\t\t//size of view in rows\n\n\t\treturn { _from:min, _height:dy, _top:top, _max:max, _y:t.height, _dx:dx};\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\tif (!html){\n\t\t\tthis.showItem(id);\n\t\t\tthis._render_visible_rows();\n\t\t\thtml = this.getItemNode(id);\n\t\t}\n\t\treturn {\n\t\t\tleft:html.offsetLeft, \n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.offsetHeight,\n\t\t\twidth:html.offsetWidth,\n\t\t\tparent:this._contentobj\n\t\t};\n\t}\n};\n\nexport default VirtualRenderStack;","import {$active} from \"../../webix/skin\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\n\nexport const errorMessage = \"non-existing view for export\";\n\nfunction getDataHelper(key, column, raw){\n\tif (!raw && column.format)\n\t\treturn function(obj){ return column.format(obj[key]); };\n\n\treturn function(obj){ return obj[key]; };\n}\n\nfunction getHeaderText(view, header, filterHTML){\n\tlet text = header.text;\n\tif (header.contentId){\n\t\tconst content = view.getHeaderContent(header.contentId);\n\t\tif (content && !content.type.$icon)\n\t\t\ttext = content.getValue(true);\n\t}\n\tlet res = (text||\"\").toString();\n\tif(filterHTML)\n\t\tres = res.replace( /<[^>]*>/gi, \"\");\n\treturn res;\n}\n\nexport function getStyles(r, c, styles){\n\t//row index, column index, styles array\n\tif(styles[r] && styles[r][c])\n\t\treturn styles[r][c];\n\treturn {};\n}\n\nexport function getExportScheme(view, options){\n\tconst scheme = [];\n\tlet h_count = 0, f_count = 0;\n\tconst isTable = view.getColumnConfig;\n\tlet columns = options.columns;\n\tconst raw = !!options.rawValues;\n\tconst isTree = view.data.name == \"TreeStore\";\n\n\tlet treeLines = options.treeLines;\n\tif(treeLines === true || isUndefined(treeLines))\n\t\ttreeLines = \"value\";\n\n\tscheme.heights = {};\n\n\tif(options.hidden || options.hide){\n\t\tscheme.hiddenCols = {};\n\t\tscheme.hiddenRows = {};\n\t}\n\n\tif (!columns){\n\t\tcolumns = [];\n\t\tif (isTable){\n\t\t\tconst order = view._hidden_column_order;\n\t\t\tif(options.hidden && order.length){\n\t\t\t\tfor (let i = 0; i < order.length; i++){\n\t\t\t\t\tconst col = view.getColumnConfig(order[i]);\n\t\t\t\t\tif(!view.isColumnVisible(col.id))\n\t\t\t\t\t\tscheme.hiddenCols[col.id] = 1;\n\t\t\t\t\tcolumns.push(col);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tcolumns = columns.concat(view._columns);\n\t\t}\n\t\telse {\n\t\t\tconst obj = view.data.pull[view.data.order[0]];\n\t\t\tfor (let key in obj)\n\t\t\t\tif(key !== \"id\" && key[0] != \"$\")\n\t\t\t\t\tcolumns.push({id:key, isTree: isTree && key === treeLines});\n\t\t}\n\t}\n\telse if(!columns.length){\n\t//export options are set as - columns:{ rank:true, title:{ header:\"custom\"}}\n\t\tconst arr = [];\n\t\tfor(let key in columns)\n\t\t\tarr.push(extend({ id:key}, extend({}, columns[key])));\n\t\tcolumns = arr;\n\t}\n\n\tif (options.ignore)\n\t\tfor (let i=columns.length-1; i>=0; i--)\n\t\t\tif (options.ignore[columns[i].id])\n\t\t\t\tcolumns.splice(i,1);\n\n\tif (options.id)\n\t\tscheme.push({ id:\"id\", width:50, header:\" \", template:function(obj){ return obj.id; }});\n\n\tif (options.flatTree){\n\t\tconst flatKey = options.flatTree.id;\n\t\tconst copy = [].concat(options.flatTree.columns);\n\t\tconst fill = [];\n\t\tconst fillMode = !!options.flatTree.fill;\n\t\tfor (let i = 1; i <= copy.length; i++)\n\t\t\tcopy[i-1].template = (function(i){ \n\t\t\t\treturn function(obj){ \n\t\t\t\t\treturn obj.$level == i ? (fill[i]=obj[flatKey]) : ((fillMode && i<obj.$level)?fill[i]:\"\"); \n\t\t\t\t};\n\t\t\t})(i);\n\n\t\tlet index = 0;\n\t\tfor (let i = columns.length-1; i >= 0; i--)\n\t\t\tif (columns[i].id === flatKey)\n\t\t\t\tindex = i;\n\n\t\tcolumns = [].concat(columns.slice(0,index)).concat(copy).concat(columns.slice(index+1));\n\t}\n\n\tlet treeColumn;\n\n\tfor (let j = 0; j < columns.length; j++) {\n\t\tlet column = columns[j];\n\t\tlet key = column.id;\n\n\t\tif (column.noExport) continue;\n\n\t\t// raw mode has sense only for datatable\n\t\t// in other cases we don't have built-in data templates\n\t\tlet rawColumn = raw && isTable;\n\t\tif (isTable){\n\t\t\tconst sourceColumn = view.getColumnConfig(key);\n\t\t\t// when these's no column to take raw data from, or custom template defined - ignore raw mode\n\t\t\tif (column.template && (!sourceColumn || sourceColumn.template != column.template))\n\t\t\t\trawColumn = false;\n\t\t\tif(sourceColumn)\n\t\t\t\tcolumn = extend(extend({}, column), sourceColumn);\n\t\t}\n\n\t\tconst record = {\n\t\t\tid:         column.id,\n\t\t\ttemplate:   (( rawColumn || !column.template) ? getDataHelper(key, column, raw)  : column.template ),\n\t\t\twidth:      ((column.width   || 200) * (options.export_mode===\"excel\"?8.43/70:1 )),\n\t\t\theader:     (column.header!==false?(column.header||key)  : \"\")\n\t\t};\n\n\t\tif (column.collection) record.collection = column.collection;\n\n\t\tif(isTree && key === treeLines)\n\t\t\trecord.isTree = treeColumn = true;\n\n\t\tif(options.export_mode === \"excel\"){\n\t\t\textend(record, {\n\t\t\t\ttype: column.exportType || \"\",\n\t\t\t\tformat:column.exportFormat || \"\"\n\t\t\t});\n\t\t\tif(column.hidden){\n\t\t\t\tif(!scheme.hiddenCols)\n\t\t\t\t\tscheme.hiddenCols = {};\n\t\t\t\tscheme.hiddenCols[column.id] = 1;\n\t\t\t}\n\t\t}\n\n\t\tif(typeof record.header === \"string\") record.header = [{text:record.header}];\n\t\telse record.header = [].concat(record.header);\n\n\t\tfor(let i = 0; i<record.header.length; i++)\n\t\t\trecord.header[i] = record.header[i] ? getHeaderText(view, record.header[i], !!options.filterHTML) : \"\";\n\n\t\th_count = Math.max(h_count, record.header.length);\n\n\t\tif(view.config.footer){\n\t\t\tlet footer = column.footer || \"\";\n\t\t\tif(typeof footer == \"string\") footer = [{text:footer}];\n\t\t\telse footer = [].concat(footer);\n\n\t\t\tfor(let i = 0; i<footer.length; i++)\n\t\t\t\tfooter[i] = footer[i] ? getHeaderText(view, footer[i], !!options.filterHTML) : \"\";\n\n\t\t\trecord.footer = footer;\n\t\t\tf_count = Math.max(f_count, record.footer.length);\n\t\t}\n\t\tscheme.push(record);\n\t}\n\n\n\tif(!treeColumn && isTree && options.treeLines != treeLines && scheme[0])\n\t\tscheme[0].isTree = true;\n\n\tfor(let i =0; i<scheme.length; i++){\n\n\t\tlet diff = h_count-scheme[i].header.length;\n\t\tfor(let d=0; d<diff; d++)\n\t\t\tscheme[i].header.push(\"\");\n\n\t\tif(view.config.footer){\n\t\t\tdiff = f_count-scheme[i].footer.length;\n\t\t\tfor(let d=0; d<diff; d++)\n\t\t\t\tscheme[i].footer.push(\"\");\n\t\t}\n\t}\n\n\treturn scheme;\n}\n\nexport function getFileName(name, extension){\n\tif(name)\n\t\tname = name.replace(/[/?\\\\<>:*|\"]/g, \"\").substring(0, 150);\n\treturn `${name || \"Data\"}.${extension}`;\n}\n\nexport function getExportData(view, options, scheme, images){\n\tconst filterHTML = !!options.filterHTML;\n\tconst htmlFilter = /<[^>]*>/gi;\n\tlet data = [];\n\tlet header, headers;\n\tconst mode = options.export_mode;\n\tconst excel = mode == \"excel\";\n\n\tif((excel || mode == \"csv\") && options.docHeader){\n\t\tdata = [[(options.docHeader.text || options.docHeader).toString()], [\"\"]];\n\t\tif(excel && options.docHeader.height)\n\t\t\tscheme.heights[0] = options.docHeader.height;\n\t}\n\n\tif( options.header !== false && scheme.length){\n\t\tfor(let h=0; h < scheme[0].header.length; h++){\n\t\t\theaders = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){ \n\t\t\t\theader = \"\";\n\t\t\t\tif(scheme[i].header[h]){\n\t\t\t\t\theader = scheme[i].header[h];\n\t\t\t\t\tif (filterHTML)\n\t\t\t\t\t\theader = scheme[i].header[h] = header.replace(htmlFilter, \"\");\n\t\t\t\t}\n\t\t\t\theaders.push(header);\n\t\t\t}\n\n\t\t\tif(excel && view._columns && options.heights !==false &&\n\t\t\t(view._headers[h] !== $active.barHeight || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = view._headers[h];\n\n\t\t\tif (mode !== \"pdf\")\n\t\t\t\tdata[data.length] = headers;\n\t\t}\n\t}\n\toptions.yCorrection = (options.yCorrection||0)-data.length;\n\n\tconst treeline = (options.flatTree || options.plainOutput) ? \"\" : \"-\";\n\n\tview.data.each(function(item, index){\n\t\tif(!options.filter || options.filter(item)){\n\t\t\tconst reallyHidden = options.hidden && view.data._filter_order && view.getIndexById(item.id) == -1;\n\t\t\tif((options.hide && options.hide(item)) || reallyHidden){\n\t\t\t\tconst header = (options.docHeader?2:0)+(options.header===false?0:scheme[0].header.length);\n\t\t\t\tscheme.hiddenRows[header+index] = 1;\n\t\t\t}\n\n\t\t\tif(this.data._scheme_export){\n\t\t\t\titem = view.data._scheme_export(item);\n\t\t\t}\n\n\t\t\tlet line = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){\n\t\t\t\tlet column = scheme[i], cell = null;\n\t\t\t\t//spreadsheet use muon to store data, get value via $getExportValue\n\t\t\t\tif(view.$getExportValue){\n\t\t\t\t\tcell = view.$getExportValue(item.id, column.id, options);\n\t\t\t\t\tif(typeof cell == \"object\" && cell.image){\n\t\t\t\t\t\timages.push(cell.image);\n\t\t\t\t\t\tcell = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//datatable math\n\t\t\t\t\tlet formula;\n\t\t\t\t\tif(options.math && item[\"$\"+column.id] && item[\"$\"+column.id].charAt(0) ==\"=\"){\n\t\t\t\t\t\tif(excel)\n\t\t\t\t\t\t\tformula = item[\"$\"+column.id];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcell = item[\"$\"+column.id];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(this._spans_pull){\n\t\t\t\t\t\tlet span = this.getSpan(item.id, column.id);\n\t\t\t\t\t\tif(span && span[4] && span[0] == item.id && span[1] == column.id){\n\t\t\t\t\t\t\tcell = span[4];\n\t\t\t\t\t\t\tif(filterHTML && typeof cell === \"string\")\n\t\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!cell){\n\t\t\t\t\t\tcell = column.template(item, view.type, item[column.id], column, i);\n\t\t\t\t\t\tif (!cell && cell !== 0) cell = \"\";\n\t\t\t\t\t\tif(column.isTree && treeline)\n\t\t\t\t\t\t\tcell = \" \"+Array(item.$level).join(treeline)+\" \"+cell;\n\t\t\t\t\t\tif (filterHTML && typeof cell === \"string\"){\n\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//remove end/start spaces(ex.hierarchy data)\n\t\t\t\t\t\tif (typeof cell === \"string\" && mode === \"csv\")\n\t\t\t\t\t\t\tcell = cell.trim();\n\t\t\t\t\t\t//for multiline data\n\t\t\t\t\t\tif (typeof cell === \"string\" && (excel || mode === \"csv\")){\n\t\t\t\t\t\t\tcell = cell.replace(/<br\\s*\\/?>/mg,\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(formula)\n\t\t\t\t\t\tcell = { formula, value: cell };\n\t\t\t\t}\n\n\t\t\t\tline.push(cell);\n\t\t\t}\n\n\t\t\tif(excel && view._columns && options.heights !== false &&\n\t\t\t((item.$height && item.$height !== $active.rowHeight) || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = item.$height || this.config.rowHeight;\n\n\t\t\tdata.push(line);\n\t\t}\n\t}, view, options.hidden);\n\n\tif( options.footer !==false ){\n\t\tlet f_count = scheme[0].footer?scheme[0].footer.length:0;\n\t\tfor (let f = 0; f < f_count; f++){\n\t\t\tlet footers  = [];\n\t\t\tfor(let i = 0; i<scheme.length; i++){\n\t\t\t\tlet footer = scheme[i].footer[f];\n\t\t\t\tif (filterHTML) footer = scheme[i].footer[f] = footer.toString().replace(htmlFilter, \"\");\n\t\t\t\tfooters.push(footer);\n\t\t\t}\n\n\t\t\tif(excel && view._columns && options.heights !==false &&\n\t\t\t(view._footers[f] !== $active.barHeight || options.heights==\"all\")\n\t\t\t) scheme.heights[data.length] = view._footers[f];\n\n\t\t\tif(mode !== \"pdf\")\n\t\t\t\tdata.push(footers);\n\t\t}\n\t}\n\n\tif(excel && options.docFooter){\n\t\tdata = data.concat([[], [(options.docFooter.text || options.docFooter).toString()]]);\n\t\tif(options.docFooter.height)\n\t\t\tscheme.heights[data.length-1] = options.docFooter.height;\n\t}\n\n\treturn data;\n}","// https://docs.sheetjs.com/docs/csf/features/formulae/#prefixed-future-functions\n// Functions introduced in newer versions of Excel are prefixed with _xlfn. when stored in files.\n// When writing formula expressions using these functions, the prefix is required for maximal compatibility:\n// Broadest compatibility: XLSX.utils.sheet_set_array_formula(worksheet, \"C1\", \"_xlfn.UNIQUE(A1:A3)\", 1);\n// Can cause errors in spreadsheet software: XLSX.utils.sheet_set_array_formula(worksheet, \"C1\", \"UNIQUE(A1:A3)\", 1);\n// This list is growing with each Excel release.\n\nconst xlfnReplacements = {\n\t\"ACOT\": \"_xlfn.ACOT\",\n\t\"ACOTH\": \"_xlfn.ACOTH\",\n\t\"AGGREGATE\": \"_xlfn.AGGREGATE\",\n\t\"ARABIC\": \"_xlfn.ARABIC\",\n\t\"BASE\": \"_xlfn.BASE\",\n\t\"BETA.DIST\": \"_xlfn.BETA.DIST\",\n\t\"BETA.INV\": \"_xlfn.BETA.INV\",\n\t\"BINOM.DIST\": \"_xlfn.BINOM.DIST\",\n\t\"BINOM.DIST.RANGE\": \"_xlfn.BINOM.DIST.RANGE\",\n\t\"BINOM.INV\": \"_xlfn.BINOM.INV\",\n\t\"BITAND\": \"_xlfn.BITAND\",\n\t\"BITLSHIFT\": \"_xlfn.BITLSHIFT\",\n\t\"BITOR\": \"_xlfn.BITOR\",\n\t\"BITRSHIFT\": \"_xlfn.BITRSHIFT\",\n\t\"BITXOR\": \"_xlfn.BITXOR\",\n\t\"BYCOL\": \"_xlfn.BYCOL\",\n\t\"BYROW\": \"_xlfn.BYROW\",\n\t\"CEILING.MATH\": \"_xlfn.CEILING.MATH\",\n\t\"CEILING.PRECISE\": \"_xlfn.CEILING.PRECISE\",\n\t\"CHISQ.DIST\": \"_xlfn.CHISQ.DIST\",\n\t\"CHISQ.DIST.RT\": \"_xlfn.CHISQ.DIST.RT\",\n\t\"CHISQ.INV\": \"_xlfn.CHISQ.INV\",\n\t\"CHISQ.INV.RT\": \"_xlfn.CHISQ.INV.RT\",\n\t\"CHISQ.TEST\": \"_xlfn.CHISQ.TEST\",\n\t\"COMBINA\": \"_xlfn.COMBINA\",\n\t\"CONCAT\": \"_xlfn.CONCAT\",\n\t\"CONFIDENCE.NORM\": \"_xlfn.CONFIDENCE.NORM\",\n\t\"CONFIDENCE.T\": \"_xlfn.CONFIDENCE.T\",\n\t\"COT\": \"_xlfn.COT\",\n\t\"COTH\": \"_xlfn.COTH\",\n\t\"COVARIANCE.P\": \"_xlfn.COVARIANCE.P\",\n\t\"COVARIANCE.S\": \"_xlfn.COVARIANCE.S\",\n\t\"CSC\": \"_xlfn.CSC\",\n\t\"CSCH\": \"_xlfn.CSCH\",\n\t\"DAYS\": \"_xlfn.DAYS\",\n\t\"DECIMAL\": \"_xlfn.DECIMAL\",\n\t\"ECMA.CEILING\": \"_xlfn.ECMA.CEILING\",\n\t\"ERF.PRECISE\": \"_xlfn.ERF.PRECISE\",\n\t\"ERFC.PRECISE\": \"_xlfn.ERFC.PRECISE\",\n\t\"EXPON.DIST\": \"_xlfn.EXPON.DIST\",\n\t\"F.DIST\": \"_xlfn.F.DIST\",\n\t\"F.DIST.RT\": \"_xlfn.F.DIST.RT\",\n\t\"F.INV\": \"_xlfn.F.INV\",\n\t\"F.INV.RT\": \"_xlfn.F.INV.RT\",\n\t\"F.TEST\": \"_xlfn.F.TEST\",\n\t\"FIELDVALUE\": \"_xlfn.FIELDVALUE\",\n\t\"FILTERXML\": \"_xlfn.FILTERXML\",\n\t\"FLOOR.MATH\": \"_xlfn.FLOOR.MATH\",\n\t\"FLOOR.PRECISE\": \"_xlfn.FLOOR.PRECISE\",\n\t\"FORECAST.ETS\": \"_xlfn.FORECAST.ETS\",\n\t\"FORECAST.ETS.CONFINT\": \"_xlfn.FORECAST.ETS.CONFINT\",\n\t\"FORECAST.ETS.SEASONALITY\": \"_xlfn.FORECAST.ETS.SEASONALITY\",\n\t\"FORECAST.ETS.STAT\": \"_xlfn.FORECAST.ETS.STAT\",\n\t\"FORECAST.LINEAR\": \"_xlfn.FORECAST.LINEAR\",\n\t\"FORMULATEXT\": \"_xlfn.FORMULATEXT\",\n\t\"GAMMA\": \"_xlfn.GAMMA\",\n\t\"GAMMA.DIST\": \"_xlfn.GAMMA.DIST\",\n\t\"GAMMA.INV\": \"_xlfn.GAMMA.INV\",\n\t\"GAMMALN.PRECISE\": \"_xlfn.GAMMALN.PRECISE\",\n\t\"GAUSS\": \"_xlfn.GAUSS\",\n\t\"HYPGEOM.DIST\": \"_xlfn.HYPGEOM.DIST\",\n\t\"IFNA\": \"_xlfn.IFNA\",\n\t\"IFS\": \"_xlfn.IFS\",\n\t\"IMCOSH\": \"_xlfn.IMCOSH\",\n\t\"IMCOT\": \"_xlfn.IMCOT\",\n\t\"IMCSC\": \"_xlfn.IMCSC\",\n\t\"IMCSCH\": \"_xlfn.IMCSCH\",\n\t\"IMSEC\": \"_xlfn.IMSEC\",\n\t\"IMSECH\": \"_xlfn.IMSECH\",\n\t\"IMSINH\": \"_xlfn.IMSINH\",\n\t\"IMTAN\": \"_xlfn.IMTAN\",\n\t\"ISFORMULA\": \"_xlfn.ISFORMULA\",\n\t\"ISO.CEILING\": \"_xlfn.ISO.CEILING\",\n\t\"ISOMITTED\": \"_xlfn.ISOMITTED\",\n\t\"ISOWEEKNUM\": \"_xlfn.ISOWEEKNUM\",\n\t\"LAMBDA\": \"_xlfn.LAMBDA\",\n\t\"LET\": \"_xlfn.LET\",\n\t\"LOGNORM.DIST\": \"_xlfn.LOGNORM.DIST\",\n\t\"LOGNORM.INV\": \"_xlfn.LOGNORM.INV\",\n\t\"MAKEARRAY\": \"_xlfn.MAKEARRAY\",\n\t\"MAP\": \"_xlfn.MAP\",\n\t\"MAXIFS\": \"_xlfn.MAXIFS\",\n\t\"MINIFS\": \"_xlfn.MINIFS\",\n\t\"MODE.MULT\": \"_xlfn.MODE.MULT\",\n\t\"MODE.SNGL\": \"_xlfn.MODE.SNGL\",\n\t\"MUNIT\": \"_xlfn.MUNIT\",\n\t\"NEGBINOM.DIST\": \"_xlfn.NEGBINOM.DIST\",\n\t\"NETWORKDAYS.INTL\": \"_xlfn.NETWORKDAYS.INTL\",\n\t\"NORM.DIST\": \"_xlfn.NORM.DIST\",\n\t\"NORM.INV\": \"_xlfn.NORM.INV\",\n\t\"NORM.S.DIST\": \"_xlfn.NORM.S.DIST\",\n\t\"NORM.S.INV\": \"_xlfn.NORM.S.INV\",\n\t\"NUMBERVALUE\": \"_xlfn.NUMBERVALUE\",\n\t\"PDURATION\": \"_xlfn.PDURATION\",\n\t\"PERCENTILE.EXC\": \"_xlfn.PERCENTILE.EXC\",\n\t\"PERCENTILE.INC\": \"_xlfn.PERCENTILE.INC\",\n\t\"PERCENTRANK.EXC\": \"_xlfn.PERCENTRANK.EXC\",\n\t\"PERCENTRANK.INC\": \"_xlfn.PERCENTRANK.INC\",\n\t\"PERMUTATIONA\": \"_xlfn.PERMUTATIONA\",\n\t\"PHI\": \"_xlfn.PHI\",\n\t\"POISSON.DIST\": \"_xlfn.POISSON.DIST\",\n\t\"QUARTILE.EXC\": \"_xlfn.QUARTILE.EXC\",\n\t\"QUARTILE.INC\": \"_xlfn.QUARTILE.INC\",\n\t\"QUERYSTRING\": \"_xlfn.QUERYSTRING\",\n\t\"RANDARRAY\": \"_xlfn.RANDARRAY\",\n\t\"RANK.AVG\": \"_xlfn.RANK.AVG\",\n\t\"RANK.EQ\": \"_xlfn.RANK.EQ\",\n\t\"REDUCE\": \"_xlfn.REDUCE\",\n\t\"RRI\": \"_xlfn.RRI\",\n\t\"SCAN\": \"_xlfn.SCAN\",\n\t\"SEC\": \"_xlfn.SEC\",\n\t\"SECH\": \"_xlfn.SECH\",\n\t\"SEQUENCE\": \"_xlfn.SEQUENCE\",\n\t\"SHEET\": \"_xlfn.SHEET\",\n\t\"SHEETS\": \"_xlfn.SHEETS\",\n\t\"SKEW.P\": \"_xlfn.SKEW.P\",\n\t\"SORTBY\": \"_xlfn.SORTBY\",\n\t\"STDEV.P\": \"_xlfn.STDEV.P\",\n\t\"STDEV.S\": \"_xlfn.STDEV.S\",\n\t\"SWITCH\": \"_xlfn.SWITCH\",\n\t\"T.DIST\": \"_xlfn.T.DIST\",\n\t\"T.DIST.2T\": \"_xlfn.T.DIST.2T\",\n\t\"T.DIST.RT\": \"_xlfn.T.DIST.RT\",\n\t\"T.INV\": \"_xlfn.T.INV\",\n\t\"T.INV.2T\": \"_xlfn.T.INV.2T\",\n\t\"T.TEST\": \"_xlfn.T.TEST\",\n\t\"TEXTJOIN\": \"_xlfn.TEXTJOIN\",\n\t\"UNICHAR\": \"_xlfn.UNICHAR\",\n\t\"UNICODE\": \"_xlfn.UNICODE\",\n\t\"UNIQUE\": \"_xlfn.UNIQUE\",\n\t\"VAR.P\": \"_xlfn.VAR.P\",\n\t\"VAR.S\": \"_xlfn.VAR.S\",\n\t\"WEBSERVICE\": \"_xlfn.WEBSERVICE\",\n\t\"WEIBULL.DIST\": \"_xlfn.WEIBULL.DIST\",\n\t\"WORKDAY.INTL\": \"_xlfn.WORKDAY.INTL\",\n\t\"XLOOKUP\": \"_xlfn.XLOOKUP\",\n\t\"XOR\": \"_xlfn.XOR\",\n\t\"TOROW\": \"_xlfn.TOROW\",\n\t\"TOCOL\": \"_xlfn.TOCOL\",\n\t\"TEXTSPLIT\": \"_xlfn.TEXTSPLIT\",\n\t\"WRAPROWS\": \"_xlfn.WRAPROWS\",\n\t\"WRAPCOLS\": \"_xlfn.WRAPCOLS\",\n\t\"TAKE\": \"_xlfn.TAKE\",\n\t\"DROP\": \"_xlfn.DROP\",\n\t\"CHOOSEROWS\": \"_xlfn.CHOOSEROWS\",\n\t\"CHOOSECOLS\": \"_xlfn.CHOOSECOLS\",\n\t\"EXPAND\": \"_xlfn.EXPAND\",\n\t\"SORT\": \"_xlfn.SORT\",\n\t\"Z.TEST\": \"_xlfn.Z.TEST\"\n};\n\nexport default xlfnReplacements;","import {errorMessage, getExportScheme, getExportData, getStyles, getFileName} from \"./common\";\n\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {download} from \"../../webix/html\";\nimport {extend, isArray, uid} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\n\nimport xlfnReplacements from \"./newExcelFunctions\";\n\nexport const toExcel = function(id, options){\n\toptions = options || {};\n\toptions.export_mode = \"excel\";\n\n\tid = isArray(id)?id:[id];\n\tlet views = [];\n\n\tfor(let i = 0; i<id.length; i++){\n\t\tif(!id[i].id) id[i]  = { id:id[i] }; \n\t\tlet view = $$(id[i].id);\n\t\tconst viewOptions = extend(id[i].options || {}, options);\n\t\tif (view && view.$exportView)\n\t\t\tview = view.$exportView(viewOptions);\n\n\t\tassert(view, errorMessage);\n\n\t\t//$exportView returns array\n\t\tif(isArray(view))\n\t\t\tviews = views.concat(view);\n\t\telse if(view.data && view.data.pull){\n\t\t\tconst images = [];\n\t\t\t//spreadsheet and excelviewer require plain data output first\n\t\t\tconst scheme = getExportScheme(view, viewOptions);\n\t\t\tviews.push({\n\t\t\t\tscheme,\n\t\t\t\texportData: getExportData(view, viewOptions, scheme, images),\n\t\t\t\tspans:(viewOptions.spans ? getSpans(view, viewOptions) : []),\n\t\t\t\tviewOptions,\n\t\t\t\timages\n\t\t\t});\n\t\t}\n\t}\n\tif(options.dataOnly) return views;\n\n\tconst defer = promise.defer(); \n\n\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(function(){\n\t\tif(!views.length) return defer.reject(errorMessage);\n\n\t\tconst wb = { SheetNames:[], Sheets:{}, Workbook:{ WBProps :{}, Names:[], Sheets:[] }};\n\n\t\tlet images = [];\n\t\tfor(let i = 0; i<views.length; i++){\n\t\t\tconst viewOptions = views[i].viewOptions;\n\t\t\tconst scheme = views[i].scheme;\n\t\t\tconst result = views[i].exportData;\n\t\t\tconst spans  = views[i].spans;\n\t\t\tconst ranges =  views[i].ranges || [];\n\t\t\tconst styles = views[i].styles || [];\n\t\t\tconst freeze = views[i].freeze;\n\t\t\tconst sheetSettings = views[i].sheetSettings;\n\t\t\tconst data = getExcelData(result, scheme, spans, styles, freeze, sheetSettings, viewOptions);\n\t\t\tlet sname = (viewOptions.name || \"Data\"+(i+1)).replace(/[*?:[\\]\\\\/]/g,\"\").replace(/&/g, \"&amp;\").substring(0, 31);\n\n\t\t\t//avoid name duplication\n\t\t\tlet k = i;\n\t\t\twhile(wb.SheetNames.indexOf(sname) != -1)\n\t\t\t\tsname = \"Data\"+(++k);\n\n\t\t\tif(views[i].images)\n\t\t\t\timages.push(\n\t\t\t\t\tpromise.all(views[i].images).then(res =>{\n\t\t\t\t\t\tconst regex = /data:image\\/(png|jpg|jpeg);base64,/;\n\t\t\t\t\t\tres = res.filter(image => image);\n\t\t\t\t\t\tdata[\"!images\"] = res.map(image => {\n\t\t\t\t\t\t\tlet type = image.data.match(regex)[1];\n\t\t\t\t\t\t\tif(type == \"jpeg\") type = \"jpg\";\n\t\t\t\t\t\t\timage.position.attrs = { editAs: \"oneCell\" };\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tname: uid()+\".\"+type,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tdata: image.data.replace(regex, \"\"),\n\t\t\t\t\t\t\t\topts: { base64: true },\n\t\t\t\t\t\t\t\tposition: image.position\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\twb.SheetNames.push(sname);\n\t\t\twb.Sheets[sname] = data;\n\t\t\twb.Workbook.Names = wb.Workbook.Names.concat(ranges);\n\t\t\twb.Workbook.Sheets.push({ state: views[i].state || \"visible\" });\n\t\t}\n\n\t\tpromise.all(images).then(()=>{\n\t\t\t/* global XLSX */\n\t\t\tconst xls = XLSX.write(wb, {bookType:\"xlsx\", bookSST:false, type: \"binary\"});\n\t\t\tconst filename =  getFileName(options.filename, \"xlsx\");\n\n\t\t\tconst blob = new Blob([str2array(xls)], { type: \"application/xlsx\" });\n\t\t\tif(options.download !== false)\n\t\t\t\tdownload(blob, filename);\n\t\t\tdefer.resolve(blob);\n\t\t});\n\n\t\treturn defer;\n\t});\n};\n\nfunction str2array(s) {\n\tconst buf = new ArrayBuffer(s.length);\n\tconst view = new Uint8Array(buf);\n\tfor (let i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nconst types = { number:\"n\", date:\"n\", string:\"s\", boolean:\"b\"};\nconst table = \"_table\";\nfunction getExcelData(data, scheme, spans, styles, freeze, sheetSettings, options) {\n\tconst ws = {};\n\tconst range = {s: {c:10000000, r:10000000}, e: {c:0, r:0 }};\n\tfor(let R = 0; R != data.length; ++R) {\n\t\tfor(let C = 0; C != data[R].length; ++C) {\n\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(range.e.c < C) range.e.c = C;\n\n\t\t\tconst cell = {v: data[R][C]};\n\t\t\tif(cell.v === null) continue;\n\t\t\tconst cell_ref = XLSX.utils.encode_cell({c:C,r:R});\n\n\t\t\tconst isFormula = typeof cell.v == \"object\" && cell.v.formula;\n\t\t\tconst stringValue = (isFormula ? cell.v.value : cell.v).toString();\n\n\t\t\tif(styles){\n\t\t\t\tconst cellStyle = getStyles(R, C, styles);\n\t\t\t\tif(cellStyle.format){\n\t\t\t\t\tcell.z = cellStyle.format;\n\t\t\t\t\tdelete cellStyle.format;\n\t\t\t\t}\n\t\t\t\tif(cellStyle.type){\n\t\t\t\t\tcell.t = types[cellStyle.type];\n\t\t\t\t\tdelete cellStyle.type;\n\t\t\t\t}\n\t\t\t\tcell.s = cellStyle;\n\t\t\t}\n\n\t\t\t// set type based on column's config\n\t\t\t// skip headers and formula based cells\n\t\t\tconst header = (options.docHeader?2:0)+scheme[0].header.length;\n\t\t\tif(R>=header && !isFormula){\n\t\t\t\tconst column = scheme[C];\n\t\t\t\tif(column.type && !cell.t) cell.t = (types[column.type] || \"\");\n\t\t\t\tif(column.format && !cell.z) cell.z = column.format;\n\t\t\t}\n\n\t\t\t//prepare formula\n\t\t\tif(isFormula){\n\t\t\t\tif(cell.v.ref)\n\t\t\t\t\tcell.F = cell.v.ref;\n\t\t\t\tcell.f = addXlfnPrefix(cell.v.formula.substring(1));\n\t\t\t\tcell.v = stringValue;\n\t\t\t}\n\n\t\t\t// set type based on cell's value\n\t\t\tif(options.stubCells && stringValue === \"\")\n\t\t\t\tcell.t = \"z\";\n\t\t\telse if(cell.v instanceof Date){\n\t\t\t\tcell.t = cell.t || \"n\";\n\t\t\t\tcell.z = cell.z || XLSX.SSF[table][14];\n\t\t\t\tcell.v = excelDate(cell.v);\n\t\t\t}\n\t\t\telse if(!cell.t){\n\t\t\t\tif(isFormula)\n\t\t\t\t\tcell.t = isNaN(stringValue) ? \"s\" : \"n\";\n\t\t\t\telse if(typeof cell.v === \"boolean\")\n\t\t\t\t\tcell.t = \"b\";\n\t\t\t\telse if(typeof cell.v === \"number\" || parseFloat(cell.v) == cell.v){\n\t\t\t\t\tcell.v = cell.v*1;\n\t\t\t\t\tcell.t = \"n\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// convert any other object to a string\n\t\t\t\t\tcell.v = stringValue;\n\t\t\t\t\tcell.t = \"s\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tws[cell_ref] = cell;\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws[\"!ref\"] = XLSX.utils.encode_range(range);\n\n\tws[\"!rows\"] = getRowHeights(scheme);\n\tws[\"!cols\"] = getColumnsWidths(scheme);\n\tif(spans.length)\n\t\tws[\"!merges\"] = spans;\n\n\tif(freeze)\n\t\tws[\"!freeze\"] = {\n\t\t\txSplit: freeze.columns,\n\t\t\tySplit: freeze.rows,\n\t\t\ttopLeftCell: `${indexToHeader(freeze.columns+1)}${freeze.rows+1}`,\n\t\t\tstate: \"frozen\",\n\t\t\tactivePane: freeze.rows && freeze.columns ? \"bottomRight\" : (freeze.rows ? \"bottomLeft\" : \"topLeft\")\n\t\t};\n\n\tif(sheetSettings)\n\t\tws[\"!settings\"] = sheetSettings;\n\n\treturn ws;\n}\n\nfunction indexToHeader(index){\n\tconst alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tconst chars = alpha.length;\n\tconst quotient = Math.floor(--index / chars);\n\tif (quotient > 0)\n\t\treturn indexToHeader(quotient) + alpha[index % chars];\n\treturn alpha[index % chars];\n}\n\nfunction getRowHeights(scheme){\n\tconst heights = scheme.heights;\n\tfor(const i in heights)\n\t\theights[i] = {hpx:heights[i], hpt:heights[i]*0.75 };\n\n\tconst hidden = scheme.hiddenRows;\n\tif(hidden)\n\t\tfor(const i in hidden){\n\t\t\tif(!heights[i])\n\t\t\t\theights[i] = {};\n\t\t\theights[i].hidden = 1;\n\t\t}\n\n\treturn heights;\n}\n\nfunction getSpans(view, options){\n\tconst isTable = view.getColumnConfig;\n\tconst pull = view._spans_pull;\n\tlet spans = [];\n\n\tif(isTable){\n\t\tif(options.header!==false)\n\t\t\tspans = getHeaderSpans(view, options, \"header\", spans); \n\n\t\tif(pull){\n\t\t\tconst xc = options.xCorrection || 0;\n\t\t\tconst yc = options.yCorrection || 0;\n\t\t\tfor(const row in pull){\n\t\t\t\t//{ s:{c:1, r:0}, e:{c:3, r:0} }\n\t\t\t\tconst cols = pull[row];\n\t\t\t\tfor(const col in cols){\n\t\t\t\t\tlet colIndex = view.getColumnIndex(col);\n\n\t\t\t\t\tconst rowId = view.getItem(row).id;\n\t\t\t\t\tlet rowIndex = view.getIndexById(rowId);\n\n\t\t\t\t\tif(options.hidden){\n\t\t\t\t\t\tconst hiddenColsOrder = view._hidden_column_order;\n\t\t\t\t\t\tif(hiddenColsOrder.length){\n\t\t\t\t\t\t\tconst colId = view.getColumnConfig(col).id;\n\t\t\t\t\t\t\tcolIndex = hiddenColsOrder.indexOf(colId);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst hiddenRowsOrder = view.data._filter_order;\n\t\t\t\t\t\tif(hiddenRowsOrder && hiddenRowsOrder.length)\n\t\t\t\t\t\t\trowIndex = hiddenRowsOrder.indexOf(rowId);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst sc = colIndex - xc;\n\t\t\t\t\tconst sr = rowIndex - yc;\n\t\t\t\t\tif(sc<0||sr<0) //hidden cols/rows\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tconst ec = sc+cols[col][0]-1;\n\t\t\t\t\tconst er = sr+(cols[col][1]-1);\n\n\t\t\t\t\tspans.push({ s:{c:sc, r:sr}, e:{c:ec, r:er} });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(options.footer!==false)\n\t\t\tspans = getHeaderSpans(view, options, \"footer\", spans);\n\t}\n\n\treturn spans;\n}\n\nfunction getHeaderSpans(view, options, group, spans){\n\tconst columns = view.config.columns;\n\tconst delta = (options.docHeader?2:0)+(group == \"header\" ? 0 :((options.header!==false?view._headers.length:0)+view.count()));\n\n\tfor(let i=0; i<columns.length; i++){\n\t\tconst header = columns[i][group];\n\t\tfor(let h = 0; h<header.length; h++){\n\t\t\tif(header[h] && (header[h].colspan || header[h].rowspan)){\n\t\t\t\tspans.push({\n\t\t\t\t\ts:{ c:i, r:h+delta},\n\t\t\t\t\te:{ c:i+(header[h].colspan||1)-1, r:h+(header[h].rowspan ||1)-1+delta }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn spans;\n}\n\nfunction excelDate(date) {\n\tconst returnDateTime = 25569 + ((date.getTime() - (date.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\n\treturn returnDateTime.toString().substr(0,20);\n}\n\nfunction getColumnsWidths(scheme){\n\tconst wscols = [];\n\tfor (let i = 0; i < scheme.length; i++){\n\t\tconst col = scheme[i];\n\t\twscols.push({\n\t\t\twch: col.width,\n\t\t\thidden: scheme.hiddenCols ? scheme.hiddenCols[ col.id ] : 0\n\t\t});\n\t}\n\n\treturn wscols;\n}\n\nconst xlfnRegex = new RegExp(\n\t`(^|[+\\\\-*/(=:,])(${Object.keys(xlfnReplacements)\n\t\t.map(func => func.replace(/\\./g, \"\\\\.\"))\n\t\t.join(\"|\")})(?=\\\\s*\\\\()`,\n\t\"g\"\n);\n\nfunction addXlfnPrefix(formula) {\n\treturn formula.replace(xlfnRegex, (match, prefix, name) => {\n\t\treturn prefix + xlfnReplacements[name];\n\t});\n}","const en = {\n\tgroupDelimiter:\",\",\n\tgroupSize:3,\n\tdecimalDelimiter:\".\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%m/%d/%Y\",\n\ttimeFormat:\"%h:%i %A\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%m/%d/%Y %h:%i %A\",\n\tam:[\"am\",\"AM\"],\n\tpm:[\"pm\",\"PM\"],\n\n\tprice:\"${obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\",\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\".\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\",\n\t},\n\tfileSize: [\"b\",\"Kb\",\"Mb\",\"Gb\",\"Tb\",\"Pb\",\"Eb\"],\n\t\n\tcalendar: {\n\t\tmonthFull:[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\tmonthShort:[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\tdayFull:[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\tdayShort:[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t\thours: \"Hours\",\n\t\tminutes: \"Minutes\",\n\t\tdone:\"Done\",\n\t\tclear: \"Clear\",\n\t\ttoday: \"Today\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Page\",\n\t\tof:\"of\"\n\t},\n\tPDFviewer:{\n\t\tof:\"of\",\n\t\tautomaticZoom:\"Automatic Zoom\",\n\t\tactualSize:\"Actual Size\",\n\t\tpageFit:\"Page Fit\",\n\t\tpageWidth:\"Page Width\",\n\t\tpageHeight:\"Page Height\",\n\t\tenterPassword:\"Enter password\",\n\t\tpasswordError:\"Wrong password\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendar\",\n\t\tincreaseValue:\"Increase value\",\n\t\tdecreaseValue:\"Decrease value\",\n\t\tnavMonth:[\"Previous month\", \"Next month\"],\n\t\tnavYear:[\"Previous year\", \"Next year\"],\n\t\tnavDecade:[\"Previous decade\", \"Next decade\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Hours: %h %A\",\n\t\tminuteFormat:\"Minutes: %i\",\n\t\tremoveItem:\"Remove item\",\n\t\tpages:[\"First page\", \"Previous page\", \"Next page\", \"Last page\"],\n\t\tpage:\"Page\",\n\t\theadermenu:\"Header menu\",\n\t\topenGroup:\"Open column group\",\n\t\tcloseGroup:\"Close column group\",\n\t\tcloseTab:\"Close tab\",\n\t\tshowTabs:\"Show more tabs\",\n\t\tresetTreeMap:\"Reset tree map\",\n\t\tnavTreeMap:\"Level up\",\n\t\tnextTab:\"Next tab\",\n\t\tprevTab:\"Previous tab\",\n\t\tmultitextSection:\"Add section\",\n\t\tmultitextextraSection:\"Remove section\",\n\t\tshowChart:\"Show chart\",\n\t\thideChart:\"Hide chart\",\n\t\tresizeChart:\"Resize chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Underline\",\n\t\tbold: \"Bold\",\n\t\titalic: \"Italic\"\n\t},\n\tcombo:{\n\t\tselect:\"Select\",\n\t\tselectAll:\"Select all\",\n\t\tunselectAll:\"Unselect all\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancel\"\n\t},\n\tcomments:{\n\t\tsend: \"Send\",\n\t\tconfirmMessage: \"The comment will be removed. Are you sure?\",\n\t\tedit: \"Edit\",\n\t\tremove: \"Remove\",\n\t\tplaceholder: \"Type here..\",\n\t\tmoreComments:\"More comments\"\n\t},\n\tfilter:{\n\t\tless: \"less\",\n\t\tlessOrEqual: \"less or equal\",\n\t\tgreater: \"greater\",\n\t\tgreaterOrEqual: \"greater or equal\",\n\t\tcontains: \"contains\",\n\t\tnotContains: \"not contains\",\n\t\tequal: \"equal\",\n\t\tnotEqual: \"not equal\",\n\t\tbeginsWith: \"begins with\",\n\t\tnotBeginsWith: \"not begins with\",\n\t\tendsWith: \"ends with\",\n\t\tnotEndsWith: \"not ends with\",\n\t\tbetween: \"between\",\n\t\tnotBetween: \"not between\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Seconds\"\n\t}\n};\n\nexport default en;","import env from \"../webix/env\";\nimport i18n from \"../webix/i18n\";\n\n\nconst wDate = {\n\tstartOnMonday:false,\n\n\ttoFixed:function(num, ms){\n\t\tif( num<10)\tnum = \"0\"+num;\n\t\tif( ms && num <100 ) num = \"0\"+num;\n\t\treturn num;\n\t},\n\tweekStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tvar shift=date.getDay();\n\t\tif (this.startOnMonday){\n\t\t\tif (shift===0) shift=6;\n\t\t\telse shift--;\n\t\t}\n\t\treturn this.datePart(this.add(date,-1*shift,\"day\"));\n\t},\n\tmonthStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setDate(1);\n\t\treturn this.datePart(date);\n\t},\n\tyearStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setMonth(0);\n\t\treturn this.monthStart(date);\n\t},\n\tdayStart:function(date){\n\t\treturn this.datePart(date, true);\n\t},\n\tdateToStr:function(format,utc,timezone){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date)\n\t\t\t\t\treturn \"\";\n\t\t\t\tif (!date.getMonth)\n\t\t\t\t\tdate = i18n.parseFormatDate(date);\n\n\t\t\t\tvar str = \"\";\n\t\t\t\tvar lastPos = 0;\n\t\t\t\tformat.replace(/%[a-zA-Z]/g,function(s,pos){\n\t\t\t\t\tstr += format.slice(lastPos,pos);\n\t\t\t\t\tvar fn = function(date){\n\t\t\t\t\t\tif( s == \"%d\")  return wDate.toFixed(date.getDate());\n\t\t\t\t\t\tif( s == \"%m\")  return wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\tif( s == \"%j\")  return date.getDate();\n\t\t\t\t\t\tif( s == \"%n\")  return (date.getMonth()+1);\n\t\t\t\t\t\tif( s == \"%y\")  return wDate.toFixed(date.getFullYear()%100);\n\t\t\t\t\t\tif( s == \"%Y\")  return date.getFullYear();\n\t\t\t\t\t\tif( s == \"%D\")  return i18n.calendar.dayShort[date.getDay()];\n\t\t\t\t\t\tif( s == \"%l\")  return i18n.calendar.dayFull[date.getDay()];\n\t\t\t\t\t\tif( s == \"%M\")  return i18n.calendar.monthShort[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%F\")  return i18n.calendar.monthFull[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%h\")  return wDate.toFixed((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%g\")  return ((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%G\")  return date.getHours();\n\t\t\t\t\t\tif( s == \"%H\")  return wDate.toFixed(date.getHours());\n\t\t\t\t\t\tif( s == \"%i\")  return wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\tif( s == \"%a\")  return (date.getHours()>11?i18n.pm[0]:i18n.am[0]);\n\t\t\t\t\t\tif( s == \"%A\")  return (date.getHours()>11?i18n.pm[1]:i18n.am[1]);\n\t\t\t\t\t\tif( s == \"%s\")  return wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\tif( s == \"%S\")\treturn wDate.toFixed(date.getMilliseconds(), true);\n\t\t\t\t\t\tif( s == \"%W\")  return wDate.toFixed(Date.getISOWeek(date));\n\t\t\t\t\t\tif( s == \"%c\"){\n\t\t\t\t\t\t\tvar str = date.getFullYear();\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed(date.getDate());\n\t\t\t\t\t\t\tstr += \"T\";\n\t\t\t\t\t\t\tstr += wDate.toFixed(date.getHours());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\t\tif(timezone){\n\t\t\t\t\t\t\t\tlet offset = new Date().getTimezoneOffset();\n\n\t\t\t\t\t\t\t\tif(!offset)\n\t\t\t\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tconst sign = offset < 0 ? \"+\" : \"-\";\n\t\t\t\t\t\t\t\t\toffset = Math.abs(offset);\n\t\t\t\t\t\t\t\t\tconst hours = Math.floor(offset/60);\n\t\t\t\t\t\t\t\t\tconst minutes = offset%60;\n\n\t\t\t\t\t\t\t\t\tstr += sign + (hours < 10 ? \"0\" : \"\") + hours + \":\" + (minutes < 10 ? \"0\" : \"\") + minutes;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(utc)\n\t\t\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\t\t\treturn str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t};\n\t\t\t\t\tstr += fn(date);\n\t\t\t\t\tlastPos = pos + 2;\n\t\t\t\t});\n\t\t\t\tstr += format.slice(lastPos,format.length);\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t}\n\n\t\tformat=format.replace(/%[a-zA-Z]/g,function(a){\n\t\t\tswitch(a){\n\t\t\t\tcase \"%d\": return \"\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\tcase \"%m\": return \"\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\tcase \"%j\": return \"\\\"+date.getDate()+\\\"\";\n\t\t\t\tcase \"%n\": return \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\tcase \"%y\": return \"\\\"+wDate.toFixed(date.getFullYear()%100)+\\\"\"; \n\t\t\t\tcase \"%Y\": return \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\tcase \"%D\": return \"\\\"+i18n.calendar.dayShort[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%l\": return \"\\\"+i18n.calendar.dayFull[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%M\": return \"\\\"+i18n.calendar.monthShort[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%F\": return \"\\\"+i18n.calendar.monthFull[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%h\": return \"\\\"+wDate.toFixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%g\": return \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%G\": return \"\\\"+date.getHours()+\\\"\";\n\t\t\t\tcase \"%H\": return \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\tcase \"%i\": return \"\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\tcase \"%a\": return \"\\\"+(date.getHours()>11?i18n.pm[0]:i18n.am[0])+\\\"\";\n\t\t\t\tcase \"%A\": return \"\\\"+(date.getHours()>11?i18n.pm[1]:i18n.am[1])+\\\"\";\n\t\t\t\tcase \"%s\": return \"\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\tcase \"%S\": return \"\\\"+wDate.toFixed(date.getMilliseconds(), true)+\\\"\";\n\t\t\t\tcase \"%W\": return \"\\\"+wDate.toFixed(wDate.getISOWeek(date))+\\\"\";\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tvar str = \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\t\tstr += \"T\";\n\t\t\t\t\tstr += \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tif(timezone){\n\t\t\t\t\t\tlet offset = new Date().getTimezoneOffset();\n\n\t\t\t\t\t\tif(!offset)\n\t\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst sign = offset < 0 ? \"+\" : \"-\";\n\t\t\t\t\t\t\toffset = Math.abs(offset);\n\t\t\t\t\t\t\tconst hours = Math.floor(offset/60);\n\t\t\t\t\t\t\tconst minutes = offset%60;\n\n\t\t\t\t\t\t\tstr += sign + (hours < 10 ? \"0\" : \"\") + hours + \":\" + (minutes < 10 ? \"0\" : \"\") + minutes;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(utc)\n\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\treturn str;\n\n\t\t\t\tdefault: return a;\n\t\t\t}\n\t\t});\n\t\tif (utc===true) format=format.replace(/date\\.get/g,\"date.getUTC\");\n\t\tconst temp = new Function(\"date\", \"i18n\", \"wDate\", \"if (!date) return ''; if (!date.getMonth) date=i18n.parseFormatDate(date);  return \\\"\"+format+\"\\\";\");\n\t\treturn function(v){ return temp(v, i18n, wDate); };\n\t},\n\tstrToDate:function(format,utc,timezone){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tvar mask=format.match(/%[a-zA-Z]/g);\n\t\tvar splt=\"var temp=date.split(/[\\\\s\\\\./\\\\-\\\\:\\\\,]+/g); if(!temp.join('')){return ''}\";\n\t\tvar i,t,s;\n\n\t\tif(!i18n.calendar.monthShort_hash){\n\t\t\ts = i18n.calendar.monthShort;\n\t\t\tt = i18n.calendar.monthShort_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\n\t\t\ts = i18n.calendar.monthFull;\n\t\t\tt = i18n.calendar.monthFull_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\t\t}\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date) return \"\";\n\t\t\t\tif (typeof date == \"object\") return date;\n\t\t\t\tvar temp=date.split(/[\\s./\\-:,]+/g);\n\n\t\t\t\tif(!temp.join(\"\"))\n\t\t\t\t\treturn \"\";\n\n\t\t\t\tvar set=[0,0,1,0,0,0,0];\n\t\t\t\tfor (i=0; i<mask.length; i++){\n\t\t\t\t\tvar a = mask[i];\n\t\t\t\t\tif( a ==  \"%y\")\n\t\t\t\t\t\tset[0]=temp[i]*1+(temp[i]>30?1900:2000);\n\t\t\t\t\telse if( a ==  \"%Y\"){\n\t\t\t\t\t\tset[0]=(temp[i]||0)*1; if (set[0]<30) set[0]+=2000;\n\t\t\t\t\t}\n\t\t\t\t\telse if( a == \"%n\" || a == \"%m\")\n\t\t\t\t\t\tset[1]=(temp[i]||1)-1;\n\t\t\t\t\telse if( a ==  \"%M\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthShort_hash[temp[i]]||0;\n\t\t\t\t\telse if( a ==  \"%F\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthFull_hash[temp[i]]||0;\n\t\t\t\t\telse if( a == \"%j\" || a == \"%d\")\n\t\t\t\t\t\tset[2]=temp[i]||1;\n\t\t\t\t\telse if( a == \"%g\" || a == \"%G\" || a == \"%h\" || a == \"%H\")\n\t\t\t\t\t\tset[3]=temp[i]||0;\n\t\t\t\t\telse if( a == \"%a\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[0]?0:12);\n\t\t\t\t\telse if( a == \"%A\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[1]?0:12);\n\t\t\t\t\telse if( a ==  \"%i\")\n\t\t\t\t\t\tset[4]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%s\")\n\t\t\t\t\t\tset[5]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%S\")\n\t\t\t\t\t\tset[6]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%c\"){\n\t\t\t\t\t\tconst reg = /(\\d{4})-?(\\d{2})?-?(\\d{2})?T?(\\d{2})?:?(\\d{2})?:?(\\d{2})?[,|.]?(\\d{3})?(Z|\\+|-)?(\\d{2})?:?(\\d{2})?/;\n\t\t\t\t\t\tconst res = reg.exec(date);\n\t\t\t\t\t\tset[0]= (res[1]||0)*1;\n\t\t\t\t\t\tset[1]= (res[2]||1)-1;\n\t\t\t\t\t\tset[2]= (res[3]||1)*1;\n\t\t\t\t\t\tset[3]= (res[4]||0)*1;\n\t\t\t\t\t\tset[4]= (res[5]||0)*1;\n\t\t\t\t\t\tset[5]= (res[6]||0)*1;\n\t\t\t\t\t\tset[6]= (res[7]||0)*1;\n\n\t\t\t\t\t\tif(timezone && res[8] && res[8] != \"Z\"){\n\t\t\t\t\t\t\tconst sign = res[8] == \"-\" ? -1 : 1;\n\t\t\t\t\t\t\tconst tzDifference = sign * ((res[9]||0)*60 + (res[10]||0)*1);\n\t\t\t\t\t\t\tif(tzDifference)\n\t\t\t\t\t\t\t\tset[4] += tzDifference + new Date().getTimezoneOffset();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(utc)\n\t\t\t\t\treturn new Date(Date.UTC(set[0],set[1],set[2],set[3],set[4],set[5], set[6]));\n\t\t\t\treturn new Date(set[0],set[1],set[2],set[3],set[4],set[5], set[6]);\n\t\t\t};\n\t\t}\n\n\t\tfor (i=0; i<mask.length; i++){\n\t\t\tswitch(mask[i]){\n\t\t\t\tcase \"%j\":\n\t\t\t\tcase \"%d\": splt+=\"set[2]=temp[\"+i+\"]||1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%n\":\n\t\t\t\tcase \"%m\": splt+=\"set[1]=(temp[\"+i+\"]||1)-1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%y\": splt+=\"set[0]=temp[\"+i+\"]*1+(temp[\"+i+\"]>30?1900:2000);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%g\":\n\t\t\t\tcase \"%G\":\n\t\t\t\tcase \"%h\": \n\t\t\t\tcase \"%H\":\n\t\t\t\t\tsplt+=\"set[3]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%i\":\n\t\t\t\t\tsplt+=\"set[4]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%Y\":  splt+=\"set[0]=(temp[\"+i+\"]||0)*1; if (set[0]<30) set[0]+=2000;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%a\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[0]?0:12);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%A\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[1]?0:12);\";\n\t\t\t\t\tbreak;\t\t\t\t\t\n\t\t\t\tcase \"%s\":  splt+=\"set[5]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%S\":  splt+=\"set[6]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%M\":  splt+=\"set[1]=i18n.calendar.monthShort_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%F\":  splt+=\"set[1]=i18n.calendar.monthFull_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tsplt+= `\n\t\t\t\t\t\tconst reg = /(\\\\d{4})-?(\\\\d{2})?-?(\\\\d{2})?T?(\\\\d{2})?:?(\\\\d{2})?:?(\\\\d{2})?[,|.]?(\\\\d{3})?(Z|\\\\+|-)?(\\\\d{2})?:?(\\\\d{2})?/;\n\t\t\t\t\t\tconst res = reg.exec(date);\n\t\t\t\t\t\tset[0]= (res[1]||0)*1;\n\t\t\t\t\t\tset[1]= (res[2]||1)-1;\n\t\t\t\t\t\tset[2]= (res[3]||1)*1;\n\t\t\t\t\t\tset[3]= (res[4]||0)*1;\n\t\t\t\t\t\tset[4]= (res[5]||0)*1;\n\t\t\t\t\t\tset[5]= (res[6]||0)*1;\n\t\t\t\t\t\tset[6]= (res[7]||0)*1;\n\n\t\t\t\t\t\tif(${timezone} && res[8] && res[8] != \"Z\"){\n\t\t\t\t\t\t\tconst sign = res[8] == \"-\" ? -1 : 1;\n\t\t\t\t\t\t\tconst tzDifference = sign * ((res[9]||0)*60 + (res[10]||0)*1);\n\t\t\t\t\t\t\tif(tzDifference)\n\t\t\t\t\t\t\t\tset[4] += tzDifference + new Date().getTimezoneOffset();\n\t\t\t\t\t\t}`;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar code =\"set[0],set[1],set[2],set[3],set[4],set[5],set[6]\";\n\t\tif (utc) code =\" Date.UTC(\"+code+\")\";\n\t\tconst temp = new Function(\"date\", \"i18n\", \"if (!date) return ''; if (typeof date == 'object') return date; var set=[0,0,1,0,0,0,0]; \"+splt+\" return new Date(\"+code+\");\");\n\t\treturn function(v){ return temp(v, i18n ); };\n\t},\n\t\t\n\tgetISOWeek: function(ndate) {\n\t\tif(!ndate) return false;\n\t\tvar nday = ndate.getDay();\n\t\tif (nday === 0) {\n\t\t\tnday = 7;\n\t\t}\n\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\tvar ordinal_date = Math.floor( (first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\tvar weekNumber = 1 + Math.floor( ordinal_date / 7);\t\n\t\treturn weekNumber;\n\t},\n\t\n\tgetUTCISOWeek: function(ndate){\n\t\treturn this.getISOWeek(ndate);\n\t},\n\t_correctDate: function(d,d0,inc,checkFunc){\n\t\tif(!inc)\n\t\t\treturn;\n\t\tvar incorrect = checkFunc(d,d0);\n\t\tif(incorrect){\n\t\t\tvar i = (inc>0?1:-1);\n\n\t\t\twhile(incorrect){\n\t\t\t\td.setHours(d.getHours()+i);\n\t\t\t\tincorrect = checkFunc(d,d0);\n\t\t\t\ti += (inc>0?1:-1);\n\t\t\t}\n\t\t}\n\t},\n\tadd:function(date,inc,mode,copy){\n\t\tif (copy) date = this.copy(date);\n\t\tvar d = wDate.copy(date);\n\t\tswitch(mode){\n\t\t\tcase \"day\":\n\t\t\t\tdate.setDate(date.getDate()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"week\":\n\t\t\t\tdate.setDate(date.getDate()+7*inc);\n\t\t\t\tthis._correctDate(date,d,7*inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tdate.setMonth(date.getMonth()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"quarter\":\n\t\t\t\tdate.setMonth(date.getMonth() + inc * 3);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"year\":\n\t\t\t\tdate.setYear(date.getFullYear()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getFullYear() == d.getFullYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\tdate.setHours(date.getHours()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getHours() == d.getHours() && Date.datePart(d0,true)== Date.datePart(d,true);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"minute\": \tdate.setMinutes(date.getMinutes()+inc); break;\n\t\t\tdefault:\n\t\t\t\twDate.add[mode](date, inc, mode);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn date;\n\t},\n\tdatePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\n\t\t// workaround for non-existent hours\n\t\tvar d = this.copy(date);\n\t\td.setHours(0);\n\t\tif(d.getDate()!=date.getDate()){\n\t\t\tdate.setHours(1);\n\t\t}\n\t\telse{\n\t\t\tdate.setHours(0);\n\t\t}\n\n\t\tdate.setMinutes(0);\n\t\tdate.setSeconds(0);\n\t\tdate.setMilliseconds(0);\n\t\treturn date;\n\t},\n\ttimePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\t\treturn (date.valueOf()/1000 - date.getTimezoneOffset()*60)%86400;\n\t},\n\tcopy:function(date){\n\t\treturn new Date(date.valueOf());\n\t},\n\tequal:function(a,b){\n\t\tif (!a || !b) return false;\n\t\treturn a.valueOf() === b.valueOf();\n\t},\n\tisHoliday:function(day){ \n\t\tday = day.getDay();\n\t\tif (day === 0 || day==6) return \"webix_cal_event\"; \n\t}\n};\n\nexport default wDate;","import en from \"../i18n/en\";\nimport i18n from \"./i18n\";\n\nimport wDate from \"../core/date\";\nimport Number from \"../core/number\";\n\nimport {copy, isArray} from \"../webix/helpers\";\n\nfunction extend(base,source){\n\tfor (let method in source){\n\t\tif(typeof(source[method]) == \"object\" && !isArray(source[method])){\n\t\t\tif(!base[method]){\n\t\t\t\tbase[method] = {};\n\t\t\t}\n\t\t\textend(base[method],source[method]);\n\t\t}\n\t\telse\n\t\t\tbase[method] = source[method];\n\t}\n}\n\nconst helpers = [\"fullDateFormat\", \"timeFormat\", \"dateFormat\", \"longDateFormat\", \"parseFormat\", \"parseTimeFormat\"];\n\ni18n.setLocale = function(locale){\n\tif (typeof locale == \"string\"){\n\t\ti18n.locale = locale;\n\t\tlocale = i18n.locales[locale];\n\t}\n\tif (locale){\n\t\tconst origin = copy(en);\n\t\tlocale.priceSettings  = copy(locale.priceSettings || locale);\n\t\textend(origin, locale);\n\t\textend(i18n, origin);\n\t\tdelete i18n.calendar.monthShort_hash;\n\t\tdelete i18n.calendar.monthFull_hash;\n\t}\n\tfor( let i=0; i<helpers.length; i++){\n\t\tconst key = helpers[i];\n\t\tconst utc = i18n[key+\"UTC\"];\n\t\ti18n[key+\"Str\"] = wDate.dateToStr(i18n[key], utc);\n\t\ti18n[key+\"Date\"] = wDate.strToDate(i18n[key], utc);\n\t}\n\n\ti18n.intFormat = Number.numToStr({\n\t\tgroupSize: i18n.groupSize,\n\t\tgroupDelimiter: i18n.groupDelimiter,\n\t\tdecimalSize: 0,\n\t\tminusPosition: i18n.minusPosition,\n\t\tminusSign: i18n.minusSign\n\t});\n\n\tconst _price_settings = copy(i18n.priceSettings || i18n);\n\t_price_settings.priceTemplate = i18n.price;\n\n\ti18n.priceFormat = Number.numToStr(_price_settings);\n\ti18n.numberFormat = Number.format;\n};\n\ni18n.locales={ \"en-US\" : en };\ni18n.setLocale(\"en-US\");\n\nexport default i18n;","import {ajax} from \"../load/ajax\";\nimport promise from \"../thirdparty/promiz\";\nimport {bind} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\n\n\nvar error_key = \"__webix_remote_error\";\n\nfunction RemoteContext(url, config){\n\tthis._proxy = {};\n\tthis._queue = [];\n\tthis._url = url;\n\tthis._key = \"\";\n\n\tif (config)\n\t\tthis._process(config);\n\telse\n\t\tthis._ready = ajax(url)\n\t\t\t.then(function(data){\n\t\t\t\treturn data.text();\n\t\t\t})\n\t\t\t.then(bind(function(text){\n\t\t\t\ttext = text.split(\"/*api*/\")[1];\n\t\t\t\tthis._process(JSON.parse(text));\n\t\t\t\treturn this._proxy;\n\t\t\t}, this));\n}\nRemoteContext.prototype = {\n\t_process:function(config){\n\t\tif (config.$key)\n\t\t\tthis._key = config.$key;\n\t\tif (config.$vars)\n\t\t\tfor (var key in config.$vars)\n\t\t\t\tthis._proxy[key] = config.$vars[key];\n\n\t\tthis._parse(config, this._proxy, \"\");\n\t},\n\t_parse:function(api, obj, prefix){\n\t\tfor (var key in api){\n\t\t\tif (key === \"$key\" || key === \"$vars\") continue;\n\t\t\tvar val = api[key];\n\t\t\tif (typeof val == \"object\"){\n\t\t\t\tvar sub = obj[key] = {};\n\t\t\t\tthis._parse(val, sub, prefix+key+\".\");\n\t\t\t} else\n\t\t\t\tobj[key] = this._proxy_call(this, prefix+key);\n\t\t}\n\t},\n\t_call:function(name, args){\n\t\tvar def = this._deffer(this, name, args);\n\t\tthis._queue.push(def);\n\t\tthis._start_queue();\n\t\treturn def;\n\t},\n\t_start_queue:function(){\n\t\tif (!this._timer)\n\t\t\tthis._timer = setTimeout(bind(this._run_queue, this), 1);\n\t},\n\t_run_queue:function(){\n\t\tvar data = [], defs = this._queue;\n\t\tfor (var i=0; i<this._queue.length; i++){\n\t\t\tvar def = this._queue[i];\n\t\t\tif (def.$sync){\n\t\t\t\tdefs.splice(i,1); i--;\n\t\t\t} else\n\t\t\t\tdata.push({ name: def.$name, args: def.$args });\t\n\t\t}\n\n\t\tif (defs.length){\n\t\t\tvar request = ajax();\n\t\t\tvar pack = this._pack(data);\n\t\t\tcallEvent(\"onBeforeRemoteCall\", [request, pack, {}]);\n\t\t\tvar promise = request.post(this._url, pack)\n\t\t\t\t.then(function(response){\n\t\t\t\t\tvar data = response.json();\n\t\t\t\t\tvar results = data.data;\n\t\t\t\t\tfor (var i=0; i<results.length; i++){\n\t\t\t\t\t\tlet res = results[i];\n\t\t\t\t\t\tlet error = results[i] && results[i][error_key];\n\t\t\t\t\t\tif (error){\n\t\t\t\t\t\t\tcallEvent(\"onRemoteError\", [error]);\n\t\t\t\t\t\t\tdefs[i].reject(error);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdefs[i].resolve(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\n\t\t\t\t}, function(res){\n\t\t\t\t\tfor (var i=0; i<defs.length; i++)\n\t\t\t\t\t\tdefs[i].reject(res);\n\t\t\t\t\tthrow res;\n\t\t\t\t});\n\t\t\tcallEvent(\"onAfterRemoteCall\", [promise]);\n\t\t}\n\n\t\tthis._queue = [];\n\t\tthis._timer = null;\n\t},\n\t_sync:function(){\n\t\tvar value = null;\n\t\tthis.$sync = true;\n\t\tvar data = [{ name: this.$name, args: this.$args }];\n\n\t\ttry {\n\t\t\tvar request = ajax();\n\t\t\tvar pack = this.$context._pack(data);\n\t\t\tcallEvent(\"onBeforeRemoteCall\", [request, pack, { sync: true }]);\n\t\t\tvar xhr = request.sync().post(this.$context._url, pack);\n\t\t\tcallEvent(\"onAfterRemoteCall\", [null]);\n\t\t\tvalue = JSON.parse(xhr.responseText).data[0];\n\t\t\tif (value[error_key])\n\t\t\t\tvalue = null;\n\t\t} catch(e){} //eslint-disable-line\n\n\t\treturn value;\n\t},\n\t_deffer:function(master, name, args){\n\t\tvar pr = promise.defer();\n\t\tpr.sync = master._sync;\n\t\tpr.$name = name;\n\t\tpr.$args = args;\n\t\tpr.$context = this;\n\n\t\treturn pr;\n\t},\n\t_proxy_call:function(master, name){\n\t\treturn function(){\n\t\t\treturn master._call(name, [].slice.call(arguments));\n\t\t};\n\t},\n\t_getProxy:function(){\n\t\treturn this._ready || this._proxy;\n\t},\n\t_pack:function(obj){\n\t\treturn {\n\t\t\tkey: this._key,\n\t\t\tpayload:obj\n\t\t};\n\t}\n};\n\nfunction getApi(url, config){\n\tvar ctx = new RemoteContext(url, config);\n\tvar proxy = ctx._getProxy();\n\tfor (var key in proxy)\n\t\tremote[key] = proxy[key];\n\n\treturn proxy;\n}\n\nconst remote = function(url, config){\n\tif (typeof url === \"object\"){\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tconfig = url;\n\t\turl = scripts[scripts.length - 1].src;\n\t\treturn getApi(url, config);\n\t} else \n\t\treturn getApi(url, config);\n};\n\nexport default remote;","import {preventEvent} from \"../webix/html\";\nimport template from \"../webix/template\";\nimport {extend} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport wDate from \"../core/date\";\nimport {appendCssClass} from \"./helpers\";\n\nconst datafilter = {\n\ttextWaitDelay:500,\n\t\"summColumn\":{\n\t\tgetValue:function(node){ return node.innerText; },\n\t\tsetValue: function(){},\n\t\trefresh:function(master, node, value){ \n\t\t\tvar result = 0;\n\t\t\tmaster.mapCells(null, value.columnId, null, 1, function(value){\n\t\t\t\tvalue = value*1;\n\t\t\t\tif (!isNaN(value))\n\t\t\t\t\tresult+=value;\n\t\t\t}, true);\n\n\t\t\tif (value.format)\n\t\t\t\tresult = value.format(result);\n\t\t\tif (value.template)\n\t\t\t\tresult = value.template({value:result});\n\n\t\t\tnode.innerHTML = result;\n\t\t},\n\t\ttrackCells:true,\n\t\trender:function(master, config){ \n\t\t\tif (config.template)\n\t\t\t\tconfig.template = template(config.template);\n\t\t\treturn \"\"; \n\t\t}\n\t},\n\t\"masterCheckbox\":{\n\t\tgetValue:function(){},\n\t\tsetValue:function(){},\n\t\tgetHelper:function(node, config){\n\t\t\treturn {\n\t\t\t\tcheck:function(){ config.checked = false; node.onclick(); },\n\t\t\t\tuncheck:function(){ config.checked = true; node.onclick(); },\n\t\t\t\tisChecked:function(){ return config.checked; }\n\t\t\t};\n\t\t},\n\t\trefresh:function(master, node, config){\n\t\t\tnode.onclick = function(){\n\t\t\t\tthis.getElementsByTagName(\"input\")[0].checked = config.checked = !config.checked;\n\t\t\t\tvar column = master.getColumnConfig(config.columnId);\n\t\t\t\tvar checked = config.checked ? column.checkValue : column.uncheckValue;\n\t\t\t\tmaster.data.each(function(obj){\n\t\t\t\t\tobj[config.columnId] = checked;\n\t\t\t\t\tmaster.callEvent(\"onCheck\", [obj.id, config.columnId, checked]);\n\t\t\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"save\"]);\n\t\t\t\t});\n\t\t\t\tmaster.refresh();\n\t\t\t};\n\t\t},\n\t\trender:function(master, config){ \n\t\t\treturn \"<input type='checkbox' \"+(config.checked?\"checked='1'\":\"\")+\">\"; \n\t\t}\n\t},\n\t\"textFilter\":{\n\t\tgetInputNode:function(node){ return node.querySelector(\"input\") || { value: null }; },\n\t\tgetValue:function(node){ return this.getInputNode(node).value;  },\n\t\tsetValue:function(node, value){ this.getInputNode(node).value = value;  },\n\t\trefresh:function(master, node, value){\n\t\t\tnode.component = master._settings.id;\n\t\t\tmaster.registerFilter(node, value, this);\n\t\t\tnode._comp_id = master._settings.id;\n\t\t\tif (value.value && this.getValue(node) != value.value) this.setValue(node, value.value);\n\t\t\tnode.onclick = preventEvent;\n\t\t\t_event(node, \"keydown\", this._on_key_down);\n\t\t},\n\t\trender:function(master, config){\n\t\t\tif (this.init) this.init(config);\n\t\t\tconfig.css = appendCssClass(config.css, \"webix_ss_filter\");\n\t\t\treturn \"<input \"+(config.placeholder?(\"placeholder=\\\"\"+config.placeholder+\"\\\" \"):\"\")+\"type='text'>\"; \n\t\t},\n\t\t_on_key_down:function(e){\n\t\t\tvar id = this._comp_id;\n\n\t\t\t//tabbing through filters must not trigger filtering\n\t\t\t//we can improve this functionality by preserving initial filter value\n\t\t\t//and comparing new one with it\n\t\t\tif ((e.which || e.keyCode) == 9) return;\n\n\t\t\tif (this._filter_timer) window.clearTimeout(this._filter_timer);\n\t\t\tthis._filter_timer=window.setTimeout(function(){\n\t\t\t\tvar ui = $$(id);\n\t\t\t\t//ensure that ui is not destroyed yet\n\t\t\t\tif (ui) ui.filterByAll();\n\t\t\t},datafilter.textWaitDelay);\n\t\t}\n\t},\n\t\"selectFilter\":{\n\t\tgetInputNode:function(node){ return node.querySelector(\"select\") || { value: null}; },\n\t\tgetValue:function(node){ return this.getInputNode(node).value;  },\n\t\tsetValue:function(node, value){ this.getInputNode(node).value = value;  },\n\t\trefresh:function(master, node, value){\n\t\t\t//value - config from header { contet: }\n\t\t\tvalue.compare = value.compare || function(a,b){ return a == b; };\n\n\t\t\tnode.component = master._settings.id;\n\t\t\tmaster.registerFilter(node, value, this);\n\n\t\t\tconst data = datafilter._get_data(master, value);\n\t\t\tif (value.emptyOption !== false)\n\t\t\t\tdata.unshift({id:\"\", value:value.emptyOption||\"\"});\n\n\t\t\t//slow in IE\n\t\t\t//http://jsperf.com/select-options-vs-innerhtml\n\n\t\t\tlet select = document.createElement(\"select\");\n\t\t\tfor (let i = 0; i < data.length; i++){\n\t\t\t\tlet option = document.createElement(\"option\");\n\t\t\t\toption.value = data[i].id;\n\t\t\t\toption.text = data[i].value;\n\t\t\t\tselect.add(option);\n\t\t\t}\n\n\t\t\tnode.innerHTML = \"\";\n\t\t\tnode.appendChild(select);\n\n\t\t\tif (value.value) this.setValue(node, value.value);\n\t\t\tnode.onclick = preventEvent;\n\n\t\t\tselect._comp_id = master._settings.id;\n\t\t\t_event(select, \"change\", this._on_change);\n\t\t},\n\t\trender:function(master, config){\n\t\t\tif (this.init) this.init(config);\n\t\t\tconfig.css = appendCssClass(config.css, \"webix_ss_filter\");\n\t\t\treturn \"\";\n\t\t},\n\t\t_on_change:function(){ \n\t\t\t$$(this._comp_id).filterByAll();\n\t\t}\n\t},\n\t_get_data:function(master, value){\n\t\tlet data;\n\t\tlet options = value.options;\n\n\t\tif (options){\n\t\t\tdata = master._collectValues.call(options, \"id\", \"value\");\n\t\t} else\n\t\t\tdata = master.collectValues(value.columnId, value.collect);\n\n\t\treturn data;\n\t}\n};\n\ndatafilter.serverFilter = extend({\n\t$server: true,\n\t_on_key_down:function(e){\n\t\tvar id = this._comp_id,\n\t\t\tcode = (e.which || e.keyCode);\n\n\t\t//ignore tab and navigation keys\n\t\tif (code == 9 || ( code >= 33 &&  code <= 40)) return;\n\t\tif (this._filter_timer) window.clearTimeout(this._filter_timer);\n\t\tthis._filter_timer=window.setTimeout(function(){\n\t\t\t$$(id).filterByAll();\n\t\t},datafilter.textWaitDelay);\n\t}\n}, datafilter.textFilter);\n\ndatafilter.serverSelectFilter = extend({\n\t$server: true,\n\t_on_change:function(){\n\t\tvar id = this._comp_id;\n\t\t$$(id).filterByAll();\n\t}\n}, datafilter.selectFilter);\n\ndatafilter.numberFilter = extend({\n\tinit:function(config){\n\t\tconfig.prepare = function(value){\n\t\t\tvar equality = (value.indexOf(\"=\") != -1);\n\t\t\tvar intvalue = this.format(value);\n\t\t\tif (intvalue === \"\") return \"\";\n\n\t\t\tvar compare;\n\t\t\tif (value.indexOf(\">\") != -1){\n\t\t\t\tcompare = this._greater;\n\t\t\t}\n\t\t\telse if (value.indexOf(\"<\") != -1){\n\t\t\t\tcompare = this._lesser;\n\t\t\t}\n\n\t\t\tif (compare && equality) {\n\t\t\t\tconfig.compare = (a,b) => this._equal(a,b) || compare(a,b);\n\t\t\t} else {\n\t\t\t\tconfig.compare = compare || this._equal; \n\t\t\t}\n\n\t\t\treturn intvalue;\n\t\t};\n\t},\n\tformat:function(value){\n\t\treturn value.replace(/[^\\-.0-9]/g,\"\");\n\t},\n\t_greater:function(a,b){ return a*1>b; },\n\t_lesser:function(a,b){ return a!==\"\" && a*1<b; },\n\t_equal:function(a,b){ return a !== \"\" && a*1==b; }\n}, datafilter.textFilter);\n\ndatafilter.dateFilter = extend({\n\tformat:function(value){\n\t\tif (value === \"\") return \"\";\n\t\tvar date = new Date();\n\n\t\tif (value.indexOf(\"today\") != -1){\n\t\t\tdate = wDate.dayStart(date);\n\t\t} else if (value.indexOf(\"now\") == -1){\n\t\t\tvar parts = value.match(/[0-9]+/g);\n\t\t\tif (!parts||!parts.length) return \"\";\n\t\t\tif (parts.length < 3){\n\t\t\t\tparts.reverse();\n\t\t\t\tdate = new Date(parts[0], (parts[1]||1)-1, 1);\n\t\t\t} else\n\t\t\t\tdate = i18n.dateFormatDate(value.replace(/^[>< =]+/,\"\"));\n\t\t}\n\t\treturn date.valueOf();\n\t}\n}, datafilter.numberFilter);\n\nexport default datafilter;","/*German (Germany) locale*/\nconst de = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%n.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j. %F %Y\",\n\tfullDateFormat:\"%j. %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"{obj} €\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"],\n\t\tmonthShort:[\"Jan\",\"Feb\",\"Mrz\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],\n\t\tdayShort:[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],\n\t\thours: \"Stunden\",\n\t\tminutes: \"Minuten\",\n\t\tdone:\"Fertig\",\n\t\tclear: \"Entfernen\",\n\t\ttoday: \"Heute\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Seite\",\n\t\tof:\"von\"\n\t},\n\tPDFviewer:{\n\t\tof:\"von\",\n\t\tautomaticZoom:\"Automatisch Zoom\",\n\t\tactualSize:\"Aktuelles Ausmaß\",\n\t\tpageFit:\"Seite Ausmaß\",\n\t\tpageWidth:\"Seite Breite\",\n\t\tpageHeight:\"Seite Höhe\",\n\t\tenterPassword:\"Passwort eingeben\",\n\t\tpasswordError:\"Falsches passwort\"\n\t},\n\taria:{\n\t\tcalendar:\"Kalender\",\n\t\tincreaseValue:\"Wert erhöhen\",\n\t\tdecreaseValue:\"Wert verringern\",\n\t\tnavMonth:[\"Vorheriger Monat\", \"Nächsten Monat\"],\n\t\tnavYear:[\"Vorheriges Jahr\", \"Nächstes Jahr\"],\n\t\tnavDecade:[\"Zurück Jahrzehnt\", \"Als nächstes Jahrzehnt\"],\n\t\tdateFormat:\"%j. %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Stunden: %H\",\n\t\tminuteFormat:\"Minuten: %i\",\n\t\tremoveItem:\"Element entfernen\",\n\t\tpages:[\"Erste Seite\", \"Vorherige Seite\", \"Folgeseite\", \"Letzte Seite\"],\n\t\tpage:\"Seite\",\n\t\theadermenu:\"Titelmenü\",\n\t\topenGroup:\"Öffnen Spaltengruppe \",\n\t\tcloseGroup:\"Schließen Spaltengruppe \",\n\t\tcloseTab:\"Tab schließen\",\n\t\tshowTabs:\"Weitere Tabs\",\n\t\tresetTreeMap:\"Zurück zur ursprünglichen Ansicht\",\n\t\tnavTreeMap:\"Aufleveln\",\n\t\tnextTab:\"Weiter tab\",\n\t\tprevTab:\"Zurück tab\",\n\t\tmultitextSection:\"Element hinzufügen\",\n\t\tmultitextextraSection:\"Element entfernen\",\n\t\tshowChart:\"Chart anzeigen\",\n\t\thideChart:\"Chart verstecken\",\n\t\tresizeChart:\"Chart Größe ändern\"\n\t},\n\trichtext:{\n\t\tunderline: \"Unterstreichen\",\n\t\tbold: \"Fettgedruckt\",\n\t\titalic: \"Kursiv\"\n\t},\n\tcombo:{\n\t\tselect:\"Auswählen\",\n\t\tselectAll:\"Alles auswählen\",\n\t\tunselectAll:\"Alles widerrufen\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Abbrechen\"\n\t},\n\tcomments:{\n\t\tsend: \"Absenden\",\n\t\tconfirmMessage: \"Der Kommentar wird entfernt. Sind Sie sicher?\",\n\t\tedit: \"Redigieren\",\n\t\tremove: \"Löschen\",\n\t\tplaceholder: \"Geben Sie hier ein..\",\n\t\tmoreComments:\"Mehr Kommentare\"\n\t},\n\tfilter:{\n\t\tless: \"weniger\",\n\t\tlessOrEqual: \"weniger oder gleich\",\n\t\tgreater: \"mehr\",\n\t\tgreaterOrEqual: \"größer oder gleich\",\n\t\tcontains: \"enthält\",\n\t\tnotContains: \"nicht enthält\",\n\t\tequal: \"gleich\",\n\t\tnotEqual: \"ungleich\",\n\t\tbeginsWith: \"beginnt mit\",\n\t\tnotBeginsWith: \"nicht beginnt mit\",\n\t\tendsWith: \"endet mit\",\n\t\tnotEndsWith: \"nicht endet mit\",\n\t\tbetween: \"zwischen\",\n\t\tnotBetween: \"nicht zwischen\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Sekunden\"\n\t}\n};\n\nexport default de;","/*Spanish (Spain, International Sort) locale*/\nconst es = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\tdateFormat:\"%d/%n/%Y\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d %F %Y %G:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"{obj} €\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"enero\",\"febrero\",\"marzo\",\"abril\",\"mayo\",\"junio\",\"julio\",\"agosto\",\"septiembre\",\"octubre\",\"noviembre\",\"diciembre\"],\n\t\tmonthShort:[\"ene\",\"feb\",\"mar\",\"abr\",\"may\",\"jun\",\"jul\",\"ago\",\"sep\",\"oct\",\"nov\",\"dic\"],\n\t\tdayFull:[\"domingo\",\"lunes\",\"martes\",\"miércoles\",\"jueves\",\"viernes\",\"sábado\"],\n\t\tdayShort:[\"dom\",\"lun\",\"mar\",\"mié\",\"jue\",\"vie\",\"sáb\"],\n\t\thours: \"Horas\",\n\t\tminutes: \"Minutos\",\n\t\tdone:\"Listo\",\n\t\tclear: \"Reinicio\",\n\t\ttoday: \"Hoy\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Página\",\n\t\tof:\"de\"\n\t},\n\tPDFviewer:{\n\t\tof:\"de\",\n\t\tautomaticZoom:\"Zoom automático\",\n\t\tactualSize:\"Tamaño real\",\n\t\tpageFit:\"Tamaño de página\",\n\t\tpageWidth:\"Ancho de página\",\n\t\tpageHeight:\"Altura de la página\",\n\t\tenterPassword:\"Introduzca la contraseña\",\n\t\tpasswordError:\"Contraseña incorrecta\"\n\t},\n\taria:{\n\t\tcalendar:\"Сalendario\",\n\t\tincreaseValue:\"Aumentar el valor\",\n\t\tdecreaseValue:\"Disminuye el valor\",\n\t\tnavMonth:[\"Mes anterior\", \"Próximo mes\"],\n\t\tnavYear:[\"Año anterior\", \"Próximo año\"],\n\t\tnavDecade:[\"Década anterior\", \"Próxima década\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Horas: %G\",\n\t\tminuteFormat:\"Minutos: %i\",\n\t\tremoveItem:\"Retire el elemento\",\n\t\tpages:[\"Primera página\", \"Pagina anterior\", \"Siguiente página\", \"Última página\"],\n\t\tpage:\"Página\",\n\t\theadermenu:\"Menú de títulos\",\n\t\topenGroup:\"Grupo de columnas abiertas\",\n\t\tcloseGroup:\"Primer grupo de columnas\",\n\t\tcloseTab:\"Cerrar tab\",\n\t\tshowTabs:\"Mostrar más tabs\",\n\t\tresetTreeMap:\"Volver a la vista original\",\n\t\tnavTreeMap:\"Elevar a mismo nivel\",\n\t\tnextTab:\"Siguiente tab\",\n\t\tprevTab:\"Tab anterior\",\n\t\tmultitextSection:\"Añadir elemento\",\n\t\tmultitextextraSection:\"Retire el elemento\",\n\t\tshowChart:\"Espectáculo chart\",\n\t\thideChart:\"Esconder chart\",\n\t\tresizeChart:\"Cambiar el tamaño el chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Subrayar\",\n\t\tbold: \"Negrita\",\n\t\titalic: \"Itálico\"\n\t},\n\tcombo:{\n\t\tselect:\"Seleccionar\",\n\t\tselectAll:\"Seleccionar todo\",\n\t\tunselectAll:\"Deselecciona todo\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancelar\"\n\t},\n\tcomments:{\n\t\tsend: \"Enviar\",\n\t\tconfirmMessage: \"El comentario será eliminado. Estás seguro?\",\n\t\tedit: \"Corregir\",\n\t\tremove: \"Suprimir\",\n\t\tplaceholder: \"Escriba aquí..\",\n\t\tmoreComments:\"Más comentarios\"\n\t},\n\tfilter:{\n\t\tless: \"menos\",\n\t\tlessOrEqual: \"menor o igual\",\n\t\tgreater: \"mayor\",\n\t\tgreaterOrEqual: \"mayor o igual\",\n\t\tcontains: \"contiene\",\n\t\tnotContains: \"no contiene\",\n\t\tequal: \"igual\",\n\t\tnotEqual: \"no es igual\",\n\t\tbeginsWith: \"comienza con\",\n\t\tnotBeginsWith: \"no comienza con\",\n\t\tendsWith: \"termina con\",\n\t\tnotEndsWith: \"no termina con\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"no entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"segundos\"\n\t}\n};\n\nexport default es;","/*Italian (Italy) locale*/\nconst it = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j %F %Y\",\n\tfullDateFormat:\"%j %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"€ {obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"gennaio\",\"febbraio\",\"marzo\",\"aprile\",\"maggio\",\"giugno\",\"luglio\",\"agosto\",\"settembre\",\"ottobre\",\"novembre\",\"dicembre\"],\n\t\tmonthShort:[\"gen\",\"feb\",\"mar\",\"apr\",\"mag\",\"giu\",\"lug\",\"ago\",\"set\",\"ott\",\"nov\",\"dic\"],\n\t\tdayFull:[\"domenica\",\"lunedì\",\"martedì\",\"mercoledì\",\"giovedì\",\"venerdì\",\"sabato\"],\n\t\tdayShort:[\"dom\",\"lun\",\"mar\",\"mer\",\"gio\",\"ven\",\"sab\"],\n\t\thours: \"Orario\",\n\t\tminutes: \"Minuti\",\n\t\tdone:\"Pronto\",\n\t\tclear: \"Pulisci\",\n\t\ttoday: \"Oggi\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Pagina\",\n\t\tof:\"di\"\n\t},\n\tPDFviewer:{\n\t\tof:\"di\",\n\t\tautomaticZoom:\"Zoom automatico\",\n\t\tactualSize:\"Dimensione reale\",\n\t\tpageFit:\"Dimensioni della pagina\",\n\t\tpageWidth:\"Larghezza della pagina\",\n\t\tpageHeight:\"Altezza della pagina\",\n\t\tenterPassword:\"Inserisci la password\",\n\t\tpasswordError:\"Password errata\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendario\",\n\t\tincreaseValue:\"Aumenta il valore\",\n\t\tdecreaseValue:\"Riduci il valore\",\n\t\tnavMonth:[\"Il mese scorso\", \"Il prossimo mese\"],\n\t\tnavYear:[\"L'anno scorso\", \"L'anno prossimo\"],\n\t\tnavDecade:[\"Decennio precedente\", \"Prossimo decennio\"],\n\t\tdateFormat:\"%j %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Orario: %H\",\n\t\tminuteFormat:\"Minuti: %i\",\n\t\tremoveItem:\"Rimuovere l'elemento\",\n\t\tpages:[\"Prima pagina\", \"Pagina precedente\", \"Pagina successiva\", \"Ultima pagina\"],\n\t\tpage:\"Pagina\",\n\t\theadermenu:\"Menu del titolo\",\n\t\topenGroup:\"Aperto gruppo di colonne\",\n\t\tcloseGroup:\"Chiudi gruppo di colonne\",\n\t\tcloseTab:\"Chiudi tab\",\n\t\tshowTabs:\"Mostra più tabs\",\n\t\tresetTreeMap:\"Tornare alla vista originale\",\n\t\tnavTreeMap:\"Livello superiore\",\n\t\tnextTab:\"Tab successivo\",\n\t\tprevTab:\"Tab precedente\",\n\t\tmultitextSection:\"Aggiungi elemento\",\n\t\tmultitextextraSection:\"Rimuovere l'elemento\",\n\t\tshowChart:\"Mostrare grafico\",\n\t\thideChart:\"Nascondere grafico\",\n\t\tresizeChart:\"Ridimensionare grafico\"\n\t},\n\trichtext:{\n\t\tunderline: \"Sottolineare\",\n\t\tbold: \"Grassetto\",\n\t\titalic: \"Corsivo\"\n\t},\n\tcombo:{\n\t\tselect:\"Selezionare\",\n\t\tselectAll:\"Seleziona tutto\",\n\t\tunselectAll:\"Deseleziona tutto\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Annullare\"\n\t},\n\tcomments:{\n\t\tsend: \"Inviare\",\n\t\tconfirmMessage: \"Il commento verrà rimosso. Sei sicuro?\",\n\t\tedit: \"Correggere\",\n\t\tremove: \"Elimina\",\n\t\tplaceholder: \"Digitare qui..\",\n\t\tmoreComments:\"Altri commenti\"\n\t},\n\tfilter:{\n\t\tless: \"meno\",\n\t\tlessOrEqual: \"minore o uguale\",\n\t\tgreater: \"maggiore\",\n\t\tgreaterOrEqual: \"maggiore o uguale\",\n\t\tcontains: \"contiene\",\n\t\tnotContains: \"non contiene\",\n\t\tequal: \"uguale\",\n\t\tnotEqual: \"non uguale\",\n\t\tbeginsWith: \"inizia con\",\n\t\tnotBeginsWith: \"non inizia con\",\n\t\tendsWith: \"finisce con\",\n\t\tnotEndsWith: \"non termina con\",\n\t\tbetween: \"tra\",\n\t\tnotBetween: \"non tra\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"secondi\"\n\t}\n};\n\nexport default it;","const pt = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%d de %F de %Y\",\n\tfullDateFormat:\"%d de %F de %Y %G:%i\",\n\n\tam:null,\n\tpm:null,\n\tprice:\"R$ {obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tfileSize: [\"b\",\"Kb\",\"Mb\",\"Gb\",\"Tb\",\"Pb\",\"Eb\"],\n\tcalendar:{\n\t\tmonthFull:[\"Janeiro\",\"Fevereiro\",\"Março\",\"Abril\",\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\"],\n\t\tmonthShort:[\"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Domingo\",\"Segunda-Feira\",\"Terça-Feira\",\"Quarta-Feira\",\"Quinta-Feira\",\"Sexta-Feira\",\"Sábado\"],\n\t\tdayShort:[\"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"Sáb\"],\n\t\thours: \"Horas\",\n\t\tminutes: \"Minutos\",\n\t\tdone:\"Feito\",\n\t\tclear: \"Limpar\",\n\t\ttoday: \"Hoje\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Página\",\n\t\tof:\"de\"\n\t},\n\tPDFviewer:{\n\t\tof:\"de\",\n\t\tautomaticZoom:\"Zoom automático\",\n\t\tactualSize:\"Tamanho atual\",\n\t\tpageFit:\"Tamanho da página\",\n\t\tpageWidth:\"Largura da página\",\n\t\tpageHeight:\"Altura da página\",\n\t\tenterPassword:\"Digite a senha\",\n\t\tpasswordError:\"Senha incorreta\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendário\",\n\t\tincreaseValue:\"Aumentar o valor\",\n\t\tdecreaseValue:\"Diminuir o valor\",\n\t\tnavMonth:[\"Mês anterior\", \"Próximo mês\"],\n\t\tnavYear:[\"Ano anterior\", \"Próximo ano\"],\n\t\tnavDecade:[\"Década anterior\", \"Próxima década\"],\n\t\tdateFormat:\"%d de %F de %Y\",\n\t\tmonthFormat:\"%F de %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Horas: %G\",\n\t\tminuteFormat:\"Minutos: %i\",\n\t\tremoveItem:\"Remover elemento\",\n\t\tpages:[\"Primeira página\", \"Página anterior\", \"Próxima página\", \"Última página\"],\n\t\tpage:\"Página\",\n\t\theadermenu:\"Menu de títulos\",\n\t\topenGroup:\"Grupo coluna aberta\",\n\t\tcloseGroup:\"Fechar grupo de colunas\",\n\t\tcloseTab:\"Fechar tab\",\n\t\tshowTabs:\"Mostre mais tabs\",\n\t\tresetTreeMap:\"Мoltar à vista original\",\n\t\tnavTreeMap:\"Upar\",\n\t\tnextTab:\"Próximo tab\",\n\t\tprevTab:\"Anterior tab\",\n\t\tmultitextSection:\"Adicionar elemento\",\n\t\tmultitextextraSection:\"Remover elemento\",\n\t\tshowChart:\"Exposição chart\",\n\t\thideChart:\"Esconder chart\",\n\t\tresizeChart:\"Redimensionar chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Sublinhado\",\n\t\tbold: \"Negrito\",\n\t\titalic: \"itálico\"\n\t},\n\tcombo:{\n\t\tselect:\"Selecionar\",\n\t\tselectAll:\"Selecionar tudo\",\n\t\tunselectAll:\"Desmarque todos\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancelar\"\n\t},\n\tcomments:{\n\t\tsend: \"Enviar\",\n\t\tconfirmMessage: \"Comentário será removido. Você tem certeza?\",\n\t\tedit: \"Editar\",\n\t\tremove: \"Excluir\",\n\t\tplaceholder: \"Digite aqui..\",\n\t\tmoreComments:\"Mais comentários\"\n\t},\n\tfilter:{\n\t\tless: \"menos\",\n\t\tlessOrEqual: \"menor ou igual\",\n\t\tgreater: \"maior\",\n\t\tgreaterOrEqual: \"maior ou igual\",\n\t\tcontains: \"contém\",\n\t\tnotContains: \"não contém\",\n\t\tequal: \"igual\",\n\t\tnotEqual: \"não é igual\",\n\t\tbeginsWith: \"começa com\",\n\t\tnotBeginsWith: \"não começa com\",\n\t\tendsWith: \"termina com\",\n\t\tnotEndsWith: \"não termina com\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"não entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"segundos\"\n\t}\n};\n\nexport default pt;","/*Chinese (Simplified, PRC) locale*/\nconst zh = {\n\tgroupDelimiter:\",\",\n\tgroupSize:3,\n\tdecimalDelimiter:\".\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\tdateFormat:\"%Y/%m/%j\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%Y'年'%m'月'%j'日'\",\n\tfullDateFormat:\"%Y'年'%m'月'%j'日' %G:%i\",\n\tam:[\"上午\",\"上午\"],\n\tpm:[\"下午\",\"下午\"],\n\tprice:\"¥{obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\",\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\".\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"inside\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],\n\t\tmonthShort:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],\n\t\tdayFull:[\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"],\n\t\tdayShort:[\"周日\",\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\"],\n\t\thours: \"小时\",\n\t\tminutes: \"分钟\",\n\t\tdone:\"完成\",\n\t\tclear: \"清除\",\n\t\ttoday: \"今天\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"页\",\n\t\tof:\"从\"\n\t},\n\tPDFviewer:{\n\t\tof:\"从\",\n\t\tautomaticZoom:\"自动设置页面大小\",\n\t\tactualSize:\"实际尺寸\",\n\t\tpageFit:\"页面大小\",\n\t\tpageWidth:\"页面宽度\",\n\t\tpageHeight:\"页面高度\",\n\t\tenterPassword:\"输入密码\",\n\t\tpasswordError:\"密码错误\"\n\t},\n\taria:{\n\t\tcalendar:\"日历\",\n\t\tincreaseValue:\"增加值\",\n\t\tdecreaseValue:\"减少值\",\n\t\tnavMonth:[\"上个月\", \"下个月\"],\n\t\tnavYear:[\"去年\", \"明年\"],\n\t\tnavDecade:[\"过去十年\", \"下个十年\"],\n\t\tdateFormat:\"%Y'年'%m'月'%j'日'\",\n\t\tmonthFormat:\"%Y'年'%m'月\",\n\t\tyearFormat:\"%Y'年\",\n\t\thourFormat:\"小时: %G\",\n\t\tminuteFormat:\"分钟: %i\",\n\t\tremoveItem:\"删除项\",\n\t\tpages:[\"第一页\", \"上一页\", \"下一页\", \"最后一页\"],\n\t\tpage:\"页\",\n\t\theadermenu:\"标题菜单\",\n\t\topenGroup:\"打开列分组\",\n\t\tcloseGroup:\"关闭列分组\",\n\t\tcloseTab:\"关闭标签\",\n\t\tshowTabs:\"更多标签\",\n\t\tresetTreeMap:\"重置视图\",\n\t\tnavTreeMap:\"上一级\",\n\t\tnextTab:\"下一个标签\",\n\t\tprevTab:\"前一个标签\",\n\t\tmultitextSection:\"添加项\",\n\t\tmultitextextraSection:\"删除项\",\n\t\tshowChart:\"显示图表\",\n\t\thideChart:\"隐藏图表\",\n\t\tresizeChart:\"调整图表大小\"\n\t},\n\trichtext:{\n\t\tunderline: \"下划线\",\n\t\tbold: \"粗体\",\n\t\titalic: \"斜体\"\n\t},\n\tcombo:{\n\t\tselect:\"选择\",\n\t\tselectAll:\"全选\",\n\t\tunselectAll:\"取消全选\"\n\t},\n\tmessage:{\n\t\tok:\"确定\",\n\t\tcancel:\"取消\"  \n\t},\n\tcomments:{\n\t\tsend: \"发送\",\n\t\tconfirmMessage: \"你确定要删除评论吗?\",\n\t\tedit: \"编辑\",\n\t\tremove: \"删除\",\n\t\tplaceholder: \"在此输入..\",\n\t\tmoreComments:\"更多评论\"\n\t},\n\tfilter:{\n\t\tless: \"小于\",\n\t\tlessOrEqual: \"少于等于\",\n\t\tgreater: \"大于\",\n\t\tgreaterOrEqual: \"大于等于\",\n\t\tcontains: \"包含\",\n\t\tnotContains: \"不包含\",\n\t\tequal: \"等于\",\n\t\tnotEqual: \"不等于\",\n\t\tbeginsWith: \"开始于\",\n\t\tnotBeginsWith: \"不以开始\",\n\t\tendsWith: \"结束\",\n\t\tnotEndsWith: \"不以结束\",\n\t\tbetween: \"之间\",\n\t\tnotBetween: \"不介于\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"秒\"\n\t}\n};\n\nexport default zh;","const be = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%m.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} руб.\",\n\tpriceSettings:{\n\t\tgroupSize:3,\n\t\tgroupDelimiter:\" \",\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:0,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\n\tcalendar:{\n\t\tmonthFull:[\"Студзень\", \"Люты\", \"Сакавік\", \"Красавік\", \"Травень\", \"Чэрвень\", \"Ліпень\", \"Жнівень\", \"Верасень\", \"Кастрычнік\", \"Лістапад\", \"Снежань\"],\n\t\tmonthShort:[\"Студз\", \"Лют\", \"Сак\", \"Крас\", \"Трав\", \"Чэр\", \"Ліп\", \"Жнів\", \"Вер\", \"Каст\", \"Ліст\", \"Снеж\"],\n\t\tdayFull:[ \"Нядзеля\", \"Панядзелак\", \"Аўторак\", \"Серада\", \"Чацвер\", \"Пятніца\", \"Субота\"],\n\t\tdayShort:[\"Нд\", \"Пн\", \"Аўт\", \"Ср\", \"Чцв\", \"Пт\", \"Сб\"],\n\t\thours: \"Гадзіны\",\n\t\tminutes: \"Хвіліны\",\n\t\tdone: \"Гатова\",\n\t\ttoday: \"Cёння\",\n\t\tclear: \"Ачысціць\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Старонка\",\n\t\tof:\"з\"\n\t},\n\tPDFviewer:{\n\t\tof:\"з\",\n\t\tautomaticZoom:\"Аўтаматычны зум\",\n\t\tactualSize:\"Сапраўдны памер\",\n\t\tpageFit:\"Памер старонкі\",\n\t\tpageWidth:\"Шырыня старонкі\",\n\t\tpageHeight:\"Вышыня старонкі\",\n\t\tenterPassword:\"Увядзіце пароль\",\n\t\tpasswordError:\"Няправільны пароль\"\n\t},\n\taria:{\n\t\tcalendar:\"Каляндар\",\n\t\tincreaseValue:\"Павялічыць значэнне\",\n\t\tdecreaseValue:\"Паменшыць значэнне\",\n\t\tnavMonth:[\"Папярэдні месяц\", \"Наступны месяц\"],\n\t\tnavYear:[\"Папярэдні год\", \"Наступны год\"],\n\t\tnavDecade:[\"Папярэднія дзесяць год\", \"Наступныя дзесяць год\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Hours: %h\",\n\t\tminuteFormat:\"Гадзіны: %i\",\n\t\tremoveItem:\"Прыбраць элемент\",\n\t\tpages:[\"Першая старонка\", \"Папярэдняя старонка\", \"Наступная старонка\", \"Апошняя старонка\"],\n\t\tpage:\"Старонка\",\n\t\theadermenu:\"Меню загалоўка\",\n\t\topenGroup:\"Адкрыць групу слупкоў\",\n\t\tcloseGroup:\"Закрыць групу слупкоў\",\n\t\tcloseTab:\"Закрыць укладку\",\n\t\tshowTabs:\"Паказаць больш укладак\",\n\t\tresetTreeMap:\"Вярнуцца да першапачатковага выгляду\",\n\t\tnavTreeMap:\"Падняцца на ўзровень вышэй\",\n\t\tnextTab:\"Наступная ўкладка\",\n\t\tprevTab:\"Папярэдняя ўкладка\",\n\t\tmultitextSection:\"Дадаць элемент\",\n\t\tmultitextextraSection:\"Прыбраць элемент\",\n\t\tshowChart:\"Паказаць графік\",\n\t\thideChart:\"Схаваць графік\",\n\t\tresizeChart:\"Змяніць памер графіка\"\n\t},\n\trichtext:{\n\t\tunderline: \"Падкрэсліванне\",\n\t\tbold: \"Паўтлусты\",\n\t\titalic: \"Курсіў\"\n\t},\n\tcombo:{\n\t\tselect:\"Абраць\",\n\t\tselectAll:\"Абраць усё\",\n\t\tunselectAll:\"Ачысціць ўсе\"\n\t},\n\tmessage:{\n\t\tok:\"ОК\",\n\t\tcancel:\"Адмена\"\n\t},\n\tcomments:{\n\t\tsend: \"Даслаць\",\n\t\tconfirmMessage: \"Каментарый будзе выдалены. Вы ўпэўнены?\",\n\t\tedit: \"Рэдагаваць\",\n\t\tremove: \"Выдаліць\",\n\t\tplaceholder: \"Пішыце тут..\",\n\t\tmoreComments:\"Больш каментарыяў\"\n\t},\n\tfilter:{\n\t\tless: \"менш\",\n\t\tlessOrEqual: \"менш або роўна\",\n\t\tgreater: \"больш\",\n\t\tgreaterOrEqual: \"больш або роўна\",\n\t\tcontains: \"змяшчае\",\n\t\tnotContains: \"не змяшчае\",\n\t\tequal: \"роўныя\",\n\t\tnotEqual: \"не роўныя\",\n\t\tbeginsWith: \"пачынаецца з\",\n\t\tnotBeginsWith: \"не пачынаецца з\",\n\t\tendsWith: \"заканчваецца\",\n\t\tnotEndsWith: \"не сканчаецца\",\n\t\tbetween: \"паміж\",\n\t\tnotBetween: \"не паміж\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Секунды\"\n\t}\n};\n\nexport default be;","import {assert} from \"../webix/debug\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {insertBefore, remove} from \"../webix/html\";\nimport {extend, _power_array, isUndefined, copy} from \"../webix/helpers\";\nimport {_each} from \"../ui/helpers\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\n\nimport state from \"../core/state\";\nimport IdSpace from \"../core/idspace\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport base from \"./baseview\";\n\nconst api = {\n\tname:\"baselayout\",\n\trestore:function(state, factory, configOnly){\n\t\tvar out = this._restore(copy(state), factory);\n\t\tif (configOnly)\n\t\t\treturn out;\n\t\telse\n\t\t\tui((out.cols || out.rows), this);\n\t},\n\t_restore:function(state, factory){\n\t\tif (state.$layout){\n\t\t\tvar sub = state.cols || state.rows;\n\t\t\tfor (var i = 0; i < sub.length; i++) {\n\t\t\t\tsub[i] = this._restore(sub[i], factory);\n\t\t\t}\n\t\t} else {\n\t\t\treturn factory.call(this, state);\n\t\t}\n\n\t\treturn state;\n\t},\n\tserialize:function(serializer){\n\t\tvar out = [];\n\t\tvar childs = this.getChildViews();\n\n\t\tfor (var i=0; i<childs.length; i++){\n\t\t\tvar sub = childs[i];\n\t\t\tif (sub.movePortlet){\n\t\t\t\tvar child = sub.getChildViews();\n\t\t\t\tout.push(serializer.call(this, child[child.length-1]));\n\t\t\t} else if (sub.serialize){\n\t\t\t\t// some kind of layout\n\t\t\t\tout.push(sub.serialize(serializer, true));\n\t\t\t} else {\n\t\t\t\t// leaf view\n\t\t\t\tout.push(serializer.call(this, sub));\n\t\t\t}\n\t\t}\n\n\t\tvar obj = { $layout: true, type: this.config.type };\n\t\tif (this.config.rows)\n\t\t\tobj.rows = out;\n\t\telse\n\t\t\tobj.cols = out;\n\n\t\treturn obj;\n\t},\n\t$init:function(config){\n\t\tthis.$ready.push(this._parse_cells);\n\t\tthis._dataobj  = this._contentobj;\n\t\tthis._layout_sizes = [];\n\t\tthis._responsive = [];\n\t\tthis._padding = { top:0, left:0, right:0, bottom:0 };\n\n\t\tif (config.$topView){\n\t\t\tconfig.borderless = true;\n\t\t\tconfig._inner = { top:true, left:true, bottom:true, right:true };\n\t\t}\n\n\t\tif (config.isolate)\n\t\t\textend(this, IdSpace);\n\t},\n\trows_setter:function(value){\n\t\tthis._vertical_orientation = 1;\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\tcols_setter:function(value){\n\t\tthis._vertical_orientation = 0;\n\t\tthis.$view.style.whiteSpace = \"nowrap\";\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\t_remove:function(view){\n\t\tvar index = _power_array.find.call(this._cells, view);\n\t\tif(this._beforeRemoveView)\n\t\t\tthis._beforeRemoveView(index);\n\t\t_power_array.removeAt.call(this._cells, index);\n\t\tthis._fix_hidden_cells(true);\n\t},\n\t_fix_hidden_cells(resize){\n\t\tthis._hiddencells = 0;\n\t\tfor (let i = 0; i < this._cells.length; i++){\n\t\t\tconst cell = this._cells[i];\n\t\t\tif (cell._settings.hidden || cell.$nospace)\n\t\t\t\tthis._hiddencells++;\n\t\t}\n\n\t\tif (resize)\n\t\t\tthis.resizeChildren(true);\n\t},\n\t_replace:function(new_view,target_id){\n\t\tif (isUndefined(target_id)){\n\t\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\t\tthis._cells[i].destructor();\n\t\t\tthis._collection = new_view;\n\t\t\tthis._parse_cells();\n\t\t} else {\n\t\t\tvar source;\n\t\t\tif (typeof target_id == \"number\"){\n\t\t\t\tif (target_id<0 || target_id > this._cells.length)\n\t\t\t\t\ttarget_id = this._cells.length;\n\t\t\t\t_power_array.insertAt.call(this._cells, new_view, target_id);\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, this._cells[target_id]);\n\t\t\t} else {\n\t\t\t\tsource = $$(target_id);\n\t\t\t\ttarget_id = _power_array.find.call(this._cells, source);\n\t\t\t\tassert(target_id!=-1, \"Attempt to replace the non-existing view\");\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, source);\n\t\t\t\tsource.destructor();\t\n\t\t\t\tthis._cells[target_id] = new_view;\n\t\t\t}\n\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(new_view);\n\t\t}\n\t\tthis._fix_hidden_cells(true);\n\n\t\tvar form = this.elements ? this : this.getFormView();\n\t\tif (form && !this._fill_data) form._recollect_elements();\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\t_fix_vertical_layout:function(cell){\n\t\tcell._viewobj.style.display = \"inline-block\";\n\t\tcell._viewobj.style.verticalAlign = \"top\";\n\t},\n\taddView:function(view, index){\n\t\tif (isUndefined(index))\n\t\t\tindex = this._cells.length;\n\t\tvar top = this.$$ ? this : this.getTopParentView();\n\t\t\n\t\tstate._parent_cell = this;\n\t\tvar newui = (top && top.ui) ? top.ui(view, this, index) : ui(view, this, index);\n\t\tstate._parent_cell = null;\n\n\t\treturn newui._settings.id;\n\t},\n\tremoveView:function(id){\n\t\tvar view;\n\t\tif (typeof id != \"object\")\n\t\t\tview = $$(id) || (this.$$ ? this.$$(id) : null);\n\t\telse\n\t\t\tview = id;\n\n\t\tvar target = _power_array.find.call(this._cells, view);\n\t\tif (target >= 0){\n\t\t\tif (this._beforeRemoveView)\n\t\t\t\tthis._beforeRemoveView(target, view);\n\n\t\t\tvar form = this.elements ? this : this.getFormView();\n\n\t\t\tthis._cells.splice(target, 1);\n\t\t\tif (form)\n\t\t\t\t_each(view, function(sub){\n\t\t\t\t\tif (sub.name)\n\t\t\t\t\t\tdelete form.getCleanValues()[sub.config.name];\n\t\t\t\t}, form, true);\t\t\t\t\n\n\t\t\t\t\n\t\t\tview.destructor();\n\t\t\tthis._fix_hidden_cells(true);\n\t\t\t\n\t\t\tif (form)\n\t\t\t\tform._recollect_elements();\n\t\t} else\n\t\t\tassert(false, \"Attemp to remove not existing view: \"+id);\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\treconstruct:function(){\n\t\tthis._hiddencells = 0;\n\t\tthis._replace(this._collection);\n\t},\n\t_hide:function(obj, settings, silent){\n\t\tif (obj._settings.hidden) return;\n\t\tobj._settings.hidden = true;\n\t\tremove(obj._viewobj);\n\t\tthis._hiddencells++;\n\t\tif (!silent && !state._ui_creation)\n\t\t\tthis.resizeChildren(true);\t\n\t},\n\t_signal_hidden_cells:function(view){\n\t\tif (view.callEvent)\n\t\t\tview.callEvent(\"onViewShow\",[]);\n\t},\n\tresizeChildren:function(){\n\t\tif (state._freeze_resize) return;\n\n\t\tif (this._layout_sizes){\n\t\t\tvar parent = this.getParentView();\n\t\t\tif (parent){\n\t\t\t\tif (parent.resizeChildren)\n\t\t\t\t\treturn parent.resizeChildren();\n\t\t\t\telse\n\t\t\t\t\treturn parent.resize();\n\t\t\t}\n\t\t\t\t\n\t\t\tvar sizes = this.$getSize(0,0);\n\n\t\t\tvar x,y,nx,ny;\n\t\t\tnx = x = this._layout_sizes[0] || 0;\n\t\t\tny = y = this._layout_sizes[1] || 0;\n\n\t\t\t//for auto-fill content, use adjust strategy\n\t\t\tif ((sizes[1]>=100000 || sizes[3] >= 100000) && this._viewobj.parentNode){\n\t\t\t\t//in hidden container adjust doesn't work, so fallback to last known size\n\t\t\t\t//also, ensure that min-size is not violated\n\t\t\t\tnx = x = Math.max(sizes[0], (this._settings.width || this._viewobj.parentNode.offsetWidth || x || 0));\n\t\t\t\tny = y = Math.max(sizes[2], (this._settings.height || this._viewobj.parentNode.offsetHeight || y || 0));\n\t\t\t}\n\t\t\t\n\t\t\tif (!parent){\n\t\t\t\t//minWidth\n\t\t\t\tif (sizes[0]>x) nx = sizes[0];\n\t\t\t\t//minHeight\n\t\t\t\tif (sizes[2]>y) ny = sizes[2];\n\n\t\t\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\t\t\t\t//maxWidth rule\n\t\t\t\tif (!fullscreen && x>sizes[1]) nx = sizes[1];\n\t\t\t\t//maxHeight rule\n\t\t\t\tif (!fullscreen && y>sizes[3]) ny = sizes[3];\n\n\t\t\t\tthis.$setSize(nx,ny);\n\t\t\t} else\n\t\t\t\tthis._set_child_size(x,y);\n\n\t\t\tif (state._responsive_exception){\n\t\t\t\tstate._responsive_exception = false;\n\t\t\t\tthis.resizeChildren();\n\t\t\t}\n\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t},\n\tgetChildViews:function(){\n\t\treturn this._cells;\n\t},\n\tindex:function(obj){\n\t\tif (obj._settings)\n\t\t\tobj = obj._settings.id;\n\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\tif (this._cells[i]._settings.id == obj)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\t_insertBeforeView:function(view, before){\n\t\tif (before){\n\t\t\tif (before._settings.hidden || view === before){\n\t\t\t\t//index of sibling cell, next to which new item will appear\n\t\t\t\tvar index = this.index(before)+1;\n\t\t\t\t//locate nearest visible cell\n\t\t\t\twhile (this._cells[index] && this._cells[index]._settings.hidden) index++;\n\t\t\t\tbefore = this._cells[index] ? this._cells[index]._viewobj : null;\n\t\t\t} else {\n\t\t\t\tbefore = before._viewobj;\n\t\t\t}\n\t\t}\n\t\tinsertBefore(view._viewobj, before, (this._dataobj||this._viewobj));\n\t},\n\t_show:function(obj, settings, silent){\n\t\tif (!obj._settings.hidden) return;\n\t\tthis._insertBeforeView(obj, obj);\n\t\tobj._settings.hidden = false;\n\n\t\tthis._hiddencells--;\n\n\t\tif (!silent){\n\t\t\tthis.resizeChildren(true);\n\t\t\tif (obj.refresh)\n\t\t\t\tobj.refresh();\n\t\t}\n\n\t\tif (obj.callEvent){\n\t\t\tobj.callEvent(\"onViewShow\", []);\n\t\t\t_each(obj, this._signal_hidden_cells);\n\t\t}\n\t},\n\tshowBatch:function(name, mode){\n\t\tvar preserve = typeof mode != \"undefined\";\n\t\tmode = mode !== false;\n\n\t\tif (!preserve){\n\t\t\tif (this._settings.visibleBatch == name ) return;\n\t\t\tthis._settings.visibleBatch = name;\n\t\t} else \n\t\t\tthis._settings.visibleBatch = \"\";\n\n\t\tvar show = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\tif (!this._cells[i]._settings.batch && !this._cells[i]._settings.hidden) \n\t\t\t\tshow.push(this._cells[i]);\n\t\t\telse if (this._cells[i]._settings.batch == name){\n\t\t\t\tif (mode)\n\t\t\t\t\tshow.push(this._cells[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t\t} else if (!preserve)\n\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t}\n\n\t\tfor (let i=0; i < show.length; i++){\n\t\t\tthis._show(show[i], null, true);\n\t\t\tshow[i]._render_hidden_views();\n\t\t}\n\t\t\t\n\t\tthis.resizeChildren(true);\n\t},\n\t_parse_cells:function(collection){\n\t\tthis._cells=[];\n\n\t\tassert(collection,this.name+\" was incorrectly defined. <br><br> You have missed rows|cols|cells|elements collection\"); \n\t\tfor (var i=0; i<collection.length; i++){\n\t\t\tstate._parent_cell = this;\n\t\t\tif (!collection[i]._inner)\n\t\t\t\tcollection[i].borderless = true;\n\n\t\t\tthis._cells[i]=ui._view(collection[i], this);\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(this._cells[i]);\n\t\t\t\n\t\t\tif (this._settings.visibleBatch && this._settings.visibleBatch != this._cells[i]._settings.batch && this._cells[i]._settings.batch){\n\t\t\t\tthis._cells[i]._settings.hidden = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (!this._cells[i]._settings.hidden){\n\t\t\t\t(this._dataobj||this._contentobj).appendChild(this._cells[i]._viewobj);\n\t\t\t}\n\t\t}\n\n\t\tthis._fix_hidden_cells();\n\t\tif (this._parse_cells_ext_end)\n\t\t\tthis._parse_cells_ext_end(collection);\t\n\t},\n\t_fix_container_borders:function(style, inner){\n\t\tif (inner.top) \n\t\t\tstyle.borderTopWidth=\"0px\";\n\t\tif (inner.left) \n\t\t\tstyle.borderLeftWidth=\"0px\";\n\t\tif (inner.right) \n\t\t\tstyle.borderRightWidth=\"0px\";\n\t\tif (inner.bottom) \n\t\t\tstyle.borderBottomWidth=\"0px\";\n\t},\n\t_bubble_size:function(prop, size, vertical){\n\t\tif (this._vertical_orientation != vertical)\n\t\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\t\tthis._cells[i]._settings[prop] = size;\n\t\t\t\tif (this._cells[i]._bubble_size)\n\t\t\t\t\tthis._cells[i]._bubble_size(prop, size, vertical);\n\t\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tif (DEBUG) debug_size_box_start(this, true);\n\t\tvar minWidth = 0; \n\t\tvar maxWidth = 100000;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\t\tif (this._vertical_orientation) maxHeight=0; else maxWidth = 0;\n\t\t\n\t\tvar fixed = 0;\n\t\tvar fixed_count = 0;\n\t\tvar gravity = 0;\n\t\tthis._sizes=[];\n\t\tlet hiddenCount = 0;\n\n\t\tfor (var i=0; i < this._cells.length; i++) {\n\t\t\t//ignore hidden cells\n\t\t\tif(this._cells[i]._settings.hidden){\n\t\t\t\thiddenCount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar sizes = this._sizes[i] = this._cells[i].$getSize(0,0);\n\n\t\t\tif(this._cells[i]._hiddenByCells)\n\t\t\t\thiddenCount++;\n\n\t\t\tif (this._cells[i].$nospace){\n\t\t\t\tfixed_count++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[0]>minWidth) minWidth = sizes[0];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[1]<maxWidth) maxWidth = sizes[1];\n\n\t\t\t\tminHeight += sizes[2];\n\t\t\t\tmaxHeight += sizes[3];\n\n\t\t\t\tif (sizes[2] == sizes[3] && sizes[2] != -1){ fixed+=sizes[2]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t} else {\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[2]>minHeight) minHeight = sizes[2];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[3]<maxHeight) maxHeight = sizes[3];\n\n\t\t\t\tminWidth += sizes[0];\n\t\t\t\tmaxWidth += sizes[1];\n\n\t\t\t\tif (sizes[0] == sizes[1] && sizes[0] != -1){ fixed+=sizes[0]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t}\n\t\t}\n\n\t\tif(hiddenCount == this._cells.length){\n\t\t\tthis._hiddenByCells = true;\n\t\t\tconst pView = this.getParentView();\n\t\t\tif(pView && pView._collection){\n\t\t\t\tif (pView._vertical_orientation){\n\t\t\t\t\tmaxHeight = 0;\n\t\t\t\t\tmaxWidth = 100000;\n\t\t\t\t\tdy = 0;\n\t\t\t\t}else{\n\t\t\t\t\tmaxHeight = 100000;\n\t\t\t\t\tmaxWidth = 0;\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tdelete this._hiddenByCells;\n\n\t\tif (minHeight>maxHeight)\n\t\t\tmaxHeight = minHeight;\n\t\tif (minWidth>maxWidth)\n\t\t\tmaxWidth = minWidth;\n\n\t\tthis._master_size = [fixed, this._cells.length - fixed_count, gravity];\n\t\tthis._desired_size = [minWidth+dx, minHeight+dy];\n\n\t\t//get layout sizes\n\t\tvar self_size = base.api.$getSize.call(this, 0, 0);\n\t\t//use child settings if layout's one was not defined\n\t\tif (self_size[1] >= 100000) self_size[1]=0;\n\t\tif (self_size[3] >= 100000) self_size[3]=0;\n\n\t\tself_size[0] = (self_size[0] || minWidth ) +dx;\n\t\tself_size[1] = Math.max(self_size[0], (self_size[1] || maxWidth ) +dx);\n\t\tself_size[2] = (self_size[2] || minHeight) +dy;\n\t\tself_size[3] = Math.max(self_size[2], (self_size[3] || maxHeight) +dy);\n\n\t\tif (DEBUG) debug_size_box_end(this, self_size);\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tself_size[0] = 0;\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tthis._set_child_size(x,y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size_a:function(sizes, min, max){\n\t\tmin = sizes[min]; max = sizes[max];\n\t\tlet height = min;\n\n\t\tif (min != max){\n\t\t\tconst ps = this._set_size_delta * sizes[4]/this._set_size_gravity;\n\t\t\tif (ps < min){\n\t\t\t\theight = min;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else  if (ps > max){\n\t\t\t\theight = max;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn height;\n\t},\n\t_responsive_hide:function(cell, mode){\n\t\tvar target =  $$(mode);\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.hide();\n\t\t\tcell._responsive_marker = \"hide\";\n\t\t} else{\n\t\t\t//for SideBar in Webix 1.9\n\t\t\tif (!target)\n\t\t\t\ttarget = ui({ view:\"popup\", body:[{}]});\n\n\t\t\tcell._responsive_width = cell._settings.width;\n\t\t\tcell._responsive_height = cell._settings.height;\n\t\t\tcell._responsive_marker = target._settings.id;\n\t\t\tcell._settings.width = 0;\n\t\t\tif (!cell._settings.height)\n\t\t\t\tcell._settings.autoheight = true;\n\n\t\t\tui(cell, target, this._responsive.length);\n\t\t}\n\n\t\tthis._responsive.push(cell);\n\t},\n\t_responsive_show:function(cell){\n\t\tvar target = cell._responsive_marker;\n\t\tcell._responsive_marker = 0;\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.show();\n\t\t} else {\n\t\t\tcell._settings.width = cell._responsive_width;\n\t\t\tcell._settings.height = cell._responsive_height;\n\t\t\tdelete cell._settings.autoheight;\n\n\t\t\tvar index = 0;\n\t\t\twhile (this._cells[index] && this._cells[index]._settings.responsiveCell === false) index++;\n\t\t\tui(cell, this, index);\n\t\t}\n\t\tthis._responsive.pop();\n\t},\n\t_responsive_cells:function(x){\n\t\tstate._responsive_tinkery = true;\n\t\tif (x + this._padding.left + this._padding.right + this._margin * (this._cells.length-1)< this._desired_size[0]){\n\t\t\tvar max = this._cells.length - 1;\n\t\t\tfor (var i = 0; i < max; i++){\n\t\t\t\tlet cell = this._cells[i];\n\t\t\t\tif (!cell._responsive_marker){\n\t\t\t\t\tif (cell._settings.responsiveCell !== false){\n\t\t\t\t\t\tthis._responsive_hide(cell, this._settings.responsive);\n\t\t\t\t\t\tcallEvent(\"onResponsiveHide\", [cell._settings.id]);\n\t\t\t\t\t\tstate._responsive_exception = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmax = this._cells.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else  if (this._responsive.length){\n\t\t\tlet cell = this._responsive[this._responsive.length-1];\n\t\t\tvar dx = cell._responsive_marker == \"hide\" ? 0 : cell._responsive_width;\n\t\t\tvar px = cell.$getSize(dx,0);\n\t\t\tif (px[0] + this._desired_size[0] + this._margin + 20 <= x ){\n\t\t\t\tthis._responsive_show(cell);\n\t\t\t\tcallEvent(\"onResponsiveShow\", [cell._settings.id]);\n\t\t\t\tstate._responsive_exception = true;\n\t\t\t}\n\t\t}\n\n\t\tstate._responsive_tinkery = false;\n\t},\n\t_set_child_size:function(x,y){ \n\t\tstate._child_sizing_active = (state._child_sizing_active||0)+1;\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tthis._responsive_cells(x,y);\n\n\n\t\tthis._set_size_delta = (this._vertical_orientation?y:x) - this._master_size[0];\n\t\tthis._set_size_gravity = this._master_size[2];\n\t\tlet width = x; let height = y;\n\n\t\tconst auto = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\t//ignore hidden cells\n\t\t\tif (this._cells[i]._settings.hidden || !this._sizes[i])\n\t\t\t\tcontinue;\n\n\t\t\tconst sizes = this._sizes[i];\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\theight = this._set_child_size_a(sizes,2,3);\n\t\t\t\tif (height < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t} else {\n\t\t\t\twidth = this._set_child_size_a(sizes,0,1);\n\t\t\t\tif (width < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t}\n\t\t\tthis._cells[i].$setSize(width,height);\n\t\t}\n\n\t\tconst newSizes = [];\n\t\tconst dIndex = this._vertical_orientation ? 1 : 0;\n\t\tconst maxSizeIndex = this._vertical_orientation ? 3 : 1;\n\t\tlet maxSizeDelta = 0;\n\t\tfor (let i = 0; i < auto.length; i++){\n\t\t\tconst index = auto[i].oldIndex;\n\t\t\tconst sizes = this._sizes[index];\n\t\t\tconst dx = Math.round(this._set_size_delta * sizes[4]/this._set_size_gravity);\n\t\t\tthis._set_size_delta -= dx; this._set_size_gravity -= sizes[4];\n\t\t\tconst size = [];\n\t\t\tsize[dIndex] = dx;\n\t\t\tsize[1 - dIndex] = dIndex ? width : height;\n\t\t\tnewSizes.push(size);\n\t\t\t// check and apply size limit ( maxWidth / maxHeight )\n\t\t\tconst maxSize = sizes[maxSizeIndex];\n\t\t\tif (maxSize > -1 && dx > maxSize ) {\n\t\t\t\tmaxSizeDelta += dx - maxSize;\n\t\t\t\tsize[dIndex] = maxSize;\n\t\t\t}\n\t\t}\n\t\t// increase size of a cell without a size limit by maxSizeDelta\n\t\tfor (let i = 0; i < auto.length && maxSizeDelta; i++) {\n\t\t\tconst index = auto[i].oldIndex;\n\t\t\tconst sizes = this._sizes[index];\n\t\t\tif (sizes[maxSizeIndex] >  newSizes[i][dIndex] + maxSizeDelta) {\n\t\t\t\tnewSizes[i][dIndex] += maxSizeDelta;\n\t\t\t\tmaxSizeDelta = 0;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < auto.length; i++){\n\t\t\tauto[i].view.$setSize(newSizes[i][0],newSizes[i][1]);\n\t\t}\n\n\t\tstate._child_sizing_active -= 1;\n\t},\n\t_next:function(obj, mode){\n\t\tconst index = this.index(obj);\n\t\tif (index == -1) return null;\n\t\treturn this._cells[index+mode];\n\t}, \n\t_first:function(){\n\t\treturn this._cells[0];\n\t}\n};\n\nconst view = protoUI(api, EventSystem, base.view);\nexport default { api, view };","import {protoUI} from \"../ui/core\";\nimport state from \"../core/state\";\nimport {$active} from \"../webix/skin\";\n\nimport {clone, extend} from \"../webix/helpers\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\n\nimport base from \"./baselayout\";\nimport baseview from \"./baseview\";\nimport viewA from \"./view\";\n\nconst api = {\n\tname:\"layout\",\n\t$init:function(){\n\t\tthis._hiddencells = 0;\n\t},\n\tdefaults:{\n\t\ttype:\"line\"\n\t},\n\t_parse_cells:function(){\n\t\tif (this._parse_cells_ext)\n\t\t\tcollection = this._parse_cells_ext(collection);\n\n\t\tif (!this._parse_once){\n\t\t\tthis._viewobj.className += \" webix_layout_\"+(this._settings.type||\"\");\n\t\t\tthis._parse_once = 1;\n\t\t}\n\n\t\tif (this._settings.margin !== undefined)\n\t\t\tthis._margin = this._settings.margin;\n\n\t\tif (this._settings.padding !== undefined && typeof this._settings.padding !== \"object\" )\n\t\t\tthis._padding.left = this._padding.right = this._padding.top = this._padding.bottom = this._settings.padding;\n\t\tif (this._settings.paddingX !== undefined)\n\t\t\tthis._padding.left = this._padding.right = this._settings.paddingX;\n\t\tif (this._settings.paddingY !== undefined)\n\t\t\tthis._padding.top = this._padding.bottom = this._settings.paddingY;\n\t\tif (typeof this._settings.padding === \"object\")\n\t\t\textend(this._padding, this._settings.padding, true);\n\n\t\tif (this._padding.left || this._padding.right || this._padding.top || this._padding.bottom)\n\t\t\tthis._padding.defined = true;\n\n\t\t//if layout has paddings we need to set the visible border \n\t\tif (this._hasBorders() && !this._settings.borderless){\n\t\t\tthis._contentobj.style.borderWidth=\"1px\";\n\t\t\t//if layout has border - normal bordering rules are applied\n\t\t\tthis._render_borders = true;\n\t\t}\n\t\n\t\t\n\t\tvar collection = this._collection;\n\t\n\t\tif (this._settings.borderless)\n\t\t\tthis._settings._inner = { top:true, left:true, right:true, bottom:true};\n\n\t\tthis._beforeResetBorders(collection);\n\t\tbase.api._parse_cells.call(this, collection);\n\t\tthis._afterResetBorders(collection);\n\t},\n\t$getSize:function(dx, dy){\n\t\tdx=dx||0; dy=dy||0;\n\n\t\tvar correction = this._margin*(this._cells.length-this._hiddencells-1);\n\t\tif (this._render_borders || this._hasBorders()){\n\t\t\tvar _borders = this._settings._inner;\n\t\t\tif (_borders){\n\t\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t\t}\n\t\t}\n\n\t\tif (!this._settings.height)\n\t\t\tdy += this._padding.top + this._padding.bottom + (this._vertical_orientation ? correction : 0);\n\n\t\tif (!this._settings.width)\n\t\t\tdx += this._padding.left + this._padding.right + (this._vertical_orientation ? 0 : correction);\n\t\t\t\t\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tif (this._hasBorders()||this._render_borders)\n\t\t\tviewA.api.$setSize.call(this,x,y);\n\t\telse\t\n\t\t\tbaseview.api.$setSize.call(this,x,y);\n\n\t\t//form with scroll\n\t\ty = this._content_height;\n\t\tx = this._content_width;\n\n\t\tvar config = this._settings;\n\t\tif (config.scroll){\n\t\t\ty = Math.max(y, this._desired_size[1]);\n\t\t\tx = Math.max(x, this._desired_size[0]);\n\t\t}\n\t\t\n\t\tthis._set_child_size(x, y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size:function(x,y){\n\t\tvar correction = this._margin*(this._cells.length-this._hiddencells-1);\n\n\t\ty -= this._padding.top + this._padding.bottom;\n\t\tx -= this._padding.left + this._padding.right;\n\t\tif (this._vertical_orientation)\n\t\t\ty-=correction;\n\t\telse x-=correction;\n\n\t\treturn base.api._set_child_size.call(this, x, y);\n\t},\n\tresizeChildren:function(structure_changed){ \n\t\tif (structure_changed){\n\t\t\tthis._last_size = null; //forces children resize\n\t\t\tvar config = [];\n\t\t\tfor (var i = 0; i < this._cells.length; i++){\n\t\t\t\tvar cell = this._cells[i];\n\t\t\t\tconfig[i] = cell._settings;\n\t\t\t\tvar n = ((cell._layout_sizes && !cell._render_borders) || cell._settings.borderless)?\"0px\":\"1px\";\n\n\t\t\t\tcell._viewobj.style.borderTopWidth=cell._viewobj.style.borderBottomWidth=cell._viewobj.style.borderLeftWidth=cell._viewobj.style.borderRightWidth=n;\n\t\t\t}\n\t\t\t\n\t\t\tthis._beforeResetBorders(config);\n\t\t\tfor (let i=0; i<config.length; i++)\n\t\t\t\tif (config[i].borderless && this._cells[i]._set_inner)\n\t\t\t\t\tthis._cells[i]._set_inner(config[i]);\n\t\t\tthis._afterResetBorders(this._cells);\n\t\t}\n\n\t\tif (state._responsive_tinkery) return;\n\t\tbase.api.resizeChildren.call(this);\n\t},\n\t_hasBorders:function(){\n\t\treturn this._padding.defined && this._margin>0 && !this._cleanlayout;\n\t},\n\t_beforeResetBorders:function(collection){\n\t\tif (this._hasBorders() && (!this._settings.borderless || this._settings.type == \"space\")){\n\t\t\tfor (let i=0; i < collection.length; i++){\n\t\t\t\tif (!collection[i]._inner || !collection[i].borderless)\n\t\t\t\t\tcollection[i]._inner={ top:false, left:false, right:false, bottom:false};\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=0; i < collection.length; i++)\n\t\t\t\tcollection[i]._inner=clone(this._settings._inner);\n\t\t\tvar mode = false;\n\t\t\tif (this._cleanlayout)\n\t\t\t\tmode = true;\n\t\t\t\t\n\t\t\tvar maxlength = collection.length;\t\t\t\t\n\t\t\tif (this._vertical_orientation){\n\t\t\t\tfor (let i=1; i < maxlength-1; i++)\n\t\t\t\t\tcollection[i]._inner.top = collection[i]._inner.bottom = mode;\n\t\t\t\tif (maxlength>1){\n\t\t\t\t\tif (this._settings.type!=\"head\")\n\t\t\t\t\t\tcollection[0]._inner.bottom = mode;\n\n\t\t\t\t\twhile (collection[maxlength-1].hidden && maxlength>1)\n\t\t\t\t\t\tmaxlength--;\n\t\t\t\t\tif (maxlength>0)\n\t\t\t\t\t\tcollection[maxlength-1]._inner.top = mode;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let i=1; i < maxlength-1; i++)\n\t\t\t\t\tcollection[i]._inner.left = collection[i]._inner.right= mode;\n\t\t\t\tif (maxlength>1){\n\t\t\t\t\tif (this._settings.type!=\"head\")\n\t\t\t\t\t\tcollection[0]._inner.right= mode;\n\t\t\t\t\tcollection[maxlength-1]._inner.left = mode;\n\n\t\t\t\t\twhile (maxlength>1 && collection[maxlength-1].hidden)\n\t\t\t\t\t\tmaxlength--;\n\t\t\t\t\tif (maxlength>0)\n\t\t\t\t\t\tcollection[maxlength-1]._inner.left = mode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t_afterResetBorders:function(collection){\n\t\tvar start = 0; \n\t\tfor (let i=0; i<collection.length; i++){\n\t\t\tvar cell = this._cells[i];\n\n\t\t\tvar s_inner = cell._settings._inner;\n\t\t\tif (cell._settings.hidden && this._cells[i+1]){\n\t\t\t\tvar s_next = this._cells[i+1]._settings._inner;\n\t\t\t\tif (!s_inner.top)\n\t\t\t\t\ts_next.top = false;\n\t\t\t\tif (!s_inner.left)\n\t\t\t\t\ts_next.left = false;\n\n\t\t\t\tif (i==start) start++;\n\t\t\t}\n\t\t\tthis._fix_container_borders(cell._viewobj.style, cell._settings._inner);\n\t\t}\n\n\t\tvar style = this._vertical_orientation?\"marginLeft\":\"marginTop\";\n\t\tvar contrstyle = this._vertical_orientation?\"marginTop\":\"marginLeft\";\n\t\tvar padding = this._vertical_orientation?this._padding.left:this._padding.top;\n\t\tvar contrpadding = this._vertical_orientation?this._padding.top:this._padding.left;\n\n\t\t//add top offset to all\n\t\tfor (let i=0; i<collection.length; i++)\n\t\t\tthis._cells[i]._viewobj.style[style] = padding + \"px\";\n\n\t\t//add left offset to first cell\n\t\tif (this._cells.length)\n\t\t\tthis._cells[start]._viewobj.style[contrstyle] = contrpadding + \"px\";\n\n\t\t//add offset between cells\n\t\tfor (var index=start+1; index<collection.length; index++)\n\t\t\tthis._cells[index]._viewobj.style[contrstyle]=this._margin+\"px\";\n\t\t\n\t},\n\ttype_setter:function(value){\n\t\tthis._margin = (typeof this._margin_set[value] !== \"undefined\"? this._margin_set[value]: this._margin_set[\"line\"]);\n\t\tthis._padding.left = this._padding.right = this._padding.top = this._padding.bottom =\n\t\t\t(typeof this._margin_set[value] !== \"undefined\") ? this._padding_set[value] : this._padding_set[\"line\"];\n\t\tthis._cleanlayout = (value==\"material\" || value==\"clean\");\n\t\tif (value == \"material\")\n\t\t\tthis._settings.borderless = true;\n\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\tthis._margin_set = $active.layoutMargin;\n\t\tthis._padding_set = $active.layoutPadding;\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default { api, view };\n\n//not necessary anymore\n//preserving for backward compatibility\nview.call(-1);","import base from \"../views/view\";\nimport AutoTooltip from \"../core/autotooltip\";\nimport EditAbility from \"../core/editability\";\nimport MapCollection from \"../core/mapcollection\";\nimport MouseEvents from \"../core/mouseevents\";\nimport Scrollable from \"../core/scrollable\";\nimport SingleRender from \"../core/singlerender\";\nimport AtomDataLoader from \"../core/atomdataloader\";\nimport EventSystem from \"../core/eventsystem\";\nimport {locate, createCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\nimport {uid, extend, clone, isUndefined} from \"../webix/helpers\";\nimport {addCss, removeCss} from \"../webix/html\";\nimport RenderStack from \"../core/renderstack\";\nimport CodeParser from \"../core/codeparser\";\nimport editors from \"../webix/editors\";\n\nconst api = {\n\tname:\"property\",\n\t$init:function(){\n\t\tthis._contentobj.className+=\" webix_property\";\n\t\tthis._contentobj.setAttribute(\"role\", \"listbox\");\n\t\tthis._destroy_with_me = [];\n\n\t\tthis.attachEvent(\"onAfterEditStart\", function(id){\n\t\t\tvar node = this.getItemNode(id);\n\t\t\taddCss(node, \"webix_focused\");\n\t\t});\n\t\tthis.attachEvent(\"onAfterEditStop\", function(id, editor){\n\t\t\tvar node = this.getItemNode(editor.config.id);\n\t\t\tremoveCss(node, \"webix_focused\");\n\t\t});\n\n\t\tif (!this.types){\n\t\t\tthis.types = { \"default\" : this.type };\n\t\t\tthis.type.name = \"default\";\n\t\t}\n\t\tthis.type = clone(this.type);\n\t},\n\tdefaults:{\n\t\tnameWidth:100,\n\t\teditable:true\n\t},\n\ton_render:{\n\t\tpassword: editors.password.masterFormat,\n\t\tcheckbox:function(value){\n\t\t\treturn \"<input type='checkbox' class='webix_property_check' \"+(value?\"checked\":\"\")+\">\";\n\t\t},\n\t\tcolor:function(value){\n\t\t\tconst margin = (this.type.height - 20) / 2;\n\t\t\treturn \"<div class='webix_property_col_ind' style='margin-top:\"+margin+\"px;background-color:\"+(value||\"#FFFFFF\")+\";'></div>\" + value;\n\t\t}\n\t},\n\ton_edit:{\n\t\tlabel:false\n\t},\n\t_id:/*@attr*/\"webix_f_id\",\n\ton_click:{\n\t\twebix_property_check:function(ev){\n\t\t\tconst id = this.locate(ev);\n\t\t\tconst item = this.getItem(id);\n\t\t\tthis.callEvent(\"onCheck\", [id, item.value = !item.value]);\n\t\t\treturn false;\n\t\t}\n\t},\n\ton_dblclick:{\n\t},\n\tregisterType:function(name, data){\n\t\tif (!isUndefined(data.template))\n\t\t\tthis.on_render[name] = data.template;\n\t\tif (!isUndefined(data.editor))\n\t\t\tthis.on_edit[name] = data.editor;\n\t\tif (!isUndefined(data.click))\n\t\t\tfor (var key in data.click)\n\t\t\t\tthis.on_click[key] = data.click[key];\n\t},\n\telements_setter:function(data){\n\t\tthis._idToLine = {};\n\t\tfor(var i =0; i < data.length; i++){\n\t\t\tvar line = data[i];\n\t\t\tif (line.type == \"multiselect\")\n\t\t\t\tline.optionslist = true;\n\n\t\t\t//line.type \t= \tline.type||\"label\";\n\t\t\tline.id \t=\tline.id||uid();\n\t\t\tline.label \t=\tline.label||\"\";\n\t\t\tline.value \t=\tisUndefined(line.value) ? (line.type == \"checkbox\" ? false : \"\") : line.value;\n\t\t\tthis._idToLine[line.id] = i;\n\t\t\tthis._map_options(data[i]);\n\t\t}\n\t\treturn data;\n\t},\n\tshowItem:function(id){\n\t\tRenderStack.showItem.call(this, id);\n\t},\n\titem_setter:function(value){\n\t\treturn this.type_setter(value);\n\t},\n\ttype_setter:function(value){\n\t\treturn RenderStack.type_setter.call(this, value);\n\t},\n\tlocate:function(){\n\t\treturn locate(arguments[0], this._id);\n\t},\n\tgetItemNode:function(id){\n\t\treturn this._dataobj.childNodes[this._idToLine[id]];\n\t},\n\tgetItem:function(id){\n\t\treturn this._settings.elements[this._idToLine[id]];\n\t},\n\t_get_editor_type:function(id){\n\t\tvar type = this.getItem(id).type;\n\t\tif (type == \"checkbox\") return \"inline-checkbox\";\n\t\tvar alter_type = this.on_edit[type];\n\t\treturn (alter_type === false)?false:(alter_type||type);\n\t},\n\t_get_edit_config:function(id){\n\t\treturn this.getItem(id);\n\t},\n\t_find_cell_next:function(start, check , direction){\n\t\tlet row = this._idToLine[start.id];\n\t\tlet order = this._settings.elements;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\tupdateItem:function(key, data){\n\t\tconst line = this.getItem(key);\n\t\tif (line)\n\t\t\textend(line, data||{}, true);\n\t\tthis.refresh();\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft+this._settings.nameWidth,\n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.firstChild.offsetHeight,\n\t\t\twidth:this._data_width,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_clear:function(){\n\t\tvar lines = this._settings.elements;\n\t\tfor (var i=0; i<lines.length; i++)\n\t\t\tlines[i].value = \"\";\n\t},\n\tclear:function(){\n\t\tthis._clear();\n\t\tthis._props_dataset = {};\n\t\tthis.refresh();\n\t},\n\tsetValues:function(data, update){\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.collapseNames(data, \"\", {}, (v) => isUndefined(this._idToLine[v]));\n\n\t\tif(!update) this._clear();\n\t\tfor(var key in data){\n\t\t\tvar line = this.getItem(key);\n\t\t\tif (line)\n\t\t\t\tline.value = data[key];\n\t\t}\n\n\t\tthis._props_dataset = data;\n\t\tthis.refresh();\n\t},\n\tgetValues:function(){\n\t\tvar data = clone(this._props_dataset||{});\n\t\tfor (var i = 0; i < this._settings.elements.length; i++) {\n\t\t\tvar line = this._settings.elements[i];\n\t\t\tif (line.type != \"label\")\n\t\t\t\tdata[line.id] = line.value;\n\t\t}\n\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.expandNames(data);\n\n\t\treturn data;\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this, x, y)){\n\t\t\tthis._data_width = this._content_width - this._settings.nameWidth;\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx,dy){\n\t\tif (this._settings.autoheight){\n\t\t\tvar count = this._settings.elements.length;\n\t\t\tthis._settings.height = Math.max(this.type.height*count, this._settings.minHeight||0);\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t_toHTML:function(){\n\t\tconst html = [];\n\t\tconst els = this._settings.elements;\n\t\tif (els) {\n\t\t\tconst height = `height:${this.type.height}px;line-height:${this.type.height}px;`;\n\t\t\tfor (let i=0; i<els.length; i++){\n\t\t\t\tconst data = els[i];\n\t\t\t\tif (data.css && typeof data.css == \"object\")\n\t\t\t\t\tdata.css = createCss(data.css);\n\n\t\t\t\tconst pre = \"<div \"+/*@attr*/\"webix_f_id\"+\"=\\\"\"+data.id+\"\\\"\"+(data.type!==\"label\"?\"role=\\\"option\\\" tabindex=\\\"0\\\"\":\"\")+\" class=\\\"webix_property_line \"+(data.css||\"\")+\"\\\">\";\n\t\t\t\tif (data.type == \"label\")\n\t\t\t\t\thtml[i] = pre+\"<div class='webix_property_label_line' style='\"+height+\"'>\"+data.label+\"</div></div>\";\n\t\t\t\telse {\n\t\t\t\t\tconst render = this.on_render[data.type];\n\t\t\t\t\tconst post = \"<div class='webix_property_label' style='\"+height+\"width:\"+this._settings.nameWidth+\"px'>\"+data.label+\"</div><div class='webix_property_value' style='\"+height+\"width:\"+this._data_width+\"px'>\";\n\n\t\t\t\t\tlet content;\n\t\t\t\t\tconst value = data.value;\n\t\t\t\t\tconst options = data.collection || data.options;\n\t\t\t\t\tif(options){\n\t\t\t\t\t\tif (data.format) {\n\t\t\t\t\t\t\tconst item = value ? options.getItem(value) : null;\n\t\t\t\t\t\t\tcontent = data.format(item ? item.value : value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcontent = data.template(data, this.type, value, data);\n\t\t\t\t\t} else if(data.format){\n\t\t\t\t\t\tcontent = data.format(value);\n\t\t\t\t\t} else\n\t\t\t\t\t\tcontent = value;\n\t\t\t\t\tif (render)\n\t\t\t\t\t\tcontent = render.call(this, value, data);\n\t\t\t\t\thtml[i] = pre+post+content+\"</div></div>\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn html.join(\"\");\n\t},\n\ttype:{\n\t\theight:24,\n\t\ttemplateStart:template(\"\"),\n\t\ttemplateEnd:template(\"</div>\")\n\t},\n\t$skin: function(){\n\t\tthis.type.height = $active.propertyItemHeight;\n\t}\n};\n\n\nconst view = protoUI(api, AutoTooltip, EditAbility, MapCollection, MouseEvents, Scrollable, SingleRender, AtomDataLoader, EventSystem, base.view);\nexport default {api, view};","import {index, triggerEvent, preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, copy, toFunctor, isArray} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nimport i18n from \"../webix/i18n\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\nimport DateHelper from \"../core/date\";\nimport KeysNavigation from \"../core/keysnavigation\";\n\n\nconst api = {\n\tname:\"calendar\",\n\n\tdefaults:{\n\t\tdate: DateHelper.datePart(new Date()), //selected date, not selected by default\n\t\tnavigation: true,\n\t\tmonthSelect: true,\n\t\tweekHeader: true,\n\t\tmonthHeader: true,\n\t\tweekNumber: false,\n\t\tskipEmptyWeeks: false,\n\t\tcalendarHeader: \"%F %Y\",\n\t\t//calendarTime: \"%H:%i\",\n\t\tevents:DateHelper.isHoliday,\n\t\tminuteStep: 5,\n\t\ttimeIcon:\"wxi-clock\",\n\t\ticons: false,\n\t\ttimepickerHeight: 30,\n\t\theaderHeight: 30,\n\t\tdayTemplate: function(d){\n\t\t\treturn d.getDate();\n\t\t},\n\t\twidth: 260,\n\t\theight: 250,\n\t\tseparator:\", \"\n\t},\n\n\tdayTemplate_setter: template,\n\tcalendarHeader_setter:DateHelper.dateToStr,\n\tcalendarTime_setter:function(format){\n\t\tthis._calendarTime = format;\n\t\treturn DateHelper.dateToStr(format);\n\t},\n\tdate_setter:function(date){\n\t\tdate = DateHelper.copy( this._string_to_date(date) );\n\t\tdate.setDate(1);\n\t\treturn date;\n\t},\n\tmaxDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\tmaxTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\t_ariaFocus:function(){\n\t\t_event(this.$view, \"mousedown\", () => {\n\t\t\tthis._mouse_time = new Date();\n\t\t});\n\t\t_event(this.$view, \"focus\", e => {\n\t\t\t// in daterange\n\t\t\tif (this._settings.master) return;\n\n\t\t\tconst prev = e.relatedTarget;\n\t\t\tconst css = e.target.className.indexOf(\"webix_cal_day\") !== -1;\n\t\t\tif (prev && (new Date() - this._mouse_time > 100) && css && this.$view.contains(prev)){\n\t\t\t\tconst day = this._locate_day(e.target);\n\t\t\t\tif (!this._selectedDay(day)) this._moveSelection(day);\n\t\t\t}\n\t\t}, { capture: true });\n\t},\n\t$init: function() {\n\t\tthis._viewobj.className += \" webix_calendar\";\n\t\tthis._viewobj.setAttribute(\"role\", \"region\");\n\t\tthis._viewobj.setAttribute(\"aria-label\", i18n.aria.calendar);\n\n\t\t//special dates\n\t\tthis._special_dates = {};\n\t\tthis._selected_days = {};\n\t\tthis._zoom_level = 0;\n\n\t\t//navigation and aria\n\t\tthis._ariaFocus();\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t_onKeyPress:function(code, e){\n\t\tconst target = e.target, role = target.getAttribute(\"role\");\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"log\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\tminuteStep_setter(value){\n\t\treturn Math.max( Math.min(value, 60), this.defaults.minuteStep );\n\t},\n\ttype_setter: function(value){\n\t\tif(value == \"time\"){\n\t\t\tthis._zoom_in = true;\n\t\t\tthis._zoom_level = -1;\n\t\t}\n\t\telse if(value == \"year\"){\n\t\t\tthis._fixed = true;\n\t\t}\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\t//repaint calendar when size changed\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst s = this._settings;\n\t\tif (s.cellHeight && !s.type){\n\t\t\tconst state = this._getDateBoundaries(s.date);\n\t\t\ts.height = s.cellHeight * state._rows + s.headerHeight + (s.weekHeader?$active.calendarWeekHeaderHeight:0) +\n\t\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) + (this._content_padding+$active.borderWidth)*2;\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx,dy);\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tif (this.config.master) return; //in daterange\n\t\tvar start = this.getSelectedDate(true);\n\t\tvar date = DateHelper.copy(start || this.getVisibleDate());\n\t\tthis._moveSelection(date, mode, focus);\n\t},\n\t_moveSelection:function(date, mode, focus){\n\t\tconst css = this._zoom_logic[this._zoom_level]._keyshift(date, mode, this);\n\t\tif (focus !== false)\n\t\t\tthis._restore_focus(css);\n\t},\n\t_restore_focus:function(css, ind){\n\t\tlet sel;\n\t\tif (ind) {\n\t\t\tsel = this._viewobj.querySelector(\".webix_cal_body\");\n\t\t\tsel = sel.childNodes[ind.rind].childNodes[ind.cind + (this._settings.weekNumber?1:0)];\n\t\t} else\n\t\t\tsel = this._viewobj.querySelector(\".\"+css+\"[tabindex='0']\");\n\t\tif (sel) sel.focus();\n\t},\n\t_getDateBoundaries: function(date, reset) {\n\t\t// addition information about rendering event:\n\t\t// how many days from the previous month,\n\t\t// next,\n\t\t// number of weeks to display and so on\n\t\t\n\t\tif (!this._set_date_bounds || reset){\n\t\t\tvar month = date.getMonth();\n\t\t\tvar year = date.getFullYear();\n\n\t\t\tvar next = new Date(year, month+1, 1);\n\t\t\tvar start = DateHelper.weekStart(new Date(year, month, 1));\n\n\t\t\tvar days = Math.round((next.valueOf() - start.valueOf())/(60*1000*60*24));\n\t\t\tvar rows = this._settings.skipEmptyWeeks?Math.ceil(days/7):6;\n\n\t\t\tthis._set_date_bounds = { _month: month, _start:start, _next:next, _rows: rows};\n\t\t}\n\n\t\treturn this._set_date_bounds;\n\t},\n\t$skin:function(){\n\t\tif($active.calendar){\n\t\t\tif( $active.calendar.width)\n\t\t\t\tthis.defaults.width = $active.calendar.width;\n\t\t\tif( $active.calendar.height)\n\t\t\t\tthis.defaults.height = $active.calendar.height;\n\t\t\tif( $active.calendar.headerHeight)\n\t\t\t\tthis.defaults.headerHeight = $active.calendar.headerHeight;\n\t\t\tif( $active.calendar.timepickerHeight)\n\t\t\t\tthis.defaults.timepickerHeight = $active.calendar.timepickerHeight;\n\t\t}\n\t\tthis._content_padding = $active.layoutPadding.form;\n\t},\n\t_getColumnConfigSizes: function(date){ \n\t\tvar bounds = this._getDateBoundaries(date);\n\n\t\tvar s = this._settings;\n\t\tvar _columnsHeight = [];\n\t\tvar _columnsWidth = [];\n\n\t\tvar containerWidth = this._content_width - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar containerHeight = this._content_height - (s.monthHeader?s.headerHeight:0) - (s.weekHeader?$active.calendarWeekHeaderHeight:0) -\n\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar columnsNumber = (s.weekNumber)?8:7;\n\t\tfor(var i=0; i<columnsNumber; i++) {\n\t\t\t_columnsWidth[i] = Math.ceil(containerWidth/(columnsNumber-i));\n\t\t\tcontainerWidth -= _columnsWidth[i];\n\t\t}\n\n\t\tvar rowsNumber = bounds._rows;\n\t\tfor (var k = 0; k < rowsNumber; k++) {\n\t\t\t_columnsHeight[k] = Math.ceil(containerHeight/(rowsNumber-k) );\n\t\t\tcontainerHeight -= _columnsHeight[k];\n\t\t}\n\t\treturn [_columnsWidth, _columnsHeight];\n\t},\n\ticons_setter: function(value){\n\t\tif(!value)\n\t\t\tthis._icons = null;\n\t\telse if(typeof value == \"object\")\n\t\t\tthis._icons = value;\n\t\telse\n\t\t\tthis._icons = this._icons2;\n\t},\n\t_icons: [],\n\t_icons2: [\n\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>\"+i18n.calendar.today+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_today\": function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\tif(!this._settings.timepicker)\n\t\t\t\t\t\tdate = DateHelper.datePart(date);\n\t\t\t\t\tthis.setValue(date, \"user\");\n\t\t\t\t\tthis.callEvent(\"onTodaySet\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>\"+i18n.calendar.clear+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_clear\": function(){\n\t\t\t\t\tthis.setValue(\"\", \"user\");\n\t\t\t\t\tthis.callEvent(\"onDateClear\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\trefresh:function(){ this.render(); },\n\trender: function() {\n\t\t//reset zoom level\n\t\tthis._zoom_level = 0;\n\t\tthis._zoom_size = false;\n\n\t\tvar s = this._settings;\n\n\t\tif (!this.isVisible(s.id)) return;\n\t\tthis._current_time = DateHelper.datePart(new Date());\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tvar date = this.getVisibleDate();\n\n\t\tvar bounds = this._getDateBoundaries(date, true);\n\t\tvar sizes = this._getColumnConfigSizes(date);\n\t\tvar cpad = this._content_padding + \"px\";\n\t\tvar width = sizes[0];\n\t\tvar height = sizes[1];\n\n\t\tvar html = \"\";\n\t\tif (s.monthHeader){\n\t\t\thtml += \"<div class='webix_cal_month' style='margin:0 \"+cpad+\"'><span role='log' aria-live='assertive' aria-atomic='true' class='webix_cal_month_name\"+((!s.monthSelect || !s.navigation)?\" webix_readonly'\":\"' role='button' tabindex='0'\")+\">\"+s.calendarHeader(date)+\"</span>\";\n\t\t\tif (s.navigation)\n\t\t\t\thtml += \"<div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[0]+\"' class='webix_cal_prev_button'></div><div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[1]+\"' class='webix_cal_next_button'></div>\";\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tif(s.weekHeader)\n\t\t\thtml += \"<div class='webix_cal_header' style='margin:0 \"+cpad+\"' aria-hidden='true'>\"+this._week_template(width)+\"</div>\";\n\t\thtml += \"<div class='webix_cal_body' role='grid' style='margin:0 \"+cpad+\"'>\"+this._body_template(width, height, bounds)+\"</div>\";\n\n\t\tif (s.timepicker || this._icons){\n\t\t\thtml += \"<div class='webix_cal_footer' style='margin:0 \"+cpad+\"'>\";\n\t\t\tif(s.timepicker)\n\t\t\t\thtml += this._timepicker_template(date);\n\n\t\t\tif(this._icons)\n\t\t\t\thtml += this._icons_template();\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tthis._contentobj.innerHTML = html;\n\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\n\t\tif(s.type == \"time\"){\n\t\t\tthis._changeZoomLevel(-1,date);\n\t\t}\n\t\telse if(s.type == \"month\"){\n\t\t\tthis._changeZoomLevel(1,date);\n\t\t}\n\t\telse if(s.type == \"year\"){\n\t\t\tthis._changeZoomLevel(2,date);\n\t\t}\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_icons_template: function(date){\n\t\tvar html =\t\"<div class='webix_cal_icons'>\";\n\t\tvar icons = this._icons;\n\n\t\tfor(var i=0; i < icons.length; i++){\n\t\t\tif(icons[i].template){\n\t\t\t\tvar template = (typeof(icons[i].template) == \"function\"?icons[i].template: template(icons[i].template));\n\t\t\t\thtml += template.call(this,date);\n\t\t\t}\n\t\t\tif(icons[i].on_click){\n\t\t\t\textend(this.on_click,icons[i].on_click);\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t},\n\t_timepicker_template:function(date){\n\t\tconst sel = this.getSelectedDate(true);\n\t\tif (sel)\n\t\t\tdate.setFullYear(sel.getFullYear(), sel.getMonth(), sel.getDate());\n\t\tconst timeFormat = this._settings.calendarTime||i18n.timeFormatStr;\n\t\tconst clock = this._settings.timeIcon;\n\t\tlet tpl = \"\";\n\n\t\tif(!this._settings.master)\n\t\t\ttpl = \"<div role='button' tabindex='0' class='webix_cal_time\"+(this._icons?\" webix_cal_time_icons\":\"\")+\"'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(date)+\"</div>\";\n\t\telse{\n\t\t\t//daterange needs two clocks\n\t\t\tconst range_date = copy($$(this._settings.master)._settings.value);\n\t\t\tif(DateHelper.equal(range_date.end, date))\n\t\t\t\trange_date.start = range_date.end;\n\n\t\t\tfor(let i in range_date){\n\t\t\t\ttpl += \"<div role='button' tabindex='0' class='webix_range_time_\"+i+\" webix_cal_time'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(range_date[i])+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn tpl;\n\t},\n\t_week_template: function(widths){\n\t\tvar s = this._settings;\n\t\tvar week_template = \"\";\n\t\tvar correction = 0;\n\n\t\tif(s.weekNumber) {\n\t\t\tcorrection = 1;\n\t\t\tweek_template += \"<div class='webix_cal_week_header' style='width: \"+widths[0]+\"px;' >\"+(s.calendarWeekHeader||\"\")+\"</div>\";\n\t\t}\n\t\t\n\t\tvar k = (DateHelper.startOnMonday)?1:0;\n\t\tfor (var i=0; i<7; i++){ // 7 days total\n\t\t\tvar day_index = (k + i) % 7; // 0 - Sun, 6 - Sat as in Locale.date.day_short\n\t\t\tvar day = i18n.calendar.dayShort[day_index]; // 01, 02 .. 31\n\t\t\tweek_template += \"<div day='\"+day_index+\"' style='width: \"+widths[i+correction]+\"px;' >\"+day+\"</div>\";\n\t\t}\n\t\t\n\t\treturn week_template;\n\t},\n\tblockDates_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_day_css:function(day, bounds){\n\t\tvar css = \"\", isOutside = false;\n\t\tif (DateHelper.equal(day, this._current_time))\n\t\t\tcss += \" webix_cal_today\";\n\t\tif (!this._checkDate(day))\n\t\t\tcss += \" webix_cal_day_disabled\";\n\t\tif (day.getMonth() != bounds._month){\n\t\t\tisOutside = true;\n\t\t\tcss += \" webix_cal_outside\";\n\t\t}\n\t\tif (!isOutside && this._selectedDay(day))\n\t\t\tcss += \" webix_cal_select\";\n\t\tif (this._settings.events)\n\t\t\tcss+=\" \"+(this._settings.events(day, isOutside) || \"\");\n\t\tcss += \" webix_cal_day\";\n\t\treturn css;\n\t},\n\t_body_template: function(widths, heights, bounds){\n\t\tconst s = this._settings;\n\t\tconst start = s.weekNumber ? 1 : 0;\n\t\tlet day = DateHelper.datePart(DateHelper.copy(bounds._start));\n\t\tlet weekNumber = DateHelper.getISOWeek(DateHelper.add(day, 2, \"day\", true));\n\n\t\tlet html = \"\", focusable, sqSize;\n\t\tfor (let y=0; y<heights.length; y++){\n\t\t\thtml += \"<div class='webix_cal_row' role='row' style='height:\"+heights[y]+\"px;line-height:\"+heights[y]+\"px'>\";\n\n\t\t\tif (start){\n\t\t\t\t// recalculate week number for the first week of a year\n\t\t\t\tif(!day.getMonth() && day.getDate()<7)\n\t\t\t\t\tweekNumber =  DateHelper.getISOWeek(DateHelper.add(day,2,\"day\", true));\n\t\t\t\thtml += \"<div class='webix_cal_week_num' aria-hidden='true' style='width:\"+widths[0]+\"px'>\"+weekNumber+\"</div>\";\n\t\t\t}\n\n\t\t\tfor (let x=start; x<widths.length; x++){\n\t\t\t\tconst sel = this._selectedDay(day);\n\t\t\t\tconst css = this._day_css(day, bounds);\n\t\t\t\tlet d = s.dayTemplate.call(this, day);\n\n\t\t\t\tlet alabel = \"\";\n\t\t\t\tif (typeof d == \"object\"){\n\t\t\t\t\talabel = d.aria || alabel;\n\t\t\t\t\td = d.text;\n\t\t\t\t} else\n\t\t\t\t\talabel = DateHelper.dateToStr(i18n.aria.dateFormat)(day);\n\n\t\t\t\tconst isOutside = day.getMonth() != bounds._month;\n\t\t\t\tlet tabindex = sel && !isOutside ? \"0\" : \"-1\";\n\t\t\t\tif (day.getDate() == 1 && !isOutside) tabindex = \"$webix_tabindex\";\n\t\t\t\tif (tabindex == \"0\") focusable = true;\n\n\t\t\t\tsqSize = Math.min(heights[y], widths[x]);\n\t\t\t\thtml += \"<div day='\"+x+\"' role='gridcell' \"+(isOutside?\"aria-hidden='true'\":\"\")+\" aria-label='\"+alabel+\n\t\t\t\t\t\"' tabindex='\"+tabindex+\"' aria-selected='\"+(sel && !isOutside?\"true\":\"false\")+\"' class='\"+css+\"' style='text-align:center; width:\"+widths[x]+\n\t\t\t\t\t\"px'><span aria-hidden='true' class='webix_cal_day_inner' style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+d+\"</span></div>\";\n\t\t\t\tday = DateHelper.add(day, 1, \"day\");\n\n\t\t\t\tif (day.getHours())\n\t\t\t\t\tday = DateHelper.datePart(day);\n\t\t\t}\n\n\t\t\thtml += \"</div>\";\n\t\t\tweekNumber++;\n\t\t}\n\t\treturn html.replace(\"$webix_tabindex\", (focusable || s.master) ? \"-1\" : \"0\");\n\t},\n\t_changeDate:function(dir, step){\n\t\tif(!step) { step = this._zoom_logic[this._zoom_level]._changeStep; }\n\n\t\tconst now = this._settings.date;\n\t\tconst next = DateHelper.add(now, dir*step, \"month\", true);\n\t\tthis._changeDateInternal(now, next, dir);\n\t},\n\t_changeDateInternal:function(now, next, dir){\n\t\tif(this.callEvent(\"onBeforeMonthChange\", [now, next])){\n\t\t\tif (this._zoom_level){\n\t\t\t\tthis._update_zoom_level(next);\n\t\t\t} else {\n\t\t\t\tthis.showCalendar(next);\n\t\t\t\tif (this._settings.monthHeader && this._settings.navigation){\n\t\t\t\t\tconst css = \"webix_cal_\"+(dir>0?\"next\":\"prev\")+\"_button\";\n\t\t\t\t\tthis._restore_focus(css);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.callEvent(\"onAfterMonthChange\", [next, now]);\n\t\t}\n\t},\n\t_zoom_logic:{\n\t\t\"-2\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = this.getSelectedDate(true) || config.date,\n\t\t\t\t\tisBlocked = false;\n\n\t\t\t\tvar minHour = (config.minTime ? config.minTime[0] : 0);\n\t\t\t\tvar maxHour = (config.maxTime ? (config.maxTime[0] + ( config.maxTime[1] ? 1 : 0 )) : 24);\n\n\t\t\t\tvar minMinute = (config.minTime && (date.getHours()==minHour) ? config.minTime[1] : 0);\n\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (date.getHours()==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\tif(this._settings.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setMinutes(i);\n\t\t\t\t\tisBlocked = this._settings.blockTime(d);\n\t\t\t\t}\n\t\t\t\treturn (i < minMinute || i >= maxMinute || isBlocked);\n\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setMinutes(i); },\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getMinutes()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar step = calendar._settings.minuteStep;\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"right\"?step:-step, \"minute\", true);\n\t\t\t\t\tif(date.getHours() === newdate.getHours())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"-1\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = this.getSelectedDate(true) || config.date;\n\n\t\t\t\tvar minHour = (config.minTime? config.minTime[0]:0);\n\t\t\t\tvar maxHour = (config.maxTime? config.maxTime[0]+(config.maxTime[1]?1:0):24);\n\n\t\t\t\tif (i < minHour || i >= maxHour) return true;\n\n\t\t\t\tif(config.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setHours(i);\n\t\t\t\t\t\n\t\t\t\t\tvar minMinute = (config.minTime && (i==minHour) ? config.minTime[1] : 0);\n\t\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (i==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\t\tfor (var j=minMinute; j<maxMinute; j+= config.minuteStep){\n\t\t\t\t\t\td.setMinutes(j);\n\t\t\t\t\t\tif (!config.blockTime(d))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setHours(i); },\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate, inc, step = calendar._settings.minuteStep;\n\t\t\t\t\n\t\t\t\tif(mode === \"bottom\" || mode === \"top\"){\n\t\t\t\t\tdate.setHours(mode===\"bottom\"?23:0);\n\t\t\t\t\tdate.setMinutes(mode===\"bottom\"?55:0);\n\t\t\t\t\tdate.setSeconds(0);\n\t\t\t\t\tdate.setMilliseconds(0);\n\t\t\t\t\tnewdate = date;\n\t\t\t\t}\n\t\t\t\telse if(mode === \"left\" || mode === \"right\"){//minutes\n\n\t\t\t\t\tinc = (mode===\"right\"?step:-step);\n\t\t\t\t\tif(mode === \"left\" && date.getMinutes() < step ) inc = 60-step;\n\t\t\t\t\tif(mode === \"right\" && date.getMinutes() >= (60-step)) inc = step-60;\n\t\t\t\t\tinc -= date.getMinutes()%step;\n\t\t\t\t\tnewdate = calendar._zoom_logic[\"-2\"]._findActive(DateHelper.add(date, inc, \"minute\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === \"up\" || mode === \"down\"){ //hours\n\t\t\t\t\tinc = mode===\"down\"?1:-1;\n\t\t\t\t\tif(mode === \"down\" && date.getHours() === 23) inc = -23;\n\t\t\t\t\tif(mode === \"up\" && date.getHours() === 0) inc = 23;\n\t\t\t\t\tnewdate = this._findActive(DateHelper.add(date, inc, \"hour\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === false)\n\t\t\t\t\tnewdate = this._findActive(date, mode, calendar);\n\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\"+(mode === \"left\" || mode === \"right\"?\"_min\":\"\");\n\t\t\t},\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getHours()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"down\"?1:-1, \"hour\", true);\n\t\t\t\t\tif(date.getDate() === newdate.getDate())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_correctDate: function(date, calendar){\n\t\t\t\tconst time = DateHelper.timePart(date);\n\t\t\t\t\n\t\t\t\tif (date < calendar._settings.minDate) {\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t\tdate.setSeconds(time);\n\t\t\t\t} else if (date > calendar._settings.maxDate) {\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t\tdate.setSeconds(time);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet blocked = calendar._isDateBlocked(date);\n\t\t\t\tif (blocked) {\n\t\t\t\t\tconst d = DateHelper.copy(date);\n\t\t\t\t\twhile (blocked && d.getMonth() == date.getMonth()){\n\t\t\t\t\t\tblocked = calendar._isDateBlocked(d);\n\t\t\t\t\t\tif (blocked)\n\t\t\t\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdate = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn date;\n\t\t\t},\n\t\t},\n\t\t\"0\":{//days\n\t\t\t_changeStep:1,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.getFullYear(), date.getMonth()+1, 0);\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setDate(1));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"day\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?1:-1), \"week\");\n\t\t\t\t\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate)\n\t\t\t\t\tcalendar._selectDate(newdate, false, \"user\");\n\t\t\t\treturn \"webix_cal_day\";\n\t\t\t},\n\t\t\t\n\t\t},\n\t\t\"1\":{\t//months\n\t\t\t_isBlocked: function(i){\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setMonth(i);\n\t\t\t\tlet blocked = this._isDateBlocked(date, 1);\n\n\t\t\t\tvar min = this._settings.minDate,\n\t\t\t\t\tmax = this._settings.maxDate,\n\t\t\t\t\tyear = this._settings.date.getFullYear();\n\n\t\t\t\tif (min && !blocked){\n\t\t\t\t\tvar minYear = min.getFullYear();\n\t\t\t\t\tblocked = year<minYear || (year==minYear && min.getMonth()>i);\n\t\t\t\t}\n\n\t\t\t\tif (max && !blocked){\n\t\t\t\t\tvar maxYear = max.getFullYear();\n\t\t\t\t\tblocked = year>maxYear || (year==maxYear && max.getMonth()<i);\n\t\t\t\t}\n\n\t\t\t\treturn blocked;\n\t\t\t},\n\t\t\t_correctDate: function(date, calendar){\n\t\t\t\tdate = DateHelper.monthStart(date);\n\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\t\t\t\tlet blocked = calendar._isDateBlocked(date);\n\t\t\t\tif(blocked){\n\t\t\t\t\tconst d = DateHelper.copy(date);\n\t\t\t\t\twhile(blocked && d.getMonth() == date.getMonth()){\n\t\t\t\t\t\tblocked = calendar._isDateBlocked(d);\n\t\t\t\t\t\tif(blocked)\n\t\t\t\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdate = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date){ return date.getFullYear(); },\n\t\t\t_getContent:function(i){ return i18n.calendar.monthShort[i]; },\n\t\t\t_setContent:function(next, i){ if(i!=next.getMonth()) next.setDate(1);next.setMonth(i); },\n\t\t\t_changeStep:12,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(11));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(0));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"month\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate)){\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t},\n\t\t\"2\":{\t//years\n\t\t\t_isBlocked: function(i){\n\t\t\t\ti += this._zoom_start_date;\n\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setFullYear(i);\n\n\t\t\t\tconst blocked = this._isDateBlocked(date, 2);\n\t\t\t\tvar min = this._settings.minDate;\n\t\t\t\tvar max = this._settings.maxDate;\n\n\t\t\t\tif (blocked || (min && min.getFullYear() > i) || (max && max.getFullYear() < i))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t_correctDate: function(date,calendar){\n\t\t\t\tdate = DateHelper.yearStart(date);\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\t\t\t\tlet blocked = calendar._isDateBlocked(date);\n\t\t\t\tif(blocked){\n\t\t\t\t\tconst d = DateHelper.copy(date);\n\t\t\t\t\twhile(blocked && d.getFullYear() == date.getFullYear()){\n\t\t\t\t\t\tblocked = calendar._isDateBlocked(d);\n\t\t\t\t\t\tif(blocked)\n\t\t\t\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdate = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date, calendar){\n\t\t\t\tvar start = date.getFullYear();\n\t\t\t\tcalendar._zoom_start_date = start = start - start%10 - 1;\n\t\t\t\treturn start+\" - \"+(start+10 + 1);\n\t\t\t},\n\t\t\t_getContent:function(i, calendar){ return calendar._zoom_start_date+i; },\n\t\t\t_setContent:function(next, i, calendar){ next.setFullYear(calendar._zoom_start_date+i); },\n\t\t\t_changeStep:12*10,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?10:-10), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date+10));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"year\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t}\n\t},\n\t_correctBlockedTime: function(){\n\t\tvar i, isDisabledHour, isDisabledMinutes;\n\t\tisDisabledHour = this._zoom_logic[-1]._isBlocked.call(this,this._settings.date.getHours());\n\t\tif(isDisabledHour){\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tif(!this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setHours(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tisDisabledMinutes = this._zoom_logic[-2]._isBlocked.call(this,this._settings.date.getMinutes());\n\t\tif(isDisabledMinutes){\n\t\t\tfor (i=0; i<60; i+=this._settings.minuteStep){\n\t\t\t\tif(!this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setMinutes(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_update_zoom_level:function(date){\n\t\tvar config, css, height, i, index,  sections, selected, type, width, zlogic, temp, sqSize;\n\t\tvar html = \"\";\n\t\tvar cpad = this._content_padding + \"px\";\n\n\t\tconfig = this._settings;\n\t\tindex = 2 - (config.weekHeader?0:1) - (config.monthHeader?0:1);\n\t\tzlogic = this._zoom_logic[this._zoom_level];\n\t\tsections  = this._contentobj.childNodes;\n\n\t\tif (date)\n\t\t\tthis.define(\"date\", date);\n\t\ttype = config.type;\n\n\t\t//store width and height of draw area\n\t\tif (!this._zoom_size){\n\n\t\t\tthis._reserve_box_height = this._contentobj.offsetHeight - (config.monthHeader||this._zoom_in?config.headerHeight:0) -\n\t\t\t\t(this._content_padding+$active.borderWidth)*2;\n\t\t\tif(type != \"year\" && type != \"month\")\n\t\t\t\tthis._reserve_box_height -= config.timepickerHeight;\n\n\t\t\tthis._reserve_box_width = sections[index].offsetWidth;\n\t\t\tthis._zoom_size = 1;\n\t\t}\n\n\t\t//main section\n\t\tif (this._zoom_in){\n\t\t\t//hours and minutes\n\t\t\theight = this._reserve_box_height/6;\n\t\t\tvar timeColNum = 6;\n\t\t\tvar timeFormat = this._calendarTime||i18n.timeFormat;\n\t\t\tvar enLocale = timeFormat.match(/%([a,A])/);\n\t\t\tif(enLocale)\n\t\t\t\ttimeColNum++;\n\t\t\twidth = parseInt((this._reserve_box_width-3)/timeColNum,10);\n\t\t\tsqSize = Math.min(width,height);\n\n\t\t\thtml += \"<div class='webix_time_header' style='margin:0 \"+cpad+\"'>\"+this._timeHeaderTemplate(width,enLocale)+\"</div>\";\n\t\t\thtml += \"<div  class='webix_cal_body' style='height:\"+this._reserve_box_height+\"px; margin:0 \"+cpad+\";'>\";\n\n\t\t\t// check and change blocked selected time\n\t\t\tthis._correctBlockedTime();\n\n\t\t\thtml += \"<div role='grid' class='webix_hours'><div role='row'>\";\n\t\t\tselected = config.date.getHours();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tcss=\"\";\n\t\t\t\tif(enLocale){\n\t\t\t\t\tif(i%4===0){\n\t\t\t\t\t\tvar label = (!i ? i18n.am[0] : (i==12?i18n.pm[0]:\"\"));\n\t\t\t\t\t\thtml += \"<div class='webix_cal_block_empty\"+css+\"' style='\"+this._getCalSizesString(width,height)+\"clear:both;\"+\"'>\"+label+\"</div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tcss += \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss += \" webix_selected\";\n\n\t\t\t\t\n\t\t\t\ttemp.setHours(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.hourFormat)(temp)+\"' role='gridcell'\"+\n\t\t\t\t\t\" tabindex='\"+(selected==i?\"0\":\"-1\")+\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+(i%4===0&&!enLocale?\"clear:both;\":\"\")+\n\t\t\t\t\t\"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(enLocale?(!i||i==12?12:i%12):i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"<div role='grid' class='webix_minutes'><div role='row'>\";\n\t\t\tselected = config.date.getMinutes();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\n\t\t\tfor (i=0; i<60; i+=config.minuteStep){\n\t\t\t\tcss = \"\";\n\t\t\t\tif(this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\ttemp.setMinutes(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.minuteFormat)(temp)+\"' role='gridcell' tabindex='\"+(selected==i?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\"' class='webix_cal_block webix_cal_block_min\"+css+\"' data-value='\"+i+\"' style='\"+\n\t\t\t\t\tthis._getCalSizesString(width,height)+((i/config.minuteStep)%2===0?\"clear:both;\":\"\")+\"'><span style='display:inline-block; \"+\n\t\t\t\t\tthis._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"</div>\";\n\t\t\thtml += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\tthis._contentobj.innerHTML = html;\n\t\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\t\t} else {\n\t\t\t//years and months\n\n\t\t\t//reset header\n\t\t\tif (config.monthHeader){\n\t\t\t\tconst header = sections[0].childNodes;\n\t\t\t\tconst title = zlogic._getTitle(config.date, this);\n\t\t\t\tif (header[0].innerHTML != title) header[0].innerHTML = title;\n\n\t\t\t\tif (config.navigation){\n\t\t\t\t\tconst labels = i18n.aria[\"nav\"+(this._zoom_level==1?\"Year\":\"Decade\")];\n\t\t\t\t\theader[1].setAttribute(\"aria-label\", labels[0]);\n\t\t\t\t\theader[2].setAttribute(\"aria-label\", labels[1]);\n\t\t\t\t}\n\t\t\t} else\t//needed for \"year\" to set start value\n\t\t\t\tzlogic._getTitle(config.date, this);\n\n\t\t\theight = Math.floor(this._reserve_box_height/3);\n\t\t\twidth = Math.floor(this._reserve_box_width/4);\n\t\t\tsqSize = Math.min(height, width);\n\n\t\t\tselected = (this._zoom_level === 1) ? config.date.getMonth() : config.date.getFullYear() - this._zoom_start_date;\n\t\t\tfor (i=0; i<12; i++){\n\t\t\t\tcss = \"\";\n\t\t\t\tif (zlogic._isBlocked.call(this, i)) {\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected == i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\tvar format = i18n.aria[(this._zoom_level==1?\"month\":\"year\")+\"Format\"];\n\t\t\t\thtml+=\"<div role='gridcell' aria-label='\"+DateHelper.dateToStr(format)(config.date)+\n\t\t\t\t\t\"' tabindex='\"+(css.indexOf(\"selected\")!==-1?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(css.indexOf(\"selected\")!==-1?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+\n                    \"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+zlogic._getContent(i, this)+\"</span></div>\";\n\t\t\t}\n\t\t\tif (config.weekHeader){\n\t\t\t\tsections[index-1].style.display = \"none\";\n\t\t\t\tif (index === 1) sections[index].style.marginTop = cpad;\n\t\t\t}\n\t\t\tsections[index].innerHTML = \"<div role='row'>\" + html + \"</div>\";\n\t\t\tif (type != \"year\" && type != \"month\"){\n\t\t\t\tif(!sections[index+1])\n\t\t\t\t\tthis._contentobj.innerHTML += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\t\telse\n\t\t\t\t\tsections[index+1].innerHTML = this._timeButtonsTemplate();\n\t\t\t} else if (sections[index+1]){\n\t\t\t\tsections[index+1].style.display = \"none\";\n\t\t\t}\n\t\t\tsections[index].style.height = this._reserve_box_height+\"px\";\n\t\t}\n\t},\n\t_getCalSizesString: function(width,height){\n\t\treturn \"width:\"+width+\"px; height:\"+height+\"px; line-height:\"+height+\"px;\";\n\t},\n\t_timeButtonsTemplate: function(){\n\t\treturn \"<input type='button' style='width:100%' class='webix_cal_done' value='\"+i18n.calendar.done+\"'>\";\n\t},\n\t_timeHeaderTemplate: function(width,enLocale){\n\t\tvar w1 = width*(enLocale?5:4);\n\t\tvar w2 = width*2;\n\t\treturn \"<div class='webix_cal_hours' style='width:\"+w1+\"px'>\"+i18n.calendar.hours+\"</div><div class='webix_cal_minutes' style='width:\"+w2+\"px'>\"+i18n.calendar.minutes+\"</div>\";\n\t},\n\t_changeZoomLevel: function(zoom,date){\n\t\tvar oldzoom = this._zoom_level;\n\t\tif(this.callEvent(\"onBeforeZoom\",[zoom, oldzoom])){\n\t\t\tthis._zoom_level = zoom;\n\n\t\t\tif(zoom)\n\t\t\t\tthis._update_zoom_level(date);\n\t\t\telse\n\t\t\t\tthis.showCalendar(date);\n\t\t\tthis.callEvent(\"onAfterZoom\",[zoom, oldzoom]);\n\t\t}\n\t},\n\t_correctDate:function(date){\n\t\tif(this._zoom_logic[this._zoom_level]._correctDate && !this._checkDate(date))\n\t\t\tdate = this._zoom_logic[this._zoom_level]._correctDate(date,this);\n\t\treturn date;\n\t},\n\t_mode_selected:function(target, config){\n\t\tvar next = this._locate_date(target);\n\t\tvar zoom = this._zoom_level-(this._fixed?0:1);\n\n\t\tnext = this._correctDate(next);\n\t\tif(this._checkDate(next)){\n\t\t\tthis._changeZoomLevel(zoom, next);\n\t\t\tvar type = this._settings.type;\n\t\t\tif(type == \"month\" || type == \"year\")\n\t\t\t\tthis._selectDate(next, false, config);\n\t\t}\n\t},\n\t// selects date and redraw calendar\n\t_selectDate: function(date, add, config){\n\t\tif(this.callEvent(\"onBeforeDateSelect\", [date])){\n\t\t\tthis.selectDate(date, true, add, config);\n\t\t\tthis.callEvent(\"onAfterDateSelect\", [date]);\n\t\t}\n\t},\n\t_locate_day:function(target, ind){\n\t\tconst cind = index(target) - (this._settings.weekNumber?1:0);\n\t\tconst rind = index(target.parentNode);\n\t\tif (ind) return { cind, rind };\n\n\t\tconst date = DateHelper.add(this._getDateBoundaries()._start, cind + rind*7, \"day\", true);\n\t\tif (this._settings.timepicker){\n\t\t\tdate.setHours(this._settings.date.getHours());\n\t\t\tdate.setMinutes(this._settings.date.getMinutes());\n\t\t}\n\t\treturn date;\n\t},\n\t_locate_date:function(target){\n\t\tvar value = target.getAttribute(\"data-value\")*1;\n\t\tvar level = (target.className.indexOf(\"webix_cal_block_min\")!=-1?this._zoom_level-1:this._zoom_level);\n\t\tvar next = this.getVisibleDate();\n\n\t\tthis._zoom_logic[level]._setContent(next, value, this);\n\t\treturn next;\n\t},\n\ton_click:{\n\t\twebix_cal_prev_button: function(){\n\t\t\tthis._changeDate(-1);\n\t\t},\n\t\twebix_cal_next_button: function(){\n\t\t\tthis._changeDate(1);\n\t\t},\n\t\twebix_cal_day_disabled: function(){\n\t\t\treturn false;\n\t\t},\n\t\twebix_cal_outside: function(){\n\t\t\tif(!this._settings.navigation)\n\t\t\t\treturn false;\n\t\t},\n\t\twebix_cal_day: function(e, id, target){\n\t\t\tconst date = this._locate_day(target);\n\t\t\tconst ind = this._settings.multiselect ? this._locate_day(target, true) : null;\n\n\t\t\tconst add = this._settings.multiselect === \"touch\"  || (e.ctrlKey || e.metaKey);\n\t\t\tthis._selectDate(date, add, \"user\");\n\n\t\t\tthis._restore_focus(\"webix_cal_day\", ind);\n\t\t},\n\t\twebix_cal_time:function(){\n\t\t\tif(this._zoom_logic[this._zoom_level-1]){\n\t\t\t\tthis._zoom_in = true;\n\t\t\t\tvar zoom = this._zoom_level - 1;\n\t\t\t\tthis._changeZoomLevel(zoom);\n\t\t\t}\n\t\t},\n\t\twebix_range_time_start:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"start\";\n\t\t},\n\t\twebix_range_time_end:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"end\";\n\t\t},\n\t\twebix_cal_done:function(){\n\t\t\tlet date = this.getVisibleDate();\n\t\t\tif (this._zoom_in) {\n\t\t\t\tconst start = this.getSelectedDate(true);\n\t\t\t\tif (start) {\n\t\t\t\t\tstart.setHours(date.getHours());\n\t\t\t\t\tstart.setMinutes(date.getMinutes());\n\t\t\t\t\tdate = start;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdate = this._correctDate(date);\n\t\t\tthis._selectDate(date, false, \"user\");\n\t\t},\n\t\twebix_cal_month_name:function(){\n\t\t\tif (!this._settings.navigation) return;\n\n\t\t\tthis._zoom_in = false;\n\t\t\t//maximum zoom reached\n\t\t\tif (this._zoom_level == 2 || !this._settings.monthSelect) return;\n\n\t\t\tvar zoom = Math.max(this._zoom_level, 0) + 1;\n\t\t\tthis._changeZoomLevel(zoom);\n\t\t},\n\t\twebix_cal_block:function(e, id, trg){\n\t\t\tif (this._zoom_in){\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") !== -1)\n\t\t\t\t\treturn false;\n\n\t\t\t\tconst next = this._locate_date(trg);\n\t\t\t\tthis._update_zoom_level(next);\n\n\t\t\t\tlet css = \"webix_cal_block\";\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_block_min\") !== -1)\n\t\t\t\t\tcss = \"webix_cal_block_min\";\n\t\t\t\tthis._restore_focus(css);\n\t\t\t} else {\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") == -1)\n\t\t\t\t\tthis._mode_selected(trg, \"user\");\n\t\t\t}\n\t\t}\n\t},\n\t_string_to_date: function(date, format){\n\t\tif (!date)\n\t\t\treturn DateHelper.datePart(new Date());\n\n\t\tif (typeof date == \"string\"){\n\t\t\tif (format)\n\t\t\t\tdate = DateHelper.strToDate(format)(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatDate(date);\n\t\t}\n\t\treturn date;\n\t},\n\t_checkDate: function(date){\n\t\tconst blockedDate = this._isDateBlocked(date);\n\t\tconst minDate = this._settings.minDate;\n\t\tconst maxDate = this._settings.maxDate;\n\t\tconst outOfRange = (minDate && date < minDate) || (maxDate && date >= DateHelper.add(maxDate, 1, \"day\", true));\n\t\treturn !blockedDate && !outOfRange;\n\t},\n\t_isDateBlocked: function(date, zoom){\n\t\tconst blockDates = this._settings.blockDates;\n\t\tlet blocked = (blockDates && blockDates.call(this, date));\n\t\tif(blocked && zoom){\n\t\t\tconst d = DateHelper.copy(date);\n\t\t\tconst method = zoom == 1? \"getMonth\" : \"getFullYear\";\n\t\t\td.setDate(1);\n\t\t\twhile(blocked && d[method]() == date[method]()){\n\t\t\t\tblocked = blockDates.call(this, d);\n\t\t\t\tDateHelper.add(d, 1, \"day\");\n\t\t\t}\n\t\t}\n\t\treturn blocked;\n\t},\n\t_findActive:function(date, mode){\n\t\tvar dir = (mode === \"top\" || mode === \"left\" || mode === \"pgup\" || mode === \"up\") ? -1 : 1;\n\t\tvar newdate = DateHelper.add(date, dir, \"day\", true);\n\t\tif (this._checkDate(newdate))\n\t\t\treturn newdate;\n\t\telse {\n\t\t\tvar compare;\n\t\t\tif(this._zoom_level === 0) compare = (date.getMonth() === newdate.getMonth());\n\t\t\telse if(this._zoom_level === 1 ) compare = (date.getFullYear() === newdate.getFullYear());\n\t\t\telse if(this._zoom_level === 2) compare = (newdate.getFullYear() > this._zoom_start_date && newdate.getFullYear() < this._zoom_start_date+10);\n\n\t\t\tif(compare)\n\t\t\t\treturn this._findActive(newdate, mode);\n\t\t}\n\t},\n\tshowCalendar: function(date) {\n\t\tthis.define(\"date\", date);\n\t\tthis.render();\n\t\tthis.resize();\n\t},\n\t_selectedDay: function(day){\n\t\treturn day && this._selected_days[day.valueOf()];\n\t},\n\tgetSelectedDate: function(first) {\n\t\tconst result = [];\n\n\t\tconst keys = Object.keys(this._selected_days);\n\t\tconst length = first ? Math.min(1, keys.length) : keys.length;\n\t\tfor (let i=0; i<length; i++)\n\t\t\tresult.push(DateHelper.copy(this._selected_days[keys[i]]));\n\n\t\treturn (this.config.multiselect && !first) ? result : (result[0] || null);\n\t},\n\tgetVisibleDate: function() {\n\t\treturn DateHelper.copy(this._settings.date);\n\t},\n\tsetValue: function(date, config){\n\t\tthis.selectDate(date, true, false, config);\n\t},\n\tgetValue: function(format){\n\t\tlet date = this.getSelectedDate();\n\n\t\tif(isArray(date)){\n\t\t\tdate = date.map(date => this._formatValue(date, format));\n\t\t\tif(this._settings.stringResult)\n\t\t\t\tdate = date.join(this._settings.separator);\n\t\t}\n\t\telse\n\t\t\tdate = this._formatValue(date, format);\n\n\t\treturn date;\n\t},\n\t_formatValue: function(date, format){\n\t\tif (format)\n\t\t\tdate = DateHelper.dateToStr(format)(date);\n\t\telse if(this._settings.stringResult){\n\t\t\tif(this._settings.type == \"time\")\n\t\t\t\tdate = i18n.parseTimeFormatStr(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatStr(date);\n\t\t}\n\t\treturn date;\n\t},\n\tselectDate: function(date, show, add, config){\n\t\tif (!date || !add || !this.config.multiselect)\n\t\t\tthis._selected_days = {};\n\n\t\tif (date){\n\t\t\tif(typeof date == \"string\")\n\t\t\t\tdate = date.split(this._settings.separator);\n\t\t\telse if (!isArray(date)) date = [date];\n\t\t\tfor (let i=0; i<date.length; i++){\n\t\t\t\tconst days = this._string_to_date(date[i]);\n\t\t\t\tconst key = DateHelper.datePart(DateHelper.copy(days)).valueOf();\n\t\t\t\tif (this._selected_days[key] && add)\n\t\t\t\t\tdelete this._selected_days[key];\n\t\t\t\telse\n\t\t\t\t\tthis._selected_days[key] = days;\n\n\t\t\t\tif (!this.config.multiselect)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (date.length && show)\n\t\t\t\tthis.showCalendar(date[0]);\n\t\t}\n\n\t\tif (show !== false)\n\t\t\tthis.render();\n\n\t\tthis.callEvent(\"onChange\",[date,config]);\n\t}, \n\tlocate:function(){ return null; }\n};\n\n\nconst view = protoUI(api, KeysNavigation, MouseEvents, base.view, EventSystem);\nexport default {api, view};","import {locate, addCss, removeCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\n\nimport color from \"../webix/color\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorboard\",\n\tdefaults:{\n\t\ttemplate:(obj) => {\n\t\t\treturn `<div class=\"webix_color_item\" style=\"background-color:${obj.val};\"></div>`;\n\t\t},\n\t\tpalette:null,\n\t\theight:250,\n\t\twidth:260,\n\t\tcols:11,\n\t\trows:10,\n\t\tminLightness:0.15,\n\t\tmaxLightness:1,\n\t\tnavigation:true,\n\t\tgrayScale:true,\n\t\ttype:\"material\" // \"classic\"\n\t},\n\t$init:function(){\n\t\t_event(this._viewobj, \"click\", bind(function(e){\n\n\t\t\t// prevent selection the main item container\n\t\t\tconst node = e.target.parentNode;\n\t\t\tlet value = locate(node, /*@attr*/\"webix_val\");\n\t\t\t// locate can return null in case of drag\n\t\t\tif (value){\n\t\t\t\tconst oldvalue = this._settings.value;\n\t\t\t\tthis.setValue(value, \"user\");\n\n\t\t\t\t//value can be changed via setValue\n\t\t\t\tvalue = this._settings.value;\n\n\t\t\t\tthis.callEvent(\"onItemClick\", [value, e]);\n\t\t\t\tif (value != oldvalue)\n\t\t\t\t\tthis.callEvent(\"onSelect\", [value]);\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.$view.setAttribute(\"role\", \"grid\");\n\t\tthis._viewobj.setAttribute(\"aria-readonly\", \"true\");\n\t},\n\t_get_clear_palette:function(){\n\t\treturn [\n\t\t\t\"#F34336\",\n\t\t\t\"#FF9700\",\n\t\t\t\"#FFEA3B\",\n\t\t\t\"#4CB050\",\n\t\t\t\"#009788\",\n\t\t\t\"#00BCD4\",\n\t\t\t\"#2196F3\",\n\t\t\t\"#3F51B5\",\n\t\t\t\"#673BB7\",\n\t\t\t\"#9C28B1\",\n\t\t\t\"#EA1E63\",\n\t\t];\n\t},\n\t_set_item_focus:function(){\n\t\tif(!this.getValue())\n\t\t\tthis.moveSelection(\"up\");\n\t},\n\t_findIndex:function(value){\n\t\tconst pal = this._settings.palette;\n\t\tvalue = (value || \"\").toUpperCase();\n\t\tfor(let r= 0, rows= pal.length; r < rows; r++)\n\t\t\tfor(let c= 0, cols = pal[r].length; c < cols; c++){\n\t\t\t\tif(pal[r][c].toUpperCase() == value){\n\t\t\t\t\treturn {row:r, col:c};\n\t\t\t\t}\n\t\t\t}\n\t\treturn null;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t_getBox:function(){\n\t\treturn this._viewobj.firstChild;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\t// clear previous\n\t\t\tif (this._activeSelection){\n\t\t\t\tconst oldCell = this._getCell(this._activeSelection);\n\t\t\t\tthis._setSelection(oldCell, false);\n\t\t\t}\n\n\t\t\tconst ind = this._activeSelection = this._findIndex(value);\n\t\t\tif (ind){\n\t\t\t\tconst cell = this._getCell(ind);\n\t\t\t\tthis._setSelection(cell, true);\n\t\t\t}\n\t\t}\n\t},\n\t_getCell(ind){\n\t\treturn this._viewobj.lastChild.childNodes[ind.row].childNodes[ind.col];\n\t},\n\t_setSelection(cell, state){\n\t\tif (state){\n\t\t\tcell.setAttribute(\"tabindex\", \"0\");\n\t\t\tcell.setAttribute(\"aria-selected\", \"true\");\n\t\t\taddCss(cell, \"webix_color_selected\");\n\t\t} else {\n\t\t\tcell.setAttribute(\"tabindex\", \"-1\");\n\t\t\tcell.removeAttribute(\"aria-selected\");\n\t\t\tremoveCss(cell, \"webix_color_selected\");\n\t\t}\n\t},\n\t/* handle colors */\n\t_numToHex:function(n){\n\t\treturn color.toHex(n, 2);\n\t},\n\t_rgbToHex:function(r,g,b){\n\t\treturn \"#\"+this._numToHex( Math.floor(r)) +this._numToHex( Math.floor(g)) + this._numToHex(Math.floor(b));\n\t},\n\t_hslToRgb:function(h, s, l){\n\t\tlet r, g, b;\n\t\tif(!s){\n\t\t\tr = g = b = l; // achromatic\n\t\t}else{\n\t\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tlet p = 2 * l - q;\n\t\t\tr = this._hue2rgb(p, q, h + 1/3);\n\t\t\tg = this._hue2rgb(p, q, h);\n\t\t\tb = this._hue2rgb(p, q, h - 1/3);\n\t\t}\n\n\t\treturn {r:r * 255, g:g * 255, b:b * 255};\n\t},\n\t_hue2rgb:function(p, q, t){\n\t\tif(t < 0) t += 1;\n\t\tif(t > 1) t -= 1;\n\t\tif (t < 1/6)\n\t\t\treturn p + (q - p) * 6 * t; \n\t\telse if (t <= 1/2)\n\t\t\treturn q;\n\t\telse if (t < 2/3) \n\t\t\treturn p + (q - p) * (2/3 - t) * 6;\n\t\telse\n\t\t\treturn p;\n\t},\n\t_lightenRgb:function(rgb, lt){\n\t\t/*\tcolor = color * alpha + background * (1 - alpha); */\n\t\tconst r = rgb[0]*lt + 255*(1-lt);\n\t\tconst g = rgb[1]*lt + 255*(1-lt);\n\t\tconst b = rgb[2]*lt + 255*(1-lt);\n\t\treturn {r, g, b};\n\t},\n\t_getGrayScale:function(colCount){\n\t\tconst gray = [];\n\t\tlet\tval = 255,\n\t\t\tstep = val / colCount;\n\n\t\tfor(let i=0; i < colCount; i++){\n\t\t\tval = Math.round(val > 0 ? val : 0);\n\t\t\tgray.push(this._rgbToHex(val, val, val));\n\t\t\tval -= step;\n\t\t}\n\t\tgray[gray.length - 1] = \"#000000\";\n\t\treturn gray;\n\t},\n\t_initPalette:function(config){\n\t\t/* default palette (material and custom) */\n\t\tconst clearColors = this._get_clear_palette();\t\t\n\t\tconfig.cols = clearColors.length; // always use the same set\n\n\t\tconst colors = [];\n\n\t\tlet colorRows = config.rows - 1; // a row is reserved for clear colors\t\t\n\t\tlet lightStep = 1/config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tconst grayColors = this._getGrayScale(config.cols);\n\t\t\tcolors.push(grayColors.reverse()); // inverted order\n\t\t\tlightStep = 1/colorRows;\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tcolors.push(clearColors);\n\n\t\tfor(let step = 0, lt = config.maxLightness; step < colorRows; step++){\n\t\t\tlt-=lightStep;\n\t\t\tcolorRange = [];\n\t\t\tfor(let col = 0; col < config.cols; col++ ){\n\t\t\t\tconst clearRgb = color.toRgb(clearColors[col]);\n\t\t\t\tconst val = this._lightenRgb(clearRgb, lt);\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t}\n\t\tthis._settings.palette = colors;\n\t},\n\t_initOldPalette:function(config){\n\t\t/* old (classic) palette */\n\t\tconst colors = [];\n\t\tconst colorStep = 1/config.cols;\n\n\t\tlet colorRows = config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tcolors.push(this._getGrayScale(config.cols));\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tlet lightStep = (config.maxLightness - config.minLightness)/colorRows;\n\n\t\tfor(let step = 0, lt = config.minLightness; step < colorRows; step++){\n\t\t\tcolorRange = [];\n\t\t\tfor(let c = 0, col = 0; c < config.cols; c++ ){\n\t\t\t\tconst val = this._hslToRgb(col, 1, lt );\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t\tcol += colorStep;\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t\tlt+=lightStep;\n\t\t}\n\n\t\tthis._settings.palette = colors;\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tlet value = this.getValue(), ind, cell;\n\n\t\tif(value) ind = this._findIndex(value);\n\t\tif(!ind) ind = {row:0, col:0};\n\n\t\tif(ind){\n\t\t\tif(mode == \"up\" || mode == \"down\")\n\t\t\t\tind.row = ind.row + (mode == \"up\"?-1:1);\n\t\t\telse if(mode == \"right\" || mode == \"left\")\n\t\t\t\tind.col = ind.col +(mode == \"right\"?1:-1);\n\t\t\telse if(mode == \"top\" )\n\t\t\t\tind.row = ind.col = 0;\n\t\t\telse if(mode == \"bottom\"){\n\t\t\t\tind.row = this._viewobj.lastChild.querySelectorAll(\".webix_color_row\").length-1;\n\t\t\t\tind.col = this._viewobj.lastChild.childNodes[ind.row].childNodes.length-1;\n\t\t\t}\n\t\t\tind.row = Math.max(ind.row, 0);\n\t\t\tif(ind.row>=0){\n\t\t\t\t// check if this is a last row\n\t\t\t\tconst row = this._viewobj.lastChild.childNodes[ind.row];\n\t\t\t\tif (row) cell = row.childNodes[ind.col];\n\t\t\t}\n\t\t\tif(cell){\n\t\t\t\tvalue = cell.getAttribute(/*@attr*/\"webix_val\");\n\t\t\t\tconst config = (details && details.e instanceof KeyboardEvent) ? \"user\" : \"auto\";\n\t\t\t\tthis.setValue(value, config);\n\t\t\t\tthis.callEvent(\"onSelect\", [this._settings.value]);\n\n\t\t\t\tif(focus !== false){\n\t\t\t\t\tconst sel = this._viewobj.querySelector(\"div[tabindex='0']\");\n\t\t\t\t\tif(sel) sel.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_renderRow:function(row, widths, height){\n\t\tconst data = {width: 0, height:0, val:0};\n\t\tlet rowHtml = \"<div class=\\\"webix_color_row\\\" role=\\\"row\\\">\";\n\n\t\tfor(let cell = 0; cell < row.length; cell++){\n\t\t\tdata.width = widths[cell];\n\t\t\tdata.height = height;\n\t\t\tdata.val = row[cell];\n\t\t\trowHtml += this._renderItem(data);\n\t\t}\n\t\trowHtml += \"</div>\";\n\t\treturn rowHtml;\n\t},\n\t_renderItem:function(obj){\n\t\tconst colorTemplate = template(this._settings.template||\"\");\n\t\treturn `<div role=\"gridcell\" tabindex=\"-1\" aria-label=\"${obj.val}\" style=\"width:${obj.width}px;height:${obj.height}px;\" ${/*@attr*/\"webix_val\"}=\"${obj.val}\">${colorTemplate(obj)}</div>`;\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tconst type = this._settings.type;\n\t\tif(!this._settings.palette){\n\t\t\tif (type === \"classic\")\n\t\t\t\tthis._initOldPalette(this._settings);\n\t\t\telse \n\t\t\t\tthis._initPalette(this._settings);\n\t\t}\n\t\tconst palette = this._settings.palette;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\t\tconst padding = type === \"classic\" ? 0 : $active.colorPadding;\n\t\tconst single = typeof palette[0] == \"object\";\n\t\tconst firstRow = single ? palette[0] : palette;\n\n\t\tconst deltaWidth = padding*2 + padding*(firstRow.length-1);\n\t\tconst deltaHeight = padding*2 + padding*(single ? palette.length-1 : 0);\n\n\t\tlet width = this.$width - deltaWidth,\n\t\t\theight =  this.$height - deltaHeight,\n\t\t\twidths = [];\n\n\t\tlet html = `<div class=\"webix_color_palette ${\"webix_palette_\"+type}\" role=\"rowgroup\">`;\n\t\t\n\t\tfor(let i=0; i < firstRow.length; i++){\n\t\t\twidths[i] = Math.floor(width/(firstRow.length - i));\n\t\t\twidth -= widths[i];\n\t\t}\n\n\t\tif(typeof palette[0] == \"object\"){\n\t\t\tfor(let r=0; r < palette.length; r++){\n\t\t\t\tconst cellHeight = Math.floor(height/(palette.length - r));\n\t\t\t\theight -= cellHeight;\n\t\t\t\tconst row = palette[r];\n\t\t\t\thtml += this._renderRow(row, widths, cellHeight);\n\t\t\t}\n\t\t} else\n\t\t\thtml += this._renderRow(palette, widths, height);\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tif(this._settings.value)\n\t\t\tthis.$setValue(this._settings.value);\n\t\telse\n\t\t\tthis._viewobj.lastChild.childNodes[0].childNodes[0].setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, KeysNavigation, base.view, EventSystem);\nexport default {api, view};","import {pos as getPos, addCss, removeCss, offset, preventEvent} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {$active} from \"../webix/skin\";\nimport i18n from \"../webix/i18n\";\nimport env from \"../webix/env\";\n\nimport color from \"../webix/color\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorselect\",\n\tdefaults:{\n\t\twidth: 260,\n\t\theight: 250,\n\t\tvalue:\"#751FE0\"\n\t},\n\t$init:function(){\n\t\tthis._hValue = this._sValue = this._vValue = 0;\n\n\t\t_event(this.$view, \"keydown\", (e) => this._handle_move_keyboard(e));\n\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\t_event(this._colorBlock, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\"));\n\t\t\t_event(this._colorLine, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\", true));\n\t\t\tif (env.touch) {\n\t\t\t\t_event(this._colorBlock, env.touch.down, (e) => this._handle_dnd(e, \"touch\"));\n\t\t\t\t_event(this._colorLine, env.touch.down, (e) => this._handle_dnd(e, \"touch\", true));\n\t\t\t}\n\t\t\t_event(this._colorOutText, \"change\", () => this.setValue(this._colorOutText.value, \"user\"));\n\t\t\tif (this._settings.button)\n\t\t\t\t_event(this._viewobj.querySelector(\".webix_button\"), \"click\", () => {\n\t\t\t\t\tthis.callEvent(\"onColorSelect\", [this.getValue()]);\n\t\t\t\t});\n\t\t});\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._colorCircle = this._colorLineCircle = this._colorBlock = null;\n\t\t\tthis._colorLine = this._colorOutText = this._colorOutBlock = this._offset = null;\n\t\t});\n\t},\n\t$skin:function(){\n\t\tthis._inpHeight = $active.inputHeight - 2*$active.inputPadding;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\tconst rgb = color.toRgb(value);\n\n\t\t\tif(value !==this._current_value){//set by API\n\t\t\t\tconst hsv = color.rgbToHsv(...rgb);\n\t\t\t\tthis._hValue = hsv[0];\n\t\t\t\tthis._sValue = hsv[1];\n\t\t\t\tthis._vValue = hsv[2];\n\t\t\t}\n\n\t\t\tconst left = (this._hValue*this._offset.width)/359;\n\t\t\tthis._colorLineCircle.style.left = left+\"px\";\n\n\t\t\tconst x = this._sValue*(this._offset.width);\n\t\t\tconst y = Math.abs((this._offset.height)*(this._vValue-1));\n\n\t\t\tthis._colorCircle.style.left = Math.max(Math.min(x, this._offset.width), 0)+\"px\";\n\t\t\tthis._colorCircle.style.top = Math.max(Math.min(y, this._offset.height), 0)+\"px\";\n\n\t\t\tthis._colorCircle.setAttribute(\"aria-valuetext\", value);\n\t\t\tthis._colorLineCircle.setAttribute(\"aria-valuetext\", value);\n\n\t\t\tthis._setOutColors(rgb, value);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t},\n\t_setOutColors:function(rgb, hex){\n\t\tif(!rgb) rgb = color.hsvToRgb(this._hValue, this._sValue, this._vValue);\n\t\tif(!hex) hex = \"#\"+color.rgbToHex(rgb);\n\n\t\tconst bgColor = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorCircle.style.backgroundColor = bgColor;\n\t\tthis._colorOutBlock.style.backgroundColor = bgColor;\n\t\tthis._colorOutText.value = hex.toUpperCase();\n\n\t\tthis._current_value = hex;\n\t},\n\t_setBlockColors:function(){\n\t\tconst rgb = color.hsvToRgb(this._hValue, 1, 1);\n\t\tconst rgbStr = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorLineCircle.style.backgroundColor = rgbStr;\n\t\tthis._colorBlock.style.backgroundColor = rgbStr;\n\t},\n\n\t// dragging to set value\n\t_move_block:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tlet y = pos.y - this._offset.y;\n\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\t\ty = Math.max(Math.min(y, this._offset.height), 0);\n\n\t\tthis._colorCircle.style.left = x+\"px\";\n\t\tthis._colorCircle.style.top = y+\"px\";\n\n\t\tconst pxX = (this._offset.width)/100;\n\t\tconst pxY = (this._offset.height)/100;\n\n\t\tconst s = Math.ceil(x/pxX)/100;\n\t\tconst v = Math.ceil(Math.abs(y/pxY-100))/100;\n\n\t\tthis._sValue = s;\n\t\tthis._vValue = v;\n\n\t\tthis._setOutColors();\n\t},\n\t_move_line:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\n\t\tthis._colorLineCircle.style.left = x+\"px\";\n\n\t\tconst h =  Math.round(x*359/this._offset.width);\n\t\tthis._hValue = Math.max(Math.min(h, 359), 0);\n\n\t\tthis._setOutColors();\n\t\tthis._setBlockColors();\n\t},\n\t_handle_dnd:function(e, pointer, line){\n\t\tthis._offset = offset(this._colorBlock);\n\n\t\tif (line){\n\t\t\taddCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._move_line(e);\n\t\t} else {\n\t\t\taddCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._move_block(e);\n\t\t}\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer, line), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop(line))\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer, line){\n\t\tif (line) this._move_line(e);\n\t\telse this._move_block(e);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_handle_move_stop:function(line){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tthis.setValue(this._current_value, \"user\");\n\n\t\tif (line){\n\t\t\tremoveCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._colorLineCircle.focus();\n\t\t} else {\n\t\t\tremoveCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._colorCircle.focus();\n\t\t}\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_move_block_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc/100, 0), 1);\n\t},\n\t_move_line_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc, 0), 359);\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif(code>32 && code <41){\n\t\t\tconst match =  /webix_color_(\\w*)circle/.exec(e.target.className);\n\t\t\tif(!match) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tif(match[1].length){ //line\n\t\t\t\tif(code === 36) this._hValue = 0;\n\t\t\t\telse if(code === 35) this._hValue = 359;\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\t\t}\n\t\t\t\tthis._setBlockColors();\n\t\t\t} else {\n\t\t\t\tif(code === 36){\n\t\t\t\t\tthis._sValue = 0;\n\t\t\t\t\tthis._vValue = 1;\n\t\t\t\t}\n\t\t\t\telse if(code === 35) \n\t\t\t\t\tthis._sValue = this._vValue = 1;\n\t\t\t\telse if(code === 39 || code === 37){\n\t\t\t\t\tlet inc = code === 39 ? 1: -1;\n\t\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 33 || code === 38) ? 1 : -1;\n\t\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setOutColors();\n\n\t\t\t//paint value, black colors may have a bigger step\n\t\t\tif(this._settings.value == this._current_value)\n\t\t\t\tthis.$setValue(this._current_value);\n\t\t\telse\n\t\t\t\tthis.setValue(this._current_value, \"user\");\n\t\t}\n\t},\n\tmoveSelection:function(mode){\n\t\tif(mode == \"pgup\" || mode == \"pgdown\"){ //line\n\t\t\tlet inc = mode === \"pgup\" ? -1 : 1;\n\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t\telse if(mode !=\"top\" && mode !==\"bottom\"){\n\t\t\tlet inc = (mode == \"up\" || mode == \"right\") ? 1 : -1;\n\t\t\tif(mode == \"down\" || mode == \"up\")\n\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\telse\n\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t}\n\t\tthis._setOutColors();\n\t\tthis.setValue(this._current_value, \"auto\");\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tconst inpWidth = (this.$width - $active.dataPadding*3)/2;\n\t\t//8+14 color line, 3(or 4) data paddings \n\t\tconst bHeight = this.$height - 3*$active.dataPadding - 22 - this._inpHeight - (this._settings.button ? (this._inpHeight+$active.dataPadding) : 0);\n\n\t\tlet html = \"<div class=\\\"webix_color_area\\\">\";\n\t\thtml += `\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_block\" style=\"height:${bHeight}px;\">\n\t\t\t\t<div class=\"webix_color_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_line\">\n\t\t\t\t<div class=\"webix_color_line_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"webix_color_out\">\n\t\t\t\t<div style=\"width:${inpWidth}px\" class=\"webix_color_out_block\"></div>\n\t\t\t\t<input type=\"text\" style=\"width:${inpWidth}px\" class=\"webix_color_out_text\"></input>\n\t\t\t</div>\n\t\t`;\n\n\t\tif(this._settings.button)\n\t\t\thtml += `<div class='webix_secondary'><button class=\"webix_button\">${i18n.combo.select}</button></div>`;\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tthis._collect_vars();\n\t\tthis.$setValue(this._settings.value);\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_collect_vars:function(){\n\t\tthis._colorCircle = this._viewobj.querySelector(\".webix_color_circle\");\n\t\tthis._colorLineCircle = this._viewobj.querySelector(\".webix_color_line_circle\");\n\t\tthis._colorBlock = this._viewobj.querySelector(\".webix_color_block\");\n\t\tthis._colorLine = this._viewobj.querySelector(\".webix_color_line\");\n\t\tthis._colorOutText = this._viewobj.querySelector(\".webix_color_out_text\");\n\t\tthis._colorOutBlock = this._viewobj.querySelector(\".webix_color_out_block\");\n\n\t\tthis._offset = offset(this._colorBlock);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, base.view, EventSystem);\nexport default {api, view};","import {triggerEvent, preventEvent, getTextSize, locate} from \"../webix/html\";\nimport {protoUI, ui} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport baseview from \"../views/baseview\";\nimport base from \"../views/view\";\n\nimport AutoTooltip from \"../core/autotooltip\";\nimport UIManager from \"../core/uimanager\";\nimport EventSystem from \"../core/eventsystem\";\nimport AtomRender from \"../core/atomrender\";\nimport Settings from \"../core/settings\";\n\n\nconst api = {\n\tname:\"button\",\n\ttouchable:true,\n\t$skin:function(){\n\t\tthis.defaults.height = $active.buttonHeight||$active.inputHeight;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tlet text = common.$renderInput(obj, common);\n\t\t\tif (obj.popup)\n\t\t\t\ttext = text.replace(\"<button\", \"<button aria-haspopup='true' aria-expanded='false'\");\n\t\t\tif (obj.badge || obj.badge === 0)\n\t\t\t\ttext = text.replace(\"</button>\", \"<span class='webix_badge'>\"+obj.badge+\"</span></button>\");\n\t\t\treturn \"<div class='webix_el_box' style='width:\"+obj.awidth+\"px; height:\"+obj.aheight+\"px'>\"+text+\"</div>\";\n\t\t},\n\t\tlabel:\"\",\n\t\tvalue:\"\",\n\t\tborderless:true\n\t},\n\t$renderInput:function(obj){\n\t\treturn \"<button type='button' class='webix_button'>\"+(obj.label||obj.value)+\"</button>\";\n\t},\n\t$init:function(config){\n\t\tthis._viewobj.className += \" webix_control webix_el_\"+(this.$cssName||this.name);\n\n\t\tthis._destroy_with_me = [];\n\t\tthis._set_default_css(config);\n\n\t\tthis.data = this._settings;\n\t\tthis._dataobj = this._viewobj;\n\n\t\tthis.$ready.push(function(){ this._calc_size(this.config); });\n\t},\n\thotkey_setter: function(key){\n\t\tvar control = this;\n\t\tthis._addElementHotKey(key, function(view,ev){\n\t\t\tif(control.isVisible()){\n\t\t\t\tvar elem = control.$view.firstChild;\n\t\t\t\ttriggerEvent(elem, \"MouseEvent\", \"click\");\n\t\t\t\tpreventEvent(ev);\n\t\t\t}\n\t\t});\n\t},\n\t_set_default_css: function(config){\n\t\tif (!config.css || !this._get_class(config.css) || (this.defaults.css && !this._get_class(this.defaults.css))){\n\t\t\tthis._viewobj.className += \" webix_secondary\";\n\t\t}\n\t},\n\t_get_class:function(css){\n\t\tif(typeof css == \"string\"){\n\t\t\tconst classes = { webix_danger:1, webix_transparent:1, webix_primary:1 };\n\t\t\tfor(let i in classes){\n\t\t\t\tif(css.indexOf(i)!==-1)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_addElementHotKey: function(key, func, view){\n\t\tvar keyCode = UIManager.addHotKey(key, func, view);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tUIManager.removeHotKey(keyCode, func, view);\n\t\t});\n\t},\n\ttype_setter:function(value){\n\t\tif (this._types[value])\n\t\t\tthis.$renderInput = template(this._types[value]);\n\t\treturn value;\n\t},\n\t_set_inner_size:false,\n\t_types:{\n\t\timage:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'>#label#</button>\",\n\t\timageTop:\"<button type='button' class='webix_button webix_img_btn_top'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'><div class='webix_img_btn_text'>#label#</div></button>\",\n\n\t\ticon:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><span class='webix_icon_btn #icon#' style='max-width:#cheight#px;'></span>#label#</button>\",\n\t\ticonTop:\"<button type='button' class='webix_button webix_img_btn_top' style='width:100%;text-align:center;'><span class='webix_icon #icon#'></span><div class='webix_img_btn_text'>#label#</div></button>\",\n\t},\n\t_findAllInputs: function(){\n\t\tvar result = [];\n\t\tvar tagNames = [\"input\",\"select\",\"textarea\",\"button\"];\n\t\tfor(var i=0; i< tagNames.length; i++){\n\t\t\tvar inputs = this.$view.getElementsByTagName(tagNames[i]);\n\t\t\tfor(var j = 0; j< inputs.length; j++){\n\t\t\t\tresult.push(inputs[j]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tdisable: function(){\n\t\tvar i, node, elem = this._getBox();\n\t\tbaseview.api.disable.apply(this, arguments);\n\t\tif(elem && elem.className.indexOf(\" webix_disabled_box\")== -1){\n\t\t\telem.className += \" webix_disabled_box\";\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].setAttribute(\"disabled\",true);\n\n\t\t\t// richselect and based on it\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && node.tagName.toLowerCase() == \"div\"){\n\t\t\t\tthis._disabledTabIndex = node.getAttribute(\"tabIndex\");\n\t\t\t\tnode.removeAttribute(\"tabIndex\");\n\t\t\t}\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className += \" webix_disabled_top_label\";\n\t\t\t}\n\t\t}\n\t},\n\tenable: function(){\n\t\tbaseview.api.enable.apply(this, arguments);\n\t\tvar node,\n\t\t\telem = this._getBox();\n\t\tif(elem){\n\t\t\telem.className = elem.className.replace(\" webix_disabled_box\",\"\");\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(var i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].removeAttribute(\"disabled\");\n\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && !isUndefined(this._disabledTabIndex))\n\t\t\t\tnode.setAttribute(\"tabIndex\",this._disabledTabIndex);\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className = label.className.replace(\" webix_disabled_top_label\",\"\");\n\t\t\t}\n\t\t}\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (this.$compareValue(oldvalue, value)){\n\t\t\t//controls with post formating, we need to repaint value\n\t\t\tif(this._rendered_input && this._pattern){\n\t\t\t\tvalue = this._pattern(value);\n\t\t\t\tconst input = this.getInputNode();\n\t\t\t\tif(input && !isUndefined(input.value) && input.value != value)\n\t\t\t\t\tthis.$setValue(value);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._settings.value = value;\n\t\tif (this._rendered_input)\n\t\t\tthis.$setValue(value);\n\n\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t},\n\t$compareValue:function(oldvalue, value){ \n\t\tif (typeof value === \"number\") value = value.toString();\n\t\tif (typeof oldvalue === \"number\") oldvalue = oldvalue.toString();\n\t\treturn oldvalue == value;\n\t},\n\t$prepareValue:function(value){ return value === 0 ? \"0\" : (value || \"\").toString(); },\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\t//visual part of setValue\n\t$setValue:function(value){\n\t\tconst node = this.getInputNode();\n\t\tif (node && !this._types[this._settings.type]){\n\t\t\tvalue = this._settings.label || value;\n\t\t\tif (node.tagName==\"BUTTON\") node.innerHTML = value;\n\t\t\telse node.value = value;\n\t\t}\n\t},\n\tgetValue:function(){\n\t\t//if button was rendered - returning actual value\n\t\t//otherwise - returning last set value\n\t\tvar value = this._rendered_input ? this.$getValue() : this._settings.value;\n\t\treturn (typeof value == \"undefined\") ? \"\" : value;\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value||\"\";\t\n\t},\n\tfocus:function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\t\t\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.focus) input.focus();\n\t},\n\tblur:function() {\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.blur) input.blur();\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0]||this._dataobj.getElementsByTagName(\"button\")[0];\n\t},\n\t//get top-level sub-container\n\t_getBox:function(){\n\t\tfor(var i=0;i< this._dataobj.childNodes.length;i++){\n\t\t\tif(this._dataobj.childNodes[i].className.indexOf(\"webix_el_box\")>=0)\n\t\t\t\treturn this._dataobj.childNodes[i];\n\t\t}\n\t\treturn null;\n\t},\n\t_get_tooltip_data:function(t,e){\n\t\tlet node = e.target;\n\t\tlet box = this._getBox();\n\n\t\tconst isTopLabel = this._settings.labelPosition == \"top\" && this._dataobj.firstChild.contains(node);\n\n\t\tif (isTopLabel || box && box.contains(node))\n\t\t\treturn this._settings;\n\t\treturn null;\n\t},\n\t_sqrt_2:Math.sqrt(2),\n\t_calc_size:function(config){\n\t\tconfig = config || this._settings;\n\t\tif (config.autowidth){\n\t\t\tlet width = getTextSize((config.value||config.label || \"\"), \"webixbutton\").width +\n\t\t\t\t(config.badge||config.badge===0 ? getTextSize(config.badge, \"webix_badge\").width * 2 - 32 : 0) +\n\t\t\t\t(config.type === \"icon\" ? 24 : 0) +\n\t\t\t\t(config.type === \"image\" ? config.height-$active.inputPadding : 0);\n\n\t\t\twidth = Math.max(config.minWidth || 0, width);\n\t\t\tconfig.width = Math.min(config.maxWidth || Infinity, width);\n\t\t}\n\t},\n\t_calck_input_size:function(){\n\t\t//use width for both width and inputWidth settings in clever way\n\t\t//in form, we can define width for some element smaller than for siblings\n\t\t//it will use inputWidth to render the desired view\n\t\tthis._input_width = this._settings.inputWidth || \n\t\t\t((this._content_width - this._settings.width > 2)?this._settings.width:0) || this._content_width;\n\t\tthis._input_height = this._settings.inputHeight||this._inputHeight||0;\n\t},\n\tresize: function(){\n\t\tthis._calc_size();\n\t\treturn base.api.resize.apply(this,arguments);\n\t},\n\trender:function(){\n\t\tthis._calck_input_size();\n\t\tthis._settings.awidth  = this._input_width||this._content_width;\n\t\tthis._settings.aheight = this._input_height||this._content_height;\n\n\t\t//image button - image width\n\t\tthis._settings.bheight = this._settings.aheight+2;\n\t\tthis._settings.cheight = this._settings.aheight- 2*$active.inputPadding;\n\t\tthis._settings.dheight = this._settings.cheight - 2; // - borders\n\n\t\tif(AtomRender.render.call(this)){\n\t\t\tthis._rendered_input = true;\n\t\t\tif (this._set_inner_size) this._set_inner_size();\n\t\t\tif (this._settings.align){\n\t\t\t\tvar handle = this._dataobj.firstChild;\n\t\t\t\tif (this._settings.labelPosition == \"top\" && handle.nextSibling)\n\t\t\t\t\thandle = handle.nextSibling;\n\n\t\t\t\tswitch(this._settings.align){\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\thandle.style.cssFloat = \"right\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\thandle.style.display = \"inline-block\";\n\t\t\t\t\t\thandle.parentNode.style.textAlign = \"center\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\thandle.style.marginTop = Math.round((this._content_height-this._input_height)/2)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bottom\": \n\t\t\t\t\t\thandle.style.marginTop = (this._content_height-this._input_height)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\thandle.style.cssFloat = \"left\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tassert(false, \"Unknown align mode: \"+this._settings.align);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$render)\n\t\t\t\tthis.$render(this.data);\n\n\t\t\tif (this._settings.disabled)\n\t\t\t\tthis.disable();\n\n\t\t\tif (this._init_once){\n\t\t\t\tthis._init_once(this.data);\n\t\t\t\tthis._init_once = 0;\n\t\t\t}\n\t\t}\n\t},\n\n\trefresh:function(){ this.render(); },\n\n\ton_click:{\n\t\t_handle_tab_click: function(ev){\n\t\t\tconst id = locate(ev, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClick\", [id, ev])){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t\tthis.callEvent(\"onAfterTabClick\", [id, ev]);\n\t\t\t}\n\t\t},\n\t\twebix_all_segments:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_all_tabs:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_inp_counter_next:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.next(this._settings.step, \"user\");\n\t\t},\n\t\twebix_inp_counter_prev:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.prev(this._settings.step, \"user\");\n\t\t},\n\t\twebix_input_icon:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\twebix_clear_icon:function(){\n\t\t\tif (this.$allowsClear) this.setValue(\"\", \"user\");\n\t\t\treturn false;\n\t\t},\n\t\twebix_inp_checkbox_border: function(e) {\n\t\t\tif (!this._settings.disabled && e.target.tagName != \"DIV\" && !this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_checkbox_label: function() {\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_radio_border: function(e) {\n\t\t\tconst id = locate(e, /*@attr*/\"radio_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t},\n\t\twebix_tab_more_icon: function(ev,obj,node){\n\t\t\tconst popup = this.getPopup();\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tpopup.resize();\n\t\t\t\tpopup.show(node, null, true);\n\t\t\t} else\n\t\t\t\tpopup.hide();\n\t\t},\n\t\twebix_tab_close:function(e){\n\t\t\tconst id = locate(e, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClose\", [id, e]))\n\t\t\t\tthis.removeOption(id);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t//method do not used by button, but  used by other child-views\n\t_check_options:function(opts){\n\t\tassert(!!opts, this.name+\": options not defined\");\n\t\tassert(isArray(opts), this.name+\": options must be an array\");\n\n\t\tfor(var i=0;i<opts.length;i++){\n\t\t\t// asserts need to be removed in final version\t\t\t\n\t\t\tassert(!opts[i].text, \"Please replace .text with .value in control config\");\n\t\t\tassert(!opts[i].label, \"Please replace .label with .value in control config\");\n\n\t\t\tif(typeof opts[i]==\"string\"){\n\t\t\t\topts[i] = {id:opts[i], value:opts[i]};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(isUndefined(opts[i].id))\n\t\t\t\t\topts[i].id = opts[i].value;\n\n\t\t\t\tif(isUndefined(opts[i].value))\n\t\t\t\t\topts[i].value = opts[i].id;\n\t\t\t}\n\t\t}\n\t\treturn opts;\n\t},\n\t_get_div_placeholder: function(obj){\n\t\tvar placeholder = (obj?obj.placeholder:this._settings.placeholder);\n\t\treturn (placeholder?\"<span class='webix_placeholder'>\"+placeholder+\"</span>\":\"\");\n\t},\n\tpopup_setter: function(value){\n\t\tif (typeof value === \"object\" && !value.name){\n\t\t\tconst popup = ui(value);\n\t\t\tvalue = popup._settings.id;\n\t\t\tthis._destroy_with_me.push(popup);\n\t\t}\n\t\treturn value;\n\t}\n};\n\nconst view = protoUI(api, base.view, AutoTooltip, AtomRender, Settings, EventSystem);\nexport default {api, view};","import {protoUI, ui, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray, extend, uid, delay} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {getSelectionRange, setSelectionRange, getTextSize} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport rules from \"../webix/rules\";\nimport button from \"./button\";\nimport base from \"../views/view\";\n\nimport TextPattern from \"../core/textpattern\";\n\nconst api = {\n\tname:\"text\",\n\t$allowsClear:true,\n\t_init_onchange:function(){\n\t\tif (this.$allowsClear){\n\t\t\tconst c = this._settings;\n\t\t\tconst node = this.getInputNode();\n\t\t\t//attach onChange handler only for controls which do not manage blur on their own\n\t\t\t//for example - combo\n\t\t\tif (!this.$onBlur && node)\n\t\t\t\t_event(node, \"change\", () => this._applyChanges(\"user\"));\n\t\t\tif (c.suggest)\n\t\t\t\t$$(c.suggest).linkInput(this);\n\t\t\tif (c.clear && !this.addSection){\n\t\t\t\tthis._clear_icon = this.$view.querySelector(\".webix_input_icon:last-child\");\n\t\t\t\tif (node.tagName == \"INPUT\" || node.tagName == \"SELECT\")\n\t\t\t\t\t_event(node, \"input\", (e) => this._toggleClearIcon(e.target.value));\n\n\t\t\t\tconst text = this.getText ? this.getText() : c.text||c.value;\n\t\t\t\tthis._toggleClearIcon(text);\n\t\t\t}\n\t\t}\n\t},\n\t_applyChanges: function(c){\n\t\tconst value = this.getValue();\n\t\tthis.setValue(value, c);\n\t},\n\t_toggleClearIcon:function(value){\n\t\tconst c = this._settings;\n\t\tif (c.readonly || !c.clear || !this._clear_icon) return;\n\n\t\tif (c.clear == \"hover\" || c.clear == \"replace\"){\n\t\t\tconst css = value ? \"webix_clear_icon \"+(c.clear == \"hover\" ? c.icon : \"wxi-close\") : c.icon;\n\t\t\tthis._clear_icon.className = \"webix_input_icon \" + css;\n\t\t} else {\n\t\t\tconst state = value ? \"\" : \"hidden\";\n\t\t\tif (this._clear_icon.style.visibility !== state)\n\t\t\t\tthis._clear_icon.style.visibility = state;\n\t\t}\n\t},\n\t$skin:function(){\n\t\tbutton.api.$skin.call(this);\n\n\t\tthis.defaults.height = $active.inputHeight;\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t\tthis._inputSpacing = $active.inputSpacing;\n\t\tthis._labelTopHeight = $active.labelTopHeight;\n\t},\n\t$init:function(config){\n\t\tif (config.labelPosition == \"top\" && isUndefined(config.height) && this.defaults.height) // textarea\n\t\t\tconfig.height = this.defaults.height + (config.label?this._labelTopHeight:0);\n\n\t\t// used in clear_setter\n\t\tif (!isUndefined(config.icon))\n\t\t\tthis._settings.icon = config.icon;\n\n\t\tif (this.$onBlur)\n\t\t\tthis.attachEvent(\"onBlur\", function(){\n\t\t\t\tif (this._rendered_input) this.$onBlur();\n\t\t\t});\n\t\tthis.attachEvent(\"onAfterRender\", this._init_onchange);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._clear_icon = null;\n\t\t});\n\t},\n\tclear_setter:function(value){\n\t\tif (value){\n\t\t\tif (!this._settings.icon) value = true;\n\n\t\t\tif (value !== \"hover\" && value !== \"replace\")\n\t\t\t\tvalue = !!value;\n\t\t}\n\t\treturn value;\n\t},\n\t$renderIcon:function(c){\n\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\tconst padding = (height - 18)/2 -1;\n\t\tlet right = this._inputSpacing/2 - 24;\n\t\tlet html = \"\";\n\n\t\tif (c.icon){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon \"+c.icon+\"'></span>\";\n\t\t}\n\n\t\tif (!c.readonly && c.clear === true){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_clear_icon webix_icon_transparent wxi-close'></span>\";\n\t\t}\n\n\t\treturn html;\n\t},\n\trelatedView_setter:function(value){\n\t\tthis.attachEvent(\"onChange\", function(){\n\t\t\tconst value = this.getValue();\n\t\t\tconst mode = this._settings.relatedAction;\n\t\t\tconst viewid = this._settings.relatedView;\n\t\t\tlet view = $$(viewid);\n\t\t\tif (!view){\n\t\t\t\tconst top = this.getTopParentView();\n\t\t\t\tif (top && top.$$)\n\t\t\t\t\tview = top.$$(viewid);\n\t\t\t}\n\n\t\t\tassert(view, \"Invalid relatedView: \"+viewid);\n\n\t\t\tif (mode == \"enable\"){\n\t\t\t\tif (value) view.enable(); else view.disable();\n\t\t\t} else {\n\t\t\t\tif (value) view.show(); else view.hide();\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t},\n\tvalidateEvent_setter:function(value){\n\t\tif (value == \"blur\")\n\t\t\tthis.attachEvent(\"onBlur\", this.validate);\n\n\t\tif (value == \"key\")\n\t\t\tthis.attachEvent(\"onTimedKeyPress\", this.validate);\n\n\t\treturn value;\n\t},\n\tvalidate:function(){\n\t\tlet rule = this._settings.validate;\n\t\tif (!rule && this._settings.required)\n\t\t\trule = rules.isNotEmpty;\n\n\t\tconst form =this.getFormView();\n\t\tconst name = this._settings.name;\n\t\tconst value = this.getValue();\n\t\tconst data = {}; data[name] = value;\n\n\t\tassert(form, \"Validation works only for fields in the form\");\n\t\tassert(name, \"Validation works only for fields with name\");\n\n\t\tif (rule && !form._validate(rule, value, data, name))\n\t\t\treturn false;\n\t\treturn true;\n\t},\n\t_getInvalidText: function(){\n\t\tconst text = this._settings.invalidMessage;\n\t\tif(typeof text == \"function\"){\n\t\t\ttext.call(this);\n\t\t}\n\t\treturn text;\n\t},\n\tbottomLabel_setter: function(text){\n\t\t// this._get_input_width returns 0\n\t\t// use delay to wait for the end of the render\n\t\tdelay(() => {\n\t\t\tif(!this.$destructed)\n\t\t\t\tthis.setBottomText(text);\n\t\t});\n\t},\n\tsetBottomText: function(text){\n\t\tconst config = this._settings;\n\t\tif (!isUndefined(text)){\n\t\t\tif (config.bottomLabel == text) return;\n\t\t\tconfig.bottomLabel = text;\n\t\t}\n\n\t\tlet sel;\n\t\tconst input = this.getInputNode();\n\t\tif (input && !isUndefined(input.value)){\n\t\t\tif (input == document.activeElement) sel = getSelectionRange(input);\n\t\t\t// save input value before rendering\n\t\t\tthis._applyChanges(\"auto\");\n\t\t}\n\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (!message && !config.bottomPadding)\n\t\t\tconfig.inputHeight = 0;\n\n\t\tif (message && (!config.bottomPadding || this._restorePadding)){\n\t\t\tthis._restorePadding = 1;\n\t\t\tconfig.bottomPadding = getTextSize(message, \"webix_inp_bottom_label\", this._get_input_width(config)).height;\n\t\t\tthis._setInputHeight();\n\t\t\tthis.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else if (!message && this._restorePadding){\n\t\t\tconfig.bottomPadding = this._restorePadding = 0;\n\t\t\t//textarea\n\t\t\tif (!config.height) this.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else\n\t\t\tthis.render();\n\n\t\tif (sel)\n\t\t\tsetSelectionRange(this.getInputNode(), sel.start, sel.end);\n\t},\n\t$getSize: function(){\n\t\tconst sizes = base.api.$getSize.apply(this,arguments);\n\t\tconst heightInc = this.config.bottomPadding;\n\t\tif(heightInc){\n\t\t\tsizes[2] += heightInc;\n\t\t\tsizes[3] += heightInc;\n\t\t}\n\t\treturn sizes;\n\t},\n\t$setSize:function(x,y){\n\t\tconst config = this._settings;\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tif (!x || !y) return;\n\n\t\t\tif (config.labelPosition == \"top\")\n\t\t\t\tconfig.labelWidth = 0;\n\t\t\telse if(config.label)\n\t\t\t\tconfig.labelWidth = this._getLabelWidth(config.labelWidth, config.label, config.required);\n\t\t\tthis._setInputHeight();\n\t\t\tthis.render();\n\t\t}\n\t},\n\t_setInputHeight: function(){\n\t\tif(!this.$renderTag){\n\t\t\tconst config = this._settings;\n\t\t\tif (config.labelPosition == \"top\") {\n\t\t\t\t// textarea\n\t\t\t\tif (!config.inputHeight)\n\t\t\t\t\tthis._inputHeight = this._content_height - (config.label ? this._labelTopHeight : 0) - (config.bottomPadding || 0);\n\t\t\t} else if (config.bottomPadding)\n\t\t\t\tconfig.inputHeight = this._content_height - this.config.bottomPadding;\n\t\t}\n\t},\n\t_get_input_width: function(config){\n\t\tconst width = (this._input_width||0) - (config.label?config.labelWidth:0) - this._inputSpacing - (config.iconWidth || 0);\n\n\t\t//prevent js error in IE\n\t\treturn (width < 0)?0:width;\n\t},\n\t_render_div_block:function(obj, common){\n\t\tconst id = \"x\"+uid();\n\t\tconst width = common._get_input_width(obj);\n\t\tconst inputAlign = obj.inputAlign || \"left\";\n\t\tconst height = obj.aheight - 2*$active.inputPadding - 2*$active.borderWidth;\n\t\tconst rightPadding = obj.clear === true ? \"padding-right:51px;\" : \"\";\n\t\tconst text = (obj.text||obj.value||this._get_div_placeholder(obj));\n\t\tconst html = \"<div class='webix_inp_static' role='combobox' aria-label='\"+template.escape(obj.label)+\"' tabindex='0'\"+(obj.readonly?\" aria-readonly='true'\":\"\")+(obj.invalid?\"aria-invalid='true'\":\"\")+\" onclick='' style='line-height:\"+height+\"px;width:\"+width+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'>\"+text+\"</div>\";\n\t\treturn common.$renderInput(obj, html, id);\n\t},\n\t_baseInputHTML:function(tag){\n\t\tlet html = \"<\"+tag+(this._settings.placeholder?\" placeholder='\"+template.escape(this._settings.placeholder)+\"' \":\" \");\n\t\tif (this._settings.readonly)\n\t\t\thtml += \"readonly='true' aria-readonly=''\";\n\t\tif(this._settings.required)\n\t\t\thtml += \"aria-required='true'\";\n\t\tif(this._settings.invalid)\n\t\t\thtml += \"aria-invalid='true'\";\n\n\t\tconst attrs = this._settings.attributes;\n\t\tif (attrs)\n\t\t\tfor(const prop in attrs)\n\t\t\t\thtml += prop+\"='\"+attrs[prop]+\"' \";\n\t\treturn html;\n\t},\n\t$renderLabel: function(config, id){\n\t\tlet label = \"\";\n\n\t\tif (config.label){\n\t\t\tlet top = this._settings.labelPosition == \"top\";\n\t\t\tlet style = `text-align:${config.labelAlign||\"left\"}; line-height:${this._getLabelHeight(top)}px; `;\n\n\t\t\tif (top)\n\t\t\t\tstyle += \"display:block;\";\n\t\t\telse\n\t\t\t\tstyle += config.labelWidth ? `width:${config.labelWidth}px;` : \"display:none;\";\n\n\t\t\tlabel = \"<label style='\"+style+\"' onclick='' for='\"+id+\"' class='webix_inp_\"+(top?\"top_\":\"\")+\"label \"+(config.required?\"webix_required\":\"\")+\"'>\" + (config.label||\"\") + \"</label>\";\n\t\t}\n\t\treturn label;\n\t},\n\t_getLabelHeight:function(top){\n\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : (this._settings.aheight - 2*this._settings.inputPadding);\n\t},\n\t$renderInput: function(config, div_start, id) {\n\t\tconst inputAlign = (config.inputAlign||\"left\");\n\t\tconst top = (config.labelPosition == \"top\");\n\t\tconst inputWidth = this._get_input_width(config);\n\n\t\tid = id||uid();\n\n\t\tconst label = this.$renderLabel(config,id);\n\t\tlet html = \"\";\n\t\tif(div_start){\n\t\t\thtml += div_start;\n\t\t} else {\n\t\t\tconst value =  template.escape(config.text || this._pattern(config.value));\n\t\t\tlet rightPadding = (config.icon || config.clear ? 27 : 0) + (config.icon && config.clear === true ? 24 : 0);\n\t\t\trightPadding = rightPadding && !this.addSection ? \"padding-right:\"+rightPadding+\"px;\" : \"\";\n\n\t\t\thtml += this._baseInputHTML(\"input\")+\"id='\"+id+\"' type='\"+(config.type||this.name)+\"'\"+(config.editable?\" role='combobox'\":\"\")+\n\t\t\t\t\" value='\"+value+\"' style='width:\"+inputWidth+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'\";\n\n\t\t\tconst attrs = config.attributes;\n\t\t\tif (attrs)\n\t\t\t\tfor(let prop in attrs)\n\t\t\t\t\thtml += \" \"+prop+\"='\"+attrs[prop]+\"'\";\n\t\t\thtml += \" />\";\n\t\t}\n\t\thtml += this.$renderIcon ? this.$renderIcon(config) : \"\";\n\n\t\tlet result = \"\";\n\t\t//label position, top or left\n\t\tif (top)\n\t\t\tresult = label+\"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+html+\"</div>\";\n\t\telse\n\t\t\tresult = \"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+label+html+\"</div>\";\n\n\t\t//bottom message text\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (message){\n\t\t\tconst padding = config.awidth - inputWidth - $active.inputPadding;\n\t\t\tresult += \"<div class='webix_inp_bottom_label'\"+(config.invalid?\"role='alert' aria-relevant='all'\":\"\")+\" style='width:\"+(inputWidth||config.awidth)+\"px;margin-left:\"+Math.max(padding, $active.inputPadding)+\"px;'>\"+message+\"</div>\";\n\t\t}\n\n\t\treturn result;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\treturn common.$renderInput(obj);\n\t\t},\n\t\tlabel:\"\",\n\t\tlabelWidth:80\n\t},\n\t_getLabelWidth: function(width, label, required){\n\t\tif(width == \"auto\")\n\t\t\twidth = getTextSize(label, \"webix_inp_label\"+(required ? \" webix_required\" : \"\")).width;\n\t\treturn width ? Math.max(width, $active.dataPadding) : 0;\n\t},\n\ttype_setter:function(value){ return value; },\n\t_set_inner_size:false,\n\t_set_default_css:function(){},\n\t_pattern:function(value){ return value; },\n\t$setValue:function(value){\n\t\tvalue = this._pattern(value);\n\n\t\tif(this.getInputNode())\n\t\t\tthis.getInputNode().value = value;\n\n\t\tthis._toggleClearIcon(value);\n\t},\n\t$getValue:function(){\n\t\treturn this._pattern(this.getInputNode().value, false);\n\t},\n\tsetValueHere:function(v, data, details){\n\t\tif (details && details.symbol){\n\t\t\tconst s = details.symbol;\n\t\t\tlet value = this.getValue();\n\t\t\tlet last = value.substring(details.pos);\n\n\t\t\tvalue = value.substring(0, details.pos);\n\t\t\tvalue = value.substring(0, value.lastIndexOf(s)+s.length) + v;\n\n\t\t\tthis.setValue(value + last, details.config);\n\t\t\tsetSelectionRange(this.getInputNode(), value.length);\n\t\t} else\n\t\t\tthis.setValue(v, details && details.config);\n\t},\n\tsuggest_setter:function(value){\n\t\tif (value){\n\t\t\tassert(value !== true, \"suggest options can't be set as true, data need to be provided instead\");\n\n\t\t\tif (typeof value == \"string\"){\n\t\t\t\tconst attempt = $$(value);\n\t\t\t\tif (attempt) \n\t\t\t\t\treturn $$(value)._settings.id;\n\n\t\t\t\tvalue = { body: { url:value , dataFeed:value }};\n\t\t\t}\n\t\t\telse if (value.getItem)\n\t\t\t\tvalue = { body: { data:value }};\n\t\t\telse if (isArray(value))\n\t\t\t\tvalue = { body: { data: this._check_options(value) }};\n\t\t\telse if (!value.body)\n\t\t\t\tvalue.body = { };\n\n\t\t\textend(value, { view:\"suggest\" });\n\n\t\t\tconst view = ui(value);\n\t\t\tthis._destroy_with_me.push(view);\n\n\t\t\tthis.$ready.push(() => view._settings.master = this._settings.id);\n\t\t\treturn view._settings.id;\n\t\t}\n\t\treturn false;\n\t}\n};\n\nconst view = protoUI(api, TextPattern, button.view);\nexport default {api, view};","import Number from \"../core/number\";\n\nimport patterns from \"../webix/patterns\";\n\nimport {getSelectionRange, setSelectionRange} from \"../webix/html\";\nimport {bind, isUndefined} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\n\nconst nav_controls = {\n\t9:\"tab\",\n\t38:\"up\",\n\t40:\"down\",\n\t37:\"left\",\n\t39:\"right\"\n};\n\nconst TextPattern = {\n\t$init:function(config){\n\t\tconst pattern =  this.defaults.pattern || config.pattern;\n\t\tlet format = this.defaults.format || config.format;\n\t\tconfig.value = isUndefined(config.value) ? \"\" :config.value;\n\n\t\tif (pattern || (format && !this.format_setter)){\n\t\t\tthis.attachEvent(\"onKeyPress\", function(code, e){\n\t\t\t\tif(e.ctrlKey || e.altKey || this._settings.readonly || this._custom_format)\n\t\t\t\t\treturn;\n\n\t\t\t\tif(code>105 && code<112) //numpad operators\n\t\t\t\t\tcode -=64;\n\n\t\t\t\tif(nav_controls[code] && code !== 8 && code !==46){  //del && bsp\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._on_key_pressed(e, code);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tthis.attachEvent(\"onAfterRender\", this._after_render);\n\t\t\tthis.getText = function(){ return this.getInputNode().value; };\n\t\t\tthis.$prepareValue = function(value){ return this._pattern(value, false); };\n\t\t\tthis._pattern = function(value, mode){\n\t\t\t\tif (mode === false)\n\t\t\t\t\treturn this._getRawValue(value);\n\t\t\t\telse\n\t\t\t\t\treturn this._matchPattern(value);\n\t\t\t};\n\n\t\t\tif (format){\n\t\t\t\tif (typeof format === \"object\"){\n\t\t\t\t\tthis._custom_format = format;\n\t\t\t\t} else {\n\t\t\t\t\tformat = Number.getConfig(format);\n\t\t\t\t\tthis._custom_format = {\n\t\t\t\t\t\tparse : function(value){ return Number.parse(value, format); },\n\t\t\t\t\t\tedit : function(value){ return Number.format(value, format); },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// initialize pattern before value_setter\n\t\tif (pattern){\n\t\t\tthis._settings.pattern = this.pattern_setter(pattern);\n\t\t\tdelete config.pattern;\n\t\t}\n\t},\n\tpattern_setter:function(value){\n\t\tlet pattern = patterns[value] || value;\n\n\t\tif (typeof pattern == \"string\") pattern = { mask: pattern };\n\t\tpattern.allow = pattern.allow || /[A-Za-z0-9]/g;\n\n\t\tthis._patternScheme(pattern);\n\t\treturn pattern;\n\t},\n\t_init_validation:function(){\n\t\tthis.config.validate = this.config.validate || bind(function(){\n\t\t\tconst value = this.getText();\n\t\t\tconst raw = value.replace(this._pattern_chars, \"\");\n\t\t\tconst matches = (value.toString().match(this._pattern_allows) || []).join(\"\");\n\t\t\treturn (matches.length == raw.length && value.length == this._settings.pattern.mask.length);\n\t\t}, this);\n\t},\n\t_after_render:function(){\n\t\tif (!this._custom_format) \n\t\t\t_event(this.getInputNode(), \"input\", function(){\n\t\t\t\tconst stamp = (new Date()).valueOf();\n\t\t\t\tif(!this._property_stamp || stamp-this._property_stamp>100){\n\t\t\t\t\tthis._property_stamp = stamp;\n\t\t\t\t\tthis.$setValue(this.getText());\n\t\t\t\t}\n\t\t\t}, {bind:this});\n\n\t\t_event(this.getInputNode(), \"blur\", () => this._applyChanges(\"user\"));\n\t},\n\t_patternScheme:function(pattern){\n\t\tlet mask = pattern.mask, scheme = {}, chars = \"\", count = 0;\n\t\t\n\t\tfor(let i = 0; i<mask.length; i++){\n\t\t\tif(mask[i] === \"#\"){\n\t\t\t\tscheme[i] = count; count++;\n\t\t\t} else {\n\t\t\t\tscheme[i] = false;\n\t\t\t\tif(chars.indexOf(mask[i]) === -1) chars+=\"\\\\\"+mask[i];\n\t\t\t}\n\t\t}\n\n\t\tthis._pattern_allows = pattern.allow;\n\t\tthis._pattern_chars = new RegExp(\"[\"+chars+\"]\", \"g\");\n\t\tthis._pattern_scheme = scheme;\n\n\t\tthis._init_validation();\n\t},\n\t_on_key_pressed:function(e, code){\n\t\tconst node = this.getInputNode();\n\t\tlet value = node.value;\n\t\tlet pos = getSelectionRange(node);\n\t\tlet chr = \"\";\n\t\t\n\t\tif(code){\n\t\t\tif (code == 8 || code == 46){\n\t\t\t\tif(pos.start == pos.end){\n\t\t\t\t\tif(code == 8) pos.start--;\n\t\t\t\t\telse pos.end++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tchr = String.fromCharCode(code);\n\t\t\t\tconst isCapsLock = e.getModifierState(\"CapsLock\");\n\t\t\t\tif (!e.shiftKey && !isCapsLock || e.shiftKey && isCapsLock) chr = chr.toLowerCase();\n\t\t\t}\n\t\t}\n\n\t\tvalue = value.substr(0, pos.start) + chr +value.substr(pos.end);\n\t\tpos = this._getCaretPos(chr, value.length, pos.start, code);\n\n\t\tthis._input_code = code;\n\t\tthis.$setValue(value);\n\n\t\tsetSelectionRange(node, pos);\n\t},\n\t_getCaretPos:function(chr, len, pos, code){\n\t\tif((chr && chr.match(this._pattern_allows)) || (code ==8 || code ==46)){\n\t\t\tpos = chr ? pos+1 : pos;\n\t\t\tpos = this._fixCaretPos(pos, code);\n\t\t}\n\t\telse if(len-1 == pos && code !==8 && code !==46){\n\t\t\tconst rest = this._settings.pattern.mask.indexOf(\"#\", pos);\n\t\t\tif(rest>0) pos += rest;\n\t\t}\n\t\treturn pos;\n\t},\n\t_fixCaretPos:function(pos, code){\n\t\tconst prev = pos-(code !== 46)*1;\n\n\t\tif(this._pattern_scheme[prev] === false){\n\t\t\tpos = pos+(code ==8 ? -1: 1);\n\t\t\treturn this._fixCaretPos(pos, code);\n\t\t}\n\t\tif(this._pattern_scheme[pos] === false && code !==8)\n\t\t\treturn this._fixCaretPos(pos+1, code)-1;\n\t\treturn pos;\n\t},\n\t_getRawValue:function(value){\n\t\tif (this._custom_format)\n\t\t\treturn this._custom_format.parse(value);\n\n\t\tvalue = value || value === 0 ? value : \"\";\n\t\tconst matches = value.toString().match(this._pattern_allows) || [];\n\t\treturn matches.join(\"\").replace(this._pattern_chars, \"\");\n\t},\n\t_matchPattern:function(value){\n\t\tif (this._custom_format)\n\t\t\treturn this._custom_format.edit(this._custom_format.parse(value));\n\n\t\tlet raw = this._getRawValue(value),\n\t\t\tpattern = this._settings.pattern.mask,\n\t\t\tmask = this._settings.pattern.mask,\n\t\t\tscheme = this._pattern_scheme,\n\t\t\tend = false,\n\t\t\tindex = 0,\n\t\t\trawIndex = 0,\n\t\t\trawLength = 0;\n\n\t\tfor(let i in scheme){\n\t\t\tif(scheme[i]!==false){\n\t\t\t\tif(!end){\n\t\t\t\t\tindex = i*1;\n\t\t\t\t\trawIndex = scheme[i];\n\t\t\t\t\tconst rchar = raw[rawIndex]||\"\";\n\t\t\t\t\tconst next = raw[rawIndex+1];\n\n\t\t\t\t\tpattern = (rchar?pattern.substr(0, index):\"\") + rchar +(rchar && next?pattern.substr(index + 1):\"\");\n\t\t\t\t\tif(!next) end = true;\n\t\t\t\t}\n\t\t\t\trawLength++;\n\t\t\t}\n\t\t}\n\n\t\t//finalize value with subsequent mask chars \n\t\tconst icode = this._input_code;\n\t\tif((icode && icode !== 8) || (!icode && rawLength-1 === rawIndex && pattern.length < mask.length)){\n\t\t\tif(raw){\n\t\t\t\tconst nind = index+1;\n\t\t\t\tif(mask.charAt(nind)!==\"#\" && pattern.length < mask.length){\n\t\t\t\t\tlet lind = mask.indexOf(\"#\", nind);\n\t\t\t\t\tif(lind<0) lind = mask.length;\n\t\t\t\t\tpattern += mask.substr(nind, lind-nind);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(icode !==46){\n\t\t\t\tpattern += mask.substr(0, mask.indexOf(\"#\"));\n\t\t\t}\n\t\t}\n\t\tthis._input_code = null;\n\t\treturn pattern;\n\t}\n};\n\nexport default TextPattern;\n","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {delay, uid} from \"../webix/helpers\";\n\nimport template from \"../webix/template\";\nimport HTMLOptions from \"../core/htmloptions\";\n\nimport button from \"../views/button\";\nimport text from \"../views/text\";\nimport {getTextSize} from \"../webix/html\";\n\nconst api = {\n\tname:\"radio\",\n\tdefaults:{\n\t\ttemplate: function(config,common) {\n\t\t\tconst id = common._radioId();\n\t\t\tlet html = common._optionsTemplate(id);\n\t\t\thtml = \"<div class='webix_el_group' role='radiogroup' style='margin-left:\"+(config.label?config.labelWidth:0)+\"px;'>\"+html+\"</div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t}\n\t},\n\t_radioId: function(){\n\t\treturn \"x\"+uid();\n\t},\n\t_optionsTemplate: function(id){\n\t\tconst config = this._settings;\n\n\t\tconst options = this._filterOptions(config.options);\n\t\tconst active = this._getFirstActive();\n\t\tlet eachid, isChecked, isDisabled, label, tooltip, customRadio, optlabel, rd, input, focusable;\n\t\tlet html = [];\n\n\t\tfor (let i=0; i < options.length; i++) {\n\t\t\teachid = i ? this._radioId() : id;\n\n\t\t\tif  (i && (options[i].newline || config.vertical))\n\t\t\t\thtml.push(\"<div class='webix_line_break'></div>\");\n\n\t\t\tisChecked = (options[i].id == config.value);\n\t\t\tfocusable = isChecked || (!config.value && options[i].id === active);\n\t\t\tisDisabled = !!options[i].disabled;\n\t\t\tlabel = options[i].value || \"\";\n\t\t\ttooltip = config.tooltip ? \" webix_t_id='\"+options[i].id+\"'\" : \"\";\n\n\t\t\tcustomRadio = config.customRadio|| \"\";\n\t\t\tif (customRadio){\n\t\t\t\toptlabel = (i === 0 ? config.label+\" \" : \"\")+label;\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-label=')\\w*(?=')/, \"$1\"+template.escape(optlabel));\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-checked=')\\w*(?=')/, \"$1\"+(isChecked?\"true\":\"false\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(tabindex=')\\w*(?=')/, \"$1\"+(!isDisabled && focusable?\"0\":\"-1\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-invalid=')\\w*(?=')/, \"$1\"+(config.invalid?\"true\":\"false\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(button_id=')\\w*(?=')/, \"$1\"+options[i].id);\n\t\t\t\tif (isDisabled)\n\t\t\t\t\tcustomRadio = customRadio.replace(\"role='radio'\", \"role='radio' webix_disabled='true'\");\n\t\t\t}\n\t\t\trd = this._baseInputHTML(\"input\")+\" name='\"+(config.name || config.id)+\"' type='radio' \"+(isChecked?\"checked='1'\":\"\")+\"tabindex=\"+(!isDisabled && focusable?\"0\":\"-1\")+\n\t\t\t\t\" value='\"+options[i].id+\"' id='\"+eachid+\"'\"+(isDisabled?\" disabled='true'\":\"\")+\" style='\"+(customRadio?\"display:none\":\"\")+\"' />\";\n\t\t\tinput = \"<div \"+/*@attr*/\"radio_id\"+\"='\"+options[i].id+\"' class='webix_inp_radio_border webix_radio_\"+(isChecked?\"1\":\"0\")+\"' role='presentation'>\"+rd+customRadio+\"</div>\";\n\n\t\t\tif (label)\n\t\t\t\tlabel = \"<label for='\"+eachid+\"' class='webix_label_right'>\" + label + \"</label>\";\n\n\t\t\thtml.push(`<div style=\"height:${config.optionHeight}px;\" class=\"webix_radio_option${(isDisabled?\" webix_disabled\":\"\")}\" role=\"presentation\"${tooltip}>${input+label}</div>`);\n\t\t}\n\t\treturn html.join(\"\");\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t\tif (this._last_size && this.$getSize(0,0)[2] != this._last_size[1])\n\t\t\tthis.resize();\n\t},\n\t$getSize:function(dx, dy){\n\t\tthis._check_options(this._settings.options);\n\n\t\tvar size = button.api.$getSize.call(this, dx, dy);\n\t\tif(!this._settings.autoheight){\n\t\t\tvar options = this._filterOptions(this._settings.options);\n\t\t\tif (options){\n\t\t\t\tvar count = this._settings.vertical?0:1;\n\t\t\t\tfor (var i=0; i < options.length; i++)\n\t\t\t\t\tif (this._settings.vertical || options[i].newline)\n\t\t\t\t\t\tcount++;\n\t\t\t\tsize[3] = size[2] = Math.max(size[2], (this._settings.optionHeight||25) * count+this._settings.inputPadding*2+ (this._settings.labelPosition == \"top\"?this._labelTopHeight:0));\n\t\t\t}\n\t\t\tvar heightInc = this.config.bottomPadding;\n\t\t\tif(heightInc){\n\t\t\t\tsize[2] += heightInc;\n\t\t\t\tsize[3] += heightInc;\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t},\n\t_getInputNode: function(){\n\t\treturn this._dataobj.getElementsByTagName(this._settings.customRadio ? \"button\" : \"input\");\n\t},\n\t$setValue:function(value){\n\t\tconst inp = this._dataobj.getElementsByTagName(\"input\");\n\t\tconst active = this._getFirstActive();\n\t\tlet id, option, focusable, parentNode, button;\n\n\t\tfor (let i=0; i < inp.length; i++){\n\t\t\tid = inp[i].parentNode.getAttribute(/*@attr*/\"radio_id\");\n\t\t\toption = this.getOption(id);\n\n\t\t\tinp[i].checked = (id == value);\n\t\t\tinp[i].checked ? inp[i].setAttribute(\"checked\", \"1\") : inp[i].removeAttribute(\"checked\");\n\t\t\tfocusable = option && !option.disabled && (inp[i].checked || (!value && option.id == active));\n\t\t\tinp[i].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\n\t\t\tparentNode = inp[i]?inp[i].parentNode:null;\n\t\t\tif (parentNode){\n\t\t\t\tparentNode.className = parentNode.className.replace(/(webix_radio_)\\d/,\"$1\"+(inp[i].checked?1:0));\n\t\t\t\tif (this._settings.customRadio){\n\t\t\t\t\tbutton = parentNode.getElementsByTagName(\"BUTTON\");\n\t\t\t\t\tif (button[0]){\n\t\t\t\t\t\tbutton[0].setAttribute(\"aria-checked\", inp[i].checked?\"true\":\"false\");\n\t\t\t\t\t\tbutton[0].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\tfocus: function(){ return this._focus(); },\n\tblur: function(){ this._blur(); },\n\tcustomRadio_setter: function(value){\n\t\tif(value === true && $active.customRadio)\n\t\t\tvalue = \"<a role='presentation' onclick='javascript:void(0)'><button type='button' class='webix_custom_radio' \"+/*@attr*/\"button_id='' role='radio' aria-checked='false' aria-label='' aria-invalid='' tabindex=''></button></a>\";\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.customRadio = !!$active.customRadio;\n\t\tif ($active.optionHeight)\n\t\t\tthis.defaults.optionHeight = $active.optionHeight;\n\t},\n\t_set_inner_size: function(){\n\t\tif(this._settings.autoheight){\n\t\t\tlet h = this._getOptionsHeight() + (this._settings.bottomPadding ||0) + 2 * $active.inputPadding;\n\t\t\tif(this._settings.labelPosition == \"top\") h += this._labelTopHeight;\n\t\t\tif(this._last_size[1] != h) {\n\t\t\t\tthis._settings.height = h;\n\t\t\t\tconst topView = this.getTopParentView();\n\t\t\t\tclearTimeout(topView._template_resize_timer);\n\t\t\t\ttopView._template_resize_timer = delay(()=>{\n\t\t\t\t\tif(!this.$destructed)\n\t\t\t\t\t\tthis.resize();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t_getOptionsHeight: function(){\n\t\tconst w = this.$view.querySelector(\".webix_el_group\").offsetWidth;\n\t\treturn getTextSize(\n\t\t\tthis._optionsTemplate(),\n\t\t\t\"webix_el_radio webix_el_group\",\n\t\t\tw\n\t\t).height;\n\t}\n};\n\nconst view = protoUI(api, text.view, HTMLOptions);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {isUndefined} from \"../webix/helpers\";\n\nimport datepicker from \"./datepicker\";\n\n\nconst api = {\n\tname:\"colorpicker\",\n\t$init:function(){\n\t\tthis.$ready.push(this._init_popup);\n\t},\n\tdefaults:{\n\t\ticon:true\n\t},\n\t_init_popup:function(){\n\t\tconst obj = this._settings;\n\t\tif (obj.suggest)\n\t\t\tobj.popup = obj.suggest;\n\t\telse if (!obj.popup)\n\t\t\tobj.popup = obj.suggest = this.suggest_setter({\n\t\t\t\ttype:\"colorboard\"\n\t\t\t});\n\t\tthis._init_once = function(){};\n\t},\n\tclear_setter:function(value){\n\t\treturn !!value;\n\t},\n\tgetValue:function(){\n\t\tif (this._rendered_input && this._settings.editable)\n\t\t\treturn this.getInputNode().value;\n\t\telse\n\t\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\t_getColorNode: function(){\n\t\treturn this.$view.getElementsByTagName(\"DIV\")[this._settings.editable?1:2];\n\t},\n\t_get_visible_text:function(value){\n\t\treturn value;\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\treturn oldvalue == value;\n\t},\n\t$setValue:function(value){\n\t\tthis._getColorNode().style.backgroundColor = value;\n\t\tthis._settings.text = value;\n\t\tthis._toggleClearIcon(value);\n\n\t\tconst node = this.getInputNode();\n\t\tif(isUndefined(node.value))\n\t\t\tnode.innerHTML = value || this._get_div_placeholder();\n\t\telse\n\t\t\tnode.value = value;\n\t},\n\t$renderIcon:function(c){\n\t\tlet right = this._inputSpacing/2 + 5;\n\t\tlet html = \"<div class='webix_input_icon' style='top:\"+(c.inputPadding+4)+\"px;right:\"+right+\"px;background-color:\"+c.value+\";'></div>\";\n\n\t\tif (!c.readonly && c.clear){\n\t\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\t\tconst padding = (height - 18)/2 -1;\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_clear_icon webix_icon_transparent wxi-close'></span>\";\n\t\t}\n\t\treturn html;\n\t}\n};\n\nconst view = protoUI(api, datepicker.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {uid} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nimport text from \"./text\";\nimport button from \"./button\";\n\nimport i18n from \"../webix/i18n\";\n\n\nconst api = {\n\tname:\"counter\",\n\tdefaults:{\n\t\ttemplate:function(config, common){\n\t\t\tconst value = config.value;\n\n\t\t\tconst id = \"x\"+uid();\n\t\t\tlet html = \"<div role='spinbutton' aria-label='\"+template.escape(config.label)+\"' aria-valuemin='\"+config.min+\"' aria-valuemax='\"+config.max+\"' aria-valuenow='\"+config.value+\"' class='webix_el_group' style='width:\"+common._get_input_width(config)+\"px'>\";\n\t\t\thtml +=  \"<button type='button' class='webix_inp_counter_prev' tabindex='-1' aria-label='\"+i18n.aria.decreaseValue+\"'>-</button>\";\n\t\t\thtml += common._baseInputHTML(\"input\")+\" id='\"+id+\"' type='text' class='webix_inp_counter_value' aria-live='assertive'\"+\" value='\"+value+\"'></input>\";\n\t\t\thtml += \"<button type='button' class='webix_inp_counter_next' tabindex='-1' aria-label='\"+i18n.aria.increaseValue+\"'>+</button></div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t},\n\t\tmin:0,\n\t\tmax:Infinity,\n\t\tvalue:0,\n\t\tstep:1\n\t},\n\t$init:function(){\n\t\t_event(this.$view, \"keydown\", this._keyshift, {bind:this});\n\t},\n\t_keyshift:function(e){\n\t\tif(this._settings.readonly)\n\t\t\treturn;\n\n\t\tconst code = e.which || e.keyCode, c = this._settings;\n\t\tlet value = this.getValue();\n\n\t\tif(code>32 && code <41){\n\t\t\tif(code === 36) value = c.min;\n\t\t\telse if(code === 35) value = c.max === Infinity? 1000000 :c.max;\n\t\t\telse if(code === 33) this.next(c.step, \"user\");\n\t\t\telse if(code === 34) this.prev(c.step, \"user\");\n\t\t\telse value = value+(code === 37 || code ===40?-1:1);\n\n\t\t\tif(code>34 && value>=c.min && value<=c.max)\n\t\t\t\tthis.setValue(value, \"user\");\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tthis.getInputNode().value = value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = parseFloat(value);\n\n\t\tconst min = this._settings.min;\n\t\tconst max = this._settings.max;\n\n\t\tif(isNaN(value))\n\t\t\tvalue = isFinite(min) ? min : 0;\n\n\t\treturn Math.min(Math.max(value, min), max);\n\t},\n\tgetInputNode:function(){\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0];\n\t},\n\tgetValue:function(){\n\t\treturn  button.api.getValue.apply(this,arguments)*1;\n\t},\n\tnext:function(step,config){\n\t\tstep = 1*( step || this._settings.step );\n\t\tthis.shift(step,config);\n\t},\n\tprev:function(step,config){\n\t\tstep = (-1)*( step || this._settings.step );\n\t\tthis.shift(step,config);\n\t},\n\tshift:function(step,config){\n\t\t//round values to fix math precision issue in JS\n\t\tconst new_value = Math.round((this.getValue() + step)*100000)/100000;\n\t\tthis.setValue(new_value,config);\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {addCss, removeCss} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {once, uid} from \"../webix/helpers\";\nimport template from \"../webix/template\";\nimport {$name} from \"../webix/skin\";\n\nimport HTMLOptions from \"../core/htmloptions\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"segmented\",\n\t$allowsClear:false,\n\t$init:function(){\n\t\tthis.attachEvent(\"onChange\", function(value){\n\t\t\tif (this._settings.multiview)\n\t\t\t\tthis._show_view(value);\n\t\t});\n\t\tthis.attachEvent(\"onAfterRender\", once(function(){\n\t\t\tif (this._settings.multiview && this._settings.value)\n\t\t\t\tthis._show_view(this._settings.value);\n\t\t}));\n\t},\n\t_show_view:function(value){\n\t\tvar top = this.getTopParentView();\n\t\tvar view = null;\n\n\t\t//get from local isolate\n\t\tif (top && top.$$)\n\t\t\tview = top.$$(value);\n\t\t//or check globally\n\t\tif (!view)\n\t\t\tview = $$(value);\n\n\t\tif(view && view.show)\n\t\t\tview.show();\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tcommon._check_options(obj.options);\n\n\t\t\tconst options = common._filterOptions(obj.options);\n\t\t\tconst width = common._get_input_width(obj);\n\t\t\tconst borders = $name == \"contrast\" ? 0 : options.length - 1;\n\t\t\tconst optionWidth = obj.optionWidth || Math.floor((width-borders)/options.length);\n\t\t\t\n\t\t\tlet html = \"<div style='width:\"+width+\"px' class='webix_all_segments' role='tablist' aria-label='\"+template.escape(obj.label)+\"'>\";\n\t\t\tlet tooltip, isDisabled;\n\n\t\t\tif (!obj.value)\n\t\t\t\tobj.value = common._getFirstActive(true);\n\n\t\t\tfor (var i=0; i<options.length; i++){\n\t\t\t\tisDisabled = !!options[i].disabled;\n\t\t\t\ttooltip = obj.tooltip ? \" webix_t_id='\"+options[i].id+\"'\" : \"\";\n\t\t\t\thtml += \"<button type='button' style='width:\"+(options[i].width || optionWidth)+\"px' role='tab' aria-selected='\"+(obj.value==options[i].id?\"true\":\"false\")+\n\t\t\t\t\t\"' tabindex='\"+(!isDisabled && obj.value==options[i].id?\"0\":\"-1\")+\"' class='\"+\"webix_segment_\"+((i==options.length-1)?\"N\":(i>0?1:0))+((obj.value==options[i].id)?\" webix_selected\":\"\")+\n\t\t\t\t\t(isDisabled?\" webix_disabled\":\"\")+\"' \"+(isDisabled?\"webix_disabled='true' \":\"\")+/*@attr*/\"button_id='\"+options[i].id+\"'\"+tooltip+\">\"+options[i].value+\"</button>\";\n\t\t\t}\n\t\t\t\n\t\t\treturn common.$renderInput(obj, html+\"</div>\", uid());\n\t\t}\n\t},\n\t_getInputNode:function(){\n\t\treturn this.$view.getElementsByTagName(\"BUTTON\");\n\t},\n\tfocus: function(){ return this._focus(); },\n\tblur: function(){ this._blur(); },\n\t$setValue:function(value){\n\t\t//refresh tabbar if the option is in the popup list\n\t\tconst popup = this.config.tabbarPopup;\n\t\tif (popup && $$(popup) && $$(popup).getBody().exists(value))\n\t\t\treturn this.refresh();\n\n\t\tconst inputs = this._getInputNode();\n\t\tlet id, option;\n\n\t\tfor (let i=0; i<inputs.length; i++){\n\t\t\tid = inputs[i].getAttribute(/*@attr*/\"button_id\");\n\t\t\toption = this.getOption(id);\n\n\t\t\tinputs[i].setAttribute(\"aria-selected\", (value==id?\"true\":\"false\"));\n\t\t\tinputs[i].setAttribute(\"tabindex\", (option && !option.disabled && value==id?\"0\":\"-1\"));\n\t\t\tif (value == id)\n\t\t\t\taddCss(inputs[i], \"webix_selected\");\n\t\t\telse\n\t\t\t\tremoveCss(inputs[i], \"webix_selected\");\n\t\t}\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value||\"\";\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\tgetInputNode:function(){\n\t\treturn null;\n\t},\n\t_set_inner_size:false\n};\n\nconst view = protoUI(api, text.view, HTMLOptions);\nexport default {api, view};","import text from \"../views/text\";\nimport {preventEvent, addCss, removeCss, pos as getPos, offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport env from \"../webix/env\";\nimport {uid, bind, isArray, copy} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nconst api = {\n\tname:\"slider\",\n\tdefaults:{\n\t\tmin:0,\n\t\tmax:100,\n\t\tvalue:50,\n\t\tstep:1,\n\t\ttitle:false,\n\t\tmoveTitle:true,\n\t\ttemplate:function(obj, common){\n\t\t\tconst id = common._handle_id = \"x\" +uid();\n\t\t\tlet html = \"\";\n\t\t\tconst title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tconst left = \"<div class='webix_slider_left'>&nbsp;</div>\";\n\t\t\tconst right = \"<div class='webix_slider_right'></div>\";\n\t\t\tconst handle = \"<div class='webix_slider_handle' \"+/*@attr*/\"webix_disable_drag\"+\"='true' role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' aria-valuenow='\"+obj.value+\"' tabindex='0' id='\"+id+\"'>&nbsp;</div>\";\n\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+right+left+handle+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+left+right+handle+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\ttype_setter:function(type){\n\t\tthis._viewobj.className += \" webix_slider_\"+type;\n\t},\n\ttitle_setter:function(value){\n\t\tif (typeof value == \"string\")\n\t\t\treturn template(value);\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(){\n\t\treturn this.$view.querySelector(\".webix_slider_handle\");\n\t},\n\t_set_inner_size:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tconst config = this._settings;\n\n\t\tif(handle){ //view is rendered for sure\n\t\t\tconst size = config.vertical?this._content_height:this._get_input_width(config); //width or height\n\t\t\tlet value = config.value%config.step?(Math.round(config.value/config.step)*config.step):config.value;\n\t\t\tconst max = config.max - config.min;\n\n\t\t\tvalue = this._safeValue(value);\n\t\t\tvalue = config.vertical?(max-(value-config.min)):(value-config.min);\n\n\t\t\t//top or left\n\t\t\tlet corner1 = Math.ceil((size - 2 * this._sliderPadding) * value / max);\n\t\t\t//bottom or right\n\t\t\tlet corner2 = size - 2 * this._sliderPadding - corner1;\n\n\t\t\tconst cornerStr = config.vertical?\"top\":\"left\";\n\t\t\tconst sizeStr = config.vertical?\"height\":\"width\";\n\n\t\t\thandle.style[cornerStr] = this._sliderPadding + corner1 - this._sliderHandleWidth / 2 + \"px\";\n\t\t\thandle.parentNode.style[sizeStr] = size+\"px\";\n\n\t\t\t//1px border\n\t\t\tcorner2 = this._safeValue(corner2, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\t\t\tcorner1 = this._safeValue(corner1, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\n\t\t\t//width for left/top and right/bottom bars\n\t\t\tconst part = handle.previousSibling;\n\t\t\tpart.style[sizeStr] = corner2 + \"px\";\n\t\t\tconst last = part.previousSibling;\n\t\t\tlast.style[sizeStr] = corner1 + \"px\";\n\n\t\t\tthis._set_title(handle, corner1, corner2, cornerStr);\n\t\t}\n\t},\n\t_set_title:function(handle, corner1, corner2, cornerStr){\n\t\tconst config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tconst title = handle.parentNode[config.vertical?\"nextSibling\":\"previousSibling\"];\n\t\t\ttitle.innerHTML = this._settings.title(this._settings, this);\n\n\t\t\tif(this._settings.moveTitle){\n\t\t\t\tlet pos = 0;\n\t\t\t\tif(config.vertical) pos = corner1+2 * this._sliderBorder-this._sliderHandleWidth/2;\n\t\t\t\telse{\n\t\t\t\t\tconst half = title.clientWidth/2;\n\t\t\t\t\tconst pos1 = half>corner1 ? (half-corner1-2*this._sliderBorder): 0;//left/top text is to large\n\t\t\t\t\tconst pos2 = half>corner2 ? (half-corner2-2*this._sliderBorder-this._sliderHandleWidth/2): 0;//right/bottom text is too large\n\t\t\t\t\tpos = this._sliderPadding + corner1 - half + pos1 - pos2;\n\t\t\t\t}\n\t\t\t\ttitle.style[cornerStr] = pos+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_value_now:function(){\n\t\tthis._get_slider_handle().setAttribute(\"aria-valuenow\", this._settings.value);\n\t},\n\t_safeValue: function(value, min, max){\n\t\tmin = min ? min : this._settings.min;\n\t\tmax = max ? max : this._settings.max;\n\t\t\n\t\treturn Math.min(Math.max(value, min), max);\n\t},\n\trefresh:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tif (handle){\n\t\t\tthis._set_value_now();\n\t\t\tif (this._settings.title)\n\t\t\t\thandle.setAttribute(\"aria-label\", this._settings.label+\" \"+this._settings.title(this._settings, this));\n\n\t\t\tthis._set_inner_size();\n\t\t}\n\t},\n\t$setValue:function(){\n\t\tthis.refresh();\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = parseFloat(value);\n\n\t\tif(isNaN(value))\n\t\t\tvalue = this._settings.min;\n\n\t\treturn this._safeValue(value);\n\t},\n\t$init:function(config){\n\t\t_event(this._viewobj, env.mouse.down, e => this._on_mouse_down_start(e, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(this._viewobj, env.touch.down, e => this._on_mouse_down_start(e, \"touch\"));\n\n\t\t_event( this.$view, \"keydown\", bind(this._handle_move_keyboard, this));\n\t\tif (config.vertical){\n\t\t\tconfig.height = config.height || $active.vSliderHeight;\n\t\t\tthis._viewobj.className += \" webix_slider_vertical\";\n\t\t\tthis._sliderPadding = $active.vSliderPadding;\n\t\t}\n\t},\n\t$skin: function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis._sliderHandleWidth = $active.sliderHandleWidth; //8 - width of handle / 2\n\t\tthis._sliderPadding = $active.sliderPadding;//10 - padding of webix_slider_box ( 20 = 10*2 )\n\t\tthis._sliderBorder = $active.sliderBorder;//1px border\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\t\tconst c = this._settings;\n\t\tlet value = c.value;\n\n\t\tif(code>32 && code <41){\n\t\t\tpreventEvent(e);\n\n\t\t\tconst trg = e.target;\n\t\t\tconst match = /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\t\t\tif(match)\n\t\t\t\tvalue = c.value[this._activeIndex];\n\n\t\t\tvalue = value<c.min ? c.min:(value>c.max ? c.max : value);\n\t\t\t\n\t\t\tif(code === 36) value = c.min;\n\t\t\telse if(code === 35) value = c.max;\n\t\t\telse{\n\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\tif(code === 33 || code === 34 || c.step > 1)\n\t\t\t\t\tinc = inc * c.step;\n\t\t\t\tvalue = value*1 + inc;\n\t\t\t}\n\n\t\t\tif(match){\n\t\t\t\tconst other = c.value[this._activeIndex?0:1];\n\t\t\t\tvalue = ((this._activeIndex && value <= other) || (!this._activeIndex && value >= other )) ? other : value;\n\t\t\t}\n\n\t\t\tif(value >= c.min && value <= c.max){\n\t\t\t\tif(match){\n\t\t\t\t\tconst temp =[];\n\t\t\t\t\tfor(let i = 0; i < c.value.length; i++)\n\t\t\t\t\t\ttemp[i] = i === this._activeIndex ? value : c.value[i];\n\t\t\t\t\tvalue = temp;\n\t\t\t\t}\n\t\t\t\tthis.setValue(value, \"user\");\n\t\t\t\tthis._activeIndex = -1;\n\t\t\t}\n\t\t}\n\t},\n\t_on_mouse_down_start:function(e, pointer){\n\t\tconst config = this._settings;\n\t\tif (config.disabled || config.readonly) return;\n\n\t\tconst trg = e.target;\n\t\tif (this._mouse_down_process)\n\t\t\tthis._mouse_down_process(e);\n\n\t\tlet value = config.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._start_value = value;\n\t\tif (trg.className.indexOf(\"webix_slider\") !== -1)\n\t\t\tconfig.value = this._get_value_from_event(e);\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop()),\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_stop:function(){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tlet value = this._settings.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._settings.value = this._start_value;\n\t\tthis.setValue(value, \"user\");\n\n\t\tthis._get_slider_handle(this._activeIndex).focus();\n\t\tthis._activeIndex = -1;\n\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer){\n\t\tthis._settings.value = this._get_value_from_event(e);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onSliderDrag\", []);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_get_value_from_event:function(e){\n\t\tconst ax = this._settings.vertical ? \"y\" : \"x\";\n\t\tconst pos = getPos(e)[ax];\n\t\treturn this._get_value_from_pos(pos);\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tconst config = this._settings;\n\t\tconst max = config.max - config.min;\n\t\tconst ax = config.vertical ? \"y\" : \"x\";\n\n\t\t//top or left depending on slider type\n\t\tconst corner = offset(this._get_slider_handle().parentNode)[ax] + this._sliderPadding;\n\t\t//height or width depending on slider type\n\t\tconst size = (config.vertical?this._content_height:this._get_input_width(config))-2*this._sliderPadding;\n\n\t\tlet newvalue = (size ? (pos-corner) * max / size : 0);\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\t\tnewvalue = Math.round((newvalue + 1*config.min) / config.step) * config.step;\n\t\treturn this._safeValue(newvalue);\n\t},\n\t_init_onchange:function(){} //need not ui.text logic\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};\n","import slider from \"../views/slider\";\nimport {offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {uid, isArray, isUndefined} from \"../webix/helpers\";\n\n\n// #include ui/slider.js\n\nconst api = {\n\tname:\"rangeslider\",\n\t$cssName:\"slider webix_rangeslider\",\n\tdefaults:{\n\t\tseparator: \",\",\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tvalue: [20,80],\n\t\ttemplate:function(obj, common){\n\t\t\tvar id = \"x\" + uid();\n\t\t\tcommon._handle_id = [id+\"_0\",id+\"_1\"];\n\n\t\t\tvar aria = \"role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' tabindex='0'\";\n\t\t\tvar handles = \"<div class='webix_slider_handle webix_slider_handle_0' \"+/*@attr*/\"webix_disable_drag\"+\"='true' id='\"+common._handle_id[0]+\"' \"+aria+\" aria-valuenow='\"+obj.value[0]+\"'>&nbsp;</div>\";\n\t\t\thandles += \"<div class='webix_slider_handle webix_slider_handle_1' \"+/*@attr*/\"webix_disable_drag\"+\"='true' id='\"+common._handle_id[1]+\"' \"+aria+\" aria-valuenow='\"+obj.value[1]+\"'>&nbsp;</div>\";\n\n\t\t\tvar title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-common._sliderPadding-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tif(obj.moveTitle)\n\t\t\t\ttitle = \"<div class='webix_slider_title_box'>\"+(title+title)+\"</div>\";\n\t\t\t\n\t\t\tvar parts = \"<div class='webix_slider_right'>&nbsp;</div><div class='webix_slider_left'></div>\";\n\t\t\tvar html = \"\";\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+parts+handles+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+parts+handles+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\t$prepareValue:function(value){\n\t\tconst min = this._settings.min;\n\n\t\tif(!isArray(value)){\n\t\t\tvalue = (value||\"\").toString().split(this._settings.separator);\n\t\t}\n\n\t\tvalue[0] = parseFloat(value[0]);\n\t\tvalue[0] = isNaN(value[0]) ? min : this._safeValue(value[0]);\n\n\t\tif(value.length < 2)\n\t\t\tvalue[1] = value[0];\n\t\telse{\n\t\t\tvalue[1] = parseFloat(value[1]);\n\t\t\tvalue[1] = isNaN(value[1]) ? value[0] : this._safeValue(value[1]);\n\t\t}\n\t\tif(value[0]>value[1]) [value[0], value[1]] = [value[1], value[0]];\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(index){\n\t\tindex = index && index>=0?index:0;\n\t\treturn this.$view.querySelector(\".webix_slider_handle_\"+(index||0));\n\t},\n\t_get_left_pos: function(size,index){\n\t\tvar config, max, value;\n\n\t\tconfig = this._settings;\n\t\tmax = config.max - config.min;\n\t\tvalue = config.value[index]%config.step?(Math.round(config.value[index]/config.step)*config.step):config.value[index];\n\t\tvalue =  this._safeValue(value);\n\t\treturn Math.ceil((size - this._sliderPadding*2) * (value-config.min) / max);\n\t},\n\t_set_left_pos:function(size, left, vertical){\n\t\tvar pos = this._sliderPadding + left - (this._sliderHandleWidth / 2 *(vertical?-1:1));\n\t\tpos = vertical? size-pos:pos;\n\t\treturn pos+\"px\";\n\t},\n\t_set_value_pos:function(size, left, length, vertical){\n\t\tvar pos = left+this._sliderPadding + 2 * this._sliderBorder;\n\t\tif(vertical) pos = size-pos-length;\n\t\treturn pos + \"px\";\n\t},\n\t_set_inner_size:function(){\n\t\tvar config, handle0, handle1,\n\t\t\tleft0, left1, max, length, parentBox,\n\t\t\tsizeStr, size, cornerStr;\n\n\t\thandle0 =this._get_slider_handle(0);\n\t\thandle1 = this._get_slider_handle(1);\n\t\tconfig = this._settings;\n\n\t\tif(!isArray(config.value)){\n\t\t\tthis.define(\"value\", config.value);\n\t\t}\n\n\t\tif (handle0){\n\t\t\tsizeStr = config.vertical?\"height\":\"width\";\n\t\t\tcornerStr = config.vertical?\"top\":\"left\";\n\t\t\t\n\t\t\tsize = config.vertical?this._content_height:this._get_input_width(config);\n\t\t\tmax = size - this._sliderPadding * 2 - 2 * this._sliderBorder;\n\t\t\t\n\t\t\tleft0 = this._get_left_pos(size, 0);\n\t\t\tleft1 = this._get_left_pos(size, 1);\n\t\t\tlength = left1 - left0;\n\n\t\t\thandle0.style[cornerStr] = this._set_left_pos(size, left0, config.vertical);\n\t\t\thandle1.style[cornerStr] = this._set_left_pos(size, left1, config.vertical);\n\t\t\t\n\t\t\tparentBox = handle0.parentNode;\n\t\t\tparentBox.style[sizeStr] = size+\"px\";\n\t\t\tparentBox.firstChild.style[sizeStr] = max + \"px\";\n\t\t\tparentBox.childNodes[1].style[sizeStr] = length + \"px\";\n\t\t\tparentBox.childNodes[1].style[cornerStr] = this._set_value_pos(size, left0, length, config.vertical);\n\n\t\t\tthis._set_title(handle0, [left0, left1], max, cornerStr);\n\t\t}\n\t},\n\t_title_hidden:0,\n\t_hide_title:function(title, index){\n\t\tif(!isUndefined(this._title_hidden))\n\t\t\ttitle[this._title_hidden].style.visibility = \"visible\";\n\t\tif(!isUndefined(index)){\n\t\t\ttitle[index].style.visibility = \"hidden\";\n\t\t\tthis._title_hidden = index;\n\t\t}\n\t},\n\t_set_title:function(handle0, left, max, cornerStr){\n\t\tvar config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tvar box = handle0.parentNode;\n\t\t\tvar sibling = config.vertical?\"nextSibling\":\"previousSibling\";\n\n\t\t\tif(!config.moveTitle)\n\t\t\t\tbox[sibling].innerHTML = this._settings.title(this._settings, this);\n\t\t\telse{ //two independent titles\n\t\t\t\tvar title = box[sibling].childNodes;\n\t\t\t\tvar pos = [];\n\t\t\t\tfor(let i = 0; i<2; i++)\n\t\t\t\t\tpos.push(this._set_title_n(title[i], config.value[i], left[i], max, cornerStr, i));\n\n\t\t\t\t//correct for overlapping titles\n\t\t\t\tvar diff = config.vertical? (pos[0]-pos[1]-this._sliderHandleWidth) : (pos[1]-pos[0]);\n\t\t\t\tvar sizeStr  = config.vertical?\"clientHeight\":\"clientWidth\";\n\n\t\t\t\t\n\n\t\t\t\tif(title[0][sizeStr]/2+title[1][sizeStr]/2 > diff)\n\t\t\t\t\tthis._hide_title(title, isUndefined(this._activeIndex) ? 0 : (this._activeIndex ? 0 : 1));\n\t\t\t\telse\n\t\t\t\t\tthis._hide_title(title);\n\n\t\t\t\t//set position\n\t\t\t\tfor(let i = 0; i<2; i++)\n\t\t\t\t\ttitle[i].style[cornerStr] = pos[i]+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_title_n:function(title, value, left, max, cornerStr, index){\n\t\ttitle.innerHTML = this._settings.title({value:value}, this);\n\t\tvar half = title.clientWidth/2;\n\t\tvar pos = 0;\n\t\t\n\t\tif(this._settings.vertical)\n\t\t\tpos = max-left-this._sliderHandleWidth/2-(index?this._sliderPadding:0)+2 * this._sliderBorder;\n\t\telse{\n\t\t\tpos = left + this._sliderHandleWidth/2 + 2*this._sliderBorder - half;\n\t\t\tpos = (half>left) ? (half-left+pos): pos;//left/top text is to small\n\t\t\tpos = (index && half+left>max)?(pos-half+(max-left)):pos;//right/bottom text is too large\n\t\t}\n\t\treturn pos;\n\t},\n\t_set_value_now:function(){\n\t\tfor(var i=0; i<2; i++){\n\t\t\tthis._get_slider_handle(i).setAttribute(\"aria-valuenow\", this._settings.value[i]);\n\t\t}\n\t},\n\t_mouse_down_process: function(e){\n\t\tvar trg = e.target;\n\t\tvar match =  /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\n\t\tif(match)\n\t\t\tthis._set_handle_active(this._activeIndex);\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\tvalue = this.$prepareValue(value);\n\t\treturn oldvalue[0] === value[0] && oldvalue[1] === value[1];\n\t},\n\t$getValue:function(){\n\t\tvar value = this._settings.value;\n\t\treturn this._settings.stringResult?value.join(this._settings.separator):value;\n\t},\n\t_set_handle_active: function(index){\n\t\tvar hActive = this._get_slider_handle(index);\n\t\tvar h = this._get_slider_handle(1-index);\n\t\tif(hActive.className.indexOf(\"webix_slider_active\") == -1)\n\t\t\thActive.className += \" webix_slider_active\";\n\t\th.className = h.className.replace(\" webix_slider_active\",\"\");\n\t\thActive.focus();\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tvar config = this._settings;\n\t\tvar value = config.value;\n\t\t//10 - padding of slider box\n\t\tvar max = config.max - config.min;\n\t\tvar ax = config.vertical?\"y\":\"x\";\n\n\t\tvar left = offset(this._get_slider_handle().parentNode)[ax];\n\t\tvar newvalue = Math.ceil((pos-left) * max / (config.vertical?this._content_height:this._get_input_width(config)));\n\t\tnewvalue = Math.round((newvalue + 1*config.min)/config.step) * config.step;\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\n\t\tvar index = null;\n\t\tvar pos0 = offset(this._get_slider_handle(0))[ax];\n\t\tvar pos1 = offset(this._get_slider_handle(1))[ax];\n\n\t\tif(pos0==pos1 && (config.value[0] == config.min || config.value[0] == config.max) ){\n\t\t\tthis._activeIndex = index = (config.value[0] == config.min?1:0);\n\t\t\tthis._set_handle_active(index);\n\t\t}\n\t\telse{\n\t\t\tif(this._activeIndex >=0){\n\t\t\t\tindex = this._activeIndex;\n\t\t\t}else{\n\t\t\t\tif(pos0==pos1){\n\t\t\t\t\tindex = (pos < pos0?0:1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tvar dist0 = Math.abs(pos0-pos);\n\t\t\t\t\tvar dist1 = Math.abs(pos1-pos);\n\t\t\t\t\tindex = dist0<dist1?0:1;\n\t\t\t\t\tthis._activeIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif(index){\n\t\t\tvalue[index] = this._safeValue(newvalue, value[0], config.max);\n\t\t}\n\t\telse{\n\t\t\tvalue[index] = this._safeValue(newvalue, config.min, value[1]);\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\n\nconst view = protoUI(api,  slider.view);\nexport default {api, view};","import popup from \"../views/popup\";\nimport UIManager from \"../core/uimanager\";\n\nimport {preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {toFunctor, extend, copy, isUndefined, delay, bind, toNode} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\n\n// #include ui/window.js\n\nconst api = {\n\tname:\"suggest\",\n\tdefaults:{\n\t\tautofocus:false,\n\t\ttype:\"list\",\n\t\tkeyPressTimeout:1,\n\t\tbody:{\n\t\t\tyCount:10,\n\t\t\tautoheight:true,\n\t\t\tbody:true,\n\t\t\tselect:true,\n\t\t\tborderless:true,\n\t\t\tnavigation:true\n\t\t},\n\t\tfilter:function(item,value){\n\t\t\tif (item.value.toString().toLowerCase().indexOf(value.toLowerCase())===0) return true;\n\t\t\treturn false;\n\t\t}\n\t},\n\ttemplate_setter:template,\n\tfilter_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_show_on_key_press:true,\n\t$init:function(obj){\n\t\tvar temp = {};\n\t\textend(temp, copy(this.defaults.body));\n\t\ttemp.view = obj.type || this.defaults.type;\n\n\t\tvar etemp = this._get_extendable_cell(temp);\n\t\tif (obj.body)\n\t\t\textend(etemp, obj.body, true);\n\n\t\tif (obj.data)\n\t\t\tetemp.data = obj.data;\n\t\tif (obj.url)\n\t\t\tetemp.url = obj.url;\n\t\tif (obj.datatype)\n\t\t\tetemp.datatype = obj.datatype;\n\n\t\tif (obj.id)\n\t\t\ttemp.id = temp.id || (obj.id+\"_\"+temp.view);\n\n\t\tobj.body = temp;\n\t\tthis.$ready.push(this._set_on_popup_click);\n\n\t\tthis.attachEvent(\"onShow\", function(){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif (master){\n\t\t\t\t\tconst node = master._getInputDiv ? master._getInputDiv() : master.getInputNode();\n\t\t\t\t\tnode.setAttribute(\"aria-expanded\", \"true\");\n\t\t\t\t}\n\n\t\t\t\t// execute only if there is a master view\n\t\t\t\tthis._show_selection();\n\t\t\t}\n\t\t});\n\t\tthis.attachEvent(\"onHide\", function(){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif (master){\n\t\t\t\t\tconst node = master._getInputDiv ? master._getInputDiv() : master.getInputNode();\n\t\t\t\t\tnode.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._old_text = {};\n\t},\n\t_get_extendable_cell:function(obj){\n\t\treturn obj;\n\t},\n\t_get_details:function(config){\n\t\treturn isUndefined(config) ? null : { config };\n\t},\n\t_set_input_value:function(text){\n\t\tconst trg = this._last_input_target;\n\t\tif(trg.getAttribute(\"contentEditable\") == \"true\" || trg.getAttribute(\"contentEditable\") == \"\")\n\t\t\ttrg.innerText = text;\n\t\telse\n\t\t\ttrg.value = text;\n\t},\n\t_preselectMasterOption:function(data){\n\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\t\tlet node;\n\n\t\tif (this._settings.master){\n\t\t\tconst master = $$(this._settings.master);\n\t\t\tnode = master.getInputNode();\n\n\t\t\tif (node){\n\t\t\t\t// restore last text to allow 'master' view to save new value on blur\n\t\t\t\tconst prev_text = master._settings.text;\n\n\t\t\t\tif (master.options_setter)\n\t\t\t\t\tmaster.$setValue(data.$empty?\"\":data.id);\n\t\t\t\telse if (master.$setValueHere)\n\t\t\t\t\tmaster.$setValueHere(text, data, this._get_details());\n\t\t\t\telse\n\t\t\t\t\tmaster.$setValue(text);\n\n\t\t\t\tmaster._settings.text = prev_text;\n\t\t\t}\n\t\t}\n\t\telse if (this._last_input_target)\n\t\t\tthis._set_input_value(text);\n\n\t\tnode = node || this._last_input_target;\n\t\tif (node)\n\t\t\tnode.focus();\n\t},\n\tsetMasterValue:function(data, refresh, config){\n\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\n\t\tif (this._settings.master){\n\t\t\tconst master = $$(this._settings.master);\n\t\t\tif (refresh && data.id)\n\t\t\t\tmaster.refresh();\n\t\t\telse if (master.options_setter)\n\t\t\t\tmaster.setValue(data.$empty?\"\":data.id, config);\n\t\t\telse if (master.setValueHere)\n\t\t\t\tmaster.setValueHere(text, data, this._get_details(config));\n\t\t\telse\n\t\t\t\tmaster.setValue(text, config);\n\t\t}\n\t\telse if (this._last_input_target)\n\t\t\tthis._set_input_value(text);\n\n\t\tif (!refresh){\n\t\t\tthis.hide();\n\t\t\tif (this._last_input_target)\n\t\t\t\tthis._last_input_target.focus();\n\t\t}\n\t\tthis.callEvent(\"onValueSuggest\", [data, text]);\n\t},\n\tgetMasterValue:function(){\n\t\tif (this._settings.master)\n\t\t\treturn $$(this._settings.master).getValue();\n\t\treturn null;\n\t},\n\tgetItemId:function(text){\n\t\tvar list = this.getList();\n\t\tfor (var key in list.data.pull){\n\t\t\tvar obj = list.getItem(key);\n\t\t\tif (this._settings.filter.call(this, obj, text))\n\t\t\t\treturn obj.id;\n\t\t}\n\t},\n\tgetItemText:function(id){\n\t\tvar item = this.getList().getItem(id);\n\n\t\tif (!item)\n\t\t\treturn this._old_text[id] || \"\";\n\n\t\tif (this._settings.template)\n\t\t\treturn this._settings.template.call(this, item, this.type);\n\n\t\tif (this._settings.textValue)\n\t\t\treturn \"\"+item[this._settings.textValue]+\"\";\n\t\t\n\t\tvar type = this.getList().type;\n\t\tvar text = type.template.call(type, item, type);\n\n\t\treturn (this._old_text[id] = text);\n\t},\n\tgetSuggestion:function(text){\n\t\tvar id,\n\t\t\tlist = this.getList(),\n\t\t\torder = list.data.order;\n\n\t\tif (list.getSelectedId)\n\t\t\tid = list.getSelectedId();\n\n\t\tif (text && order.length && (!id || order.find(id) <0) ){\n\t\t\tid = order[0];\n\t\t\t//ensure that option really does match client-side filtering rules\n\t\t\tif (!list.config.dataFeed && !this.config.filter.call(this, list.data.pull[id], text)) return null;\n\t\t}\n\n\t\t//complex id in datatable\n\t\tif (id){\n\t\t\tif (typeof id == \"object\") id = id+\"\";\n\t\t\tif (list.getItem(id).$empty) return null;\n\t\t}\n\t\treturn id;\n\t},\n\tgetList:function(){\n\t\treturn this._body_cell;\n\t},\n\t_set_on_popup_click:function(){\n\t\tvar list = this.getList();\n\t\tvar type = this._settings.type;\n\n\t\tif (list.count){\n\t\t\tlist.attachEvent(\"onItemClick\", bind(function(item){\n\t\t\t\tthis.setMasterValue(list.getItem(item), false, \"user\");\n\t\t\t}, this));\n\t\t\tlist.data.attachEvent(\"onStoreUpdated\",bind(function(id, obj, mode){\n\t\t\t\tif (mode == \"delete\" && id == this.getMasterValue())\n\t\t\t\t\tthis.setMasterValue({ id:\"\", text:\"\" }, true, \"auto\");\n\t\t\t\telse if (mode == \"update\" && id == this.getMasterValue()){\n\t\t\t\t\tthis.setMasterValue(obj, true, \"auto\");\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tlist.data.attachEvent(\"onAfterFilter\", bind(this._suggest_after_filter, this));\n\t\t\tlist.data.attachEvent(\"onStoreLoad\", bind(this._suggest_after_filter, this));\n\t\t\t\n\t\t\tif (isUndefined(this._settings.fitMaster))\n\t\t\t\tthis._settings.fitMaster = true;\n\t\t} else if (type == \"calendar\"){\n\t\t\tlist.attachEvent(\"onAfterDateSelect\", function(){\n\t\t\t\tthis.getParentView().setMasterValue({ value:list.getSelectedDate() }, list.config.multiselect, \"user\");\n\t\t\t});\n\t\t\tlist.attachEvent(\"onTodaySet\", function(date){\n\t\t\t\tthis.getParentView().setMasterValue({ value: date }, false, \"user\");\n\t\t\t});\n\t\t\tlist.attachEvent(\"onDateClear\", function(date){\n\t\t\t\tthis.getParentView().setMasterValue({ value: date }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"colorboard\"){\n\t\t\tlist.attachEvent(\"onItemClick\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value: value }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"timeboard\"){\n\t\t\tlist.attachEvent(\"onTimeSelect\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value: value }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"colorselect\"){\n\t\t\tlist.attachEvent(\"onColorSelect\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value:value }, false, \"user\");\n\t\t\t});\n\t\t}\n\t},\n\tinput_setter: function(value) {\n\t\tthis.linkInput(value);\n\t\treturn 0;\n\t},\n\tlinkInput: function(input){\n\t\tvar node;\n\t\tif (input.getInputNode){\n\t\t\tnode = input.getInputNode();\n\t\t\tnode.webix_master_id = input._settings.id;\n\t\t\tinput.attachEvent(\"onInputResize\",bind(this._resetPosition, this));\n\t\t} else\n\t\t\tnode = toNode(input);\n\n\t\tif(input != document.body)\n\t\t\t_event(node,\"keydown\",e => {\n\t\t\t\tif (input.config ? (!input.config.readonly) : (!node.getAttribute(\"readonly\")))\n\t\t\t\t\tthis._suggestions(e, node);\n\t\t\t});\n\t\t\n\t\tif(input._getInputDiv)\n\t\t\tnode = input._getInputDiv();\n\t\t\n\t\tnode.setAttribute(\"aria-autocomplete\", \"list\");\n\t\tnode.setAttribute(\"aria-expanded\", \"false\");\n\n\t\tif(node.tagName === \"DIV\"){\n\t\t\tnode.setAttribute(\"aria-live\", \"assertive\");\n\t\t\tnode.setAttribute(\"aria-atomic\", \"true\");\n\t\t}\n\n\t\tthis._non_ui_mode = true;\n\t},\n\t_suggestions: function(e, node){\n\t\t//should be before tab and arrows handlers: IME can call keydown twice\n\t\tif (this._last_delay)\n\t\t\tthis._last_delay = clearTimeout(this._last_delay);\n\n\t\tvar list = this.getList();\n\t\tvar trg = e.target;\n\t\tif((trg == document.body && !this.isVisible()) || trg.className ==\"webix_clipbuffer\")\n\t\t\treturn;\n\n\t\tthis._settings.master = trg.webix_master_id;\n\t\tif(node != document.body)\n\t\t\tthis._last_input_target = trg;\n\n\t\tvar code = e.which || e.keyCode;\n\t\t//shift, ctrl, alt, meta\n\t\tif (code == 16 || code == 17 || code == 18 || code == 91) return;\n\n\t\t//move cursor via arrow\n\t\tif(code > 32  && code < 40 && code != 38) return;\n\n\t\tconst ctrl = e.ctrlKey || e.metaKey;\n\t\tconst [backspace, del, v, x, y, z] = [8, 46, 86, 88, 89, 90].map(v => code == v);\n\t\tif(ctrl && !(backspace || del || v || x || y || z)) return;\n\n\t\tif(backspace || del || (ctrl && x)){\n\t\t\tconst selStart = trg.selectionStart;\n\t\t\tconst selEnd = trg.selectionEnd;\n\n\t\t\tconst backspaceNothing = backspace && selStart == 0 && selStart == selEnd;\n\t\t\tif(!backspaceNothing && !this._delayedBackspace)\n\t\t\t\tthis._delayedBackspace = true;\n\n\t\t\tif(\n\t\t\t\t(backspaceNothing && !this._delayedBackspace) ||\n\t\t\t\t(x && selStart == selEnd) ||\n\t\t\t\t(del && selStart == (trg.value || trg.innerText).length)\n\t\t\t)\n\t\t\t\treturn;\n\t\t}\n\n\t\t// tab - hide popup and do nothing\n\t\tif (code == 9)\n\t\t\treturn this._tab_key(e,list);\n\n\t\t// escape - hide popup\n\t\tif (code == 27)\n\t\t\treturn this._escape_key(e,list);\n\n\t\t// enter\n\t\tif (code == 13)\n\t\t\treturn this.$enterKey(e,list);\n\n\t\t// up/down/right/left are used for navigation\n\t\tif (this._navigate(e) && this.isVisible()){\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst contentEditable = trg.getAttribute(\"contentEditable\") == \"true\" || trg.getAttribute(\"contentEditable\") == \"\";\n\t\tif (isUndefined(trg.value) && !contentEditable) return;\n\n\t\tthis._last_delay = delay(function(){\n\t\t\tdelete this._delayedBackspace;\n\t\t\t//focus moved to the different control, suggest is not necessary\n\t\t\tif (!this._non_ui_mode &&\n\t\t\t\t\tUIManager.getFocus() != $$(this._settings.master)) return;\n\n\t\t\tthis._resolve_popup = true;\n\n\t\t\tconst val = contentEditable ? trg.innerText : trg.value;\n\n\t\t\tif (this._before_filtering)\n\t\t\t\tthis._before_filtering();\n\n\t\t\t// used to prevent showing popup when it was initialized\n\t\t\tif (list.config.dataFeed)\n\t\t\t\tlist.filter(\"value\", val);\n\t\t\telse if (list.filter){\n\t\t\t\tlist.filter(bind(function(item){\n\t\t\t\t\treturn this._settings.filter.call(this,item,val);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t}, this, [], this._settings.keyPressTimeout);\n\t},\n\t_suggest_after_filter:function(){\n\t\tif (!this._resolve_popup) return true;\n\t\tthis._resolve_popup = false;\n\n\t\tvar list = this.getList();\n\n\t\t// filtering is complete\n\t\t// if there are as min 1 variant it must be shown, hidden otherwise\n\t\tif (list.count() > 0){\n\t\t\tthis.adjust();\n\t\t\tif(!this.isVisible())\n\t\t\t\tthis._dont_unfilter = true;\n\t\t\tthis.show(this._last_input_target,null,true);\n\t\t\tthis._dont_unfilter = false;\n\t\t} else if(this._last_input_target){\n\t\t\tthis.hide();\n\t\t\tthis._last_input_target = null;\n\t\t}\n\t},\n\n\tshow:function(node){\n\t\tconst input = (node && (node.tagName == \"INPUT\" || node.tagName == \"TEXTAREA\")) ? node : null;\n\n\t\tif (!this.isVisible() || (input && input != this._last_input_target)){\n\t\t\tvar list = this.getList();\n\t\t\tif (list.filter && !this._dont_unfilter){\n\t\t\t\t// clear gridsuggest filters\n\t\t\t\tif(list.eachColumn){\n\t\t\t\t\tlist.eachColumn(id => {\n\t\t\t\t\t\tconst filter = list.getFilter(id);\n\t\t\t\t\t\tif(filter){\n\t\t\t\t\t\t\tif (filter.setValue) filter.setValue(\"\");\n\t\t\t\t\t\t\telse filter.value = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlist.filter(\"\");\n\t\t\t}\n\n\t\t\tif (this.$customWidth){\n\t\t\t\tthis.$customWidth(node);\n\t\t\t}\n\t\t\telse if (node && node.tagName && this._settings.fitMaster){\n\t\t\t\tthis._settings.width = node.offsetWidth -2 ; //2 - borders\n\t\t\t}\n\n\t\t\tif (list._zoom_level)\n\t\t\t\tlist.render();\n\n\t\t\tthis.adjust();\n\n\t\t\t// needed to return focus\n\t\t\tif (input)\n\t\t\t\tthis._last_input_target = input;\n\t\t}\n\t\tpopup.api.show.apply(this, arguments);\n\t},\n\t_show_selection:function(){\n\t\tconst list = this.getList();\n\t\tlet value = this.getMasterValue();\n\n\t\tif (list.select && list.showItem){\n\t\t\tif (value && list.exists && list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t} else {\n\t\t\t\tlist.unselect();\n\t\t\t\tlist.showItem(list.getFirstId());\n\t\t\t}\n\t\t}\n\t\telse if (list.setValue){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif(master._formatStr)\n\t\t\t\t\tvalue = master._settings.value;\n\t\t\t\telse\n\t\t\t\t\tvalue = master.$prepareValue(value);\n\t\t\t}\n\t\t\tlist.setValue(value, \"auto\");\n\t\t}\n\t},\n\t$enterKey:function(e, list){\n\t\tconst visible = this.isVisible();\n\t\tlet value;\n\t\tlet master;\n\n\t\tif (this._settings.master)\n\t\t\tmaster = $$(this._settings.master);\n\n\t\tif (master && master._editable && master._settings.editable)\n\t\t\tmaster._applyChanges(\"user\");\n\t\telse if (visible){\n\t\t\tif (list.count){\n\t\t\t\tvalue = list.getSelectedId(false, true);\n\t\t\t\tif (list.count() == 1 && list.getFirstId() != value)\n\t\t\t\t\tvalue = list.getFirstId();\n\n\t\t\t\tif (value) value = list.getItem(value);\n\t\t\t} else {\n\t\t\t\tif (list.getSelectedDate) value = list.getSelectedDate();\n\t\t\t\telse if (list.getValue) value = list.getValue();\n\n\t\t\t\tif (value) value = { value: value };\n\t\t\t}\n\t\t\t\n\t\t\tif (value)\n\t\t\t\tthis.setMasterValue(value, false, \"user\");\n\t\t}\n\n\t\tif (visible)\n\t\t\tthis.hide();\n\t\telse if (this._show_on_key_press)\n\t\t\tthis.show(this._last_input_target);\n\t},\n\t_escape_key:function(e){\n\t\tif(this.isVisible())\n\t\t\te.hidesuggest = true;\n\t\treturn this.hide();\n\t},\n\t_tab_key:function(){\n\t\treturn this.hide();\n\t},\n\t/*! suggestions navigation: up/down buttons move selection\n\t *\t@param e\n\t *\t\tevent object\n\t **/\n\t_navigate: function(e) {\n\t\tvar list = this.getList();\n\t\tvar code = e.which || e.keyCode;\n\t\tvar data;\n\n\t\tif( list.moveSelection && code < 41 && code > 32 && !e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey) {\n\t\t\t// down and up arrows\n\t\t\tif (code === 40 || code === 38) {\n\t\t\t\tif (this._show_on_key_press && !this.isVisible())\n\t\t\t\t\tthis.show(this._last_input_target);\n\n\t\t\t\tlet dir = (code === 38) ? \"up\" : \"down\";\n\t\t\t\tlist.moveSelection(dir, false, false);\n\t\t\t}// other arrows\n\t\t\telse {\n\t\t\t\tif(list.count || (!list.count && !list.isVisible()))\n\t\t\t\t\treturn false;\n\n\t\t\t\tlet dir;\n\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\tif(code == 34) dir = \"pgdown\";\n\t\t\t\tif(code == 35) dir = \"bottom\";\n\t\t\t\tif(code == 36) dir = \"top\";\n\t\t\t\tif(code == 37) dir = \"left\";\n\t\t\t\tif(code == 39) dir = \"right\";\n\n\t\t\t\tlist.moveSelection(dir, false, false);\n\t\t\t}\n\n\t\t\tif (list.count)\n\t\t\t\tdata = list.getSelectedItem(false);\n\t\t\telse {\n\t\t\t\tif (list.getSelectedDate) data = list.getSelectedDate();\n\t\t\t\telse if (list.getValue) data = list.getValue();\n\n\t\t\t\tif (data) data = { value: data };\n\t\t\t}\n\n\t\t\tif (data && this.isVisible())\n\t\t\t\tthis._preselectMasterOption(data);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetValue:function(){\n\t\tvar list = this.getList();\n\t\tvar  value = (list.getValue ? list.getValue() : list.getSelectedId()) || \"\";\n\t\tvalue = value.id || value;\n\n\t\t// check empty\n\t\tif(list.getItem){\n\t\t\tvar item = list.getItem(value);\n\t\t\tif(item && item.$empty)\n\t\t\t\treturn \"\";\n\t\t}\n\t\treturn value;\n\t},\n\tsetValue:function(value){\n\t\tconst list = this.getList();\n\t\tif (value){\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t},\n\t_resetPosition: function(){\n\t\tif(!this._settings.hidden && this._settings.master){\n\t\t\tvar master = $$(this._settings.master);\n\t\t\tif(master)\n\t\t\t\tthis.show(master.$view);\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api,  popup.view);\nexport default {api, view};\n","import suggest from \"../views/suggest\";\nimport {getSelectionRange, setSelectionRange, preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\n\n\nconst api = {\n\tname:\"mentionsuggest\",\n\tdefaults:{\n\t\tsymbol:\"@\",\n\t\tfilter:function(data, value){\n\t\t\tconst s = this._settings.symbol;\n\t\t\tvalue = value.substring(0, this._last_cursor_pos);\n\t\t\tif (value.indexOf(s) === -1) return false;\n\t\t\telse {\n\t\t\t\tvalue = value.substring(value.lastIndexOf(s)+s.length);\n\t\t\t\tif (value.length){\n\t\t\t\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\t\t\t\t\treturn text.toString().toLowerCase().indexOf(value.toLowerCase()) !== -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t$init:function(){\n\t\tthis.attachEvent(\"onValueSuggest\", this._before_filtering);\n\t},\n\t$enterKey:function(e){\n\t\tif (this.isVisible()){\n\t\t\tpreventEvent(e);\n\n\t\t\tlet master;\n\t\t\tif (this._settings.master)\n\t\t\t\tmaster = $$(this._settings.master);\n\n\t\t\tif (master && master.callEvent)\n\t\t\t\tmaster.callEvent(\"onEnter\");\n\t\t}\n\n\t\treturn suggest.api.$enterKey.apply(this, arguments);\n\t},\n\t_before_filtering:function(){\n\t\tif (this._last_input_target)\n\t\t\tthis._last_cursor_pos = getSelectionRange(this._last_input_target).start;\n\t},\n\t_get_details:function(config){\n\t\treturn { pos:this._last_cursor_pos, symbol:this._settings.symbol, config };\n\t},\n\t_preselectMasterOption:function(){},\n\t_set_input_value:function(text){\n\t\tconst s = this._settings.symbol;\n\t\tlet value = this._last_input_target.value;\n\t\tlet last = value.substring(this._last_cursor_pos);\n\n\t\tvalue = value.substring(0, this._last_cursor_pos);\n\t\tvalue = value.substring(0, value.lastIndexOf(s)+s.length) + text;\n\n\t\tthis._last_input_target.value = value + last;\n\t\tsetSelectionRange(this._last_input_target, value.length);\n\t},\n\t_show_on_key_press:false\n};\n\n\nconst view = protoUI(api,  suggest.view);\nexport default {api, view};","import {addCss, createCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, isArray} from \"../webix/helpers\";\nimport template from \"../webix/template\";\n\nimport env from \"../webix/env\";\n\nimport base from \"../views/view\";\nimport proto from \"../views/proto\";\nimport VRenderStack from \"../core/vrenderstack\";\nimport CustomPrint from \"../core/customprint\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport DataMove from \"../core/datamove\";\nimport DragItem from \"../core/dragitem\";\nimport MouseEvents from \"../core/mouseevents\";\nimport SelectionModel from \"../core/selectionmodel\";\nimport Scrollable from \"../core/scrollable\";\nimport CopyPaste from \"../core/copypaste\";\n\nconst api = {\n\tname:\"list\",\n\t_listClassName : \"webix_list\",\n\t_itemClassName:\"webix_list_item\",\n\t$init:function(config){\n\t\taddCss(this._viewobj, this._listClassName + (((config.layout||this.defaults.layout) == \"x\")?\"-x\":\"\") );\n\t\tthis.data.provideApi(this,true);\n\n\t\tthis.data.attachEvent(\"onStoreUpdated\", (id, obj, mode) => {\n\t\t\tif (!id || mode === \"add\" || mode === \"delete\") this._auto_resize();\n\t\t});\n\t\tthis.data.attachEvent(\"onSyncApply\", () => this._auto_resize());\n\n\t\tthis._viewobj.setAttribute(\"role\", \"listbox\");\n\t},\n\tdynamic_setter:function(value){\n\t\tif (value)\n\t\t\textend(this, VRenderStack, true);\n\t\treturn value;\n\t},\n\t$dragHTML:function(obj,e,context){\n\t\tlet html;\n\t\tif (this._settings.layout == \"y\" && this.type.width == \"auto\"){\n\t\t\tthis.type.width = this._content_width;\n\t\t\thtml = this._toHTML(obj);\n\t\t\tthis.type.width = \"auto\";\n\t\t} else html = this._toHTML(obj);\n\n\t\tif ( isArray(context.source) && context.source.length > 1 )\n\t\t\thtml = this._toMultipleHTML(html, context.source.length);\n\t\treturn html;\n\t},\n\tdefaults:{\n\t\tselect:false,\n\t\tscroll:true,\n\t\tlayout:\"y\",\n\t\tnavigation:true,\n\t\tdatafetch:50\n\t},\n\t_id:/*@attr*/\"webix_l_id\",\n\ton_click:{\n\t\twebix_list_item:function(e,id){\n\t\t\tif (this._settings.select){\n\t\t\t\tthis._no_animation = true;\n\t\t\t\tif (this._settings.select==\"multiselect\"  || this._settings.multiselect)\n\t\t\t\t\tthis.select(id, false, (e.ctrlKey || e.metaKey || (this._settings.multiselect == \"touch\")), e.shiftKey); \t//multiselection\n\t\t\t\telse\n\t\t\t\t\tthis.select(id);\n\t\t\t\tthis._no_animation = false;\n\t\t\t}\n\t\t}\n\t},\n\ton_dblclick:{\n\t},\n\tgetVisibleCount:function(){\n\t\treturn Math.floor(this._content_height / this._one_height());\n\t},\n\t_auto_resize:function(){\n\t\tconst c = this._settings;\n\t\tif (c.autoheight || c.autowidth)\n\t\t\treturn this.resize();\n\n\t\tif (c.layout == \"y\"){\n\t\t\tif (c.yCount) this._auto_height_calc(c.yCount);\n\t\t} else {\n\t\t\tif (c.xCount) this._auto_width_calc(c.xCount);\n\t\t}\n\t},\n\t_auto_height_calc:function(count){\n\t\tvar value = this.data.$pagesize||this.count();\n\n\t\tif (this._settings.autoheight && value < (count||Infinity) ) \n\t\t\tcount = value;\n\t\tvar height = this._one_height() * count + (this.type.margin||0);\n\t\t//unitlist\n\t\tif(this.getUnits)\n\t\t\theight += this.getUnits().length*this.type.headerHeight;\n\n\t\tconst maxHeight = this._settings.maxHeight || Infinity;\n\t\theight = Math.max(height, this._settings.minHeight || 0);\n\n\t\tthis._onoff_scroll((count && count < value) || (height > maxHeight), \"y\");\n\t\treturn Math.min(height, maxHeight);\n\t},\n\t_one_height:function(){\n\t\treturn this.type.height + (this.type.margin||0);\n\t},\n\t_auto_width_calc:function(count){\n\t\tvar value = this.data.$pagesize||this.count();\n\n\t\tthis._onoff_scroll(count && count < value, \"x\");\n\t\tif (this._settings.autowidth && value < (count||Infinity) ) \n\t\t\tcount = value;\n\n\t\treturn (this.type.width * count); \n\t},\n\t$getSize:function(dx,dy){\n\t\tif (this._settings.layout == \"y\"){\n\t\t\tif (this.type.width!=\"auto\")\n\t\t\t\tthis._settings.width = this.type.width + (this._scroll_y?env.scrollSize:0);\n\t\t\tif (this._settings.yCount || this._settings.autoheight)\n\t\t\t\tthis._settings.height = this._auto_height_calc(this._settings.yCount)||1;\n\t\t}\n\t\telse {\n\t\t\tif (this.type.height!=\"auto\")\n\t\t\t\tthis._settings.height = this._one_height() + (this._scroll_x?env.scrollSize:0);\n\t\t\tif (this._settings.xCount || this._settings.autowidth)\n\t\t\t\tthis._settings.width = this._auto_width_calc(this._settings.xCount)||1;\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t$setSize:function(){\n\t\tbase.api.$setSize.apply(this, arguments);\n\t},\n\ttype:{\n\t\tcss:\"\",\n\t\twidthSize:function(obj, common){\n\t\t\treturn common.width+(common.width>-1?\"px\":\"\");\n\t\t},\n\t\theightSize:function(obj, common){\n\t\t\treturn common.height+(common.height>-1?\"px\":\"\");\n\t\t},\n\t\tclassname:function(obj, common, marks){\n\t\t\tvar css = \"webix_list_item\";\n\n\t\t\tif (common.css) css += \" \"+common.css;\n\t\t\tif (obj.disabled) css += \" webix_disabled\";\n\t\t\tif (obj.$css){\n\t\t\t\tif (typeof obj.$css == \"object\")\n\t\t\t\t\tobj.$css = createCss(obj.$css);\n\t\t\t\tcss += \" \"+obj.$css;\n\t\t\t}\n\t\t\tif (marks && marks.$css)\n\t\t\t\tcss += \" \"+marks.$css;\n\n\t\t\treturn css;\n\t\t},\n\t\taria:function(obj, common, marks){\n\t\t\treturn \"role=\\\"option\\\"\"+(marks && marks.webix_selected?\" aria-selected=\\\"true\\\" tabindex=\\\"0\\\"\":\" tabindex=\\\"-1\\\"\")+(obj.$count && obj.$template?\"aria-expanded=\\\"true\\\"\":\"\")+\n\t\t\t\t(obj.disabled?\" aria-disabled=\\\"true\\\" webix_disabled=\\\"true\\\"\":\"\");\n\t\t},\n\t\ttemplate:function(obj){\n\t\t\treturn (obj.icon?(\"<span class='webix_list_icon webix_icon \"+obj.icon+\"'></span>\"):\"\") + obj.value + (obj.badge||obj.badge===0?(\"<div class='webix_badge'>\"+obj.badge+\"</div>\"):\"\");\n\t\t},\n\t\twidth:\"auto\",\n\t\ttemplateStart:template(\"<div \"+/*@attr*/\"webix_l_id\"+\"=\\\"#id#\\\" class=\\\"{common.classname()}\\\" style=\\\"width:{common.widthSize()}; height:{common.heightSize()}; overflow:hidden;\\\" {common.aria()}>\"),\n\t\ttemplateEnd:template(\"</div>\")\n\t},\n\t$skin:function(){\n\t\tthis.type.height = $active.listItemHeight;\n\t},\n\tdisableItem:function(id){\n\t\tthis._set_item_disabled(id, true);\n\t},\n\tenableItem:function(id){\n\t\tthis._set_item_disabled(id, false);\n\t},\n\t_set_item_disabled(id, state){\n\t\tconst item = this.getItem(id);\n\t\tif (item){\n\t\t\titem.disabled = state;\n\t\t\tthis.refresh(id);\n\t\t}\n\t},\n\tisItemEnabled:function(id){\n\t\tconst item = this.getItem(id);\n\t\treturn item && !item.disabled;\n\t},\n\t_skip_item:function(id, prev, dir){\n\t\tif (!this.isItemEnabled(id)){\n\t\t\tid = this.getNextId(id, dir) || null;\n\t\t\treturn (id && id != prev)? this._skip_item(id, prev, dir) : prev;\n\t\t}\n\t\treturn id;\n\t}\n};\n\n\nconst view = protoUI(api,  CustomPrint, KeysNavigation, DataMove, DragItem, MouseEvents, SelectionModel, Scrollable, proto.view, CopyPaste);\nexport default {api, view};","import {addCss, insertBefore, removeCss} from \"../webix/html\";\nimport {protoUI, ui} from \"../ui/core\";\nimport {delay, extend, bind} from \"../webix/helpers\";\nimport animate from \"../webix/animate\";\n\nimport MouseEvents from \"../core/mouseevents\";\nimport SingleRender from \"../core/singlerender\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport base from \"../views/view\";\nimport template from \"../webix/template\";\n\nimport i18n from \"../webix/i18n\";\n\n\ni18n.pager = {\n\tfirst: \"<span class='webix_icon wxi-angle-double-left'></span>\",\n\tlast: \"<span class='webix_icon wxi-angle-double-right'></span>\",\n\tnext: \"<span class='webix_icon wxi-angle-right'></span>\",\n\tprev: \"<span class='webix_icon wxi-angle-left'></span>\"\n};\n\n\nconst api = {\n\tdefaults:{\n\t\tsize:10,\t//items on page\n\t\tpage: 0,\t//current page\n\t\tgroup:5,\n\t\ttemplate:\"{common.pages()}\",\n\t\tmaxWidth:100000,\n\t\theight:30,\n\t\tborderless:true\n\t},\n\tname:\"pager\",\n\ton_click:{\n\t\t//on paging button click\n\t\t\"webix_pager_item\":function(e,id){\n\t\t\tthis.select(id);\n\t\t}\n\t},\n\t$init:function(config){\n\t\tthis.data = this._settings;\n\t\tthis._dataobj = this._viewobj;\n\t\tthis._viewobj.className += \" webix_pager\";\n\n\t\tif(config.master===false||config.master === 0)\n\t\t\tthis.$ready.push(this._remove_master);\n\t},\n\t_remove_master:function(){\n\t\tthis.refresh();\n\t\tthis.$master = { refresh:function(){}, select:function(){} };\n\t},\n\tselect:function(id){\n\t\tif (this.$master && this.$master.name == \"pager\")\n\t\t\treturn this.$master.select(id);\n\n\t\t//id - id of button, number for page buttons\n\t\tswitch(id){\n\t\t\tcase \"next\":\n\t\t\t\tid = this._settings.page+1;\n\t\t\t\tbreak;\n\t\t\tcase \"prev\":\n\t\t\t\tid = this._settings.page-1;\n\t\t\t\tbreak;\n\t\t\tcase \"first\":\n\t\t\t\tid = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"last\":\n\t\t\t\tid = this._settings.limit-1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//use incoming id\n\t\t\t\tbreak;\n\t\t}\n\t\tif (id<0) id=0;\n\t\tif (id>=this.data.limit) id=this.data.limit-1;\n\n\t\tvar old = this.data.page;\n\t\tif (this.callEvent(\"onBeforePageChange\",[id, old])){\n\t\t\tthis.data.page = id*1; //must be int\n\n\t\t\t// dynamic loading:\n\t\t\t// if the current page is larger than the next one (treetable branch is open)\n\t\t\t// avoid extra loading (which depends on the scroll position)\n\t\t\tthis.$master._scrollTop = 0;\n\n\t\t\tif (this.refresh()){\n\t\t\t\tif (!this._settings.animate || !this._animate(old, id*1, this._settings.animate))\n\t\t\t\t\tthis.$master.refresh();\n\t\t\t}\n\t\t\tthis.callEvent(\"onAfterPageChange\",[id]);\t\n\t\t}\n\t},\n\t_id:/*@attr*/\"webix_p_id\",\n\ttemplate_setter:template,\n\ttype:{\n\t\ttemplate:function(a,b){ return a.template.call(this, a,b); },\n\t\t//list of page numbers\n\t\tpages:function(obj){\n\t\t\tvar html=\"\";\n\t\t\t//skip rendering if paging is not fully initialized\n\t\t\tif (obj.page == -1) return \"\";\n\t\t\t//current page taken as center of view, calculate bounds of group\n\t\t\tobj.$min = obj.page-Math.round((obj.group-1)/2);\n\t\t\tobj.$max = obj.$min + obj.group*1 - 1;\n\t\t\tif (obj.$min<0){\n\t\t\t\tobj.$max+=obj.$min*(-1);\n\t\t\t\tobj.$min=0;\n\t\t\t}\n\t\t\tif (obj.$max>=obj.limit){\n\t\t\t\tobj.$min -= Math.min(obj.$min,obj.$max-obj.limit+1);\n\t\t\t\tobj.$max = obj.limit-1;\n\t\t\t}\n\t\t\t//generate HTML code of buttons\n\t\t\tfor (var i=(obj.$min||0); i<=obj.$max; i++)\n\t\t\t\thtml+=this.button({id:i, index:(i+1), selected:(i == obj.page ?\"_selected\":\"\"), label:i18n.aria.page+\" \"+(i+1)});\n\t\t\treturn html;\n\t\t},\n\t\tpage:function(obj){\n\t\t\treturn obj.page+1;\n\t\t},\n\t\t//go-to-first page button\n\t\tfirst:function(){\n\t\t\treturn this.button({ id:\"first\", index:i18n.pager.first, selected:\"\", label:i18n.aria.pages[0]});\n\t\t},\n\t\t//go-to-last page button\n\t\tlast:function(){\n\t\t\treturn this.button({ id:\"last\", index:i18n.pager.last, selected:\"\", label:i18n.aria.pages[3]});\n\t\t},\n\t\t//go-to-prev page button\n\t\tprev:function(){\n\t\t\treturn this.button({ id:\"prev\", index:i18n.pager.prev, selected:\"\", label:i18n.aria.pages[1]});\n\t\t},\n\t\t//go-to-next page button\n\t\tnext:function(){\n\t\t\treturn this.button({ id:\"next\", index:i18n.pager.next, selected:\"\", label:i18n.aria.pages[2]});\n\t\t},\n\t\tbutton:template(\"<button type='button' \"+/*@attr*/\"webix_p_id\"+\"='{obj.id}' class='webix_pager_item{obj.selected}' aria-label='{obj.label}'>{obj.index}</button>\")\n\t},\n\tclone:function(pager){\n\t\tif (!pager.$view){\n\t\t\tpager.view = \"pager\";\n\t\t\tpager = ui(pager);\n\t\t}\n\n\t\tthis._clone = pager;\n\t\tpager.$master = this;\n\t\tthis._refresh_clone();\n\t},\n\trefresh:function(){\n\t\tvar s = this._settings;\n\n\t\t//max page number\n\t\ts.limit = Math.ceil(s.count/s.size) || 1;\n\n\t\tvar newPage = Math.min(s.limit-1, s.page);\n\n\t\tif (newPage != s.page)\n\t\t\treturn this.$master.setPage(newPage);\n\n\t\ts.page = newPage;\n\t\tif (newPage>=0 && (newPage!=s.old_page) || (s.limit != s.old_limit) || (s.old_count != s.count)){\n\t\t\t//refresh self only if current page or total limit was changed\n\t\t\tthis.render();\n\t\t\tthis._refresh_clone();\n\t\t\ts.old_limit = s.limit;\t//save for onchange check in next iteration\n\t\t\ts.old_page = s.page;\n\t\t\ts.old_count = s.count;\n\t\t\treturn true;\n\t\t}\n\t},\n\tapiOnly_setter:function(value){\n\t\treturn (this.$apiOnly=value);\n\t},\n\t_refresh_clone:function(){\n\t\tif (this._clone){\n\t\t\tthis._clone._settings.count = this._settings.count;\n\t\t\tthis._clone._settings.page = this._settings.page;\n\t\t\tthis._clone.refresh();\n\t\t}\n\t},\n\t_animate:function(old, id, config){\n\t\tif (old == id) return false;\n\t\tif (this._pgInAnimation){\n\t\t\tif (this._pgAnimateTimeout)\n\t\t\t\twindow.clearTimeout(this._pgAnimateTimeout);\n\t\t\treturn !!(this._pgAnimateTimeout = delay(this._animate, this,[old, id, config],100));\n\t\t}\n\t\tvar direction = id > old ? \"left\" : \"right\";\n\t\tif (config.direction == \"top\" || config.direction == \"bottom\")\n\t\t\tdirection = id > old ? \"top\" : \"bottom\";\n\t\tif (config.flip)\n\t\t\tdirection = \"\";\n\n\t\t//make copy of existing view\n\t\tvar top = 0;\n\t\tvar snode = this.$master._dataobj;\n\t\tvar isDataTable = !!this.$master._body;\n\n\t\tif (isDataTable){\n\t\t\tsnode = this.$master._body;\n\t\t\ttop = snode.offsetTop;\n\t\t\taddCss(this.$master.$view, \"webix_animation\");\n\t\t}\n\n\t\tvar onode = snode.cloneNode(true);\n\t\tonode.style.width = snode.style.width = \"100%\";\n\t\t\n\t\t//redraw page\n\t\tthis.$master.refresh();\n\t\t//append copy next to original\n\t\tinsertBefore(onode, snode.nextSibling, snode.parentNode);\n\t\tif(isDataTable)\n\t\t\tonode.childNodes[1].scrollLeft = snode.childNodes[1].scrollLeft;\n\n\t\t//animation config\n\t\tvar line;\n\t\tvar base = config !== true ? config : {};\n\t\tvar aniset = extend({\n\t\t\tdirection:direction,\n\t\t\tcallback:bind(function(){\n\t\t\t\taniset.callback = null;\n\t\t\t\tanimate.breakLine(line);\n\t\t\t\tthis._pgInAnimation = false;\n\t\t\t\tif (this.$master._body)\n\t\t\t\t\tremoveCss(this.$master.$view, \"webix_animation\");\n\t\t\t},this),\n\t\t\ttop:top, keepViews: isDataTable\n\t\t}, base);\n\n\t\t//run animation\n\t\tline = animate.formLine(snode, onode, aniset);\n\t\tanimate([ snode, onode ], aniset );\n\t\treturn this._pgInAnimation = true;\n\t}\n};\n\n\nconst view = protoUI(api,  MouseEvents, SingleRender, base.view, EventSystem);\nexport default {api, view};","import list from \"../views/list\";\nimport {triggerEvent, getTextSize} from \"../webix/html\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\nimport {bind, extend} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\n\n\n// #include ui/window.js\n// #include ui/list.js\nconst api = {\n\tname:\"menu\",\n\t_listClassName:\"webix_menu\",\n\t$init:function(config){\n\t\tif (config.autowidth){\n\t\t\tthis._autowidth_submenu = true;\n\t\t\tdelete config.autowidth;\n\t\t}\n\n\t\tthis._init_mouse_events();\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(){\n\t\t\tthis._hide_sub_menu();\n\t\t},this));\n\t\tthis.attachEvent(\"onItemClick\", function(id, e, trg){\n\t\t\tconst item = this.getItem(id);\n\t\t\tif (item){\n\t\t\t\tif (item.$template) return;\n\n\t\t\t\tconst parent = this.getTopMenu();\n\n\t\t\t\tif (!parent.callEvent(\"onMenuItemClick\", [id, e, trg])){\n\t\t\t\t\te.showpopup = parent._settings.id;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this != parent)\n\t\t\t\t\tparent._call_onclick(id,e,trg);\n\n\t\t\t\t//click on group - do not close submenus\n\t\t\t\tif (!this.type._submenu(item) && !parent._show_child_on_click){\n\t\t\t\t\tparent._hide_sub_menu(true);\n\t\t\t\t\tif (parent._hide_on_item_click)\n\t\t\t\t\t\tparent.hide();\n\t\t\t\t} else {\n\t\t\t\t\tconst touch = e.pointerType && e.pointerType !== \"mouse\";\n\t\t\t\t\tif (touch || (this === parent && parent._settings.openAction == \"click\"))\n\t\t\t\t\t\tthis._mouse_move_activation(id, trg);\n\t\t\t\t\t//do not close popups when clicking on menu folder\n\t\t\t\t\te.showpopup = parent._settings.id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.attachEvent(\"onKeyPress\", function(code){\n\t\t\tif(code === 9) this.getTopMenu()._hide_sub_menu();\n\t\t\telse if(code === 13 || code === 32){\n\t\t\t\tvar sel = this.getSelectedId(), node;\n\t\t\t\tif(sel)\n\t\t\t\t\tnode = this.getItemNode(sel);\n\t\t\t\tif(node)\n\t\t\t\t\ttriggerEvent(node, \"MouseEvent\", \"click\");\n\t\t\t}\n\n\t\t});\n\n\t\tthis.data.attachEvent(\"onClearAll\", function(){\n\t\t\tthis._hidden_items = [];\n\t\t});\n\t\tthis.data._hidden_items = [];\n\n\t\tthis._viewobj.setAttribute(\"role\", \"menubar\");\n\n\t\t//component can create new view\n\t\tthis._destroy_with_me = [];\n\t},\n\t_init_mouse_events:function(){\n\t\tthis.attachEvent(\"onMouseMove\", function(id, e, target){\n\t\t\tif (!this._menu_was_activated())\n\t\t\t\treturn;\n\t\t\tthis._mouse_move_activation(id, target);\n\t\t});\n\t\tthis.attachEvent(\"onMouseOut\", function(e){\n\t\t\tif (this._menu_was_activated() && this._settings.openAction == \"click\") return;\n\t\t\tif (!this._child_menu_active && (!e.relatedTarget || !this.$view.contains(e.relatedTarget)))\n\t\t\t\tthis._hide_sub_menu();\n\t\t});\n\t},\n\tsizeToContent:function(){\n\t\tif (this._settings.layout == \"y\"){\n\t\t\tvar texts = [];\n\t\t\tvar isSubmenu = false;\n\t\t\tthis.data.each(function(obj){\n\t\t\t\ttexts.push(this._toHTML(obj));\n\t\t\t\tif(obj.submenu)\n\t\t\t\t\tisSubmenu = true;\n\t\t\t}, this);\n\t\t\t// text width + padding + borders+ arrow\n\t\t\tthis.config.width = getTextSize(texts, this.$view.className).width+8*2+2+(isSubmenu?15:0);\n\t\t\tthis.resize();\n\t\t} else assert(false, \"sizeToContent will work for vertical menu only\");\n\t},\n\tgetTopMenu:function(){\n\t\tvar parent = this;\n\t\twhile (parent._parent_menu)\n\t\t\tparent = $$(parent._parent_menu);\n\t\treturn parent;\n\t},\n\t_auto_height_calc:function(count){\n\t\tif (this._settings.autoheight)\n\t\t\tcount = this.count();\n\t\t\n\t\tvar value = this.count(), height = 0;\n\n\t\tfor (var i=0; i<count; i++){\n\t\t\tvar item = this.data.pull[this.data.order[i]];\n\t\t\tif (item && item.$template == \"Separator\"){\n\t\t\t\theight+=4;\n\t\t\t\tif(!this._settings.autoheight)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse\n\t\t\t\theight+=this.type.height;\n\t\t}\n\n\t\tthis._onoff_scroll(count && count < value, \"y\");\n\t\t\n\t\treturn height;\n\t},\n\ton_mouse_move:{},\n\ttype:{\n\t\t_submenu:function(obj){\n\t\t\treturn obj.submenu || obj.data || obj.item;\n\t\t},\n\t\tcss:\"menu\",\n\t\twidth:\"auto\",\n\t\taria:function(obj, common, marks){\n\t\t\treturn \"role=\\\"menuitem\\\"\"+(marks && marks.webix_selected?\" aria-selected=\\\"true\\\" tabindex=\\\"0\\\"\":\"tabindex=\\\"-1\\\"\")+(common._submenu(obj)?\"aria-haspopup=\\\"true\\\"\":\"\")+\n\t\t\t\t(obj.disabled?\" aria-disabled=\\\"true\\\"  webix_disabled=\\\"true\\\"\":\"\");\n\t\t},\n\t\ttemplateStart:function(obj, common, mark){\n\t\t\tif (obj.$template === \"Separator\" || obj.$template === \"Spacer\"){\n\t\t\t\treturn \"<div \"+/*@attr*/\"webix_l_id\"+\"=\\\"#id#\\\" role=\\\"separator\\\" tabindex=\\\"-1\\\" class=\\\"webix_context_\"+obj.$template.toLowerCase()+\"\\\">\";\n\t\t\t}\n\t\t\tvar link = (obj.href?\" href='\"+obj.href+\"' \":\"\")+(obj.target?\" target='\"+obj.target+\"' \":\"\");\n\t\t\treturn list.api.type.templateStart(obj,common,mark).replace(/^<div/,\"<a \"+link)+((common._submenu(obj) && common.subsign)?\"<div class='webix_submenu_icon'></div>\":\"\");\n\t\t},\n\t\ttemplateEnd: function(obj){\n\t\t\treturn (obj.$template === \"Separator\" || obj.$template === \"Spacer\")?\"</div>\":\"</a>\";\n\t\t},\n\t\ttemplateSeparator:template(\"<div class='sep_line'></div>\"),\n\t\ttemplateSpacer:template(\"<div></div>\")\n\t},\n\tgetMenu: function(id){\n\t\tif (!this.data.pull[id]){\n\t\t\tfor (var subid in this.data.pull){\n\t\t\t\tvar obj = this.getItem(subid);\n\t\t\t\tif (obj.submenu){\n\t\t\t\t\tvar search = this._get_submenu(obj).getMenu(id);\n\t\t\t\t\tif (search) return search;\n\t\t\t\t}\n\t\t\t}\n\t\t} else return this;\n\t},\n\tgetSubMenu:function(id){\n\t\tvar menu = this.getMenu(id);\n\t\tvar obj = menu.getItem(id);\n\t\treturn (obj.submenu?menu._get_submenu(obj):null);\n\t},\n\tgetMenuItem:function(id){\n\t\treturn this.getMenu(id).getItem(id);\n\t},\n\t_get_submenu:function(data){\n\t\tvar sub  = $$(data.submenu);\n\t\tif (!sub){\n\t\t\tdata.submenu = this._create_sub_menu(data);\n\t\t\tsub = $$(data.submenu);\n\t\t}\n\t\treturn sub;\n\t},\n\t_menu_was_activated:function(){\n\t\tvar top = this.getTopMenu();\n\t\tif (top._settings.openAction == \"click\"){\n\t\t\tvar sub = top._open_sub_menu;\n\t\t\tif (sub && $$(sub).isVisible())\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\t_mouse_move_activation:function(id, target){\n\t\tvar data = this.getItem(id);\n\t\tif (!data) return;\n\t\t\n\t\t//clear flag of submenu usage\n\t\tthis._child_menu_active = null;\n\n\t\t//hide previously opened sub-menu\n\t\tif (this._open_sub_menu && data.submenu != this._open_sub_menu)\n\t\t\tthis._hide_sub_menu(true);\n\n\t\t//show submenu\n\t\tif (this.type._submenu(data)&&!this.config.hidden){\n\n\t\t\tvar sub  = this._get_submenu(data);\n\t\t\tif (!this.isItemEnabled(id)) return;\n\n\t\t\tsub.show(target,{ pos:this._settings.subMenuPos });\n\t\t\tsub._parent_menu = this._settings.id;\n\n\t\t\tthis._open_sub_menu = data.submenu;\n\t\t}\n\t},\n\tdisableItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_disabled(id, true);\n\t},\n\tenableItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_disabled(id, false);\n\t},\n\tisItemEnabled:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) return list.api.isItemEnabled.apply(menu, arguments);\n\t},\n\t_set_item_hidden:function(id, state){\n\t\tconst menu = this.data;\n\t\tif (menu._hidden_items[id] != state){\n\t\t\tmenu._hidden_items[id] = state;\n\t\t\tmenu.filter(function(obj){\n\t\t\t\treturn !menu._hidden_items[obj.id];\n\t\t\t});\n\t\t\tthis.resize();\t\t\n\t\t}\n\t},\n\thideMenuItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_hidden(id, true);\n\t},\n\tshowMenuItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu) menu._set_item_hidden(id, false);\n\t},\n\tshowItem:function(id){\n\t\tconst menu = this.getMenu(id);\n\t\tif (menu)\n\t\t\treturn list.api.showItem.call(menu, id);\n\t},\n\t_hide_sub_menu : function(mode){\n\t\tif (this._open_sub_menu){\n\t\t\t//recursive sub-closing\n\t\t\tvar sub = $$(this._open_sub_menu);\n\t\t\tif (sub._hide_sub_menu)\t//custom context may not have submenu\n\t\t\t\tsub._hide_sub_menu(mode);\n\t\t\tif (mode || !sub._show_on_mouse_out){\n\t\t\t\tsub.hide();\n\t\t\t\tthis._open_sub_menu = null;\n\t\t\t}\n\t\t}\n\t},\n\t_create_sub_menu : function(data){\n\t\tvar listConfig = {\n\t\t\tview:\"submenu\",\n\t\t\tdata:this.type._submenu(data)\n\t\t};\n\n\t\tvar settings = this.getTopMenu()._settings.submenuConfig;\n\t\tif (settings)\n\t\t\textend(listConfig, settings, true);\n\n\t\tvar parentData = this.getMenuItem(data.id);\n\t\tif(parentData && parentData.config)\n\t\t\textend(listConfig, parentData.config, true);\n\n\t\tvar menu = ui(listConfig);\n\t\tthis._destroy_with_me.push(menu);\n\t\tmenu._parent_menu = this;\n\t\treturn menu._settings.id;\n\t},\n\t_skip_item:function(id, prev, dir){\n\t\tconst item = this.getItem(id);\n\t\tif (item.$template == \"Separator\" || item.$template == \"Spacer\" || !this.isItemEnabled(id)){\n\t\t\tid = this.getNextId(id, dir) || null;\n\t\t\treturn (id && id != prev)? this._skip_item(id, prev, dir) : prev;\n\t\t}\n\t\treturn id;\n\t},\n\t$skin:function(){\n\t\tlist.api.$skin.call(this);\n\n\t\tthis.type.height = $active.menuHeight;\n\t},\n\tdefaults:{\n\t\tscroll:\"\",\n\t\tlayout:\"x\",\n\t\tmouseEventDelay:100,\n\t\tsubMenuPos:\"bottom\"\n\t}\n};\n\n\nconst view = protoUI(api,  list.view);\nexport default {api, view};","import EventSystem from \"../core/eventsystem\";\nimport Settings from \"../core/settings\";\nimport {preventEvent} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport env from \"../webix/env\";\nimport {toNode, delay} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {$active} from \"../webix/skin\";\n\nconst api = {\n\tname:\"vscroll\",\n\t$apiOnly:true,\n\tdefaults:{\n\t\tscroll:\"x\",\n\t\tscrollPos:0,\n\t\tscrollSize:18,\n\t\tscrollVisible:true,\n\t\tzoom:1\n\t},\n\t$init:function(config){\n\t\tvar dir = config.scroll||\"x\";\n\t\tvar node = this._viewobj = toNode(config.container);\n\t\tnode.className += \" webix_vscroll_\"+dir;\n\t\tnode.innerHTML = \"<div class='webix_vscroll_body'></div>\";\n\t\t_event(node, \"scroll\", () => this._onscroll_delay());\n\n\t\tthis._last_set_size = 0;\n\t},\n\t$skin:function(){\n\t\tthis.defaults.scrollStep = $active.rowHeight;\n\t},\n\treset:function(){\n\t\tthis.config.scrollPos = 0;\n\t\tthis._viewobj[this.config.scroll == \"x\"?\"scrollLeft\":\"scrollTop\"] = 0;\n\n\t\tif (this._scroll_delay)\n\t\t\tclearTimeout(this._scroll_delay[0]);\n\t},\n\t_check_quantum:function(value){\n\t\tif (value>1500000){\n\t\t\tthis._settings.zoom = value/1000000;\n\t\t\tvalue = 1000000;\n\t\t} else {\n\t\t\tthis._settings.zoom = 1;\n\t\t}\n\t\treturn value;\n\t},\t\n\tscrollWidth_setter:function(value){\n\t\tvalue = this._check_quantum(value);\n\t\tthis._viewobj.firstChild.style.width = value+\"px\";\n\t\treturn value;\t\t\n\t},\n\tscrollHeight_setter:function(value){\n\t\tvalue = this._check_quantum(value);\n\t\tthis._viewobj.firstChild.style.height = value+\"px\";\n\t\treturn value;\n\t},\n\tsizeTo:function(value, top, bottom){\n\t\tvalue = value-(top||0)-(bottom||0);\n\n\t\tlet width = this._settings.scrollSize;\n\t\tif (!width && this._settings.scrollVisible && !env.$customScroll) width = 14;\n\n\t\tif (!width){\n\t\t\tthis._viewobj.style.display = \"none\";\n\t\t} else {\n\t\t\tthis._viewobj.style.display = \"block\";\n\t\t\tif (top)\n\t\t\t\tthis._viewobj.style.marginTop = top+ \"px\";\n\t\t\tthis._viewobj.style[this._settings.scroll == \"x\"?\"width\":\"height\"] = Math.max(0,value)+\"px\";\n\t\t\tthis._viewobj.style[this._settings.scroll == \"x\"?\"height\":\"width\"] = width+\"px\";\n\t\t}\n\n\t\tthis._last_set_size = value;\n\t},\n\tgetScroll:function(){\n\t\treturn Math.round(this._settings.scrollPos*this._settings.zoom);\n\t},\n\tgetSize:function(){\n\t\treturn Math.round((this._settings.scrollWidth||this._settings.scrollHeight)*this._settings.zoom);\n\t},\n\t_fixSize(){\n\t\tconst pos = this.getScroll();\n\t\tconst max = Math.max(this.getSize() - this._last_set_size, 0);\n\t\tif (pos > max)\n\t\t\tthis.scrollTo(max);\n\t},\n\t_sync(value, smooth){\n\t\tconst config = this._settings;\n\n\t\tvalue = Math.round(value / config.zoom);\n\t\t//safety check for negative values\n\t\tif (value < 0) value = 0;\n\n\t\tif (smooth && this._viewobj.scrollTo) {\n\t\t\tconst options = { top:0, left:0, behavior:\"smooth\" };\n\t\t\toptions[config.scroll == \"x\"?\"left\":\"top\"] = value;\n\n\t\t\tthis._viewobj.scrollTo(options);\n\t\t} else {\n\t\t\tthis._viewobj[config.scroll == \"x\"?\"scrollLeft\":\"scrollTop\"] = value;\n\t\t}\n\t\tthis._onscroll_delay(150);\n\t\tthis._settings.scrollPos = value || 0;\n\t},\n\tscrollTo:function(value){\n\t\tconst config = this._settings;\n\n\t\tvalue = Math.round(value / config.zoom);\n\t\t//safety check for negative values\n\t\tif (value < 0) value = 0;\n\n\t\t//apply new position\n\t\tif (value != this._settings.scrollPos){\n\t\t\tthis._viewobj[config.scroll == \"x\"?\"scrollLeft\":\"scrollTop\"] = value;\n\t\t\tthis._onscroll_inner(value, true);\n\t\t}\n\t},\n\t_onscroll_delay:function(time){\n\t\tif (this._scroll_delay) {\n\t\t\ttime = time || this._scroll_delay[1];\n\t\t\tclearTimeout(this._scroll_delay[0]);\n\t\t}\n\t\tthis._scroll_delay = [delay(this._onscroll, this, [!!time], time), time];\n\t},\n\t_onscroll:function(sync){\n\t\tthis._scroll_delay = null;\n\t\tif (sync) return;\n\n\t\tconst v = Math.round( this._viewobj[this._settings.scroll == \"x\"?\"scrollLeft\":\"scrollTop\"] );\n\t\tif (v != this._settings.scrollPos)\n\t\t\tthis._onscroll_inner(v, false);\n\t},\n\t_onscroll_inner:function(value, api){\n\t\t//size of scroll area\n\t\tvar height = (this._settings.scrollWidth||this._settings.scrollHeight);\n\t\t//if we scrolled to the end of the area\n\t\tif (value >= height - this._last_set_size/(api?this._settings.zoom:1)) {\n\t\t\t//set value so the last row is visible\n\t\t\tvalue = Math.max(0, height - this._last_set_size/this._settings.zoom);\n\t\t}\n\t\t\n\t\tthis._settings.scrollPos = value || 0;\n\t\tthis.callEvent(\"onScroll\", [this.getScroll()]);\n\t},\n\tactiveArea:function(area, x_mode){\n\t\tthis._x_scroll_mode = x_mode;\n\n\t\t_event(area, \"wheel\", this._on_wheel, { bind: this, passive: false });\n\t\t// workaround: show dynamic scrollbars when hovering over the active area\n\t\tlet throttled;\n\t\tconst mousemoveEvent = new MouseEvent(\"mousemove\", {\n\t\t\tbubbles: true,\n\t\t\tpassive: false,\n\t\t\tview: window,\n\t\t});\n\t\t_event(area, \"mousemove\", () => {\n\t\t\tif (env.scrollSize === 0 && !env.$customScroll) {\n\t\t\t\tif (throttled) return;\n\t\t\t\telse {\n\t\t\t\t\tthis._viewobj.dispatchEvent(mousemoveEvent);\n\t\t\t\t\tthrottled = true;\t\n\t\t\t\t}\n\t\t\t\tsetTimeout(() => throttled = false, 500);\n\t\t\t}\n\t\t}, { passive: false });\n\t},\n\t_on_wheel:function(e){\n\t\tif (e.ctrlKey) return false;\n\n\t\tlet dir = 0;\n\t\tconst step = e.deltaMode === 0 ? 30 : 1;\n\t\tif ((e.deltaX && Math.abs(e.deltaX) > Math.abs(e.deltaY)) || e.shiftKey){\n\t\t\t//x-scroll\n\t\t\tif (this._x_scroll_mode && this._settings.scrollVisible)\n\t\t\t\tdir = (e.shiftKey ? e.deltaY : e.deltaX) / step;\n\t\t} else {\n\t\t\t//y-scroll\n\t\t\tif (!this._x_scroll_mode && this._settings.scrollVisible)\n\t\t\t\tdir = e.deltaY / step;\n\t\t}\n\n\t\t// Safari requires target preserving\n\t\t// (used in _check_rendered_cols of DataTable)\n\t\tif (env.isSafari)\n\t\t\tthis._scroll_trg = e.target;\n\n\t\tif (dir){\n\t\t\tconst old = this.getScroll();\n\t\t\tthis.scrollTo(old + dir*this._settings.scrollStep);\n\t\t\tif (old !== this.getScroll())\n\t\t\t\tpreventEvent(e);\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api, EventSystem, Settings);\nexport default {api, view};","import {bind, extend, isUndefined} from \"../../webix/helpers\";\nimport {_event} from \"../../webix/htmlevents\";\nimport {assert} from \"../../webix/debug\";\nimport SelectionModel from \"../../core/selectionmodel\";\nimport DragControl from \"../../core/dragcontrol\";\nimport env from \"../../webix/env\";\n\nconst Mixin = {\n\thover_setter:function(value){\n\t\tif (value && !this._hover_initialized){\n\t\t\tthis._enable_mouse_move();\n\t\t\tthis.config.experimental = true;\n\n\t\t\tthis.attachEvent(\"onMouseMoving\", e => {\n\t\t\t\t// do not show hover while dragging\n\t\t\t\tif (DragControl.active) {\n\t\t\t\t\tif (this._last_hover)\n\t\t\t\t\t\tthis._last_hover = this.removeRowCss(this._last_hover, this._settings.hover);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet pos = this.locate(e);\n\t\t\t\t// when we click inner html element, edge calls mousemove with incorrect e.target\n\t\t\t\tif(!pos && env.isEdge && e.relatedTarget)\n\t\t\t\t\tpos = this.locate(e.relatedTarget);\n\n\t\t\t\tconst row = pos ? pos.row : null;\n\t\t\t\tif (this._last_hover != row){\n\t\t\t\t\tif (this._last_hover)\n\t\t\t\t\t\tthis.removeRowCss(this._last_hover, this._settings.hover);\n\n\t\t\t\t\tthis._last_hover = row;\n\t\t\t\t\tif (this._last_hover)\n\t\t\t\t\t\tthis.addRowCss(this._last_hover, this._settings.hover);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_event(this.$view, \"mouseout\", e => {\n\t\t\t\tconst trg = e.target;\n\n\t\t\t\t// inner html elements blinking in case of hover:true\n\t\t\t\t// ie and edge call mouseout when clicking inner html element\n\t\t\t\tif (this._last_hover && document.body.contains(trg)){\n\t\t\t\t\tconst pos = e.relatedTarget ? this.locate(e.relatedTarget) : null;\n\t\t\t\t\tif (!pos){\n\t\t\t\t\t\tthis.removeRowCss(this._last_hover, this._settings.hover);\n\t\t\t\t\t\tthis._last_hover = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._hover_initialized = 1;\n\t\t}\n\t\treturn value;\n\t},\n\tselect_setter:function(value){\n\t\tif (!this.select && value){\n\t\t\textend(this, this._selections._commonselect, true);\n\t\t\tif (value === true)\n\t\t\t\tvalue = \"row\";\n\t\t\telse if (value == \"multiselect\"){\n\t\t\t\tvalue = \"row\";\n\t\t\t\tthis._settings.multiselect = true;\n\t\t\t}\n\t\t\tassert(this._selections[value], \"Unknown selection mode: \"+value);\n\t\t\textend(this, this._selections[value], true);\n\t\t}\n\t\treturn value;\n\t},\n\tgetSelectedId:function(mode){\n\t\treturn  mode?[]:\"\"; //dummy placeholder\n\t},\n\tgetSelectedItem:function(mode){\n\t\treturn SelectionModel.getSelectedItem.call(this, mode);\n\t},\n\t_selections:{\n\t\t//shared methods for all selection models\n\t\t_commonselect:{\n\t\t\t_select_css:\" webix_cell_select\",\n\t\t\t$init:function(){\n\t\t\t\tthis._reinit_selection();\n\n\t\t\t\tthis.on_click.webix_cell = bind(this._click_before_select, this);\n\n\t\t\t\t//temporary stab, actual handlers need to be created\n\t\t\t\tthis._data_cleared = this._data_filtered = function(){\n\t\t\t\t\tthis.unselect();\n\t\t\t\t};\n\n\t\t\t\tthis.data.attachEvent(\"onStoreUpdated\",bind(this._data_updated,this));\n\t\t\t\tthis.data.attachEvent(\"onSyncApply\", bind(this._data_synced, this));\n\t\t\t\tthis.data.attachEvent(\"onClearAll\", bind(this._data_cleared,this));\n\t\t\t\tthis.data.attachEvent(\"onAfterFilter\", bind(this._data_filtered,this));\n\t\t\t\tthis.data.attachEvent(\"onIdChange\", bind(this._id_changed,this));\n\n\t\t\t\tthis.$ready.push(SelectionModel._set_noselect);\n\t\t\t},\n\t\t\t_id_changed:function(oldid, newid){\n\t\t\t\tfor (let i=0; i<this._selected_rows.length; i++)\n\t\t\t\t\tif (this._selected_rows[i] == oldid)\n\t\t\t\t\t\tthis._selected_rows[i] = newid;\n\n\t\t\t\tfor (let i=0; i<this._selected_areas.length; i++){\n\t\t\t\t\tconst item = this._selected_areas[i];\n\t\t\t\t\tif (item.row == oldid){\n\t\t\t\t\t\toldid = this._select_key(item);\n\t\t\t\t\t\titem.row = newid;\n\t\t\t\t\t\tnewid = this._select_key(item);\n\t\t\t\t\t\titem.id = newid;\n\n\t\t\t\t\t\tdelete this._selected_pull[oldid];\n\t\t\t\t\t\tthis._selected_pull[newid] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_data_updated:function(id, obj, type){\n\t\t\t\tif (type == \"delete\") \n\t\t\t\t\tthis.unselect(id);\n\t\t\t},\n\t\t\t_data_synced:function(){\n\t\t\t\tfor (let i = this._selected_areas.length-1; i >=0 ; i--){\n\t\t\t\t\tconst row = this._selected_areas[i].row;\n\t\t\t\t\tif (!this.exists(row)){\n\t\t\t\t\t\tthis._selected_areas.splice(i,1);\n\t\t\t\t\t\tdelete this._selected_pull[row];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_reinit_selection:function(){\n\t\t\t\t//list of selected areas\n\t\t\t\tthis._selected_areas=[];\n\t\t\t\t//key-value hash of selected areas, for fast search\n\t\t\t\tthis._selected_pull={};\n\t\t\t\t//used to track selected cell objects\n\t\t\t\tthis._selected_rows = [];\n\t\t\t},\n\t\t\tisSelected:function(id, column){\n\t\t\t\tlet key;\n\t\t\t\tif (!isUndefined(column))\n\t\t\t\t\tkey = this._select_key({ row:id, column: column});\n\t\t\t\telse \n\t\t\t\t\tkey = typeof id === \"object\"? this._select_key(id) : id;\n\n\t\t\t\treturn this._selected_pull[key];\n\t\t\t},\n\t\t\tgetSelectedId:function(asArray, plain){\n\t\t\t\tlet result;\n\n\t\t\t\t//if multiple selections was created - return array\n\t\t\t\t//in case of single selection, return value or array, when asArray parameter provided\n\t\t\t\tif (this._selected_areas.length > 1 || asArray){\n\t\t\t\t\tresult = [].concat(this._selected_areas);\n\t\t\t\t\tif (plain)\n\t\t\t\t\t\tfor (let i = 0; i < result.length; i++)\n\t\t\t\t\t\t\tresult[i]=result[i].id;\n\t\t\t\t} else {\n\t\t\t\t\tresult = this._selected_areas[0];\n\t\t\t\t\tif (plain && result)\n\t\t\t\t\t\treturn result.id;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t_id_to_string:function(){\n\t\t\t\treturn this.row;\n\t\t\t},\n\t\t\t_select:function(data, preserve){\n\t\t\t\tconst key = this._select_key(data);\n\t\t\t\t//don't allow selection on unnamed columns\n\t\t\t\tif (key === null) return;\n\n\t\t\t\tif (preserve === -1)\n\t\t\t\t\treturn this._unselect(data);\n\n\t\t\t\tdata.id = key;\n\t\t\t\tdata.toString = this._id_to_string;\n\n\t\t\t\tif (!this.callEvent(\"onBeforeSelect\",[data, preserve])) return false;\n\n\t\t\t\t//ignore area, if it was already selected and\n\t\t\t\t// - we are preserving existing selection\n\t\t\t\t// - this is the only selected area\n\t\t\t\t// otherwise we need to clear other selected areas\n\t\t\t\tif (this._selected_pull[key] && (preserve || this._selected_areas.length == 1)) return;\n\n\t\t\t\tif (!preserve)\n\t\t\t\t\tthis._clear_selection();\n\n\t\t\t\tthis._selected_areas.push(data);\n\t\t\t\tthis._selected_pull[key] = true;\n\n\t\t\t\tthis.callEvent(\"onAfterSelect\",[data, preserve]);\n\n\t\t\t\t\n\t\t\t\tthis._finalize_select(this._post_select(data));\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t_clear_selection:function(){\n\t\t\t\tif (!this._selected_areas.length) return false;\n\n\t\t\t\tfor (let i=0; i<this._selected_areas.length; i++){\n\t\t\t\t\tif (!this.callEvent(\"onBeforeUnSelect\", [this._selected_areas[i]])) return false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i=0; i<this._selected_rows.length; i++)\n\t\t\t\t\tthis.data.removeMark(this._selected_rows[i], \"webix_selected\", 0, true);\n\n\t\t\t\tconst cols = this._settings.columns;\n\t\t\t\tif (cols)\n\t\t\t\t\tfor (let i = 0; i < cols.length; i++) {\n\t\t\t\t\t\tcols[i].$selected = null;\n\t\t\t\t\t}\n\n\t\t\t\tconst data = this._selected_areas;\n\t\t\t\tthis._reinit_selection();\n\t\t\t\tfor (let i=0; i<data.length; i++){\n\t\t\t\t\tthis.callEvent(\"onAfterUnSelect\", [data[i]]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tunselectAll:function(){\n\t\t\t\tthis.clearSelection();\n\t\t\t},\n\t\t\tselectAll:function(){\n\t\t\t\tthis.selectRange();\n\t\t\t},\n\t\t\tclearSelection:function(){\n\t\t\t\tif (this._clear_selection()){\n\t\t\t\t\tthis.callEvent(\"onSelectChange\",[]);\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t},\n\t\t\t_unselect:function(data){\n\t\t\t\tconst key = this._select_key(data);\n\t\t\t\tif (!key && this._selected_areas.length){\n\t\t\t\t\tthis.clearSelection();\n\t\t\t\t\tthis.callEvent(\"onSelectChange\", []);\n\t\t\t\t}\n\n\t\t\t\t//ignore area, if it was already selected\n\t\t\t\tif (!this._selected_pull[key]) return;\n\n\t\t\t\tif (!this.callEvent(\"onBeforeUnSelect\",[data])) return false;\n\n\t\t\t\tfor (let i = 0; i < this._selected_areas.length; i++){\n\t\t\t\t\tif (this._selected_areas[i].id == key){\n\t\t\t\t\t\tthis._selected_areas.splice(i,1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdelete this._selected_pull[key];\n\n\t\t\t\tthis.callEvent(\"onAfterUnSelect\",[data]);\n\t\t\t\tthis._finalize_select(0, this._post_unselect(data));\n\t\t\t},\n\t\t\t_add_item_select:function(id){\n\t\t\t\tconst item = this.getItem(id);\n\t\t\t\treturn this.data.addMark(item.id, \"webix_selected\", 0, { $count: 0 }, true);\n\t\t\t},\n\t\t\t_finalize_select:function(id){\n\t\t\t\tif (id)\n\t\t\t\t\tthis._selected_rows.push(id);\n\t\t\t\tif (!this._silent_selection){\n\t\t\t\t\tthis.render();\n\t\t\t\t\tthis.callEvent(\"onSelectChange\",[]);\t\n\t\t\t\t}\n\t\t\t},\n\t\t\t_click_before_select:function(e, id){\n\t\t\t\tconst c = this._settings;\n\t\t\t\tlet preserve = e.ctrlKey || e.metaKey || (c.multiselect === \"touch\");\n\t\t\t\tlet range = e.shiftKey;\n\n\t\t\t\tif (!c.multiselect && c.select != \"multiselect\" && c.select !== \"area\")\n\t\t\t\t\tpreserve = range = false;\n\n\t\t\t\tif (range && this._selected_areas.length){\n\t\t\t\t\tconst last = this._selected_areas[this._selected_areas.length-1];\n\t\t\t\t\tthis._selectRange(id, last);\n\t\t\t\t} else {\n\t\t\t\t\tif (preserve && this._selected_pull[this._select_key(id)])\n\t\t\t\t\t\tthis._unselect(id);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._select({ row: id.row, column:id.column }, preserve);\n\t\t\t\t}\n\n\t\t\t\t// don't change focus when inline editor is active\n\t\t\t\tconst editor = this.getEditor(id);\n\t\t\t\tif (editor && editor.$inline && !editor.getPopup) return;\n\n\t\t\t\t// restore focus\n\t\t\t\tlet node = this.getItemNode(id);\n\t\t\t\tif(node)\n\t\t\t\t\tnode.focus( {preventScroll: true} );\n\t\t\t},\n\t\t\t_mapSelection:function(callback, column, row){\n\t\t\t\tlet cols = this._settings.columns;\n\t\t\t\t//selected columns only\n\t\t\t\tif (column){\n\t\t\t\t\tconst temp = [];\n\t\t\t\t\tfor (let i=0; i<cols.length; i++)\n\t\t\t\t\t\tif (cols[i].$selected)\n\t\t\t\t\t\t\ttemp.push(cols[i]);\n\t\t\t\t\tcols = temp;\n\t\t\t\t}\n\n\t\t\t\tconst rows = this.data.order;\n\t\t\t\tlet row_ind = 0;\n\n\t\t\t\tfor (let i=0; i<rows.length; i++){\n\t\t\t\t\tconst item = this.getItem(rows[i]);\n\t\t\t\t\tif (!item) continue; //dyn loading, row is not available\n\t\t\t\t\tconst selection = this.data.getMark(item.id, \"webix_selected\");\n\t\t\t\t\tif (selection || column){\n\t\t\t\t\t\tlet col_ind = 0;\n\t\t\t\t\t\tfor (let j = 0; j < cols.length; j++){\n\t\t\t\t\t\t\tconst id = cols[j].id;\n\t\t\t\t\t\t\tif (row || column || selection[id]){\n\t\t\t\t\t\t\t\tif (callback)\n\t\t\t\t\t\t\t\t\titem[id] = callback(item[id], rows[i], id, row_ind, col_ind);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn {row:rows[i], column:id};\n\t\t\t\t\t\t\t\tcol_ind++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//use separate row counter, to count only selected rows\n\t\t\t\t\t\trow_ind++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\n\t\trow : {\n\t\t\t_select_css:\" webix_row_select\",\n\t\t\t_select_key:function(data){ return data.row; },\n\t\t\tselect:function(row_id, preserve){\n\t\t\t\t//when we are using id from mouse events\n\t\t\t\tif (row_id) row_id = row_id.toString();\n\n\t\t\t\tassert(this.data.exists(row_id), \"Incorrect id in select command: \"+row_id);\n\t\t\t\tthis._select({ row:row_id }, preserve);\n\t\t\t},\n\t\t\t_post_select:function(data){\n\t\t\t\tthis._add_item_select(data.row).$row = true;\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tunselect:function(row_id){\n\t\t\t\tthis._unselect({row : row_id});\n\t\t\t},\n\t\t\t_post_unselect:function(data){\n\t\t\t\tthis.data.removeMark(data.row, \"webix_selected\", 0, true);\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\treturn this._mapSelection(callback, false, true);\n\t\t\t},\n\t\t\t_selectRange:function(a,b){\n\t\t\t\treturn this.selectRange(a.row, b.row);\n\t\t\t},\n\t\t\tselectRange:function(row_id, end_row_id, preserve){\n\t\t\t\tif (isUndefined(preserve)) preserve = true;\n\n\t\t\t\tlet row_start_ind = row_id ? this.getIndexById(row_id) : 0;\n\t\t\t\tlet row_end_ind = end_row_id ? this.getIndexById(end_row_id) : this.data.order.length-1;\n\n\t\t\t\tif (row_start_ind>row_end_ind){\n\t\t\t\t\tvar temp = row_start_ind;\n\t\t\t\t\trow_start_ind = row_end_ind;\n\t\t\t\t\trow_end_ind = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._silent_selection = true;\n\t\t\t\tfor (let i=row_start_ind; i<=row_end_ind; i++){\n\t\t\t\t\tconst id = this.getIdByIndex(i);\n\t\t\t\t\tif (!id){\n\t\t\t\t\t\tif (row_id)\n\t\t\t\t\t\t\tthis.select(row_id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.select(id, preserve);\n\t\t\t\t}\n\n\t\t\t\tthis._silent_selection = false;\n\t\t\t\tthis._finalize_select();\n\t\t\t}\n\t\t},\n\n\t\tcell:{\n\t\t\t_select_key:function(data){\n\t\t\t\tif (!data.column) return null;\n\t\t\t\treturn data.row+\"_\"+data.column; \n\t\t\t},\n\t\t\tselect:function(row_id, column_id, preserve){\n\t\t\t\tassert(this.data.exists(row_id), \"Incorrect id in select command: \"+row_id);\n\t\t\t\tthis._select({row:row_id, column:column_id}, preserve);\n\t\t\t},\n\t\t\t_post_select:function(data){\n\t\t\t\tvar sel = this._add_item_select(data.row);\n\t\t\t\tsel.$count++;\n\t\t\t\tsel[data.column]=true;\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tunselect:function(row_id, column_id){\n\t\t\t\tthis._unselect({row:row_id, column:column_id});\n\t\t\t},\n\t\t\t_post_unselect:function(data){\n\t\t\t\tvar sel = this._add_item_select(data.row);\n\t\t\t\tsel.$count-- ;\n\t\t\t\tsel[data.column] = false;\n\t\t\t\tif (sel.$count<=0)\n\t\t\t\t\tthis.data.removeMark(data.row, \"webix_selected\", 0, true);\n\t\t\t\treturn data.row;\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\treturn this._mapSelection(callback, false, false);\n\t\t\t},\n\t\t\t_selectRange:function(a,b){\n\t\t\t\treturn this.selectRange(a.row, a.column, b.row, b.column);\n\t\t\t},\n\n\t\t\tselectRange:function(row_id, column_id, end_row_id, end_column_id, preserve){\n\t\t\t\tif (isUndefined(preserve)) preserve = true;\n\n\t\t\t\tvar row_start_ind = row_id ? this.getIndexById(row_id) : 0;\n\t\t\t\tvar row_end_ind = end_row_id ? this.getIndexById(end_row_id) : this.data.order.length-1;\n\n\t\t\t\tvar col_start_ind = column_id ? this.getColumnIndex(column_id) : 0;\n\t\t\t\tvar col_end_ind = end_column_id ? this.getColumnIndex(end_column_id) : this._columns.length-1;\n\n\t\t\t\tif (row_start_ind>row_end_ind){\n\t\t\t\t\tlet temp = row_start_ind;\n\t\t\t\t\trow_start_ind = row_end_ind;\n\t\t\t\t\trow_end_ind = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (col_start_ind>col_end_ind){\n\t\t\t\t\tlet temp = col_start_ind;\n\t\t\t\t\tcol_start_ind = col_end_ind;\n\t\t\t\t\tcol_end_ind = temp;\n\t\t\t\t}\n\n\t\t\t\tthis._silent_selection = true;\n\t\t\t\tfor (let i=row_start_ind; i<=row_end_ind; i++)\n\t\t\t\t\tfor (let j=col_start_ind; j<=col_end_ind; j++)\n\t\t\t\t\t\tthis.select(this.getIdByIndex(i), this.columnId(j), preserve);\n\t\t\t\tthis._silent_selection = false;\n\t\t\t\tthis._finalize_select();\n\t\t\t}\n\t\t},\n\n\t\tcolumn:{\n\t\t\t_select_css:\" webix_column_select\",\n\t\t\t_select_key:function(data){ return data.column; },\n\t\t\t_id_to_string:function(){\n\t\t\t\treturn this.column;\n\t\t\t},\n\t\t\t//returns box-like area, with ordered selection cells\n\t\t\tselect:function(column_id, preserve){\n\t\t\t\tthis._select({ column:column_id }, preserve);\n\t\t\t},\n\t\t\t_post_select:function(data){\n\t\t\t\tthis._settings.columns[this.getColumnIndex(data.column)].$selected = true;\n\t\t\t\tif (!this._silent_selection)\n\t\t\t\t\tthis._render_header_and_footer();\n\t\t\t},\n\t\t\tunselect:function(column_id){\n\t\t\t\tthis._unselect({column : column_id});\n\t\t\t},\n\t\t\t_post_unselect:function(data){\n\t\t\t\tthis._settings.columns[this.getColumnIndex(data.column)].$selected = null;\n\t\t\t\tthis._render_header_and_footer();\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\treturn this._mapSelection(callback, true, false);\n\t\t\t},\n\t\t\t_selectRange:function(a,b){\n\t\t\t\treturn this.selectRange(a.column, b.column);\n\t\t\t},\n\t\t\tselectRange:function(column_id, end_column_id, preserve){\n\t\t\t\tif (isUndefined(preserve)) preserve = true;\n\n\t\t\t\tvar column_start_ind = column_id ? this.getColumnIndex(column_id) : 0;\n\t\t\t\tvar column_end_ind = end_column_id ? this.getColumnIndex(end_column_id) : this._columns.length-1;\n\n\t\t\t\tif (column_start_ind>column_end_ind){\n\t\t\t\t\tvar temp = column_start_ind;\n\t\t\t\t\tcolumn_start_ind = column_end_ind;\n\t\t\t\t\tcolumn_end_ind = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._silent_selection = true;\n\t\t\t\tfor (let i=column_start_ind; i<=column_end_ind; i++)\n\t\t\t\t\tthis.select(this.columnId(i), preserve);\n\n\t\t\t\tthis._silent_selection = false;\n\n\t\t\t\tthis._render_header_and_footer();\n\t\t\t\tthis._finalize_select();\n\t\t\t},\n\t\t\t_data_synced:function(){\n\t\t\t\t//do nothing, as columns are not changed\n\t\t\t}\n\t\t},\n\t\tarea: {\n\t\t\t_select_key:function(data){\n\t\t\t\treturn data.row+\"_\"+data.column;\n\t\t\t},\n\t\t\tgetSelectedId: function(asArray){\n\t\t\t\tvar area = this.getSelectArea();\n\t\t\t\tvar result = [];\n\t\t\t\tif(area){\n\t\t\t\t\tif(asArray && ( area.start.row != area.end.row || area.start.column != area.end.column )){\n\t\t\t\t\t\tvar row_start_ind = this.getIndexById(area.start.row);\n\t\t\t\t\t\tvar row_end_ind = this.getIndexById(area.end.row);\n\t\t\t\t\t\t//filtering in process\n\t\t\t\t\t\tif(row_start_ind == -1 || row_end_ind == -1)\n\t\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t\tvar col_start_ind = this.getColumnIndex(area.start.column);\n\t\t\t\t\t\tvar col_end_ind = this.getColumnIndex(area.end.column);\n\n\t\t\t\t\t\tfor (let i=row_start_ind; i<=row_end_ind; i++)\n\t\t\t\t\t\t\tfor (var j=col_start_ind; j<=col_end_ind; j++)\n\t\t\t\t\t\t\t\tresult.push({row:this.getIdByIndex(i), column:this.columnId(j)});\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tresult.push(area.end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn asArray?result:result[0];\n\t\t\t},\n\t\t\tunselect:function(){\n\t\t\t\tthis._unselect();\n\t\t\t},\n\t\t\t_unselect: function() {\n\t\t\t\tthis.removeSelectArea();\n\t\t\t\tthis.callEvent(\"onSelectChange\", []);\n\t\t\t},\n\t\t\tmapSelection:function(callback){\n\t\t\t\tvar select  = this.getSelectArea();\n\t\t\t\tif (select){\n\t\t\t\t\tvar sind = this.getColumnIndex(select.start.column);\n\t\t\t\t\tvar eind = this.getColumnIndex(select.end.column);\n\t\t\t\t\tvar srow = this.getIndexById(select.start.row);\n\t\t\t\t\tvar erow = this.getIndexById(select.end.row);\n\n\t\t\t\t\tfor (let i = srow; i <= erow; i++) {\n\t\t\t\t\t\tvar rid = this.data.order[i];\n\t\t\t\t\t\tvar item = this.getItem(rid);\n\t\t\t\t\t\tfor (var j = sind; j <= eind; j++) {\n\t\t\t\t\t\t\tvar cid = this._columns[j].id;\n\t\t\t\t\t\t\tif (callback)\n\t\t\t\t\t\t\t\titem[cid] = callback(item[cid], rid, cid, i-srow, j-sind);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn { row:rid, column:cid };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tselect:function(row_id, column_id, preserve){\n\t\t\t\tassert(this.data.exists(row_id), \"Incorrect id in select command: \"+row_id);\n\t\t\t\tthis._select({row:row_id, column:column_id}, preserve);\n\t\t\t},\n\t\t\t_selectRange:function(id,last){\n\t\t\t\tthis._extendAreaRange(id, last);\n\t\t\t},\n\t\t\t_select: function(cell){\n\t\t\t\t//ctrl-selection is not supported yet, so ignoring the preserve flag\n\t\t\t\tthis.addSelectArea(cell,cell,false);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t_data_synced:function(){\n\t\t\t\tif(this._selected_areas.length)\n\t\t\t\t\tthis.refreshSelectArea();\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Mixin;","import {offset, pos as getPos, preventEvent, remove, removeCss, create, addCss} from \"../../webix/html\";\nimport env from \"../../webix/env\";\nimport {extend, delay} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {_event, event, eventRemove} from \"../../webix/htmlevents\";\nimport AutoScroll from \"../../core/autoscroll\";\n\n\n// #include core/autoscroll.js\nconst Mixin = {\n\tblockselect_setter:function(value){\n\t\tif (value && this._block_sel_flag){\n\t\t\t_event(this._viewobj, env.mouse.down, e => this._bs_down(e, \"mouse\"));\n\t\t\tif (env.touch)\n\t\t\t\tthis.attachEvent(\"onLongTouch\", e => this._bs_down(e, \"touch\"));\n\n\t\t\tthis._block_sel_flag = this._bs_ready = this._bs_progress = false;\n\t\t\tthis.attachEvent(\"onAfterScroll\", this._update_block_selection);\n\t\t\t// auto scroll\n\t\t\textend(this, AutoScroll, true);\n\t\t\tthis.attachEvent(\"onBeforeAutoScroll\",function(){\n\t\t\t\treturn this._bs_progress;\n\t\t\t});\n\t\t}\n\t\treturn value;\n\t},\n\t_block_sel_flag:true,\n\t_childOf:function(e, tag){\n\t\tlet src = e.target;\n\t\twhile (src){\n\t\t\tif (src.getAttribute && src.getAttribute(/*@attr*/\"webixignore\")) return false;\n\t\t\tif (src == tag)\n\t\t\t\treturn true;\n\t\t\tsrc = src.parentNode;\n\t\t}\n\t\treturn false;\n\t},\n\t_bs_down:function(e, pointer){\n\t\t// do not listen to mousedown of subview on master\n\t\tif (this._settings.subview && this != $$(e.target)) return;\n\t\tif (this._childOf(e, this._body)){\n\t\t\t//disable block selection when we have an active editor\n\t\t\tif (e.target && e.target.tagName == \"INPUT\" || this._rs_process) return;\n\n\t\t\tthis._bs_position = offset(this._body);\n\t\t\tconst pos = getPos(e);\n\t\t\tthis._bs_ready = [pos.x - this._bs_position.x, pos.y - this._bs_position.y];\n\n\t\t\tthis._bs_handler_init(e.target, pointer);\n\t\t}\n\t},\n\t_bs_handler_init:function(target, pointer){\n\t\tif (pointer === \"touch\") {\n\t\t\tthis._bs_mm_handler = event(target, env[pointer].move, e => this._bs_move(e, pointer), { passive:false });\n\t\t\tthis._bs_mu_handler = event(target, env[pointer].up, e => this._bs_up(e));\n\t\t} else {\n\t\t\tthis._bs_mm_handler = event(this._viewobj, env[pointer].move, e => this._bs_move(e, pointer));\n\t\t\tthis._bs_mu_handler = event(document, env[pointer].up, e => this._bs_up(e));\n\t\t}\n\t},\n\t_bs_up:function(e){\n\t\tif (this._block_panel){\n\t\t\tthis._bs_select(\"select\", true, e);\n\t\t\tthis._block_panel = remove(this._block_panel);\n\t\t}\n\n\t\tthis._bs_mm_handler = eventRemove(this._bs_mm_handler);\n\t\tthis._bs_mu_handler = eventRemove(this._bs_mu_handler);\n\n\t\tremoveCss(document.body,\"webix_noselect\");\n\t\tthis._bs_ready = this._bs_progress = false;\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t},\n\t_update_block_selection: function(){\n\t\tif (this._bs_progress)\n\t\t\tdelay(this._bs_select, this, [false, false]);\n\t},\n\t_bs_select:function(mode, theend, e){\n\t\tif(!this._bs_ready[2])\n\t\t\tthis._bs_ready[2] = this._locate_cell_xy(this._bs_ready[0],this._bs_ready[1]);\n\t\tconst cell = this._bs_ready[2];\n\t\tconst start = {row: cell.row, column: cell.column},\n\t\t\tend = this._locate_cell_xy(this._bs_progress[0],this._bs_progress[1],true);\n\n\t\tif (!this._bs_do_select && !this.callEvent(\"onBeforeBlockSelect\", [start, end, theend, e]))\n\t\t\treturn;\n\n\t\tif ((!this._bs_do_select || this._bs_do_select(start, end, theend, e) !== false) && (start.row && end.row)){\n\t\t\tif (mode === \"select\"){\n\t\t\t\tthis._clear_selection();\n\t\t\t\tthis._selectRange(start, end);\n\t\t\t} else {\n\t\t\t\tlet startx, starty, endx, endy;\n\n\t\t\t\tif (mode === \"box\"){\n\t\t\t\t\tstartx = Math.min(this._bs_ready[0],this._bs_progress[0]);\n\t\t\t\t\tendx = Math.max(this._bs_ready[0],this._bs_progress[0]);\n\n\t\t\t\t\tstarty = Math.min(this._bs_ready[1],this._bs_progress[1]);\n\t\t\t\t\tendy = Math.max(this._bs_ready[1],this._bs_progress[1]);\n\t\t\t\t} else {\n\t\t\t\t\tconst i0 = this.getIndexById(start.row),\n\t\t\t\t\t\ti1 = this.getIndexById(end.row),\n\t\t\t\t\t\tj0 = this.getColumnIndex(start.column),\n\t\t\t\t\t\tj1 = this.getColumnIndex(end.column);\n\t\t\t\t\tconst sri = Math.min(i0, i1),\n\t\t\t\t\t\teri = Math.max(i0, i1),\n\t\t\t\t\t\tsci = Math.min(j0, j1),\n\t\t\t\t\t\teci = Math.max(j0, j1);\n\t\t\t\t\tconst startPos = this._bs_cell_position(sri, sci, false);\n\t\t\t\t\tconst endPos = this._bs_cell_position(eri, eci, true);\n\n\t\t\t\t\tif(this._settings.prerender){\n\t\t\t\t\t\tstartPos.top -= this._scrollTop;\n\t\t\t\t\t\tendPos.top -= this._scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._settings.topSplit)\n\t\t\t\t\t\tstartPos.top += this._getTopSplitOffset(start);\n\n\t\t\t\t\tstartx = startPos.left;\n\t\t\t\t\tendx = endPos.left;\n\t\t\t\t\tstarty = startPos.top;\n\t\t\t\t\tendy = endPos.top;\n\n\t\t\t\t\tif(e){\n\t\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\t\t\t\tif (!this._touch_scroll || this._settings.prerender)\n\t\t\t\t\t\t\tthis._auto_scroll_delay = delay(this._auto_scroll, this, [getPos(e)], 250);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst style = this._block_panel.style;\n\t\t\t\tstyle.left = startx+\"px\";\n\t\t\t\tstyle.top = starty+\"px\";\n\t\t\t\tstyle.width = (endx-startx)+\"px\";\n\t\t\t\tstyle.height = (endy-starty)+\"px\";\n\t\t\t}\n\t\t}\n\n\t\tif (theend)\n\t\t\tthis.callEvent(\"onAfterBlockSelect\", [start, end]);\n\t},\n\t_bs_cell_position: function(iRow, iCol, isEnd){\n\t\tconst pos = this._cellPosition(this.getIdByIndex(iRow), this.columnId(iCol));\n\t\tconst scroll = this.getScrollState();\n\t\tlet left = pos.left;\n\t\tif (this.config.rightSplit && iCol > (this._columns.length - 1 - this.config.rightSplit)){\n\t\t\tleft += this._left_width + this._center_width;\n\t\t} else if (this.config.leftSplit){\n\t\t\tif (iCol + 1 > this.config.leftSplit){\n\t\t\t\tif(left < scroll.x){\n\t\t\t\t\tpos.width -= scroll.x - left;\n\t\t\t\t\tleft = this._left_width;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tleft += this._left_width - scroll.x;\n\t\t\t}\n\t\t} else left -= scroll.x;\n\n\t\tif(isEnd){\n\t\t\tleft += pos.width;\n\t\t\tpos.top += pos.height;\n\t\t\tif(this.config.rightSplit && iCol < this._columns.length - this.config.rightSplit)\n\t\t\t\tleft = Math.min(left, this._left_width + this._center_width);\n\t\t}\n\t\treturn {left, top: pos.top};\n\t},\n\t_bs_start:function(handleStart){\n\t\tthis._block_panel = create(\"div\", {\"class\":\"webix_block_selection\"},\"\");\n\t\tthis._body.appendChild(this._block_panel);\n\t\tthis.$handleStart = !!handleStart;\n\t},\n\t_bs_move:function(e, pointer){\n\t\tif (this._rs_progress) return;\n\t\tif (this._bs_ready !== false){\n\t\t\tif(!this._bs_progress) addCss(document.body,\"webix_noselect\");\n\n\t\t\tconst pos = getPos(e);\n\t\t\tconst progress = [pos.x - this._bs_position.x, pos.y - this._bs_position.y];\n\n\t\t\t//prevent unnecessary block selection while dbl-clicking\n\t\t\tif (Math.abs(this._bs_ready[0] - progress[0]) < 5 && Math.abs(this._bs_ready[1] - progress[1]) < 5)\n\t\t\t\treturn;\n\n\t\t\tif (this._bs_progress === false)\n\t\t\t\tthis._bs_start();\n\n\t\t\tthis._bs_progress = progress;\n\t\t\tthis._bs_select(this.config.blockselect, false, e);\n\n\t\t\tif (pointer === \"touch\") preventEvent(e);\n\t\t}\n\t},\n\t_locate_cell_xy:function(x, y, isEndPoint){\n\t\tconst handle = isEndPoint && this.$handleStart;\n\t\tconst dir = handle ? this._getHandleMoveDirection(x, y) : null;\n\n\t\tlet inTopSplit = false,\n\t\t\trow = null,\n\t\t\tcolumn = null;\n\n\n\t\tif (this._right_width && x>this._left_width + this._center_width)\n\t\t\tx+= this._x_scroll.getSize()-this._center_width-this._left_width-this._right_width; \n\t\telse if (!this._left_width || x>this._left_width)\n\t\t\tx+= this._x_scroll.getScroll();\n\n\t\tif(this._settings.topSplit && this._render_scroll_top > this._settings.topSplit) {\n\t\t\tconst splitPos = this._cellPosition(this.getIdByIndex(this._settings.topSplit-1), this.columnId(0));\n\t\t\tif(splitPos.top + splitPos.height > y){\n\t\t\t\tinTopSplit = true;\n\t\t\t}\n\t\t}\n\t\tif(!inTopSplit)\n\t\t\ty += this.getScrollState().y;\n\n\t\tif (x<0) x=0;\n\t\tif (y<0) y=0;\n\n\t\tconst cols = this._settings.columns;\n\t\tconst rows = this.data.order;\n\n\t\tlet summ = 0;\n\t\tif(!handle || dir ==\"x\")\n\t\t\tfor (let i=0; i<cols.length; i++){\n\t\t\t\tsumm+=cols[i].width;\n\t\t\t\tif (summ>=x){\n\t\t\t\t\tcolumn = cols[i].id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\tif (!column)\n\t\t\tcolumn = handle?this._bs_ready[5].column:cols[cols.length-1].id;\n\n\t\tsumm = 0;\n\t\tif(!handle || dir==\"y\"){\n\t\t\tconst start = this.data.$min || 0;\n\t\t\tif (this._settings.fixedRowHeight) {\n\t\t\t\trow = rows[start + Math.floor(y / this._settings.rowHeight)];\n\t\t\t} else for (let i = start; i < rows.length; i++) {\n\t\t\t\tsumm += this._getHeightByIndex(i);\n\t\t\t\tif (summ >= y) {\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!row)\n\t\t\trow = handle?this._bs_ready[5].row:rows[rows.length-1];\n\t\treturn {row, column};\n\t},\n\t_getTopSplitOffset: function(cell, area){\n\t\tlet y = 0,\n\t\t\tstartIndex = this.getIndexById(cell.row);\n\n\t\tif(startIndex >= this._settings.topSplit){\n\t\t\tconst startPos = this._cellPosition(this.getIdByIndex(startIndex), cell.column);\n\t\t\tconst splitPos = this._cellPosition(this.getIdByIndex(this._settings.topSplit-1), cell.column);\n\t\t\tif(splitPos.top + splitPos.height > startPos.top)\n\t\t\t\ty = splitPos.top + splitPos.height - ((startPos.top > 0 || !area) ? startPos.top : 0);\n\t\t}\n\n\t\treturn y;\n\t},\n\t_getHandleMoveDirection(x, y){\n\t\tlet dir;\n\t\tconst p0 = [this._bs_ready[0], this._bs_ready[1]];\n\t\tconst p1 = [this._bs_ready[3], this._bs_ready[4]];\n\t\tconst xMax = p1[0]+ this._columns_pull[this._bs_ready[5].column].width;\n\t\tconst yMax = p1[1]+ this._getRowHeight(this._bs_ready[5].row);\n\t\tif(x <= xMax && x >= p0[0]){\n\t\t\tif(y <= yMax && y >= p0[1])\n\t\t\t\tdir = x < p1[0]?\"x\":\"y\";\n\t\t\telse\n\t\t\t\tdir = \"y\";\n\t\t}\n\t\telse{\n\t\t\tconst x0 = x > p1[0]?xMax:p0[0];\n\t\t\tconst y0 = y > p1[1]?yMax:p0[1];\n\t\t\tdir = Math.abs(x - x0) > Math.abs(y - y0)?\"x\":\"y\";\n\t\t\tif(dir == \"y\" && x < p0[0] && y <= yMax && y >= p0[1])\n\t\t\t\tdir = null;\n\t\t}\n\t\treturn dir;\n\t}\n};\n\nexport default Mixin;","import {pos, addCss, denySelect, removeCss, allowSelect, offset, posRelative, create, remove} from \"../../webix/html\";\nimport {delay, isUndefined} from \"../../webix/helpers\";\nimport {$$, ui} from \"../../ui/core\";\nimport {_event, event, eventRemove} from \"../../webix/htmlevents\";\n\n//indirect import\nimport \"../resizearea\";\n\nconst Mixin = {\n\t_rs_init_flag: true,\n\tresizeRow_setter:function(value){\n\t\tthis._settings.scrollAlignY = false;\n\t\tthis._settings.fixedRowHeight = false;\n\t\tthis._applyResizeHandlers(value);\n\t\treturn value;\n\t},\n\tresizeColumn_setter:function(value){\n\t\tthis._applyResizeHandlers(value);\n\t\treturn value;\n\t},\n\t_applyResizeHandlers: function(value) {\n\t\tif (!this._rs_init_flag) return;\n    \n\t\tif (value) {\n\t\t\tif (value.icon) {\n\t\t\t\t_event(this._header, \"pointerdown\", e => this._handleResizerPointerDown(e, \"header\"));\n\t\t\t\t_event(this._footer, \"pointerdown\", e => this._handleResizerPointerDown(e, \"footer\"));\n\n\t\t\t\tthis._renderResizers = true;\n\t\t\t} else {\n\t\t\t\t// backward compatibility\n\t\t\t\t_event(this._viewobj, \"mousemove\", e => this._rs_move(e));\n\t\t\t\t_event(this._viewobj, \"mousedown\", e => this._rs_down(e));\n\t\t\t\t_event(this._viewobj, \"mouseup\", () => this._rs_up());\n\t\t\t}\n\n\t\t\tthis._rs_init_flag = false;\n\t\t}\n\t},\n\t_handleResizerPointerDown: function(e, section) {\n\t\tconst resizerElement = this._findResizerElement(e.target);\n\t\tif (!resizerElement) return;\n\n\t\tlet columnIndex = this._getColumnIndexFromResizer(resizerElement);\n\t\tif (columnIndex === null) return;\n\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tconst column = this._columns[columnIndex];\n\t\tif (!column || column.resize === false) return;\n\n\t\tconst liveResize = isUndefined(this._settings.resizeColumn.live) ? true : !!this._settings.resizeColumn.live;\n\n\t\tthis._activeResizer = {\n\t\t\tcolumnIndex,\n\t\t\tsection,\n\t\t\tstartX: e.clientX,\n\t\t\tstartWidth: column.width,\n\t\t\tresizerElement,\n\t\t\tupdateLoop: false,\n\t\t\tlastEvent: null\n\t\t};\n\n\t\t// better tracking for edge cases (iframes)\n\t\tif (this._viewobj.setPointerCapture) this._viewobj.setPointerCapture(e.pointerId);\n\n\t\t// create a resize marker\n\t\t// not using resizearea due to pointer events (resizearea uses mouse/touch events)\n\t\tif (!liveResize) {\n\t\t\tconst marker = create(\"div\", { class: \"webix_resize_marker\" });\n\t\t\tthis._viewobj.appendChild(marker);\n\t\t\tthis._activeResizer.marker = marker;\n\n\t\t\tconst resizerRect = resizerElement.getBoundingClientRect();\n\t\t\tconst containerRect = this._viewobj.getBoundingClientRect();\n\t\t\tconst markerStart = containerRect.left + (resizerRect.left - containerRect.left) + (resizerRect.width / 2);\n\n\t\t\tthis._updateMarkerPos(markerStart);\n\t\t\tthis._activeResizer.markerStart = markerStart;\n\t\t}\n\n\t\tthis._resizerMoveEv = event(document, \"pointermove\", e => this._handleResizerPointerMove(e, liveResize));\n\t\tthis._resizerUpEv = event(document, \"pointerup\", e => this._handleResizerPointerUp(e, liveResize));\n\n\t\tthis._viewobj.style.cursor = \"col-resize\";\n\n\t\taddCss(document.body, \"webix_noselect\");\n\t\tdenySelect();\n\t},\n\t_updateMarkerPos(pos) {\n\t\tconst rect = this._viewobj.getBoundingClientRect();\n\t\tthis._activeResizer.marker.style.left = (pos - rect.left) + \"px\";\n\t},\n\t_handleResizerPointerMove: function(e, liveResize) {\n\t\tif (!this._activeResizer) return;\n\n\t\tif (liveResize) {\n\t\t\tthis._activeResizer.lastEvent = { clientX: e.clientX, clientY: e.clientY };\n\n\t\t\tif (!this._activeResizer.updateLoop) {\n\t\t\t\tthis._activeResizer.updateLoop = true;\n\t\t\t\tthis._startResizeUpdateLoop();\n\t\t\t}\n\t\t} else {\n\t\t\tconst { startX, markerStart } = this._activeResizer;\n\t\t\tconst delta = e.clientX - startX;\n\t\t\tthis._updateMarkerPos(markerStart + delta);\n\t\t}\n\t},\n\t_handleResizerPointerUp: function(e, liveResize) {\n\t\tif (!this._activeResizer) return;\n\t\tif (this._viewobj.releasePointerCapture) this._viewobj.releasePointerCapture(e.pointerId);\n\n\t\tif (liveResize) {\n\t\t\tthis._activeResizer.updateLoop = false;\n\t\t} else {\n\t\t\tremove(this._activeResizer.marker);\n\t\t}\n\n\t\twindow.requestAnimationFrame(() => this._applyResize(e.clientX, true));\n\t},\n\t_startResizeUpdateLoop: function() {\n\t\tif (!this._activeResizer || !this._activeResizer.updateLoop) return;\n\n\t\tconst lastEvent = this._activeResizer.lastEvent;\n\t\tif (lastEvent) this._applyResize(lastEvent.clientX, false);\n\n\t\twindow.requestAnimationFrame(() => this._startResizeUpdateLoop());\n\t},\n\t_applyResize: function(currentX, isFinalized) {\n\t\tif (!this._activeResizer) return;\n\n\t\tconst newWidth = this._calculateResizeWidth(currentX);\n\t\tconst columnIndex = this._activeResizer.columnIndex;\n\t\tconst column = this._columns[columnIndex];\n\n\t\tif (!column || newWidth === null) return;\n\n\t\tdelete column.fillspace;\n\t\tdelete column.adjust;\n\n\t\tif (isFinalized) this._activeResizer = null;\n\n\t\tthis._setColumnWidth(columnIndex, newWidth, true, true);\n\t\tthis._updateColsSizeSettings();\n\n\t\tif (isFinalized) {\n\t\t\teventRemove(this._resizerMoveEv);\n\t\t\teventRemove(this._resizerUpEv);\n\n\t\t\tthis._viewobj.style.cursor = \"\";\n\n\t\t\tremoveCss(document.body, \"webix_noselect\");\n\t\t\tallowSelect();\n\t\t}\n\t},\n\t_calculateResizeWidth: function(currentX) {\n\t\tif (!this._activeResizer) return null;\n\n\t\tconst { startX, columnIndex, startWidth } = this._activeResizer;\n\t\tconst deltaX = currentX - startX;\n\t\tconst isRightSplit = this._settings.rightSplit && columnIndex >= this._rightSplit;\n\t\tconst adjustedDelta = isRightSplit ? -deltaX : deltaX;\n    \n\t\treturn Math.max(20, startWidth + adjustedDelta);\n\t},\n\t_getColumnIndexFromResizer: function(resizer) {\n\t\tlet columnAttr = resizer.getAttribute(\"data-col\");\n\t\tif (columnAttr !== null) {\n\t\t\treturn parseInt(columnAttr, 10);\n\t\t}\n\n\t\tlet node = resizer;\n\t\twhile (node && node !== this._viewobj) {\n\t\t\tcolumnAttr = node.getAttribute(\"data-col\");\n\t\t\tif (columnAttr !== null) {\n\t\t\t\treturn parseInt(columnAttr, 10);\n\t\t\t}\n\t\t\tnode = node.parentElement;\n\t\t}\n\n\t\treturn null;\n\t},\n\t_findResizerElement: function(target) {\n\t\tlet node = target;\n\t\twhile (node && node !== this._viewobj) {\n\t\t\tif (node.classList && node.classList.contains(\"webix_resizer\")) {\n\t\t\t\treturn node;\n\t\t\t}\n        \n\t\t\tnode = node.parentElement;\n\t\t}\n\t\treturn null;\n\t},\n\t_rs_down:function(e){\n\t\t// do not listen to mousedown of subview on master\n\t\tif (!this._rs_ready || (this._settings.subview && this != $$(e.target))) return;\n\t\tthis._rs_process = [pos(e), this._rs_ready];\n\t\taddCss(document.body,\"webix_noselect\");\n\t\tdenySelect();\n\t},\n\t_rs_up:function(){\n\t\tthis._rs_process = false;\n\t\tremoveCss(document.body,\"webix_noselect\");\n\t\tallowSelect();\n\t},\n\t_rs_start:function(){\n\t\tif (this._rs_progress) return;\n\n\t\tconst [dir, size, node, cell] = this._rs_process[1];\n\t\tlet eventPos = this._rs_process[0];\n\t\tlet start;\n\n\t\tif (dir == \"x\"){\n\t\t\tstart = offset(node).x + size - offset(this._body).x;\n\t\t\teventPos = eventPos.x;\n\t\t} else {\n\t\t\tstart = offset(node).y + size - offset(this._body).y + this._header_height;\n\t\t\teventPos = eventPos.y;\n\t\t}\n\n\t\tthis._rs_progress = [dir, cell, start];\n\t\tconst resize = new ui.resizearea({\n\t\t\tcontainer:this._viewobj,\n\t\t\teventPos,\n\t\t\tstart,\n\t\t\tdir,\n\t\t\tcursor:(dir == \"x\"?\"col\":\"row\")+\"-resize\"\n\t\t});\n\t\tresize.attachEvent(\"onResizeEnd\", pos => this._rs_end(pos));\n\n\t\tthis._rs_ready = false;\n\t},\n\t_rs_end:function(result){\n\t\tif (this._rs_progress){\n\t\t\tconst cell = this._rs_progress[1];\n\t\t\tlet newsize = result - this._rs_progress[2];\n\n\t\t\tif (this._rs_progress[0] == \"x\"){\n\t\t\t\t//in case of right split - different sizing logic applied\n\t\t\t\tif (this._settings.rightSplit && cell.cind >= this._rightSplit){\n\t\t\t\t\tnewsize *= -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst col = this._columns[cell.cind];\n\t\t\t\tconst oldwidth = col.width;\n\n\t\t\t\tdelete col.fillspace;\n\t\t\t\tdelete col.adjust;\n\n\t\t\t\tthis._setColumnWidth(cell.cind, oldwidth + newsize, true, true);\n\t\t\t\tthis._updateColsSizeSettings();\n\t\t\t} else {\n\t\t\t\tconst id = this.getIdByIndex(cell.rind);\n\t\t\t\tconst oldheight = this._getRowHeight(this.getItem(id));\n\t\t\t\tthis.setRowHeight(id, oldheight + newsize);\n\t\t\t}\n\t\t\tthis._rs_up();\n\t\t}\n\t\tthis._rs_progress = null;\n\t},\n\t_rs_move:function(e){\n\t\tif (this._rs_ready && this._rs_process)\n\t\t\treturn this._rs_start();\n\t\tthis._rs_ready = false;\n\n\t\tlet mode = false;\n\t\tlet node = e.target;\n\n\t\tif(this._viewobj.contains(node)){\n\t\t\tconst config = this._settings;\n\t\t\tlet in_body, in_header;\n\n\t\t\twhile (!(node == this._viewobj || in_body || in_header)){\n\t\t\t\t//we can't use node.className because there can be SVG (in SVG it is an SVGAnimatedString object)\n\t\t\t\tconst element_class = node.getAttribute(\"class\")||\"\";\n\t\t\t\tin_body = element_class.indexOf(\"webix_cell\") != -1;\n\t\t\t\tin_header = element_class.indexOf(\"webix_hcell\") != -1;\n\n\t\t\t\tif(!(in_body || in_header))\n\t\t\t\t\tnode = node.parentElement;\n\t\t\t}\n\n\t\t\t//ignore resize in case of drag-n-drop enabled\n\t\t\tif (in_body && config.drag) return this._mark_resize(mode);\n\n\t\t\t\n\t\t\tif (in_body || in_header){\n\t\t\t\tconst pos = posRelative(e);\n\t\t\t\tconst cell = this._locate(node);\n\n\t\t\t\tmode = this._is_column_rs(cell, pos, node, config.resizeColumn, in_body)\n\t\t\t\t\t|| (in_body && this._is_row_rs(cell, pos, node, config.resizeRow));\n\t\t\t}\n\t\t}\n\n\t\t//mark or unmark resizing ready state\n\t\tthis._mark_resize(mode);\n\t},\n\t_is_column_rs:function(cell, pos, node, rColumn, in_body){\n\t\t// if resize is only within the header\n\t\tif (!rColumn || (in_body && rColumn.headerOnly)) return false;\n\n\t\tconst dx = node.offsetWidth;\n\t\trColumn = rColumn.size ? rColumn.size : 3;\n\n\t\tlet col, config;\n\t\tif (pos.x < rColumn){\n\t\t\tif (cell.cind < this._rightSplit)\n\t\t\t\tcell.cind -= (cell.span||1);\n\t\t\tcol = this._columns[cell.cind];\n\t\t\tconfig = [\"x\", 0, node, cell];\n\t\t}\n\t\telse if (dx-pos.x < rColumn+1){\n\t\t\tif (this._settings.rightSplit && cell.cind+1 >= this._rightSplit)\n\t\t\t\tcell.cind++;\n\t\t\tif (!this._settings.rightSplit || cell.cind < this._columns.length){\n\t\t\t\tcol = this._columns[cell.cind];\n\t\t\t\tconfig = [\"x\", dx, node, cell];\n\t\t\t}\n\t\t}\n\n\t\tif (col && col.resize !== false){\n\t\t\tthis._rs_ready = config;\n\t\t\treturn \"col-resize\";\n\t\t}\n\t\treturn false;\n\t},\n\t_is_row_rs:function(cell, pos, node, rRow){\n\t\t// if resize is only within the first column\n\t\tif (!rRow || (rRow.headerOnly && cell.cind > 0)) return false;\n\n\t\t// block selection in progress\n\t\tif (this._bs_progress) return false;\n\n\t\tconst dy = node.offsetHeight;\n\t\trRow = rRow.size ? rRow.size : 3;\n\n\t\tif (pos.y < rRow){\n\t\t\tif (cell.rind > 0){\t\t\t// avoid resize header border\n\t\t\t\tcell.rind--;\n\t\t\t\tthis._rs_ready = [\"y\", 0, node, cell];\n\t\t\t}\n\t\t}\n\t\telse if (dy-pos.y < rRow+1)\n\t\t\tthis._rs_ready = [\"y\", dy, node, cell];\n\n\t\treturn this._rs_ready ? \"row-resize\" : false;\n\t},\n\t_mark_resize:function(mode){\n\t\tif (this._cursor_timer) window.clearTimeout(this._cursor_timer);\n\t\tthis._cursor_timer = delay(this._mark_resize_ready, this, [mode], mode?100:0);\n\t},\n\t_mark_resize_ready:function(mode){\n\t\tif (this._last_cursor_mode != mode){\n\t\t\tthis._last_cursor_mode = mode;\n\t\t\tthis._viewobj.style.cursor = mode || \"\";\n\t\t}\n\t}\n};\n\nexport default Mixin;","import {create} from \"../../webix/html\";\nimport {isUndefined, copy} from \"../../webix/helpers\";\n\n\nconst Mixin = {\n\t_prePrint:function(options, htmlOnly){\n\t\tif(options.scroll && !htmlOnly) return true;\n\n\t\toptions.header = isUndefined(options.header)?(this.config.header?true:false):options.header;\n\t\toptions.footer = isUndefined(options.footer)?(this.config.footer?true:false):options.footer;\n\t\toptions.xCorrection = options.xCorrection || 0; //spreadsheet\n\t},\n\t_findIndex:function(arr, func){\n\t\tvar result = -1;\n\t\tfor(var i =0; result<0 && i < arr.length; i++){\n\t\t\tif(func(arr[i]))\n\t\t\t\tresult = i;\n\t\t}\n\t\treturn result;\n\t},\n\t_getTableHeader:function(base, columns, group){\n\n\t\tvar spans = {}, start = 0;\n\n\t\tbase.forEach((tableArray, tid)=>{\n\t\t\tvar row = tableArray[0], headerArray = [], length = row.length;\n\n\t\t\trow.forEach((cell, cid)=>{\n\t\t\t\tvar column = columns[cid+start];\n\n\t\t\t\tfor(var h  = 0; h < column[group].length; h++){\n\t\t\t\t\tvar header = column[group][h];\n\n\t\t\t\t\tif(!header && !(spans[tid] && spans[tid][h])) continue;\n\t\t\t\t\t\n\t\t\t\t\theader = copy(header || {text:\"\"});\n\t\t\t\t\t\n\t\t\t\t\tif(spans[tid] && spans[tid][h] && cid ===0){\n\t\t\t\t\t\theader.colspan = spans[tid][h];\n\t\t\t\t\t\tspans[tid][h] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(header.colspan){\n\t\t\t\t\t\tvar colspan = Math.min(header.colspan, (length-cid));\n\t\t\t\t\t\tspans[tid+1] = spans[tid+1] || {};\n\t\t\t\t\t\tspans[tid+1][h] = header.colspan-colspan;\n\t\t\t\t\t\theader.colspan = colspan;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hcell = {\n\t\t\t\t\t\ttxt: header.rotate ? this.getHeaderNode(column.id, h).innerHTML:\n\t\t\t\t\t\t\t(header.text || (header.contentId?this.getHeaderContent(header.contentId).getValue():\"\")),\n\t\t\t\t\t\tclassName:\"webix_hcell \"+\"webix_\"+group+\"_cell \"+(header.css || \"\"),\n\t\t\t\t\t\tstyle:{\n\t\t\t\t\t\t\theight:(header.height || this.config.headerRowHeight)+\"px\",\n\t\t\t\t\t\t\twidth:header.colspan?\"auto\":column.width + \"px\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tspan:(header.colspan || header.rowspan) ? {colspan:header.colspan || 1, rowspan:header.rowspan || 1}:null\n\t\t\t\t\t};\n\t\t\t\t\theaderArray[h] = headerArray[h] || [];\n\t\t\t\t\theaderArray[h][cid] = hcell;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\theaderArray.forEach(row => {\n\t\t\t\tconst headers = row.filter(v => v);\n\t\t\t\tconst rowspan = headers[0] && headers[0].span && headers[0].span.rowspan;\n\t\t\t\tif(rowspan){\n\t\t\t\t\tconst rowSpanHeaders = headers.filter(v => v.span && v.span.rowspan && v.span.rowspan == rowspan);\n\t\t\t\t\tconst sameRowSpans = rowSpanHeaders.length == headers.length;\n\t\t\t\t\tif(sameRowSpans)\n\t\t\t\t\t\trow = row.map(header => {\n\t\t\t\t\t\t\theader.style.height = header.style.height.replace(\"px\", \"\")*rowspan + \"px\";\n\t\t\t\t\t\t\theader.span.rowspan = 1;\n\t\t\t\t\t\t\treturn header;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(group ==\"header\")\n\t\t\t\tbase[tid] = headerArray.concat(tableArray);\n\t\t\telse\n\t\t\t\tbase[tid] = tableArray.concat(headerArray);\n\t\t\tstart+=length;\n\t\t});\n\n\t\treturn base;\n\t},\n\t_getTableArray:function (options, base, start){\n\t\tvar columns = this.config.columns;\n\t\tvar sel = this.getSelectedId(true);\n\t\tvar maxWidth = options.fit == \"page\" ? Infinity : this._getPageWidth(options);\n\n\t\tvar rightRestriction = 0;\n\t\tvar bottomRestriction = 0;\n\t\tvar tableArray = [];\n\t\tvar newTableStart = 0;\n\t\tvar widths = [];\n\n\t\tstart = start || (0 + options.xCorrection);\n\t\tbase = base || [];\n\n\t\tconst spans = this._spans_pull;\n\t\tconst readySpans = {};\n\n\t\tif(spans)\n\t\t\tfor (let row in spans)\n\t\t\t\tfor (let column in spans[row]) {\n\t\t\t\t\tconst span = spans[row][column];\n\n\t\t\t\t\tconst hiddenRowOrder = this.data._filter_order;\n\t\t\t\t\tconst hiddenColumnOrder = this._hidden_column_order;\n\t\t\t\t\tconst startRowIndex = hiddenRowOrder ? hiddenRowOrder.find(row) : this.getIndexById(row);\n\t\t\t\t\tconst startColIndex = hiddenColumnOrder.length ? hiddenColumnOrder.find(column) : this.getColumnIndex(column);\n\n\t\t\t\t\tconst printSpan = {rowspan: 0, colspan: 0, css: span[5]||\"\"};\n\t\t\t\t\tlet firstVisibleRow = true;\n\n\t\t\t\t\tfor(let r = startRowIndex; r < startRowIndex+span[1]; r++)\n\t\t\t\t\t\tif(this.getIdByIndex(r)){\n\t\t\t\t\t\t\tprintSpan.rowspan++;\n\t\t\t\t\t\t\tfor(let c = startColIndex; c < startColIndex+span[0]; c++){\n\t\t\t\t\t\t\t\tif(this.columnId(c)){\n\t\t\t\t\t\t\t\t\tif(firstVisibleRow)\n\t\t\t\t\t\t\t\t\t\tprintSpan.colspan++;\n\n\t\t\t\t\t\t\t\t\tif(!readySpans[r])\n\t\t\t\t\t\t\t\t\t\treadySpans[r] = {};\n\n\t\t\t\t\t\t\t\t\tif(printSpan.$ready)\n\t\t\t\t\t\t\t\t\t\treadySpans[r][c] = {$inspan:true};\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\treadySpans[r][c] = printSpan;\n\t\t\t\t\t\t\t\t\t\tprintSpan.$ready = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfirstVisibleRow = false;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\tthis.eachRow(row => {\n\t\t\tvar width = 0;\n\t\t\tvar rowItem = this.getItem(row);\n\t\t\tvar rowIndex = this.getIndexById(row);\n\n\t\t\tvar colrow = [];\n\t\t\tvar datarow = false;\n\n\t\t\tfor(var c=start; c<columns.length; c++){\n\t\t\t\tvar column = columns[c].id;\n\t\t\t\tvar colIndex = this.getColumnIndex(column)-start;\n\n\t\t\t\tif(columns[c]){\n\t\t\t\t\twidth += columns[c].width;\n\t\t\t\t\tif(rowIndex === 0)\n\t\t\t\t\t\twidths.push(columns[c].width);\n\n\t\t\t\t\tif(width > maxWidth && c > start){ // 'c>start' ensures that a single long column will have to fit the page\n\t\t\t\t\t\tnewTableStart = c; break; }\n\n\t\t\t\t\tif(options.data !== \"selection\" || (options.data == \"selection\" && this._findIndex(sel, function(obj){\n\t\t\t\t\t\treturn obj.column == column && obj.row == row;\n\t\t\t\t\t})!==-1)){\n\t\t\t\t\t\tlet span;\n\n\t\t\t\t\t\tif(spans && readySpans[rowIndex] && readySpans[rowIndex][colIndex+start]){\n\t\t\t\t\t\t\tspan = readySpans[rowIndex][colIndex+start];\n\n\t\t\t\t\t\t\tif(span.$inspan){\n\t\t\t\t\t\t\t\tcolrow.push(span);\n\t\t\t\t\t\t\t\trightRestriction = Math.max(colIndex+1, rightRestriction);\n\t\t\t\t\t\t\t\tbottomRestriction = Math.max(rowIndex+1, bottomRestriction);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet txt = this.getText(row, column);\n\t\t\t\t\t\tif(txt === 0) txt += \"\";\n\n\t\t\t\t\t\tconst className = this.getCss(row, column)+\" \"+(columns[c].css || \"\")+(span ? \" webix_dtable_span \"+span.css : \"\");\n\n\t\t\t\t\t\tconst style  = {\n\t\t\t\t\t\t\theight:span && span.rowspan > 1 ? \"auto\": ((rowItem.$height || this.config.rowHeight) + \"px\"),\n\t\t\t\t\t\t\twidth: span && span.colspan > 1 ? \"auto\": columns[c].width + \"px\"\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tcolrow.push({ txt, className, style, span });\n\n\t\t\t\t\t\tif (txt) {\n\t\t\t\t\t\t\trightRestriction = Math.max(colIndex+1, rightRestriction);\n\t\t\t\t\t\t\tbottomRestriction = Math.max(rowIndex+1, bottomRestriction);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdatarow = datarow || !!txt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!options.skiprows || datarow)\n\t\t\t\ttableArray.push(colrow);\n\t\t});\n\n\t\tif(bottomRestriction && rightRestriction){\n\t\t\tif(options.trim){\n\t\t\t\ttableArray.length = bottomRestriction;\n\t\t\t\ttableArray = tableArray.map(function(item){\n\t\t\t\t\tfor(var i = item.length-1; i>=0; i--){\n\t\t\t\t\t\tif(item[i].span && item[i].span.colspan){\n\t\t\t\t\t\t\titem[i].span.colspan = Math.min(item[i].span.colspan, item.length-i);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\titem.length = rightRestriction;\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t}\n\t\t\tbase.push(tableArray);\n\t\t}\n\n\t\tif(newTableStart) \n\t\t\tthis._getTableArray(options, base, newTableStart);\n\t\telse{\n\t\t\t//keep this order as logic relies on the first data row\n\t\t\tif(options.footer)\n\t\t\t\tbase = this._getTableHeader(base, columns, \"footer\");\n\t\t\tif(options.header)\n\t\t\t\tbase = this._getTableHeader(base, columns, \"header\");\n\n\t\t\tif(options.fit == \"page\") \n\t\t\t\tthis._correctWidth(base, widths, rightRestriction, options);\n\t\t}\n\n\t\treturn base;\n\t},\n\t//a single grid tries to fit to page size - set column width to auto\n\t_correctWidth:function(base, widths, rightRestriction, options){\n\t\tif(rightRestriction && options.trim)\n\t\t\twidths.length = rightRestriction;\n\n\t\tlet rwidth = 0;\n\t\tfor(let i = 0; i < widths.length; i++)\n\t\t\trwidth += widths[i];\n\n\t\tif(rwidth > this._getPageWidth(options))\n\t\t\tif(base[0])\n\t\t\t\tbase[0].forEach((item) => {\n\t\t\t\t\tfor(let i = 0; i < item.length; i++){\n\t\t\t\t\t\tif(item[i] && item[i].style && item[i].style.width)\n\t\t\t\t\t\t\titem[i].style.width = \"auto\";\n\t\t\t\t\t}\n\t\t\t\t});\n\t},\n\t_getTableHTML:function(tableData, options){\n\t\tconst container = create(\"div\");\n\t\tconst sCount = this.config.topSplit || 0;\n\t\tconst hCount = options.header ? this.config.columns[0].header.length : 0;\n\t\tconst fCount = options.footer ? this.config.columns[0].footer.length : 0;\n\n\t\t//rows are not repeated on every page if header > 6\n\t\tconst topSplitIndex = hCount + sCount;\n\t\tconst headerCount = topSplitIndex > 6 ? hCount : topSplitIndex;\n\n\t\ttableData.forEach((table, i)=>{\n\t\t\tconst tableHTML = create(\n\t\t\t\t\"table\",\n\t\t\t\t{\n\t\t\t\t\tclass: \"webix_table_print \"+this.$view.className+(options.borderless?\" borderless\":\"\"),\n\t\t\t\t\tstyle: \"border-collapse:collapse\",\n\t\t\t\t\tid: this.$view.getAttribute(\"id\")\n\t\t\t\t},\n\t\t\t\t\"<thead></thead><tbody></tbody><tfoot></tfoot>\"\n\t\t\t);\n\t\t\tcontainer.appendChild(tableHTML);\n\t\t\tconst [header, body, footer] = tableHTML.children;\n\n\t\t\ttable.forEach((row, rowIndex)=>{\n\t\t\t\tconst tr = create(\"tr\");\n\n\t\t\t\trow.forEach(cell => {\n\t\t\t\t\tif(!cell.$inspan){\n\t\t\t\t\t\tconst td = create(\"td\", {class: cell.className}, cell.txt);\n\n\t\t\t\t\t\tfor(let key in cell.style)\n\t\t\t\t\t\t\ttd.style[key] = cell.style[key];\n\n\t\t\t\t\t\tif(cell.span){\n\t\t\t\t\t\t\ttd.colSpan = cell.span.colspan;\n\t\t\t\t\t\t\ttd.rowSpan = cell.span.rowspan;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttr.appendChild(td);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(sCount && rowIndex + 1 == topSplitIndex)\n\t\t\t\t\ttr.className = \"webix_print_top_split\";\n\n\t\t\t\tif(rowIndex < headerCount)\n\t\t\t\t\theader.appendChild(tr);\n\t\t\t\telse if(table.length - fCount > rowIndex)\n\t\t\t\t\tbody.appendChild(tr);\n\t\t\t\telse\n\t\t\t\t\tfooter.appendChild(tr);\n\t\t\t});\n\n\t\t\tif(i+1 < tableData.length){\n\t\t\t\tconst br = create(\"DIV\", {class: \"webix_print_pagebreak\"});\n\t\t\t\tcontainer.appendChild(br);\n\t\t\t}\n\t\t});\n\n\t\treturn container;\n\t}\n};\n\nexport default Mixin;","import {posRelative, pos as getPos, offset, remove, removeCss, addCss} from \"../../webix/html\";\nimport {isArray, bind, extend, delay} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport DragItem from \"../../core/dragitem\";\nimport DragControl from \"../../core/dragcontrol\";\nimport AutoScroll from \"../../core/autoscroll\";\n\nconst DragOrder = {\n\t_set_drop_area:function(target){\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tlet column = this._columns[i];\n\t\t\tlet node = this.getItemNode({ row:target, cind:i});\n\t\t\tif (node){\n\t\t\t\tnode.parentNode.insertBefore(DragControl._dropHTML[i], node);\n\t\t\t} else column.node.appendChild(DragControl._dropHTML[i]);\n\t\t}\n\t},\n\t_init_drop_area:function(){\n\t\tlet dropArea = [];\n\t\tlet count = this._columns.length;\n\t\tlet node = document.createElement(\"div\");\n\n\t\tnode.className = \"webix_drop_area\";\n\t\tnode.style.height = this._settings.rowHeight + \"px\";\n\t\tnode.innerHTML = this.$dropHTML();\n\n\t\tfor (let i=0; i<count; i++)\n\t\t\tdropArea.push(node.cloneNode(true));\n\n\t\treturn dropArea;\n\t}\n};\n\nconst Mixin = {\n\tdrag_setter:function(value){\n\t\t// disable drag-n-drop for frozen rows\n\t\tthis.attachEvent(\"onBeforeDrag\", function(context){\n\t\t\treturn this._checkDragTopSplit(context.source);\n\t\t});\n\t\tthis.attachEvent(\"onBeforeDragIn\", function(context){\n\t\t\tlet result = this._checkDragTopSplit(context.target);\n\n\t\t\tif (!result && DragControl._dropHTML){\n\t\t\t\tremove(DragControl._dropHTML);\n\t\t\t\tthis._marked_item_id = DragControl._dropHTML = null;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\n\t\tDragItem.drag_setter.call(this,value);\n\t\tif (value == \"order\" || value == \"move\")\n\t\t\textend(this, DragOrder, true);\n\n\t\treturn value;\n\t},\n\t_add_css:function(source, css, mark){\n\t\tlet context = DragControl._drag_context;\n\n\t\tif (!this._settings.prerender && !mark)\n\t\t\tsource = [context.start];\n\n\t\tfor (let i=0; i<source.length; i++){\n\t\t\tfor (let j=0; j<this._columns.length; j++){\n\t\t\t\tlet node = this.getItemNode({ row:source[i], cind:j});\n\t\t\t\tif (node)\n\t\t\t\t\taddCss(node, css);\n\t\t\t}\n\t\t\tthis.data.addMark(source[i], css, 1, 1, true);\n\t\t}\n\t},\n\t_remove_css:function(source, css, mark){\n\t\tlet context = DragControl._drag_context;\n\n\t\tif (!this._settings.prerender && !mark)\n\t\t\tsource = [context.start];\n\n\t\tfor (let i=0; i<source.length; i++){\n\t\t\tfor (let j=0; j<this._columns.length; j++){\n\t\t\t\tlet node = this.getItemNode({ row:source[i], cind:j});\n\t\t\t\tif (node)\n\t\t\t\t\tremoveCss(node, css);\n\t\t\t}\n\t\t\tthis.data.removeMark(source[i], css, 1, true);\n\t\t}\n\t},\n\t_checkDragTopSplit: function(ids){\n\t\tvar i, index,\n\t\t\tfrozen = false;\n\t\tif(this._settings.topSplit && ids){\n\t\t\tif(!isArray(ids))\n\t\t\t\tids = [ids];\n\t\t\tfor(i=0; !frozen && i< ids.length;i++ ){\n\t\t\t\tindex = this.getIndexById(ids[i]);\n\t\t\t\tfrozen = index >= 0 && index < this._settings.topSplit;\n\t\t\t}\n\t\t}\n\t\treturn !frozen;\n\t},\n\t_toHTML:function(obj){\n\t\tvar width = this._content_width - this._scrollSizeY;\n\t\tvar html=\"<div class='webix_dd_drag' style='width:\"+width+\"px;'>\";\n\t\tvar cols = this._settings.columns;\n\t\tfor (var i=0; i<cols.length; i++){\n\t\t\tvar value = this._getValue(obj, cols[i]);\n\t\t\thtml += \"<div style='width:\"+cols[i].width+\"px;'>\"+value+\"</div>\";\n\t\t}\n\t\treturn html+\"</div>\";\n\t},\n\tgetHeaderNode:function(column_id, row_index){\n\t\treturn this._getHeaderNode(column_id, row_index, this._header);\n\t},\n\tgetFooterNode:function(column_id, row_index){\n\t\treturn this._getHeaderNode(column_id, row_index, this._footer);\n\t},\n\t_getHeaderNode:function(column_id, row_index, group){\n\t\tif(this.isColumnVisible(column_id)){\n\t\t\tvar ind = this.getColumnIndex(column_id);\n\t\t\tvar hind = this._settings.leftSplit > ind ? 0 : (this._rightSplit <=ind ? 2 :1 );\n\t\t\trow_index = row_index || 0;\n\n\t\t\tconst groupNode = group.childNodes[hind];\n\n\t\t\tconst row = /*@attr*/\"column\";\n\t\t\tconst column = /*@attr*/\"row\";\n\t\t\treturn groupNode.querySelector(`div[${row}=\"${ind}\"][${column}=\"${row_index}\"]`);\n\t\t}\n\t\treturn null;\n\t},\n\tgetItemNode:function(id){\n\t\tif (id && !id.header){\n\t\t\tconst row = id.row || id;\n\t\t\tconst rowindex = (typeof id.rind === \"number\") ? id.rind : this.getIndexById(row);\n\t\t\tconst state = this._get_y_range();\n\t\t\tconst minRow = state[0]-this._settings.topSplit;\n\t\t\t//row not visible\n\t\t\tif (rowindex < minRow && rowindex > state[1]) return;\n\n\t\t\t//get visible column\n\t\t\tconst x_range = this._get_x_range();\n\t\t\tlet colindex = this._settings.leftSplit ? 0 : x_range[0];\n\t\t\tconst specific = (typeof id.cind === \"number\");\n\t\t\tif (id.column || specific){\n\t\t\t\tcolindex = specific ? id.cind : this.getColumnIndex(id.column);\n\t\t\t\t//column not visible\n\t\t\t\tif (colindex < this._rightSplit && colindex >= this._settings.leftSplit && (colindex<x_range[0] || colindex > x_range[1]))\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst column = this._settings.columns[colindex];\n\n\t\t\tif (column && column.attached && column.node){\n\t\t\t\tif (row === \"$webix-drop\")\n\t\t\t\t\treturn DragControl._dropHTML[colindex];\n\n\t\t\t\tlet nodeIndex = (rowindex<this._settings.topSplit || this._settings.prerender)?rowindex:(rowindex-minRow);\n\t\t\t\tconst nodes = column.node.childNodes;\n\t\t\t\tconst length = Math.min(nodes.length, nodeIndex+1);\n\n\t\t\t\tfor (let i=0; i<length; i++)\n\t\t\t\t\tif (nodes[i].className === \"webix_drop_area\")\n\t\t\t\t\t\tnodeIndex++;\n\n\t\t\t\treturn nodes[nodeIndex];\n\t\t\t}\n\t\t}\n\t},\n\t_isDraggable:function(e){\n\t\tvar nodeName = e.target.nodeName;\n\t\treturn nodeName != \"INPUT\" && nodeName != \"TEXTAREA\";\n\t},\n\t_getColumnDragText: function(id, rind){\n\t\tconst header = this.getColumnConfig(id).header;\n\t\tlet text = header[rind]? header[rind].text : null;\n\t\tfor (let i = 0; !text && i < header.length; i++)\n\t\t\tif (header[i] && header[i].text)\n\t\t\t\ttext = header[i].text;\n\t\treturn text || \"&nbsp;\";\n\t},\n\tdragColumn_setter:function(value){\n\t\tvar control; //will be defined below\n\t\tif (value == \"order\"){\n\t\t\tcontrol = {\n\t\t\t\t$drag:bind(function(s,e,pointer){\n\t\t\t\t\tif (!this._isDraggable(e) || this._rs_process) return false;\n\n\t\t\t\t\tvar id = this.locate(e);\n\t\t\t\t\tif (!id || !this.callEvent(\"onBeforeColumnDrag\", [id.column, e])) return false;\n\n\t\t\t\t\tDragControl._drag_context = { from:control, start:id, custom:\"column_dnd\" };\n\t\t\t\t\tvar column = this.getColumnConfig(id.column);\n\n\t\t\t\t\tif (pointer === \"touch\") {\n\t\t\t\t\t\tconst hnode = this.getHeaderNode(id.column, id.rind);\n\t\t\t\t\t\tthis._relative_column_drag = { x: getPos(e).x - offset(hnode).x };\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._relative_column_drag = posRelative(e);\n\t\t\t\t\tthis._limit_column_drag = column.width;\n\n\t\t\t\t\tthis._auto_scroll_force = true;\n\t\t\t\t\treturn \"<div class='webix_dd_drag_column' style='width:\"+column.width+\"px'>\"+this._getColumnDragText(id.column, id.rind)+\"</div>\";\n\t\t\t\t}, this),\n\t\t\t\t$dragPos:bind(function(pos, e, node){\n\t\t\t\t\tvar context = DragControl.getContext();\n\t\t\t\t\tvar box = offset(this.$view);\n\t\t\t\t\tnode.style.display = \"none\";\n\n\t\t\t\t\tvar html = document.elementFromPoint(pos.x, box.y + (this._settings.headerRowHeight/2));\n\t\t\t\t\tvar id = html ? this.locate(html) : null;\n\t\t\t\t\tvar start = context.start.column;\n\n\t\t\t\t\tif (id && id.column != start && (!this._column_dnd_temp_block || id.column != this._last_sort_dnd_node )){\n\t\t\t\t\t\t//ignore normal dnd , and dnd from other components\n\t\t\t\t\t\tif (context.custom == \"column_dnd\" && $$(html) == this){\n\n\t\t\t\t\t\t\tif (!this.callEvent(\"onBeforeColumnDropOrder\",[start, id.column,e])) return;\n\n\t\t\t\t\t\t\tvar start_index = this.getColumnIndex(start);\n\t\t\t\t\t\t\tvar end_index = this.getColumnIndex(id.column);\n\n\t\t\t\t\t\t\t//on touch devices we need to preserve drag-start element till the end of dnd\n\t\t\t\t\t\t\tif(e.touches){\n\t\t\t\t\t\t\t\tthis._dragTarget = e.target;\n\t\t\t\t\t\t\t\tthis._dragTarget.style.display = \"none\";\n\t\t\t\t\t\t\t\tthis.$view.parentNode.appendChild(this._dragTarget);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._moveColumn(start, end_index+(start_index<end_index?1:0), context.start.rind);\n\t\t\t\t\t\t\tthis._last_sort_dnd_node = id.column;\n\t\t\t\t\t\t\tthis._column_dnd_temp_block = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} if (id && id.column == start){\n\t\t\t\t\t\t//flag prevent flickering just after column move\n\t\t\t\t\t\tthis._column_dnd_temp_block = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.style.display = \"block\";\n\n\t\t\t\t\tpos.x = pos.x - this._relative_column_drag.x;\n\t\t\t\t\tpos.y = box.y;\n\n\t\t\t\t\tif (pos.x < box.x)\n\t\t\t\t\t\tpos.x = box.x; \n\t\t\t\t\telse {\n\t\t\t\t\t\tvar max = box.x + this.$view.offsetWidth - this._scrollSizeY-this._limit_column_drag;\n\t\t\t\t\t\tif (pos.x > max)\n\t\t\t\t\t\t\tpos.x = max;\n\t\t\t\t\t}\n\t\t\t\t\tDragControl._skip = true;\n\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t\t\t\tif (this._settings.dragscroll !== false)\n\t\t\t\t\t\tthis._auto_scroll_delay = delay((pos) => this._auto_scroll_column(pos), this, [getPos(e)], 250);\n\t\t\t\t}, this),\n\t\t\t\t$dragDestroy:bind(function(a, node){\n\t\t\t\t\tthis._auto_scroll_force = null;\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\t\t\tremove(node);\n\n\t\t\t\t\t//clean dnd source element\n\t\t\t\t\tif(this._dragTarget)\n\t\t\t\t\t\tremove(this._dragTarget);\n\t\t\t\t\tvar id = DragControl.getContext().start;\n\t\t\t\t\tthis.callEvent(\"onAfterColumnDropOrder\",[id.column, this._last_sort_dnd_node, a]);\n\t\t\t\t}, this),\n\t\t\t\t$drop: function(){}\n\t\t\t};\n\t\t} else if (value) {\n\t\t\tcontrol = {\n\t\t\t\t_inner_drag_only:true,\n\t\t\t\t$drag:bind(function(s,e){\n\t\t\t\t\tif(!this._isDraggable(e) || this._rs_process) return false;\n\t\t\t\t\tvar id = this.locate(e);\n\n\t\t\t\t\tif (!id || !this.callEvent(\"onBeforeColumnDrag\", [id.column, e])) return false;\n\t\t\t\t\tDragControl._drag_context = { from:control, start:id, custom:\"column_dnd\" };\n\n\t\t\t\t\tthis._auto_scroll_force = true;\n\t\t\t\t\treturn \"<div class='webix_dd_drag_column'>\"+this._getColumnDragText(id.column,  id.rind)+\"</div>\";\n\t\t\t\t}, this),\n\t\t\t\t$drop:bind(function(s,t,e){\n\t\t\t\t\tvar target = e;\n\t\t\t\t\t//on touch devices event doesn't point to the actual drop target\n\t\t\t\t\tif(e.touches && this._drag_column_last)\n\t\t\t\t\t\ttarget = this._drag_column_last;\n\n\t\t\t\t\tvar id = this.locate(target);\n\t\t\t\t\tif (!id) return false;\n\t\t\t\t\tconst start = DragControl.getContext().start;\n\t\t\t\t\tconst startId = start.column;\n\t\t\t\t\tif (startId != id.column){\n\t\t\t\t\t\tif (!this.callEvent(\"onBeforeColumnDrop\",[startId, id.column ,e])) return;\n\t\t\t\t\t\tvar start_index = this.getColumnIndex(startId);\n\t\t\t\t\t\tvar end_index = this.getColumnIndex(id.column);\n\n\t\t\t\t\t\tthis._moveColumn(startId, end_index+(start_index<end_index?1:0), start.rind);\n\t\t\t\t\t\tthis.callEvent(\"onAfterColumnDrop\",[startId, id.column, e]);\n\t\t\t\t\t}\n\t\t\t\t}, this),\n\t\t\t\t$dragIn:bind(function(s,t,e){\n\t\t\t\t\tvar context = DragControl.getContext();\n\t\t\t\t\t//ignore normal dnd , and dnd from other components\n\t\t\t\t\t\n\t\t\t\t\tif (context.custom != \"column_dnd\" || context.from != control) return false;\n\n\t\t\t\t\tvar target = e.target;\n\t\t\t\t\twhile ((target.className||\"\").indexOf(\"webix_hcell\") == -1){\n\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t\tif (!target) return;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t\t\t\tif (this._settings.dragscroll !== false)\n\t\t\t\t\t\tthis._auto_scroll_delay = delay((pos) => this._auto_scroll_column(pos), this, [getPos(e)], 250);\n\n\t\t\t\t\tif (target != this._drag_column_last){\t//new target\n\t\t\t\t\t\tif (this._drag_column_last)\n\t\t\t\t\t\t\tremoveCss(this._drag_column_last, \"webix_dd_over_column\");\n\t\t\t\t\t\taddCss(target, \"webix_dd_over_column\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (this._drag_column_last = target);\n\t\t\t\t}, this),\n\t\t\t\t$dragDestroy:bind(function(a,h){\n\t\t\t\t\tthis._auto_scroll_force = null;\n\t\t\t\t\tif (this._auto_scroll_delay)\n\t\t\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t\t\t\tif (this._drag_column_last)\n\t\t\t\t\t\tremoveCss(this._drag_column_last, \"webix_dd_over_column\");\n\t\t\t\t\tremove(h);\n\t\t\t\t}, this)\n\t\t\t};\n\t\t}\n\n\t\tif (value){\n\t\t\tDragControl.addDrag(this._header, control);\n\t\t\tDragControl.addDrop(this._header, control, true);\n\t\t\tthis.attachEvent(\"onDestruct\", () => DragControl.unlink(control));\n\n\t\t\tif (!this._auto_scroll)\n\t\t\t\textend(this, AutoScroll, true);\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\nexport default Mixin;","import {_to_array, _power_array, isUndefined, copy} from \"../../webix/helpers\";\nimport {assert} from \"../../webix/debug\";\nimport {$$} from \"../../ui/core\";\n\nconst Mixin = {\n\t$init:function(){\n\t\tthis._clear_hidden_state();\t\n\t\tthis.attachEvent(\"onStructureLoad\", this._hideInitialColumns);\n\t},\n\t_clear_hidden_state:function(){\n\t\tthis._hidden_column_hash = {};\n\t\tthis._hidden_column_order = _to_array();\n\t\tthis._hidden_split = [0,0,0];\n\t},\n\t_hideInitialColumns:function(){\n\t\tconst cols = this._columns;\n\t\tfor (let i=0; i<cols.length; i++){\n\t\t\tif(cols[i].header) this._getInitialSpans(cols, cols[i].header);\n\t\t\tif(cols[i].footer) this._getInitialSpans(cols, cols[i].footer);\n\t\t}\n\n\t\tfor (let i=cols.length-1; i>=0; i--){\n\t\t\tif (cols[i].hidden)\n\t\t\t\tthis.hideColumn(cols[i].id, {}, true, true);\n\t\t\telse if (cols[i].batch && this.config.visibleBatch && cols[i].batch!=this.config.visibleBatch){\n\t\t\t\tthis.hideColumn(cols[i].id, {}, true, true);\n\t\t\t}\n\t\t}\n\t},\n\t_getInitialSpans:function(cols, elements){\n\t\tfor (let i=0; i<elements.length; i++){\n\t\t\tconst line = elements[i];\n\t\t\tif (line && line.colspan && !line.$colspan)\n\t\t\t\tline.$colspan = line.colspan;\n\t\t}\n\t},\n\tmoveColumn:function(id, index){\n\t\tthis._moveColumn(id, index);\n\t},\n\t_moveColumn: function(id, index, hrIndex){\n\t\tconst cindex = this.getColumnIndex(id);\n\t\tif (cindex == index || cindex == -1) return false; //already in place\n\t\tlet cols;\n\t\tif(!isUndefined(hrIndex)){\n\t\t\tif(!this._check_source_span(cindex, index, hrIndex))\n\t\t\t\treturn false;\n\t\t\tcols = this._get_span_columns(cindex, hrIndex, index);\n\t\t\tindex += this._get_target_span_shift(cindex, index);\n\t\t\tif(cols){\n\t\t\t\tfor(let i = 0; i < cols.length; i++){\n\t\t\t\t\tconst inc = cindex > index?i:0;\n\t\t\t\t\tconst sId = cols[i];\n\t\t\t\t\tif(this.getColumnIndex(sId) < 0 && i > 0){\n\t\t\t\t\t\tthis._moveHiddenSpanColumn(sId, cols[0], i);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._changeColumnIndex(cols[i], index + inc, hrIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!cols)\n\t\t\tthis._changeColumnIndex(id, index, hrIndex);\n\t\tthis._refresh_columns();\n\t},\n\t_changeColumnIndex: function(id, index, hrIndex){\n\t\tlet cindex = this.getColumnIndex(id);\n\t\tconst horder = this._hidden_column_order;\n\t\tconst columns = this._settings.columns;\n\n\t\tlet hindex;\n\t\t// handle colspan in another header line\n\t\tconst header = columns[cindex].header;\n\t\tif(!isUndefined(hrIndex) && header && header[hrIndex]){\n\t\t\tconst sourceSpan = header[hrIndex].colspan || 1;\n\t\t\tlet batchChanged = false;\n\t\t\tfor(let i = 0; i < header.length; i++){\n\t\t\t\tif(i != hrIndex && header[i] && header[i].colspan){\n\t\t\t\t\tconst hI = header[i];\n\t\t\t\t\tconst span = hI.colspan;\n\t\t\t\t\tif(span > sourceSpan){\n\t\t\t\t\t\tconst nextCol = columns[cindex + sourceSpan];\n\t\t\t\t\t\tif(nextCol.batch && !columns[cindex].batch){\n\t\t\t\t\t\t\tbatchChanged = true;\n\t\t\t\t\t\t\tcolumns[cindex].batch = nextCol.batch;\n\t\t\t\t\t\t\tdelete nextCol.batch;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextCol.header[i] = hI;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// drop to column with colspan settings\n\t\t\tconst tIndex = index == columns.length? index-1: index;\n\n\t\t\tconst tHeader = columns[tIndex].header;\n\t\t\tfor(let i = 0; i < tHeader.length; i++){\n\t\t\t\tconst span = tHeader[i] ? tHeader[i].colspan:1;\n\t\t\t\tif(i != hrIndex && span > 1 && cindex > tIndex && cindex <  tIndex + span){\n\t\t\t\t\tif(!batchChanged && columns[cindex].batch && !columns[tIndex].batch){\n\t\t\t\t\t\tcolumns[tIndex].batch = columns[cindex].batch;\n\t\t\t\t\t\tdelete columns[cindex].batch;\n\t\t\t\t\t}\n\t\t\t\t\theader[i] = tHeader[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// remove from the previous place\n\t\tconst col = columns.splice(cindex, 1)[0];\n\n\t\tif (horder.length){\n\t\t\thindex = horder.find(id);\n\t\t\thorder.removeAt(hindex);\n\t\t}\n\t\tthis._updateSplit(cindex, hindex, -1);\n\n\t\t// paste into new\n\t\tconst nindex = index - (index>cindex ? 1 : 0);\n\t\t_power_array.insertAt.call(columns, col, nindex);\n\n\t\tlet pos;\n\t\tif (horder.length){\n\t\t\tpos = 0;\n\t\t\tconst prev = columns[nindex-1];\n\t\t\tif(prev && prev.id){\n\t\t\t\tlet pId = prev.id;\n\t\t\t\tpos = this._getHiddenColumnIndex(pId);\n\t\t\t\tdo{\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tpId = horder[pos];\n\t\t\t\t} while (this.getColumnIndex(pId) < 0 && pos < horder.length);\n\t\t\t}\n\t\t\thorder.insertAt(col.id, pos);\n\t\t}\n\t\tthis._updateSplit(nindex, pos, 1);\n\t},\n\t_moveHiddenSpanColumn: function(id, prevId, inc){\n\t\tconst horder = this._hidden_column_order;\n\t\t// remove from the previous place\n\t\tlet hindex = this._getHiddenColumnIndex(id);\n\t\thorder.removeAt(hindex);\n\t\tthis._updateSplit(-1, hindex, -1);\n\t\t// paste into new\n\t\tconst index = this._getHiddenColumnIndex(prevId) + inc;\n\t\thorder.insertAt(id, index);\n\t\tthis._updateSplit(-1, index, 1);\n\t},\n\t_check_source_span: function(indexFrom, indexTo, hrIndex){\n\t\tif(indexTo > indexFrom)\n\t\t\tindexTo--;\n\t\tconst fromSpan = (this._columns[indexFrom].header[hrIndex].colspan || 1) - 1;\n\t\tfor(let i =0; i< this._columns.length; i++){\n\t\t\tconst header = this._columns[i].header;\n\t\t\tfor (let j = 0; j < header.length; j++){\n\t\t\t\tif(i != indexFrom || j != hrIndex){\n\t\t\t\t\tconst span = header[j] && header[j].colspan || 1;\n\t\t\t\t\tconst i1 = i + span - 1;\n\t\t\t\t\tif(span > 1 && i <= indexFrom && i1 >= (indexFrom + fromSpan) && (i > indexTo || i1 < indexTo))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\t_get_target_span_shift: function(indexFrom, indexTo){\n\t\tfor(let i =0; i< this._columns.length; i++){\n\t\t\tconst header = this._columns[i].header;\n\t\t\tfor (let j = 0; j < header.length; j++){\n\t\t\t\tif(i != indexFrom){\n\t\t\t\t\tconst span = header[j] && header[j].colspan;\n\t\t\t\t\tif(span){\n\t\t\t\t\t\tconst i1 = i + span - 1;\n\t\t\t\t\t\tif(i < indexTo && i1 >= indexTo && (i > indexFrom || i1 < indexFrom)){\n\t\t\t\t\t\t\tlet newIndexTo = indexFrom > indexTo?i:i1+1;\n\t\t\t\t\t\t\treturn newIndexTo - indexTo;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\t_get_span_columns: function(cIndex, hrIndex){\n\t\tlet columns, h = this._columns[cIndex].header;\n\t\tlet span = h[hrIndex].colspan || 1;\n\n\t\tfor(let i = 0; i < h.length; i++){\n\t\t\tif(h[i] && h[i].$colspan && h[i].$colspan > h[i].colspan)\n\t\t\t\tspan = Math.max(span, h[i].$colspan);\n\t\t}\n\n\t\tif(span > 1){\n\t\t\tconst id = this.columnId(cIndex);\n\t\t\tcolumns = [id];\n\t\t\tconst hIndex = this._getHiddenColumnIndex(id);\n\t\t\tfor( let i = hIndex+1; i < hIndex + span; i++)\n\t\t\t\tcolumns.push(this._getHiddenColumnId(i));\n\t\t}\n\t\treturn columns;\n\t},\n\t_init_horder:function(horder, cols){\n\t\tif (!horder.length){\n\t\t\tfor (let i=0; i<cols.length; i++)\n\t\t\t\thorder[i] = cols[i].id;\n\t\t\tthis._hidden_split = [this._settings.leftSplit, this._rightSplit, this._settings.rightSplit];\n\t\t}\n\t},\n\tisColumnVisible:function(id){\n\t\treturn !this._hidden_column_hash[id];\n\t},\n\thideColumn:function(id, opts, silent, mode){\n\t\tconst cols = this._settings.columns;\n\t\tconst horder = this._hidden_column_order;\n\t\tconst hhash = this._hidden_column_hash;\n\t\tlet column, span = 1;\n\t\topts = opts || {};\n\n\t\tif (mode!==false){\n\t\t\tconst index = this.getColumnIndex(id);\n\t\t\tassert(index != -1, \"hideColumn: invalid ID or already hidden\");\n\n\t\t\t//in case of second call to hide the same column, command will be ignored\n\t\t\tif (index == -1 || !this.callEvent(\"onBeforeColumnHide\", [id])) return;\n\n\t\t\tthis._init_horder(horder, cols);\n\t\t\t\n\t\t\tif (opts.spans){\n\t\t\t\tconst header = cols[index].header;\n\n\t\t\t\tfor (let i=0; i<header.length; i++){\n\t\t\t\t\tif (header[i])\n\t\t\t\t\t\tspan = Math.max(span, (header[i].colspan || 1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fixSplit(index, span, -1);\n\n\t\t\tfor (let i=index+span-1; i>=index; i--){\n\t\t\t\tthis._hideColumn(index);\n\t\t\t\tcolumn  = cols.splice(index, 1)[0];\n\t\t\t\thhash[column.id] = column;\n\t\t\t\tcolumn._yr0 = -1;\n\t\t\t\tcolumn.hidden = true;\n\t\t\t\tdelete this._columns_pull[column.id];\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onAfterColumnHide\", [id]);\n\t\t} else {\n\t\t\tcolumn = hhash[id];\n\t\t\tassert(column, \"showColumn: invalid ID or already visible\");\n\n\t\t\t//in case of second show command for already visible column - ignoring\n\t\t\tif(!column || !this.callEvent(\"onBeforeColumnShow\", [id])) return;\n\n\t\t\tlet prev = null;\n\t\t\tlet hindex = 0;\n\t\t\tfor (let i=0; i<horder.length; i++){\n\t\t\t\tif (horder[i] == id){\n\t\t\t\t\thindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!hhash[horder[i]])\n\t\t\t\t\tprev = horder[i];\n\t\t\t}\n\n\t\t\tif(opts.spans){\n\t\t\t\tlet header = column.header;\n\t\t\t\tfor(let i = 0; i<header.length; i++){\n\t\t\t\t\tif(header[i]){\n\t\t\t\t\t\theader[i].colspan = header[i].$colspan || header[i].colspan;\n\t\t\t\t\t\tspan = Math.max(span, (header[i].colspan || 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst index = prev ? this.getColumnIndex(prev)+1 : 0;\n\t\t\tfor (let i=hindex+span-1; i>=hindex; i--){\n\t\t\t\tconst col = hhash[horder[i]];\n\t\t\t\tif (col){ //can be already shown by another action\n\t\t\t\t\t_power_array.insertAt.call(cols, col, index);\n\t\t\t\t\tdelete col.hidden;\n\t\t\t\t\tdelete hhash[col.id];\n\t\t\t\t\tthis._columns_pull[col.id] = col;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tspan--;\n\t\t\t}\n\n\t\t\tthis._fixSplit(hindex, span, 1, true);\n\t\t\tthis.callEvent(\"onAfterColumnShow\", [id]);\n\t\t}\n\n\t\tif(column.header) this._fixColspansHidden(column, mode !== false ? 0 : 1, \"header\");\n\t\tif(column.footer) this._fixColspansHidden(column, mode !== false ? 0 : 1, \"footer\");\n\n\t\tif (horder.length === cols.length)\n\t\t\tthis._clear_hidden_state();\n\n\t\tif (!silent)\n\t\t\tthis._refresh_columns();\n\t},\n\tshowColumn:function(id, opts, silent){\n\t\treturn this.hideColumn(id, opts, silent, false);\n\t},\n\t_fixSplit:function(index, span, op, hidden){\n\t\tconst [lSplit, rSplit] = hidden ? this._hidden_split : [this._settings.leftSplit, this._rightSplit];\n\n\t\tif (index < lSplit)\n\t\t\tthis._settings.leftSplit += op*span;\n\t\tif (index >= rSplit)\n\t\t\tthis._settings.rightSplit += op*span;\n\t\telse\n\t\t\tthis._rightSplit += op*span;\n\t},\n\t_updateSplit:function(index, hindex, op){\n\t\tif (index >= 0){\n\t\t\tif (index < this._settings.leftSplit)\n\t\t\t\tthis._settings.leftSplit += op;\n\t\t\tif (this._settings.rightSplit && index >= this._rightSplit)\n\t\t\t\tthis._settings.rightSplit += op;\n\t\t\telse\n\t\t\t\tthis._rightSplit += op;\n\t\t}\n\n\t\tconst horder = this._hidden_column_order;\n\t\tif (horder.length && hindex >= 0){\n\t\t\tif (hindex < this._hidden_split[0])\n\t\t\t\tthis._hidden_split[0] += op;\n\t\t\tif (this._hidden_split[2] && hindex >= this._hidden_split[1])\n\t\t\t\tthis._hidden_split[2] += op;\n\t\t\telse\n\t\t\t\tthis._hidden_split[1] += op;\n\t\t}\n\t},\n\t_fixColspansHidden:function(config, mod, elName){\n\t\tfor (let i=config[elName].length - 1; i >= 0; i--) {\n\t\t\tvar ind = this._hidden_column_order;\n\t\t\tvar spanSource, isHidden = false, spanSize = 0;\n\n\t\t\tfor (let j = 0; j < ind.length; j++) {\n\t\t\t\tlet colConfig = this.getColumnConfig(ind[j]);\n\t\t\t\tlet el = colConfig[elName][i];\n\t\t\t\tif (!this.isColumnVisible(ind[j])){\n\t\t\t\t\t//hidden column\n\t\t\t\t\tif (el && el.$colspan && spanSize <= 0){\n\t\t\t\t\t\t//start of colspan in hidden\n\t\t\t\t\t\tspanSize = el.colspan = el.$colspan;\n\t\t\t\t\t\tisHidden = spanSource = el;\n\t\t\t\t\t}\n\t\t\t\t\tif (spanSource && spanSize > 0){\n\t\t\t\t\t\t//hidden column in colspan, decrease colspan size\n\t\t\t\t\t\tspanSource.colspan--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//visible column\n\t\t\t\t\tif (isHidden && spanSize > 0 && spanSource && spanSource.colspan > 0){\n\t\t\t\t\t\t//bit start of colspan is hidden\n\t\t\t\t\t\tel = colConfig[elName][i] = spanSource;\n\t\t\t\t\t\tspanSource = el;\n\t\t\t\t\t} else if (el && el.$colspan && spanSize <= 0){\n\t\t\t\t\t\t//visible start of colspan\n\t\t\t\t\t\tspanSize = el.colspan = el.$colspan;\n\t\t\t\t\t\tspanSource = el;\n\t\t\t\t\t}\n\t\t\t\t\tisHidden = null;\n\t\t\t\t}\n\t\t\t\tspanSize--;\n\t\t\t}\n\t\t}\n\t},\n\t_shouldKeepView(view, columns) {\n\t\tconst viewId = view.config.id;\n\t\t\n\t\t// protected views (headermenu, subviews) should not be removed\n\t\tif (viewId === this._settings.headermenu || \n\t\t\t(this._subViewStorage && this._subViewStorage[viewId])) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tfor (const column of columns) {\n\t\t\tif (column.header && typeof column.header !== \"string\") {\n\t\t\t\tfor (const item of column.header) {\n\t\t\t\t\tif (this._headerItemReferencesView(item, viewId)) return true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (column.footer && typeof column.footer !== \"string\") {\n\t\t\t\tfor (const item of column.footer) {\n\t\t\t\t\tif (this._headerItemReferencesView(item, viewId)) return true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t_headerItemReferencesView(item, viewId) {\n\t\tif (!item) return false;\n\t\t// data collections\n\t\tif (item.options && item.options.config && item.options.config.id === viewId) return true;\n\t\t// richselectFilter and excelFilter contain references to views\n\t\tconst view = item.richselect ? $$(item.richselect) : item.filter ? $$(item.filter) : null;\n\t\t\n\t\treturn view && view.config && view.config.id === viewId;\n\t},\n\trefreshColumns:function(columns){\n\t\tif (columns) {\n\t\t\tcolumns = copy(columns, null, true);\n\t\t\t// clean up the config before using it (we may be reusing a previously initialized config to some extent)\n\t\t\tthis._clean_config_struct(columns);\n\t\t}\n\n\t\tconst columnsUpdated = (this._columns.length !== 0 && this._settings.columns !== this._columns) || !!columns;\n\n\t\tthis._dtable_column_refresh = true;\n\n\t\tif (columnsUpdated) {\n\t\t\tif (this._destroy_with_me.length) {\n\t\t\t\tthis._destroy_with_me = this._destroy_with_me.filter(view => {\n\t\t\t\t\tif (this._shouldKeepView(view, columns)) return true;\n\t\t\t\t\tview.destructor();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._clear_hidden_state();\n\t\t\tthis._active_headers = {};\n\t\t\tthis._filter_elements = {};\n\t\t\tthis._collection_handlers = {};\n\t\t\tthis._has_active_headers = false;\n\t\t}\n\n\t\tthis._columns_pull = {};\n\t\t//clear rendered data\n\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\tvar col = this._columns[i];\n\t\t\tthis._columns_pull[col.id] = col;\n\t\t\tcol.attached = col.node = null;\n\t\t}\n\t\tfor (let i=0; i<3; i++){\n\t\t\tthis._header.childNodes[i].innerHTML = \"\";\n\t\t\tthis._footer.childNodes[i].innerHTML = \"\";\n\t\t\tthis._body.childNodes[i].firstChild.innerHTML = \"\";\n\t\t}\n\n\t\t//render new structure\n\t\tthis._columns = this._settings.columns = (columns || this._settings.columns);\n\t\tthis._rightSplit = this._columns.length - (this._settings.rightSplit || 0);\n\n\t\tthis._dtable_fully_ready = 0;\n\t\tthis._define_structure();\n\t\tthis._update_scroll();\n\n\t\tthis.callEvent(\"onStructureUpdate\");\n\t\tthis.render();\n\n\t\t// apply new filters in case the columns were updated\n\t\tif (columnsUpdated) this.filterByAll();\n\n\t\tthis._dtable_column_refresh = false;\n\t},\n\t_refresh_columns:function(){\n\t\tthis._dtable_fully_ready = 0;\n\t\tthis.callEvent(\"onStructureUpdate\");\n\t\t\n\t\tthis._apply_headers();\n\t\tthis.render();\n\t},\n\tshowColumnBatch:function(batch, mode, silent){\n\t\tconst preserve = !isUndefined(mode);\n\t\tmode = mode !== false;\n\n\t\tconst sub = [];\n\t\tthis.eachColumn(function(id, col){\n\t\t\tif (col.batch){\n\t\t\t\tlet hidden = this._hidden_column_hash[col.id];\n\t\t\t\tif (!mode) hidden = !hidden;\n\n\t\t\t\tif(col.batch == batch && hidden)\n\t\t\t\t\tthis.hideColumn(col.id, { spans:true }, true,!mode);\n\t\t\t\telse if(!preserve && col.batch!=batch && !hidden)\n\t\t\t\t\tthis.hideColumn(col.id, { spans:true }, true, mode);\n\t\t\t}\n\n\t\t\tif (preserve && mode){\n\t\t\t\tconst header = col.header;\n\t\t\t\tfor (let i=0; i<header.length; i++)\n\t\t\t\t\tif (header[i] && header[i].batch && header[i].closed)\n\t\t\t\t\t\tsub.push(header[i].batch);\n\t\t\t}\n\t\t}, true);\n\n\t\t// hide closed batches\n\t\tfor (let i=0; i<sub.length; i++)\n\t\t\tif (sub[i] != batch) this.showColumnBatch(sub[i], false, true);\n\n\t\tif (!silent)\n\t\t\tthis._refresh_columns();\n\t},\n\t_getHiddenColumnIndex: function(id){\n\t\tif(this._hidden_column_order.length){\n\t\t\tfor (var i = 0; i < this._hidden_column_order.length; i++)\n\t\t\t\tif (this._hidden_column_order[i] == id)\n\t\t\t\t\treturn i;\n\t\t\treturn -1;\n\t\t}\n\t\treturn this.getColumnIndex(id);\n\t},\n\t_getHiddenColumnId: function(index){\n\t\treturn this._hidden_column_order.length?this._hidden_column_order[index]:this.columnId(index);\n\t}\n};\n\nexport default Mixin;","import {isUndefined} from \"../../webix/helpers\";\nimport {_event} from \"../../webix/htmlevents\";\nimport EditAbility from \"../../core/editability\";\n\n\n// #include core/drag.js\n// #include core/edit.js\n// #include ui/inputs.js\n\nconst Mixin = {\n\n\t/////////////////////////\n\t//    edit start       //\n\t/////////////////////////\n\t_get_editor_type:function(id){\n\t\treturn this.getColumnConfig(id.column).editor;\n\t},\n\tgetEditor:function(row, column){\n\t\tif (!row)\n\t\t\treturn this._last_editor;\n\n\t\tif (arguments.length == 1){\n\t\t\tcolumn = row.column;\n\t\t\trow = row.row; \n\t\t}\n\t\t\n\t\treturn ((this._editors[row]||{})[column]);\n\t},\n\t_for_each_editor:function(handler){\n\t\tfor (var row in this._editors){\n\t\t\tvar row_editors = this._editors[row];\n\t\t\tfor (var column in row_editors)\n\t\t\t\tif (column!=\"$count\")\n\t\t\t\t\thandler.call(this, row_editors[column]);\n\t\t}\n\t},\n\t_init_editor:function(id, type, show){\n\t\tvar row = id.row;\n\t\tvar column  = id.column;\n\t\tvar col_settings = type.config = this.getColumnConfig(column);\n\t\t//show it over cell\n\t\tif (show !== false)\n\t\t\tthis.showCell(row, column);\n\n\t\tvar node = type.render();\n\n\t\tif (type.$inline)\n\t\t\tnode = this._locateInput(id);\n\t\ttype.node = node;\n\n\t\tvar item = this.getItem(row);\n\t\tvar format = col_settings.editFormat;\n\n\t\tvar value;\n\t\tif (this._settings.editMath)\n\t\t\tvalue = item[\"$\"+column];\n\t\tvalue = value || item[column];\n\n\t\tif (isUndefined(value))\n\t\t\tvalue=\"\";\n\n\t\ttype.setValue(format?format(value):value, item);\n\t\ttype.value = item[column];\n\t\tthis._addEditor(id, type);\n\n\t\tif(type.getPopup){\n\t\t\tconst popup = type.getPopup();\n\t\t\tpopup.attachEvent(\"onHide\", function(){\n\t\t\t\tif(this._edit_active) this.show();\n\t\t\t});\n\t\t\tpopup._editorMaster = this._settings.id;\n\t\t}\n\n\t\tif (!type.$inline)\n\t\t\ttype._editor_pos = this._sizeToCell(id, node, true);\n\t\t\n\n\t\tif (type.afterRender)\n\t\t\ttype.afterRender();\n\t\t\n\t\tif (this._settings.liveValidation){\n\t\t\t_event(type.node, \"keyup\", this._bind_live_validation(id, this));\n\t\t\tthis.validateEditor(id);\n\t\t}\n\n\t\treturn node;\n\t},\n\t_bind_live_validation:function(id, that){\n\t\treturn function(){\n\t\t\tthat.validateEditor(id);\n\t\t};\n\t},\n\t_get_new_value:function(editor){\n\t\tvar parser = this.getColumnConfig(editor.column).editParse;\n\t\tvar new_value = editor.getValue();\n\t\treturn parser?parser(new_value):new_value;\n\t},\n\t_set_new_value:function(editor, new_value, copy){\n\t\tvar item = copy ? {} : this.getItem(editor.row);\n\t\titem[editor.column] = new_value;\n\n\t\tif (this._settings.editMath)\n\t\t\titem[\"$\"+editor.column] = null;\n\n\t\treturn item;\n\t},\n\t//register editor in collection\n\t_addEditor:function(id, type){\n\t\tvar row_editors = this._editors[id.row]=this._editors[id.row]||{};\n\n\t\trow_editors.$count = (row_editors.$count||0)+1;\n\n\t\ttype.row = id.row; type.column = id.column;\n\t\tthis._last_editor = row_editors[id.column] = type;\n\n\t\tthis._in_edit_mode++;\n\t\tthis._last_editor_scroll = this.getScrollState();\n\t},\n\t_removeEditor:function(editor){\n\t\tif (this._last_editor == editor)\n\t\t\tthis._last_editor = 0;\n\t\t\n\t\tif (editor.destroy)\n\t\t\teditor.destroy();\n\t\t\n\t\tvar row = this._editors[editor.row];\n\t\tdelete row[editor.column];\n\t\trow.$count -- ;\n\t\tif (!row.$count)\n\t\t\tdelete this._editors[editor.row];\n\t\tthis._in_edit_mode--;\n\t},\n\t_changeEditorId:function(oldid, newid)\t{\n\t\tvar editor = this._editors[oldid];\n\t\tif (editor){\n\t\t\tthis._editors[newid] = editor;\n\t\t\tdelete this._editors[oldid];\n\t\t\tfor (var key in editor)\n\t\t\t\tif (key != \"$count\")\n\t\t\t\t\teditor[key].row = newid;\n\t\t}\n\t},\n\t//get html cell by combined id\n\t_locate_cell:function(id){\n\t\tvar area, i, index, j, node, span,\n\t\t\tconfig = this.getColumnConfig(id.column),\n\t\t\tcell = 0;\n\n\t\tif (config && config.node && config.attached){\n\t\t\tindex = this.getIndexById(id.row);\n\t\t\tif(this._spans_pull){\n\t\t\t\tspan = this.getSpan(id.row,id.column);\n\t\t\t\tif(span){\n\t\t\t\t\tfor (i=0; i<3; i++){\n\t\t\t\t\t\tarea = this._spans_areas[i];\n\t\t\t\t\t\tfor(j=0; !cell && j < area.childNodes.length; j++){\n\t\t\t\t\t\t\tnode = area.childNodes[j];\n\t\t\t\t\t\t\tif(node.getAttribute(/*@attr*/\"row\") == index && node.getAttribute(/*@attr*/\"column\") == this.getColumnIndex(id.column))\n\t\t\t\t\t\t\t\tcell = node;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!cell && index >= (config._yr0-this._settings.topSplit) && index< config._yr1)\n\t\t\t\tcell = config.node.childNodes[index-config._yr0+this._settings.topSplit];\n\t\t}\n\t\treturn cell;\n\t},\n\n\t\n\t/////////////////////////\n\t//    public methods   //\n\t/////////////////////////\n\teditCell:function(row, column, preserve, show){\n\t\tcolumn = column || this._settings.columns[0].id;\n\t\treturn EditAbility.edit.call(this, {row:row, column:column}, preserve, show);\n\t},\n\teditRow:function(id){\n\t\tif (id && id.row)\n\t\t\tid = id.row;\n\n\t\tvar next = false;\n\t\tthis.eachColumn(function(column){\n\t\t\tthis.edit({ row:id, column:column}, next, !next);\n\t\t\tnext = true;\n\t\t});\n\t},\n\teditColumn:function(id){\n\t\tif (id && id.column)\n\t\t\tid = id.column;\n\n\t\tvar next = false;\n\t\tthis.eachRow(function(row){\n\t\t\tthis.edit({row:row, column:id}, next, !next);\n\t\t\tnext = true;\n\t\t});\n\t},\n\teachRow:function(handler, all){\n\t\tvar order = this.data.order;\n\t\tif (all) \n\t\t\torder = this.data._filter_order || order;\n\n\t\tfor (let i=0; i<order.length; i++)\n\t\t\thandler.call(this, order[i]);\n\t},\n\teachColumn:function(handler, all){\n\t\tconst hidden = this._hidden_column_order;\n\t\tif(all && hidden.length){\n\t\t\tfor(let i = 0; i < hidden.length; i++){\n\t\t\t\tconst column = this.getColumnConfig( hidden[i] );\n\t\t\t\thandler.call(this, column.id, column);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconst columns = [].concat(this._columns);\n\t\t\tfor (let i = 0; i < columns.length; i++){\n\t\t\t\tconst column = columns[i];\n\t\t\t\thandler.call(this, column.id, column);\n\t\t\t}\n\t\t}\n\t},\n\n\n\t////////////////////\n\t//    edit next   //\n\t////////////////////\n\t_after_edit_next:function(editor_next){\n\t\tif (this.getSelectedId){\t//select related cell when possible\n\t\t\tvar sel = this.getSelectedId(true);\n\t\t\tif (sel.length == 1){\n\t\t\t\tthis._select(editor_next);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t_custom_tab_handler:function(tab, e){\n\t\tif (this._settings.editable && !this._in_edit_mode){\n\t\t\t//if we have focus in some custom input inside of datatable\n\t\t\tif (e.target && e.target.tagName == \"INPUT\") return true;\n\n\t\t\t//init editor related to a single selected row/column/cell\n\t\t\tvar selection = this.getSelectedId(true);\n\t\t\tif (selection.length == 1){\n\t\t\t\tvar sel =  selection[0];\n\n\t\t\t\tif(this._settings.select == \"row\"){\n\t\t\t\t\tlet index = e.shiftKey? 0 : this._settings.columns.length-1;\n\t\t\t\t\tsel.column = this._settings.columns[index].id;\n\t\t\t\t\tif(this._item_clicked && (this._item_clicked.row == sel.row))\n\t\t\t\t\t\tsel.column = this._item_clicked.column;\n\t\t\t\t\tthis._item_clicked = null;\n\t\t\t\t}\n\n\t\t\t\tthis.editNext(tab, sel);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\t_find_cell_next:function(start, check, direction){\n\t\tconst row = this.getIndexById(start.row);\n\t\tlet column = this.getColumnIndex(start.column);\n\t\tconst order = this.data.order;\n\t\tconst cols = this._columns;\n\n\t\tif (direction){\n\t\t\tfor (let i=row; i<order.length; i++){\n\t\t\t\tfor (let j=column+1; j<cols.length; j++){\n\t\t\t\t\tconst id = { row:order[i], column:cols[j].id };\n\t\t\t\t\tif (check.call(this, id) && (!this._checkCellMerge || !this._checkCellMerge(start, id))){\n\t\t\t\t\t\tid.toString = this._id_to_string;\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcolumn = -1;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row; i>=0; i--){\n\t\t\t\tfor (let j=column-1; j>=0; j--){\n\t\t\t\t\tconst id = { row:order[i], column:cols[j].id };\n\t\t\t\t\tif (check.call(this, id)){\n\t\t\t\t\t\tid.toString = this._id_to_string;\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcolumn = cols.length;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/////////////////////////////\n\t//    scroll correction    //\n\t/////////////////////////////\n\t_correct_after_focus_y:function(){\n\t\tif (this._in_edit_mode){\n\t\t\tconst { scrollTop } = this._body.childNodes[1].firstChild;\n\n\t\t\tif (scrollTop) {\n\t\t\t\tthis._y_scroll.scrollTo(this.getScrollState().y + scrollTop);\n\t\t\t\tthis._body.childNodes[1].firstChild.scrollTop = 0;\n\t\t\t}\n\t\t}\n\t},\n\t_correct_after_focus:function(){\n\t\tif (this._in_edit_mode){\n\t\t\tconst { scrollTop, scrollLeft } = this._body.childNodes[1];\n\n\t\t\tif (this._ignore_after_focus_scroll)\n\t\t\t\treturn this._ignore_after_focus_scroll = false;\n\n\t\t\tif (this._settings.prerender) this._y_scroll.scrollTo(scrollTop);\n\t\t\tthis._x_scroll.scrollTo(scrollLeft);\n\n\t\t\tif (this._touch_scroll){\n\t\t\t\tif (scrollTop) this._body.childNodes[1].scrollTop = 0;\n\t\t\t\tif (scrollLeft) this._body.childNodes[1].scrollLeft = 0;\n\t\t\t\tthis._ignore_after_focus_scroll = (scrollTop || scrollLeft);\n\t\t\t}\n\t\t}\n\t},\n\t_component_specific_edit_init:function(){\n\t\tthis.attachEvent(\"onScrollY\", this._update_editor_y_pos);\n\t\tthis.attachEvent(\"onScrollX\", this._update_editor_y_pos);\n\t\tthis.attachEvent(\"onScrollY\", this._refocus_inline_editor);\n\t\tthis.attachEvent(\"onColumnResize\", function(){ this.editStop(); });\n\t\tthis.attachEvent(\"onAfterFilter\", function(){ this.editStop(); });\n\t\tthis.attachEvent(\"onRowResize\", function(){ this.editStop(); });\n\t\tthis.attachEvent(\"onAfterScroll\", function(){ if(this._settings.topSplit) this.editStop(); });\n\t\tthis._body.childNodes[1].onscroll = () => this._correct_after_focus();\n\t\tif (!this._settings.prerender)\n\t\t\tthis._body.childNodes[1].firstChild.onscroll = () => this._correct_after_focus_y();\n\t},\n\t_update_editor_y_pos:function(){\n\t\tif (this._in_edit_mode){\n\t\t\tvar old  = this._last_editor_scroll;\n\t\t\tthis._last_editor_scroll = this.getScrollState();\n\n\t\t\tvar diff = this._last_editor_scroll.y - old.y;\n\t\t\tthis._for_each_editor(function(editor){\n\n\t\t\t\tif (editor.getPopup){\n\t\t\t\t\tconst node = this.getItemNode(editor);\n\t\t\t\t\tlet isHidden = false;\n\n\t\t\t\t\tif(this._settings.prerender){\n\t\t\t\t\t\tconst pos = editor._editor_pos;\n\t\t\t\t\t\tlet ydiff = pos.top - this._scrollTop;\n\t\t\t\t\t\tlet xdiff = pos.left - this._scrollLeft;\n\n\t\t\t\t\t\tisHidden = (ydiff < 0 || ydiff+pos.height > this._dtable_offset_height || \n\t\t\t\t\t\t\txdiff < 0 || xdiff+pos.width > this.$width - this._scrollSizeX);\n\t\t\t\t\t}\n\t\t\t\t\tif(!node || isHidden)\n\t\t\t\t\t\teditor.getPopup().show({ x:-10000, y:-10000 });\n\t\t\t\t\telse\n\t\t\t\t\t\teditor.getPopup().show(node);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (!this._settings.prerender && !editor.linkInput && !editor.$inline){\n\t\t\t\t\teditor.node.top -= diff;\n\t\t\t\t\teditor.node.style.top = editor.node.top + \"px\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n};\n\nexport default Mixin;","import template from \"../../webix/template\";\nimport env from \"../../webix/env\";\nimport {assert} from \"../../webix/debug\";\nimport {bind, exec} from \"../../webix/helpers\";\n\n\nconst Mixin = {\n\n\tmath_setter:function(value){\n\t\tif (value)\n\t\t\tthis._math_init();\n\t\treturn value;\n\t},\n\n\t_math_pref: \"$\",\n\n\t_math_init: function() {\n\t\tif(env.strict) return;\n\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(this._parse_row_math, this));\n\t\tthis.data.attachEvent(\"onStoreLoad\", bind(this._parse_math, this));\n\t\tthis.attachEvent(\"onStructureLoad\", this._parse_math);\n\t},\n\t_parse_row_math:function(id, obj, action){\n\t\tif (!id || action==\"paint\") return;\n\t\t\n\t\tif (action == \"delete\"){\n\t\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\t\tthis._remove_old_triggers(obj,  this._columns[i].id);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (action == \"add\")\n\t\t\t\tthis._exprs_by_columns(obj);\n\n\t\t\tfor (let i=0; i<this._columns.length; i++){\n\t\t\t\tthis._math_recalc = {};\n\t\t\t\tthis._parse_cell_math(id, this._columns[i].id);\n\t\t\t}\n\t\t\tthis._math_recalc = {};\n\t\t}\n\t},\n\t_parse_cell_math: function(row, col) {\n\t\tvar item = this.getItem(row);\n\t\tvar value;\n\n\t\t// use previosly saved formula if available\n\t\tvalue = item[this._math_pref + col] || item[col];\n\n\t\tif (value && value.length > 0 && value.toString().substr(0, 1) === \"=\") {\n\t\t\t// calculate math value\n\t\t\titem[this._math_pref + col] = value;\n\t\t\titem[col] = this._calculate(value, row, col);\n\t\t\t//this.updateItem(item);\n\t\t} else {\n\t\t\t// just a string\n\t\t\tif (typeof(item[this._math_pref + col]) !== \"undefined\")\n\t\t\t\tdelete item[this._math_pref + col];\n\t\t\t// remove triggers if they were setted earlier\n\t\t\tthis._remove_old_triggers(item, col);\n\t\t}\n\t\t// recalculate depending cells\n\t\tif (typeof(item.depends) !== \"undefined\" && typeof(item.depends[col]) !== \"undefined\") {\n\t\t\tfor (var i in item.depends[col]) {\n\t\t\t\tvar name = item.depends[col][i][0] + \"__\" + item.depends[col][i][1];\n\t\t\t\tif (typeof(this._math_recalc[name]) === \"undefined\") {\n\t\t\t\t\tthis._math_recalc[name] = true;\n\t\t\t\t\tthis._parse_cell_math(item.depends[col][i][0], item.depends[col][i][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_set_original_value: function(row, col) {\n\t\tvar item = this.getItem(row);\n\t\tif (typeof(item[this._math_pref + col]) !== \"undefined\")\n\t\t\titem[col] = item[this._math_pref + col];\n\t},\n\n\t_parse_math: function(){\n\t\tif (!this._columns || !this.count()) return;\n\t\t\n\t\tthis._exprs_by_columns();\n\n\t\tfor (var j = 0; j < this._columns.length; j++){\n\t\t\tvar col = this.columnId(j);\n\t\t\tthis.data.each(function(obj){\n\t\t\t\tthis._math_recalc = {};\n\t\t\t\tthis._parse_cell_math(obj.id, col);\n\t\t\t}, this);\n\t\t}\n\n\t\tthis._math_recalc = {};\n\t},\n\n\t_exprs_by_columns: function(row) {\n\t\tfor (var i = 0; i < this._columns.length; i++){\n\t\t\tif (this._columns[i].math) {\n\t\t\t\tvar col = this.columnId(i);\n\t\t\t\tvar math = \"=\" + this._columns[i].math;\n\t\t\t\tmath = math.replace(/\\$c/g, \"#$c#\");\n\t\t\t\tif (row){\n\t\t\t\t\trow[col] = this._parse_relative_expr(math, row.id, col);\n\t\t\t\t\tdelete row[this._math_pref+col];\n\t\t\t\t\tthis._remove_old_triggers(row, col);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.data.each(function(obj){\n\t\t\t\t\t\tobj[col] = this._parse_relative_expr(math, obj.id, col);\n\t\t\t\t\t\tdelete obj[this._math_pref+col];\n\t\t\t\t\t\tthis._remove_old_triggers(obj, col);\n\t\t\t\t\t}, this);\n\t\t\t}\n\t\t}\n\t},\n\n\t_parse_relative_expr: function(expr, row, col) {\n\t\treturn (template(expr))({ \"$r\": row, \"$c\": col });\n\t},\n\n\t_get_calc_value: function(row, col) {\n\t\tvar item;\n\n\t\tif (this.exists(row))\n\t\t\titem = this.getItem(row);\n\t\telse\n\t\t\treturn \"#out_of_range\";\n\n\t\tvar value = item[this._math_pref + col] || item[col] || 0;\n\t\tvalue = value.toString();\n\t\tif (value.substring(0, 1) !== \"=\")\n\t\t\t// it's a string\n\t\t\treturn value;\n\t\telse {\n\t\t\t// TODO: check if value shouldn't be recalculated\n\t\t\t// and return value calculated earlier\n\n\t\t\t// calculate math expr value right now\n\t\t\tif (typeof(item[this._math_pref + col]) === \"undefined\")\n\t\t\t\titem[this._math_pref + col] = item[col];\n\t\t\titem[col] = this._calculate(value, row, col, true);\n\t\t\treturn item[col];\n\t\t}\n\t},\n\n\t_calculate: function(value, row, col, _inner_call) {\n\t\t// add coord in math trace to detect self-references\n\t\tif (_inner_call === true) {\n\t\t\tif (this._in_math_trace(row, col))\n\t\t\t\treturn \"#selfreference\";\n\t\t} else\n\t\t\tthis._start_math_trace();\n\t\tthis._to_math_trace(row, col);\n\n\t\tvar item = this.getItem(row);\n\t\tvalue = value.substring(1);\n\n\t\t// get operations list\n\t\tvar operations = this._get_operations(value);\n\t\tvar triggers = this._get_refs(value, row);\n\n\t\tif (operations) {\n\t\t\tvalue = this._replace_refs(value, triggers);\n\t\t\tvalue = this._parse_args(value, operations);\n\t\t} else {\n\t\t\tvalue = this._replace_refs(value, triggers, true);\n\t\t}\n\n\t\tvar exc = this._math_exception(value);\n\t\tif (exc !== false)\n\t\t\treturn exc;\n\n\t\t// remove from coord from trace when calculations were finished - it's important!\n\t\tthis._from_math_trace(row, col);\n\n\t\t// process triggers to know which cells should be recalculated when one was changed\n\t\tthis._remove_old_triggers(item, col);\n\t\tfor (var i = 0; i < triggers.length; i++) {\n\t\t\tthis._add_trigger([row, col], triggers[i]);\n\t\t}\n\t\texc = this._math_exception(value);\n\t\tif (exc !== false)\n\t\t\treturn exc;\n\n\t\t// there aren't any operations here. returns number or value of another cell\n\t\tif (!value) return value;\n\n\t\t// process mathematical expression and getting final result\n\t\tvalue = this._compute(value.replace(/\\$r/g, item.id));\n\t\texc = this._math_exception(value);\n\t\tif (exc !== false)\n\t\t\treturn exc;\n\t\treturn value;\n\t},\n\n\t_get_operations: function(value) {\n\t\t// gettings operations list (+-*/)\n\t\tvar splitter = /(\\+|-|\\*|\\/)/g;\n\t\tvar operations = value.replace(/\\[[^)]*?\\]/g,\"\").match(splitter);\n\t\treturn operations;\n\t},\n\n\t/*! gets list of referencies in formula\n\t **/\n\t_get_refs: function(value, id) {\n\t\tvar reg = /\\[([^\\]]+),([^\\]]+)\\]/g;\n\t\tvar cells = value.match(reg);\n\t\tif (cells === null) cells = [];\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tvar tmp = cell;\n\t\t\tcell = cell.substr(1, cell.length - 2);\n\t\t\tcell = cell.split(\",\");\n\t\t\tcell[0] = this._trim(cell[0]);\n\t\t\tcell[1] = this._trim(cell[1]);\n\t\t\tif (cell[0].substr(0, 1) === \":\")\n\t\t\t\tcell[0] = this.getIdByIndex(cell[0].substr(1));\n\t\t\tif (cell[0] === \"$r\")\n\t\t\t\tcell[0] = id;\n\t\t\tif (cell[1].substr(0, 1) === \":\")\n\t\t\t\tcell[1] = this.columnId(cell[1].substr(1));\n\t\t\tcell[2] = tmp;\n\t\t\tcells[i] = cell;\n\t\t}\n\n\t\treturn cells;\n\t},\n\n\t// replace given list of references by their values\n\t_replace_refs: function(value, cells, clean) {\n\t\tvar dell = \"(\", delr = \")\";\n\t\tif (clean) dell = delr = \"\";\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tvar cell_value = this._get_calc_value(cell[0], cell[1]);\n\t\t\tif (isNaN(cell_value))\n\t\t\t\tcell_value = \"\\\"\"+cell_value+\"\\\"\";\n\t\t\tvalue = value.replace(cell[2], dell + cell_value + delr);\n\t\t}\n\t\treturn value;\n\t},\n\n\t_parse_args: function(value, operations) {\n\t\tvar args = [];\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tvar op = operations[i];\n\t\t\tvar temp = this._split_by(value, op);\n\t\t\targs.push(temp[0]);\n\t\t\tvalue = temp[1];\n\t\t}\n\t\targs.push(value);\n\n\t\t//var reg = /^(-?\\d|\\.|\\(|\\))+$/;\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tvar arg = this._trim(args[i]);\n\t\t\t//\tif (reg.test(arg) === false)\n\t\t\t//\t\treturn ''; //error\n\t\t\targs[i] = arg;\n\t\t}\n\n\t\tvar expr = \"\";\n\t\tfor (let i = 0; i < args.length - 1; i++) {\n\t\t\texpr += args[i] + operations[i];\n\t\t}\n\t\texpr += args[args.length - 1];\n\t\treturn expr;\n\t},\n\n\t_compute: function(expr) {\n\t\tvar result;\n\t\ttry {\n\t\t\tresult = exec(expr);\n\t\t} catch(ex) {\n\t\t\tassert(false,\"Math error in datatable<br>\"+expr);\n\t\t\tresult = \"\";\n\t\t}\n\t\treturn result.toString();\n\t},\n\n\t_split_by: function(value, splitter) {\n\t\tvar pos = value.indexOf(splitter);\n\t\tvar before = value.substr(0, pos);\n\t\tvar after = value.substr(pos + 1);\n\t\treturn [before, after];\n\t},\n\n\t_trim: function(value) {\n\t\tvalue = value.replace(/^ */g, \"\");\n\t\tvalue = value.replace(/ *$/g, \"\");\n\t\treturn value;\n\t},\n\n\t_start_math_trace: function() {\n\t\tthis._math_trace = [];\n\t},\n\t_to_math_trace: function(row, col) {\n\t\tthis._math_trace[row + \"__\" + col] = true;\n\t},\n\t_from_math_trace: function(row, col) {\n\t\tif (typeof(this._math_trace[row + \"__\" + col]) !== \"undefined\")\n\t\t\tdelete this._math_trace[row + \"__\" + col];\n\t},\n\t_in_math_trace: function(row, col) {\n\t\tif (typeof(this._math_trace[row + \"__\" + col]) !== \"undefined\")\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t},\n\n\t_add_trigger: function(depends, from) {\n\t\tvar item = this.getItem(from[0]);\n\t\tif (typeof(item.depends) === \"undefined\")\n\t\t\titem.depends = {};\n\t\tif (typeof(item.depends[from[1]]) === \"undefined\")\n\t\t\titem.depends[from[1]] = {};\n\t\titem.depends[from[1]][depends[0] + \"__\" + depends[1]] = depends;\n\n\t\titem = this.getItem(depends[0]);\n\t\tif (typeof(item.triggers) === \"undefined\")\n\t\t\titem.triggers = {};\n\t\tif (typeof(item.triggers[depends[1]]) === \"undefined\")\n\t\t\titem.triggers[depends[1]] = {};\n\t\titem.triggers[depends[1]][from[0] + \"__\" + from[1]] = from;\n\t},\n\n\t_remove_old_triggers: function(item, col) {\n\t\tif (!item) return;\n\t\tif (typeof(item.triggers) === \"undefined\") return;\n\t\tfor (var i in item.triggers[col]) {\n\t\t\tvar depend = item.triggers[col][i];\n\t\t\tvar row = this.getItem(depend[0]);\n\t\t\tif (row)\n\t\t\t\tdelete row.depends[depend[1]][item.id + \"__\" + col];\n\t\t}\n\t},\n\n\t// check if exception syntax exists and returns exception text or false\n\t_math_exception: function(value) {\n\t\tvar reg = /#\\w+/;\n\t\tvar match = value.match(reg);\n\t\tif (match !== null && match.length > 0)\n\t\t\treturn match[0];\n\t\treturn false;\n\t}\n\n};\n\nexport default Mixin;","import {getTextSize, create, remove} from \"../../webix/html\";\nimport {$active} from \"../../webix/skin\";\nimport env from \"../../webix/env\";\nimport {bind} from \"../../webix/helpers\";\n\n\nconst Mixin = {\n\t$init:function(){\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(id){\n\t\t\tif (!id) this._adjustColumns();\n\t\t}, this));\n\t\tthis.attachEvent(\"onStructureLoad\", this._adjustColumns);\n\n\t\tthis.attachEvent(\"onStructureUpdate\", this._resizeColumns);\n\t\tthis.attachEvent(\"onColumnResize\", function(a,b,c,user){\n\t\t\tif (user)\n\t\t\t\tthis._resizeColumns();\n\t\t});\n\t\tthis.attachEvent(\"onResize\", this._resizeColumns);\n\t},\n\t_adjustColumns:function(){\n\t\tvar resize = false;\n\t\tvar cols = this._columns;\n\t\tfor (var i = 0; i < cols.length; i++)\n\t\t\tif (cols[i].adjust && ( cols[i].adjust ==\"header\" || this.count() ))\n\t\t\t\tresize = this._adjustColumn(i, cols[i].adjust, true) || resize;\n\n\t\tif (resize){\n\t\t\tthis._updateColsSizeSettings(true);\n\t\t\tthis._resizeColumns();\n\t\t}\n\t},\n\t_resizeColumns:function(){\n\t\tvar cols = this._settings.columns;\n\t\tvar fill = [];\n\t\tvar summ = 0;\n\n\t\tif (cols && !this._settings.autowidth)\n\t\t\tfor (var i = 0; i < cols.length; i++){\n\t\t\t\tvar colfil = cols[i].fillspace;\n\t\t\t\tif (colfil){\n\t\t\t\t\tfill[i] = colfil;\n\t\t\t\t\tsumm += colfil*1 || 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\tif (summ)\n\t\t\tthis._fillColumnSize(fill, summ);\n\t},\n\t_fillColumnSize:function(fill, summ){\n\t\tvar cols = this._settings.columns;\n\t\tif (!cols) return;\n\n\t\tvar width = this._content_width - this._scrollSizeY;\n\t\tvar resize = false;\n\n\t\tif (width>0){\n\t\t\tfor (let i=0; i<cols.length; i++)\n\t\t\t\tif (!fill[i]) width -= (cols[i].width || this._settings.columnWidth);\n\n\t\t\tfor (let i = 0; i < fill.length; i++)\n\t\t\t\tif (fill[i]){\n\t\t\t\t\tvar request = Math.min(width, Math.round(width * fill[i]/summ));\n\t\t\t\t\tresize = this._setColumnWidth(i, request, true) || resize;\n\t\t\t\t\twidth = width - cols[i].width;\n\t\t\t\t\tsumm = summ - fill[i];\n\t\t\t\t}\n\n\t\t\tif (resize) \n\t\t\t\tthis._updateColsSizeSettings(true);\n\t\t}\n\t},\n\t_getColumnConfigSize:function(ind, headers){\n\t\tvar config = this._settings.columns[ind];\n\t\tvar max = config.minWidth || this._settings.minColumnWidth;\n\n\t\t//get max data width\n\t\tif (headers != \"header\"){\n\t\t\tvar count = this.data.order.length;\n\t\t\tif (config.adjustBatch && config.adjustBatch < count)\n\t\t\t\tcount = config.adjustBatch;\n\t\t\tvar order = this.data.order.slice(0, count);\n\n\t\t\tfor (let i = 0; i < count; i++)\n\t\t\t\torder[i] = order[i] ? this._getValue(this.getItem(order[i]), config, 0) : \"\";\n\t\t\tmax = Math.max(max, getTextSize(order, \"webix_table_cell webix_cell\").width);\n\t\t}\n\n\t\t//get max header width\n\t\tif (headers != \"data\"){\n\t\t\tfor (let i=0; i<config.header.length; i++){\n\t\t\t\tvar header = config.header[i];\n\t\t\t\tif (header){\n\t\t\t\t\tvar width = 0;\n\t\t\t\t\tif(header.rotate)\n\t\t\t\t\t\tfor(var h = 0; h<(header.rowspan || 1); h++)\n\t\t\t\t\t\t\twidth += this._headers[h];\n\t\t\t\t\tvar css = \"webix_table_cell webix_cell \"+(header.css||\"\") + (header.rotate?\"webix_measure_rotate\":\"\");\n\t\t\t\t\tvar size = getTextSize([header.text], css, width);\n\t\t\t\t\tmax = Math.max(max, header.rotate?size.height:size.width);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (config.sort) max += 10;  // add 10px for sort marker\n\t\t}\n\n\t\tmax = max+(env.isIE?$active.layoutPadding.space:0);\n\n\t\treturn Math.min(max, config.maxWidth||this._settings.maxColumnWidth||100000);\n\t},\n\t_adjustColumn:function(ind, headers, ignore){\n\t\tif (ind >= 0){\n\t\t\tvar width = this._getColumnConfigSize(ind, headers);\n\t\t\treturn this._setColumnWidth(ind, width, ignore);\n\t\t}\n\t},\n\tadjustColumn:function(id, headers){\n\t\tthis._adjustColumn(this.getColumnIndex(id), headers);\n\t},\n\tadjustRowHeight:function(id, silent){\n\t\tif (id)\n\t\t\tthis._adjustRowHeight(id, true);\n\t\telse {\n\t\t\tconst cols = this._settings.columns;\n\t\t\tfor (let i = 0; i < cols.length; i++)\n\t\t\t\tthis._adjustRowHeight(cols[i].id, !i);\t\t\t//adjust size for single columns\n\t\t}\n\n\t\tthis._settings.scrollAlignY = false;\n\t\tthis._settings.fixedRowHeight = false;\n\n\t\tif (!silent)\n\t\t\tthis.refresh();\n\t},\n\t_adjustRowHeight:function(id, first){\n\t\tconst config = this.getColumnConfig(id);\n\t\tlet container;\n\t\tlet d = create(\"DIV\",{\"class\":\"webix_table_cell webix_measure_size webix_cell\"},\"\");\n\t\td.style.cssText = \"width:\"+config.width+\"px; height:1px; visibility:hidden; position:absolute; top:0px; left:0px; overflow:hidden;\";\n\t\tthis.$view.appendChild(d);\n\n\t\tif (d.offsetHeight < 1){\n\t\t\t//hidden container, height detection is broken\n\t\t\t//reattach to the body\n\t\t\tcontainer = this.$view.cloneNode(true);\n\t\t\tdocument.body.appendChild(container);\n\t\t\tcontainer.appendChild(d);\n\t\t}\n\t\tconst spanHeightMap = this._spans_pull ? this._calcSpanAutoHeight(id, d) : null;\n\t\tthis.data.each(function(obj){\n\t\t\tlet height;\n\n\t\t\tif(spanHeightMap && spanHeightMap[obj.id])\n\t\t\t\theight = spanHeightMap[obj.id];\n\t\t\telse{\n\t\t\t\td.innerHTML = this._getValue(obj, config, 0);\n\t\t\t\theight = d.scrollHeight;\n\t\t\t}\n\n\t\t\theight = Math.max(height, this._settings.rowHeight, this._settings.minRowHeight||0);\n\t\t\theight = Math.min(height, this._settings.maxRowHeight||100000);\n\n\t\t\tobj.$height = first ? height : Math.max(height, obj.$height);\n\t\t}, this);\n\n\t\td = remove(d);\n\t\tif (container)\n\t\t\tremove(container);\n\t}\n};\n\nexport default Mixin;","import env from \"../../webix/env\";\nimport Touch from \"../../core/touch\";\nimport {extend, delay} from \"../../webix/helpers\";\nimport {attachEvent} from \"../../webix/customevents\";\n\n\nattachEvent(\"onDataTable\", function(table, config){\n\tif (env.touch){\n\t\tTouch.$init();\n\t\tconfig.scrollSize = 0;\n\n\t\t// needed to show datatable scroll\n\t\tif (Touch._disabled) Touch.limit();\n\n\t\ttable.$ready.push(table.$touch);\n\t}\n});\n\nconst Mixin = {\n\t$touch:function(){\n\t\tvar config = this._settings;\n\t\tconfig.scrollAlignY = false;\n\n\t\textend(this, (config.prerender===true) ? this._touchNative : this._touch);\n\t\t\n\t\tvar scrollMode = \"\";\n\t\tif (!config.autowidth && config.scrollX !== false)\n\t\t\tscrollMode += \"x\";\n\t\tif (!config.autoheight && config.scrollY !== false)\n\t\t\tscrollMode += \"y\";\n\t\tthis._body.setAttribute(\"touch_scroll\", scrollMode);\n\t\t\n\t\tTouch._init_scroll_node(this._body.childNodes[1].firstChild);\n\t\tthis._sync_scroll(0, 0, \"0ms\");\n\t},\n\n\t$hasYScroll(){\n\t\treturn this._dtable_height - this._dtable_offset_height > 2;\n\t},\n\n\t_touchNative:{\n\t\t_touch_scroll: true,\n\t\t_scrollTo_touch:function(x,y){\n\t\t\t// limit scroll\n\t\t\tconst sizes = Touch._get_sizes(this._body.childNodes[1].firstChild);\n\t\t\tx = Math.max(0, Math.min(x, sizes.dx - sizes.px));\n\t\t\ty = Math.max(0, Math.min(y, sizes.dy - sizes.py));\n\n\t\t\t// no delay, important for autoscroll\n\t\t\tthis.callEvent(\"onAfterScroll\", [{ e: -x, f: -y}]);\n\t\t},\n\t\t_getScrollState_touch:function(){\n\t\t\tvar temp = Touch._get_matrix(this._body.childNodes[1].firstChild);\n\t\t\treturn { x: -temp.e, y: -temp.f };\n\t\t},\n\t\t$init:function(){\n\t\t\tthis.attachEvent(\"onBeforeScroll\", function(){\n\t\t\t\tTouch._scroll_node = this._body.childNodes[1].firstChild;\n\t\t\t\tTouch._scroll_stat = Touch._get_sizes(Touch._scroll_node);\n\t\t\t\tTouch._scroll_master = this;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onTouchEnd\", function(){\n\t\t\t\tTouch._scroll_master = null;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onAfterScroll\", function(result){\n\t\t\t\t//onAfterScroll may be triggered by some non-touch related logic\n\t\t\t\tif (!result) return;\n\n\t\t\t\tthis._scrollLeft = -result.e;\n\t\t\t\tthis._scrollTop = -result.f;\n\n\t\t\t\tthis._sync_scroll(result.e, result.f, \"0ms\");\n\t\t\t});\n\t\t},\n\t},\n\n\t_touch:{\n\t\t_touch_scroll: true,\n\t\t_scrollTo_touch:function(x,y){\n\t\t\tdelay(function(){\n\t\t\t\tthis.callEvent(\"onAfterScroll\", [{ e: -x, f: -y}]);\n\t\t\t}, this);\n\t\t},\n\t\t$scroll:{\n\t\t\tgravity: 0,\n\t\t\telastic: false\n\t\t},\n\t\t$init:function(){\n\t\t\t//if the result column's width < container's width,\n\t\t\tthis.attachEvent(\"onAfterColumnHide\", function(){\n\t\t\t\tthis._scrollTo_touch(0, 0);\n\t\t\t});\n\t\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\t\tif (this._x_scroll && this._settings.scrollX)\n\t\t\t\t\tthis._x_scroll._fixSize();\n\t\t\t\tif (this._y_scroll && this._settings.scrollY)\n\t\t\t\t\tthis._y_scroll._fixSize();\n\t\t\t});\n\t\t\tthis.attachEvent(\"onBeforeScroll\", function(){\n\t\t\t\tTouch._scroll_node = this._body.childNodes[1].firstChild;\n\t\t\t\tTouch._scroll_stat = Touch._get_sizes(Touch._scroll_node);\n\t\t\t\tTouch._scroll_stat.dy = this._dtable_height;\n\t\t\t\tTouch._scroll_master = this;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onTouchEnd\", function(){\n\t\t\t\tTouch._scroll_master = null;\n\t\t\t});\n\t\t\tthis.attachEvent(\"onAfterScroll\", function(result){\n\t\t\t\t//onAfterScroll may be triggered by some non-touch related logic\n\t\t\t\tif (!result) return;\n\n\t\t\t\tthis._scrollTop = 0;\n\t\t\t\tthis._scrollLeft = 0;\n\t\t\t\tthis._sync_scroll(0, 0, \"0ms\");\n\n\t\t\t\tthis._scrollLeft = -result.e;\n\t\t\t\tthis._scrollTop = -result.f;\n\n\t\t\t\tthis._correctScrollSize();\n\t\t\t\tthis.render();\n\n\t\t\t\tif (this._x_scroll){\n\t\t\t\t\tthis._x_scroll._settings.scrollPos = -1;\n\t\t\t\t\tthis._x_scroll.scrollTo(this._scrollLeft);\n\t\t\t\t\tthis.callEvent(\"onScrollX\",[]);\n\t\t\t\t}\n\t\t\t\tif (this._y_scroll){\n\t\t\t\t\tthis._y_scroll._settings.scrollPos = -1;\n\t\t\t\t\tthis._y_scroll.scrollTo(this._scrollTop);\n\t\t\t\t\tthis.callEvent(\"onScrollY\",[]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_sync_scroll:function(x,y,t){\n\t\tconst diff = this._settings.prerender ? 0 : this._scrollTop;\n\t\ty += diff;\n\n\t\tTouch._set_matrix(this._body.childNodes[1].firstChild, x, y, t);\n\t\tif (this._settings.leftSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[0].firstChild,0,y,t);\n\t\tif (this._settings.rightSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[2].firstChild,0,y,t);\n\t\tif (this._settings.header)\n\t\t\tTouch._set_matrix(this._header.childNodes[1].firstChild,x,0,t);\n\t\tif (this._settings.footer)\n\t\t\tTouch._set_matrix(this._footer.childNodes[1].firstChild,x,0,t);\n\n\t\tconst smooth = (t !== \"0ms\");\n\t\tif (this._x_scroll) this._x_scroll._sync(-x, smooth);\n\t\tif (this._y_scroll) this._y_scroll._sync(-y + diff, smooth);\n\n\t\tthis.callEvent(\"onSyncScroll\", [x,y,t]);\n\t},\n\n\t_sync_y_scroll:function(y,t){\n\t\tconst x = -this.getScrollState().x;\n\t\tTouch._set_matrix(this._body.childNodes[1].firstChild, x, y, t);\n\t\tif (this._settings.leftSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[0].firstChild, 0, y, t);\n\t\tif (this._settings.rightSplit)\n\t\t\tTouch._set_matrix(this._body.childNodes[2].firstChild, 0, y, t);\n\n\t\tthis.callEvent(\"onSyncScroll\", [x,y,t]);\n\t},\n\n\t_sync_x_scroll:function(x,t){\n\t\tconst y = this._settings.prerender ? -this.getScrollState().y : 0;\n\n\t\tTouch._set_matrix(this._body.childNodes[1].firstChild, x, y, t);\n\t\tif (this._settings.header)\n\t\t\tTouch._set_matrix(this._header.childNodes[1].firstChild,x,0,t);\n\t\tif (this._settings.footer)\n\t\t\tTouch._set_matrix(this._footer.childNodes[1].firstChild,x,0,t);\n\n\t\tthis.callEvent(\"onSyncScroll\", [x,y,t]);\n\t},\n\n\t_sync_pos:function(matrix){\n\t\tif (!this._settings.prerender)\n\t\t\tmatrix.f -= this._scrollTop;\n\t}\n};\n\nexport default Mixin;","const filters = {\n\tnumber:{\n\t\tgreater: function(a, b){ return a > b; },\n\t\tless: function(a, b){ return a < b; },\n\t\tgreaterOrEqual: function(a, b){ return a >= b; },\n\t\tlessOrEqual: function(a, b){ return a <= b; },\n\t\tequal: function(a, b){ return a == b; },\n\t\tnotEqual: function(a, b){ return a != b; },\n\n\t\tcontains: function(a, b){ return a.toString().toLowerCase().indexOf(b.toString().toLowerCase()) !== -1; },\n\t\tnotContains: function(a, b){ return a.toString().toLowerCase().indexOf(b.toString().toLowerCase()) === -1; }\n\t},\n\ttext:{\n\t\tequal: function(a, b){ return a.toLowerCase() === b.toLowerCase(); },\n\t\tnotEqual: function(a, b){ return a.toLowerCase() !== b.toLowerCase(); },\n\t\tcontains: function(a, b){ return a.toLowerCase().indexOf(b.toLowerCase()) !== -1; },\n\t\tnotContains: function(a, b){ return a.toLowerCase().indexOf(b.toLowerCase()) === -1; },\n\n\t\tbeginsWith: function(a, b){ return a.toLowerCase().lastIndexOf(b.toLowerCase(), 0) === 0; },\n\t\tnotBeginsWith: function(a, b){ return a.toLowerCase().lastIndexOf(b.toLowerCase(), 0) !== 0; },\n\t\tendsWith: function(a, b){ return a.toLowerCase().indexOf(b.toLowerCase(), a.length - b.length) !== -1; },\n\t\tnotEndsWith: function(a, b){ return a.toLowerCase().indexOf(b.toLowerCase(), a.length - b.length) === -1; }\n\t},\n\tdate:{\n\t\tgreater: function(a, b){ return a > b; },\n\t\tless: function(a, b){ return a < b; },\n\t\tgreaterOrEqual: function(a, b){ return a >= b; },\n\t\tlessOrEqual: function(a, b){ return a <= b; },\n\t\tequal: function(a, b){\n\t\t\tif (!a || !b) return false;\n\t\t\treturn a.valueOf() === b.valueOf();\n\t\t},\n\t\tnotEqual: function(a, b){\n\t\t\tif (!a || !b) return true;\n\t\t\treturn a.valueOf() !== b.valueOf();\n\t\t},\n\t\tbetween: function(a, b){ return (!b.start || a > b.start) && (!b.end || a < b.end); },\n\t\tnotBetween: function(a, b){ return (!b.start || a <= b.start) || (!b.end || a >= b.end); }\n\t}\n};\n\nexport default filters;","export const version=\"VERSION\";\nexport const name = \"core\";","import {assert} from \"./debug\";\n\nlet level = 0;\nexport function level_in(){\n\tlevel++;\n\tassert(level !== 100, \"Attempt to copy object with self reference\");\n}\nexport function level_out(){\n\tlevel--;\n}\n\n//coding helpers\nexport function clone(source){\n\tvar f = clone._function;\n\tf.prototype = source;\n\treturn new f();\n}\nclone._function = function(){};\n\n//copies methods and properties from source to the target\nlet extend = function(base, source, force){\n\tassert(base,\"Invalid mixing target\");\n\tassert(source,\"Invalid mixing source\");\n\n\tif (base.$protoWait){\n\t\t_power_array.insertAt.call(base.$protoWait, source,1);\n\t\treturn base;\n\t}\n\n\t//copy methods, overwrite existing ones in case of conflict\n\tfor (var method in source)\n\t\tif ((!(method in base)) || force)\n\t\t\tbase[method] = source[method];\n\n\t//in case of defaults - preffer top one\n\tif (source.defaults)\n\t\textend(base.defaults, source.defaults);\n\t\n\t//if source object has init code - call init against target\n\tif (source.$init)\t\n\t\tsource.$init.call(base);\n\n\treturn base;\t\n};\n\n//copies methods and properties from source to the target from all levels\nexport function copy(source, origin, allowViewRefs){\n\tassert(source,\"Invalid mixing target\");\n\tif (DEBUG) level_in();\n\n\tconst esModern = !!window.Map && !!window.Set && !!window.WeakMap && !!window.WeakSet;\n\tlet target;\n\tif(origin){\n\t\ttarget = source;\n\t\tsource = origin;\n\t} else \n\t\ttarget = (isArray(source)?[]:{});\n\n\tfor (let method in source){\n\t\tconst from = source[method];\n\t\tif(from && typeof from == \"object\" && !(from instanceof RegExp)){\t\n\t\t\tconst viewInstance = !!from._settings && !!from.$init && !!from.define;\n\t\t\tif (isDate(from))\n\t\t\t\ttarget[method] = new Date(from);\n\t\t\t/* jshint ignore:start */\n\t\t\telse if (\n\t\t\t\t(esModern && (from instanceof Map ||\n\t\t\t\t\tfrom instanceof Set ||\n\t\t\t\t\tfrom instanceof WeakMap ||\n\t\t\t\t\tfrom instanceof WeakSet)) ||\n\t\t\t\t(allowViewRefs && viewInstance)\n\t\t\t) {\n\t\t\t\ttarget[method] = from;\n\t\t\t}\n\t\t\t/* jshint ignore:end */\n\t\t\telse {\n\t\t\t\tif (from instanceof HTMLElement) {\n\t\t\t\t\ttarget[method] = from;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttarget[method] = isArray(from) ? [] : {};\n\t\t\t\tcopy(target[method], from, allowViewRefs);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget[method] = from;\n\t\t}\n\t}\n\n\tif (DEBUG) level_out();\n\treturn target;\t\n}\n\nexport function single(source){ \n\tvar instance = null;\n\tvar t = function(){\n\t\tif (!instance)\n\t\t\tinstance = new source({});\n\t\t\t\n\t\tif (instance._reinit)\n\t\t\tinstance._reinit.apply(instance, arguments);\n\t\treturn instance;\n\t};\n\treturn t;\n}\n\n\n//creates function with specified \"this\" pointer\nexport function bind(functor, object){ \n\treturn function(){ return functor.apply(object,arguments); };  \n}\n\n\n//evaluate javascript code in the global scope\nexport function exec(code){\n\treturn window.eval(code);\n}\n\nexport function wrap(code, wrap){\n\tif (!code) return wrap;\n\treturn function(){\n\t\tvar result = code.apply(this, arguments);\n\t\twrap.apply(this,arguments);\n\t\treturn result;\n\t};\n}\n\n//check === undefined\nexport function isUndefined(a){\n\treturn typeof a == \"undefined\";\n}\n//delay call to after-render time\nexport function delay(method, obj, params, delay){\n\treturn window.setTimeout(function(){\n\t\tif(!(obj&&obj.$destructed)){\n\t\t\tvar ret = method.apply(obj,(params||[]));\n\t\t\tmethod = obj = params = null;\n\t\t\treturn ret;\n\t\t}\n\t},delay||1);\n}\n\nexport function once(method){\n\tvar flag = true;\n\treturn function(){\n\t\tif (flag){\n\t\t\tflag = false;\n\t\t\tmethod.apply(this, arguments);\n\t\t}\n\t};\n}\n\n//common helpers\n\n//generates unique ID (unique per window, nog GUID)\nlet _seed = (new Date()).valueOf();\nexport function uid(){\n\t_seed++;\n\treturn _seed;\n}\n//resolve ID as html object\nexport function toNode(node){\n\tif (typeof node == \"string\") return document.getElementById(node);\n\treturn node;\n}\n//resolve function name\nexport function toFunctor(str, scope){ \n\tif (typeof(str)==\"string\"){\n\t\tvar method = str.replace(\"()\",\"\");\n\t\tif (scope && scope[method]) return scope[method];\n\t\treturn window[method] || exec(str);\n\t}\n\treturn str;\n}\n/*checks where an object is instance of Array*/\nexport function isArray(obj) {\n\treturn Array.isArray(obj);\n}\nexport function isDate(obj){\n\treturn obj instanceof Date;\n}\n\n//adds extra methods for the array\nexport function _to_array(array){ \n\treturn extend((array||[]),_power_array, true);\n}\n//can be used by _to_array()\nexport const _power_array={\n\t//remove element at specified position\n\tremoveAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it \n\tremove:function(value){\n\t\tthis.removeAt(this.find(value));\n\t},\t\n\t//add element to collection at specific position\n\tinsertAt:function(data,pos){\n\t\tif (!pos && pos!==0)\t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tthis.splice(pos, 0, data); \n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\tfind:function(data){ \n\t\tfor (var i=0; i<this.length; i++) \n\t\t\tif (data==this[i]) return i;\n\t\treturn -1; \n\t},\n\t//execute some method for each element of array\n\teach:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor \n\tmap:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t}, \n\tfilter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\textend = window.webix_on_core_ready({ extend }).extend;\n\t}\n}\n\nexport { extend };","import {extend} from \"./helpers\";\nimport EventSystem from \"../core/eventsystem\";\n\nvar evs = {};\nextend(evs, EventSystem, true);\n\nexport const callEvent = (a,b) => evs.callEvent(a, b);\nexport const attachEvent = (a,b,c,d) => evs.attachEvent(a, b, c, d);\nexport const detachEvent = (a) => evs.detachEvent(a);\nexport const blockEvent = () => evs.blockEvent();\nexport const unblockEvent = () => evs.unblockEvent();\nexport const mapEvent = map => evs.mapEvent(map);\nexport const hasEvent = type => evs.hasEvent(type);\n","import {errorMessage, getFileName} from \"./common\";\n\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {assert} from \"../../webix/debug\";\nimport {toNode} from \"../../webix/helpers\";\nimport {download} from \"../../webix/html\";\nimport {$$} from \"../../ui/core\";\n\nexport const toPNG = function(id, options){\n\tconst defer = promise.defer();\n\n\treturn require(env.cdn + \"/extras/html2canvas-1.0.min.js\").then(function(){\n\t\t//backward compatibility\n\t\tif (typeof options === \"string\") options = { filename: options };\n\t\toptions = options || {};\n\n\t\toptions.export_mode = \"png\";\n\n\t\tlet view = $$(id);\n\t\tif (view && view.$exportView)\n\t\t\tview = view.$exportView(options);\n\t\tassert(view, errorMessage);\n\t\tif(!view) return defer.reject(errorMessage);\n\n\t\tconst node = view ? view.$view : toNode(id);\n\t\tconst filename = getFileName(options.filename, \"png\");\n\n\t\twindow.html2canvas(node, {background:\"#fff\", logging:false, useCORS:true}).then(function(canvas) {\n\t\t\tconst callback = function(data){\n\t\t\t\tif(options.download !== false)\n\t\t\t\t\tdownload(data, filename);\n\t\t\t\tdefer.resolve(data);\n\t\t\t};\n\t\t\tif(canvas.msToBlob)\n\t\t\t\tcallback(canvas.msToBlob());\n\t\t\telse\n\t\t\t\tcanvas.toBlob(callback, \"image/png\");\n\t\t});\n\t\treturn defer;\n\t});\n};","import {errorMessage, getExportScheme, getExportData, getFileName} from \"./common\";\n\nimport csv from \"../../webix/csv\";\nimport promise from \"../../thirdparty/promiz\";\n\nimport {download} from \"../../webix/html\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\nimport {extend, isArray} from \"../../webix/helpers\";\n\nexport const toCSV = function(id, options){\n\toptions = options || {};\n\toptions.export_mode = \"csv\";\n\n\tlet view = $$(id);\n\tlet result;\n\n\tif (view && view.$exportView)\n\t\tview = result = view.$exportView(options);\n\n\tassert(view, errorMessage);\n\tif(!view) return promise.reject(errorMessage);\n\n\t//$exportView returns array\n\tif(!isArray(view)){\n\t\textend(options, {\n\t\t\tfilterHTML: true\n\t\t});\n\t\tresult = getExportData(view, options, getExportScheme(view, options));\n\t}\n\n\tif(options.dataOnly)\n\t\treturn result;\n\n\tconst blob = new Blob([\"\\uFEFF\" + csv.stringify(result)], { type: \"text/csv\" });\n\tif(options.download !== false)\n\t\tdownload(blob, getFileName(options.filename, \"csv\"));\n\n\treturn promise.resolve(blob);\n};","import {callEvent} from \"./customevents\";\n\nexport function editStop(){\n\tcallEvent(\"onEditEnd\", []);\n}\n","import {create} from \"../webix/html\";\n\n/*submits values*/\nexport default function send(url, values, method, target){\n\tvar form = create(\"FORM\",{\n\t\t\"target\":(target||\"_self\"),\n\t\t\"action\":url,\n\t\t\"method\":(method||\"POST\")\n\t},\"\");\n\tfor (var k in values) {\n\t\tvar field = create(\"INPUT\",{\"type\":\"hidden\",\"name\": k,\"value\": values[k]},\"\");\n\t\tform.appendChild(field);\n\t}\n\tform.style.display = \"none\";\n\tdocument.body.appendChild(form);\n\tform.submit();\n\tdocument.body.removeChild(form);\n}"],"names":["Deferred","resolve","stack","length","ajax","count","options","rows","this","_settings","dataFeed","_ignore_feed","data","mode","layout","t","origins","source","e","target","_view","$view","node","name","_viewobj","removeAttribute","_toggleCanvas","timelineItemHeight","borderlessPopup","customPos","ctx","x_offset","s","webix_drag","getTopParentView","document","selection","type","td","rowSpan","column","span","rowspan","_waitSave","prev","text","d","callEvent","parentNode","insertBefore","move","getInputNode","_init_edit_events_once","_get_editor_type","$row","config","row","hidden","copy","push","selected","getFirstId","separator","multi","_nextNavButton","obj","$template","removeCss","origin","parseInt","activeElement","contains","_validate_init_once","columns","docFooter","height","NORM.DIST","wscols","confirmMessage","args","$args","compare","_lesser","enterPassword","less","aria","minusPosition","moreComments","passwordError","_margin","x","call","defaults","width","monthHeader","date","getSelectedDate","setYear","i18n","calendar","done","i","_renderRow","keyCode","UIManager","addHotKey","bheight","aheight","state","value","labelWidth","isCapsLock","getModifierState","h","_labelTopHeight","min","max","common","_get_input_width","option","disabled","id","left","index","_safeValue","toLowerCase","newPage","old_page","limit","old_limit","old_count","sub","_selections","getIdByIndex","_bs_select","oldwidth","newsize","addMark","context","DragControl","getContext","$init","hindex","_hidden_split","resize","_setColumnWidth","_body","childNodes","endsWith","a","b","indexOf","notEndsWith","greater","greaterOrEqual","lessOrEqual","equal","valueOf","notEqual","between","start","end","notBetween","level","instance","_reinit","apply","arguments","code","wrap","result","evs","blockEvent","unblockEvent","map","mapEvent","hasEvent","defer","promise","require","env","cdn","then","filename","export_mode","view","$$","$exportView","toNode","getFileName","window","html2canvas","background","logging","useCORS","canvas","callback","download","msToBlob","toBlob","reject","errorMessage","isArray","extend","filterHTML","getExportData","getExportScheme","dataOnly","blob","Blob","csv","stringify","box_params","alertPopup","confirmPopup","input","promptPopup","url","values","method","k","form","create","action","field","appendChild","style","display","body","submit","removeChild"],"mappings":";;;;;;;;AAqCAA,EAASC,QAAU;ACsEbC,CAAAA,GAASA,CAAAA,EAAMC;ACJjBC,EAAKC,KAAL;;;AClC6C,EAA4CC,EAAQC;ACkI9FC,KAAKC,EAAUC,UAAYF,CAAAA,KAAKG,GAAiBC;AC7LrDC,EADmB,UAAhB,OAAOA,EACHL,KAAKC,EAAUK,QAAQ,KACrBD;AC4OTE,EAAIC,EAAU;;AClCf,IAAIC,EAASC,EAAEC;AC/HcX,KAAKY,GAAMC;AC6FVH,EAAEC;AA+Sd,SAAdG,EAAKC,MAAiC,WAAdD,EAAKC;AChehB;ACwKhBf,KAAKgB,GAASC;;AChDfjB,KAAKkB;AC1GNC,mBAAmB;AC6BnBC,gBAAiB;EC+Ha;AC7FoBC,GAAW,CAACC,EAAIC,SAAS,EAAED,EAAIC;AAkTvDC,EAAEC;ACzQR;AAmUJ,EAAwBC;ECtXC,aAA7B,OAAOC,SAASC,WAAuD,QAA3BD,SAASC,UAAUC;AC4DrEC,EAAGC,QAAUC,EAAOC,KAAKC;AC3B9BlC,KAAKmC,GAAYC;AAyWkCC,KAAKA;MCxItD;;AC7PD,IACQC;ACmCTtC,KAAKuC;ACqIDzB,EACHA,EAAK0B,WAAWC;AC/Ed,EAGDzC,KAAK0C;AC+GP,OAAO1C,KAAK2C;ACjLZ3C,KAAK4C,GAAyB;AAiU5B,MAAI5C,CAAAA,CAAAA,KAAK6C;AC3S6CC,KAAKC,EAAOC;EC6CpDC,QACdC,EAAKC;CCpFLC,EAAWpD,KAAKqD;ACsGXC,EAA6B,UAAjB,OAAOC,EAAqBA,EAAQ;AC9D9CvD,KAAKwD;ACxEsB,WAAWC,EAAIC;ACgDlD,EAEA1D,KAAK2D;AC5C6B3D;AClC9B4D,EAASC;ACYf,IAAId,EAAS;AChBRpB,SAASmC,eAAiB9D,KAAKa,MAAMkD;ACVzC/D,KAAKgE,GAAsB;AC2IVN,UAAU;AC3FxBO,EAAQd;AAmRRrD,EAAQoE,UAAUC;;AC/OtBC,YAAa;ACiOZC,EAAOlB;AC/NPmB,eAAgB;ACgEhB,OAAO;AAoMwB;AC3SjC;ACyCkCC,KAAMvE,KAAKwE;ACwFzCC,EAAUzE,KAAK0E;AC7IjBC,cAAc;ACuDdC,KAAM;ACpDPC,KAAK;AC7BJC,cAAc;AC8EdC,aAAa;ACpDbC,cAAc;;ECmgBuBhF,KAAKiF,GAAU,IAAMC;;GCjUvDC;ACxMJC,SAAS;ACJRC,MAAO;AAgPH7D,EAAE8D;AA4LHC,EAAOvF,KAAKwF;AAkROD,EAAKE;AAoM3B,MAAO,yEAAyEC,EAAKC,SAASC,KAAK;AAoP7F,IAAIC,EAAE,EAAGA,EAAEN,EAAK5F,OAAQkG,CAAC;ACz3BhCC,GAAW;ACpIe;AClFzB,IAAIC,EAAUC,EAAUC;AA8LxBjG,KAAKC,EAAUiG,QAAUlG,KAAKC,EAAUkG,QAAQ;ACzNzCC,EAAQC,EAAQ,GAAK;AAyOYtD,EAAOuD;AC1JvCC,EAAa7F,EAAE8F;;ACcoBC,GAAKzG,KAAK0G;AC5GrC,EAAqB;AChBa,EAA8B,oBAAoB3D,EAAO4D,IAAI,oBAAoB5D,EAAO6D,IAAI,oBAAoB7D,EAAOsD,MAAM,yCAAyCQ,EAAOC;ACiE1LC,GAAU,CAACA,EAAOC,UAAYX,GAAOY,EAAG,IAAI;AC7D1EC,EAAO;ACXf9B,SAAS;EA+NL+B,EACanH,KAAKoH;AChN4Bf,EAAMgB;;ACrBxDtG,KAAK;ACsHmB,QAAlBf,KAAK6B,KAAKsC;GCqCImD,GAAS9F,EAAE+F,UAAc/F,EAAEgG,OAAShG,EAAEiG,WAAejG,EAAEkG,WAAalG,EAAE3B;AC8BzF,IAaK8H;AC7HE;ACdO3H,KAAK4H;AAoThB,IAAMX,EAAKjH,KAAK6H;ACzSZ7H,KAAK8H;;AC+KsBC,EAAWC;;;;;;;;;;ACpItChI,KAAK6H;;ACpDX7H,KAAKI,KAAK6H;AA0OJC,EAAUC,EAAYC;ACxS9BC,MAAM;GAiUyBC,GAAUtI,KAAKuI;ACrLdtB,EAAGjF;CClFjC;ACAEwG,EAASxI,KAAKyI;ACmGEzI,KAAK0I,GAAMC;AC9I9BC,SAAU,SAASC,EAAGC,GAAI,MAAyE,CAAC,IAAnED,EAAExB,cAAc0B,QAAQD,EAAEzB,cAAewB,EAAElJ,OAASmJ,EAAEnJ,MAAtD,GACjCqJ,YAAa,SAASH,EAAGC,GAAI,MAAyE,CAAC,IAAnED,EAAExB,cAAc0B,QAAQD,EAAEzB,cAAewB,EAAElJ,OAASmJ,EAAEnJ,MAAtD,IAErC4F,KAAK,CACJ0D,QAAS,SAASJ,EAAGC,GAAI,OAAWA,EAAJD,GAChCjE,KAAM,SAASiE,EAAGC,GAAI,OAAOD,EAAIC,GACjCI,eAAgB,SAASL,EAAGC,GAAI,OAAYA,GAALD,GACvCM,YAAa,SAASN,EAAGC,GAAI,OAAOD,GAAKC,GACzCM,MAAO,SAASP,EAAGC,GAClB,MAAI,EAACD,CAAAA,GAAMC,CAAAA,IACJD,EAAEQ,YAAcP,EAAEO,WAE1BC,SAAU,SAAST,EAAGC,GACrB,MAAKD,CAAAA,GAAMC,CAAAA,GACJD,EAAEQ,YAAcP,EAAEO,WAE1BE,QAAS,SAASV,EAAGC,GAAI,OAAQ,CAACA,EAAEU,OAASX,EAAIC,EAAEU,SAAW,CAACV,EAAEW,KAAOZ,EAAIC,EAAEW,MAC9EC,WAAY,SAASb,EAAGC,GAAI,MAAQ,CAACA,EAAEU,OAASX,GAAKC,EAAEU,OAAW,CAACV,EAAEW,KAAOZ,GAAKC,EAAEW,KArCrE,0CCAK,gBACD,kBCEb,WACNE,CAEA,cACM,WACNA,CACA,8BAoFM,SAAgBlJ,GACtB,IAAImJ,EAAW,KASf,OARQ,WAMP,OAJCA,EADIA,GACO,IAAInJ,EAAO,EAAX,GAECoJ,IACZD,EAASC,GAAQC,MAAMF,EAAUG,SAAjC,EACMH,EAGR,2BAcM,SAAcI,EAAMC,GAC1B,OAAKD,EACE,WACN,IAAIE,EAASF,EAAKF,MAAM9J,KAAM+J,SAAjB,EAEb,OADAE,EAAKH,MAAM9J,KAAK+J,SAAhB,EACOG,GAJUD,CAMlB,oNCpHyB,WAAA,OAAME,GAAIC,YAAV,iBACE,WAAA,OAAMD,GAAIE,cAAV,aACJ,SAAAC,GAAG,OAAIH,GAAII,SAASD,CAAb,CAAJ,aACH,SAAAzI,GAAI,OAAIsI,GAAIK,SAAS3I,CAAb,CAAJ,yBCDP,SAASoF,EAAInH,GACjC,IAAM2K,EAAQC,EAAQD,QAEtB,OAAOE,GAAQC,EAAIC,IAAM,gCAAX,EAA6CC,KAAK,YAG/DhL,GADiCA,EAAV,UAAnB,OAAOA,EAAgC,CAAEiL,SAAUjL,GAC7CA,IAAW,IAEbkL,YAAc,MAEtB,IAOMD,EAPFE,EAAOC,EAAGjE,CAAD,EAIb,OAFCgE,EADGA,GAAQA,EAAKE,YACTF,EAAKE,YAAYrL,CAAjB,EAEJmL,IAEEnK,EAAOmK,EAAOA,EAAKpK,MAAQuK,EAAOnE,CAAD,EACjC8D,EAAWM,GAAYvL,EAAQiL,SAAU,KAAnB,EAE5BO,OAAOC,YAAYzK,EAAM,CAAC0K,WAAW,OAAQC,QAAQ,CAAA,EAAOC,QAAQ,CAAA,EAApE,EAA2EZ,KAAK,SAASa,GACxF,IAAMC,EAAW,SAASxL,GACD,CAAA,IAArBN,EAAQ+L,UACVA,GAASzL,EAAM2K,CAAP,EACTN,EAAMhL,QAAQW,CAAd,GAEEuL,EAAOG,SACTF,EAASD,EAAOG,UAAR,EAERH,EAAOI,OAAOH,EAAU,WAAxB,EATF,EAWOnB,GAhBUA,EAAMuB,OAAOC,EAAb,EAXX,CA6BP,UCjCoB,SAAShF,EAAInH,IACjCA,EAAUA,GAAW,IACbkL,YAAc,MAEtB,IACId,EADAe,EAAOC,EAAGjE,CAAD,EAOb,OAHCgE,EADGA,GAAQA,EAAKE,YACTjB,EAASe,EAAKE,YAAYrL,CAAjB,EAGbmL,IAGAiB,EAAQjB,CAAD,IACVkB,SAAOrM,EAAS,CACfsM,WAAY,CAAA,EADP,EAGNlC,EAASmC,GAAcpB,EAAMnL,EAASwM,GAAgBrB,EAAMnL,CAAP,CAA/B,GAGpBA,EAAQyM,SACHrC,GAEFsC,EAAO,IAAIC,KAAK,CAAC,SAAWC,GAAIC,UAAUzC,CAAd,GAAwB,CAAErI,KAAM,WAArD,EACW,CAAA,IAArB/B,EAAQ+L,UACVA,GAASW,EAAMnB,GAAYvL,EAAQiL,SAAU,KAAnB,CAAlB,EAEFL,EAAQjL,QAAQ+M,CAAhB,IAjBU9B,EAAQsB,OAAOC,EAAf,CAkBjB,kCpF2QM,WACN,IAAI5J,EAAOuK,GAAW9C,MAAM9J,KAAM+J,SAAvB,EAEX,OADA1H,EAAKR,KAAOQ,EAAKR,MAAQ,QAClBgL,GAAWxK,CAAD,CACjB,YACM,WACN,IAAIA,EAAOuK,GAAW9C,MAAM9J,KAAM+J,SAAvB,EAEX,OADA1H,EAAKR,KAAOQ,EAAKR,MAAQ,UAClBiL,GAAazK,CAAD,CACnB,yBAQM,WACN,IAAIA,EAAOuK,GAAW9C,MAAM9J,KAAM+J,SAAvB,EAGX,OAFA1H,EAAKR,KAAOQ,EAAKR,MAAQ,SACzBQ,EAAK0K,MAAQ1K,EAAK0K,OAAS,GACpBC,GAAY3K,CAAD,CAClB,qCqFrUAE,EAAU,YAAa,EAAd,CACT,iGCDc,SAAc0K,EAAKC,EAAQC,EAAQxM,GACjD,IAKSyM,EALLC,EAAOC,EAAO,OAAO,CACxB3M,OAAUA,GAAQ,QAClB4M,OAASN,EACTE,OAAUA,GAAQ,QACjB,EAJe,EAKjB,IAASC,KAAKF,EAAQ,CACrB,IAAIM,EAAQF,EAAO,QAAQ,CAACzL,KAAO,SAASd,KAAQqM,EAAE/G,MAAS6G,EAAOE,IAAI,EAAxD,EAClBC,EAAKI,YAAYD,CAAjB,EAEDH,EAAKK,MAAMC,QAAU,OACrBhM,SAASiM,KAAKH,YAAYJ,CAA1B,EACAA,EAAKQ,SACLlM,SAASiM,KAAKE,YAAYT,CAA1B,CACA"}